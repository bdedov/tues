{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/upgrade/ng1/views.provider.ts","ng://@c8y/ngx-components/upgrade/bridge.service.ts","ng://@c8y/ngx-components/upgrade/action-bar.factory.ts","ng://@c8y/ngx-components/upgrade/action.factory.ts","ng://@c8y/ngx-components/upgrade/breadcrumb.factory.ts","ng://@c8y/ngx-components/upgrade/nodes.factory.ts","ng://@c8y/ngx-components/upgrade/search.factory.ts","ng://@c8y/ngx-components/upgrade/tabs.factory.ts","ng://@c8y/ngx-components/upgrade/docs.factory.ts","ng://@c8y/ngx-components/upgrade/auth-bridge.service.ts","ng://@c8y/ngx-components/upgrade/upgrade.module.ts","ng://@c8y/ngx-components/upgrade/ng1/downgraded.components.ts","ng://@c8y/ngx-components/upgrade/ng1/serverMessages.service.ts","ng://@c8y/ngx-components/upgrade/ng1/downgraded.services.ts","ng://@c8y/ngx-components/upgrade/ng1/http.interceptor.ts","ng://@c8y/ngx-components/upgrade/ng1/navigator-node-root-legacy.ts","ng://@c8y/ngx-components/upgrade/ng1/root.component.ts","ng://@c8y/ngx-components/upgrade/ng1/index.ts","ng://@c8y/ngx-components/upgrade/ng1/title.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/alert.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/groupsHierarchyNavigator.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/navigator.provider.ts","ng://@c8y/ngx-components/upgrade/ng1/gettextCatalog.decorator.ts","ng://@c8y/ngx-components/upgrade/hybrid-app.module.ts","ng://@c8y/ngx-components/upgrade/upgrade.routes.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-bridge.service.ts","ng://@c8y/ngx-components/upgrade/dashboard/widget.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/device-selector.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/component.factory.ts","ng://@c8y/ngx-components/upgrade/dashboard/copy-action.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/paste-action.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-actions.factory.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-upgrade.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ViewContextLegacyParameter","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","BridgeService","injector","appState","router","ngZone","routerService","actionService","$liveTabs","BehaviorSubject","fixE2eIssues","$ng1RouteChangeSuccess","fromNg1Event","get","$ng1RouteChangeStart","hookLanguage","hookTabs","hookNavigator","hookUserMenu","hookViewProvider","initialNavigation","ng1Routes","_this","c8yViews","when","template","contextViews","subscribe","cfg","addRoute","name","path","icon","context","ViewContext","contextKey","priority","component","EmptyComponent","data","showIf","ngxRoute","params","_a","id","showIfResult","invoke","undefined","$routeParams","Boolean","runPhase","refresh","fallbackRoutes","match","regexp","RegExp","keys","optional","$route","routes","forEach","c8yUiUtil","_getContext","getContext","events","pipe","filter","event","ActivationEnd","snapshot","routeConfig","replace","contextData","ngZone_1","Utils_1","window","org","cometd","Utils","timeoutFn_1","setTimeout","args","_i","runOutsideAngular","ace_1","ace","editFn_1","edit","ngZone_2","first","map","store","lang","switchToLanguage","$apply","$location","c8yTabs","liveTabs","addTab","tab","decodeURIComponent","url","navigate","split","queryParams","search","skipLocationChange","$routeChanges","merge","EVENT_UPDATE","of","debounceTime","navigationNodes$","rootNodes$","getTabs","onlyVisible","show","upgradeTab","routeTabs","switchMap","all","checkingVisibility","startWith","combineLatest","_b","route","live","concat","getQuickLinks","list","getActionBarItems","c8yActionBar","$rootScope","elements","element","getAttribute","placement","getBreadcrumbs","c8yBreadcrumbs","breadcrumbs","breadcrumbsData","resolveBreadcrumbsData","from","liveBreadcrumbs","getLiveBreadcrumbs","items","ex","isArray","getSearch","c8ySearch","item","term","onSearch","getActions","registeredActions","action","hidden","text","disabled","obj","evt","stopListening","fromEventPattern","handler","$on","userMenuService","c8yAccessDenied","add","gettext","click","showAccessDeniedRequestsList","bridgeServiceFactory","bridgeServiceProvider","provide","useFactory","deps","AppStateService","Router","NgZone","RouterService","ActionService","Ng1ActionBarFactoryService","bridge","routeChanges$","Injectable","Ng1ActionFactoryService","tabs","items$","newTabs","handleTabsRedirect","redirectedTab","find","redirectedTo","topPriorityTab","TabsService","Ng1BreadcrumbFactoryService","trigger","ReplaySubject","Ng1NodesFactoryService","Ng1SearchFactoryService","Ng1TabsFactoryService","tabsObservable","Ng1DocsFactoryService","links","el","type","AuthBridgeService","basicAuth","fetchClient","hookAuth","updateBasicAuth","credentials","headers","getFetchOptions","Authorization","updateCredentials","setAuth","currentUser","u","token","setToken","tfatoken","$emit","hasAuth","tfa","c8yAuth","onSetToken","setTFAToken","authReady","authBridgeServiceFactory","authBridgeServiceProvider","BasicAuth","FetchClient","UpgradeModule","NgModule","imports","RouterModule","exports","providers","HOOK_NAVIGATOR_NODES","useClass","multi","HOOK_TABS","HOOK_ACTION_BAR","HOOK_ACTION","HOOK_BREADCRUMB","HOOK_SEARCH","HOOK_DOCS","bootstrapComponent","downgradeComponent","BootstrapComponent","userTotpComponent","UserTotpRevokeComponent","appLogsAutoRefreshComponent","AppLogsAutoRefreshComponent","dataGridComponent","DataGridComponent","impactProviderSettingsComponent","ImpactProviderSettingsComponent","ServerMessagesService","translateService","patterns","MESSAGE_PATTERNS","translate","instant","TranslateService","Inject","HOOK_PATTERN_MESSAGES","tslib_1.__param","bridgeService","downgradeInjectable","authBridgeService","appStateService","headerService","HeaderService","alertsService","AlertService","UserMenuService","apiService","ApiService","docsService","DocsService","passwordService","PasswordService","cachedLocaleDictionaryService","CachedLocaleDictionaryService","serverMessagesService","bulkOperationDetailsService","BulkOperationDetailsService","c8yNg1HttpInterceptor","$q","c8yLoadingIndicator","c8yApiService","finishRequest","res","config","method","onFinish","response","options","request","onStart","requestError","rejection","responseError","NavigatorNodeRootLegacy","_super","__","constructor","create","tslib_1.__extends","addRoot","nodeData","duplicate","parent","preventDuplicates","parents","some","routerLinkExact","createNode","node","newNode","update","bind","root","defineProperties","realName","_parent","addChild","nodeChild","set","NavigatorNodeRoot","rootComponent","controller","$timeout","c8yBase","c8yNavigator","c8yApplication","c8yHeaderService","vm","onAuthStateChange","authState","onAppInfo","tabsHorizontal","appOption","checkReady","document","querySelector","clientWidth","widthSet","$onInit","states","nav","open","isOpen","navOpen","configNavigator","canToggle","rootNodes","currentAppCached","navHiddenOnStartup","controllerAs","preventNg1Bootstrap","angular\n    .module","$httpProvider","ng1InterceptorIndex","interceptors","indexOf","splice","directive","factory","service","QueriesUtil","$delegate","$injector","$templateCache","$compile","changeTitle","newTitle","title","changeTitleInAngular","subtitle","isolatedScope","$new","angular.element","domElement","setTitleElement","$element","templateUrl","targetScope","property","alert","addAlert","transformAlert","newAlert","onClose","onDetail","loadAll","addGroupNavigation","provider","rootNodesSubject","Subject","conditionalNodes","defer","children","addNavigation","nodes","showIfPermissions","showIfContainsVisibleViews","isConditional","navNode","removeNavigation","found","remove","findNode","$get","processShowIf","visibilityPromises","views","getByPath","view","configureVisibility","pick","viewsConditionalVisibility","every","visible","showIfPermission","$routeProvider","c8yTabsProvider","c8yPathUtils","viewMap","prefixWithSlash","newPath","__c8y_locales","c8yLocales","initDone","currentCfg","originalPath","upgradedContext","isUpgrade","appendSegment","substring","existingConfig","createTab","resolveRedirectTo","gettextCatalog","sortedCurrentCfg","sortTabsViews","current","pathParams","unary","val","redirectedViewPath","startsWith","$interpolate","c8yTranslate","originalGetString","angular.bind","getString","input","scope","translatedString","interpolatedString","stringToReturn","ng1Modules","HybridAppModule","ngDoBootstrap","bootstrap","upgrade","getElementById","strictDi","UPGRADE_ROUTES","DashboardBridgeService","ng1Injector","zone","contextDashboardService","actionBarService","dashboardSvc","compile","instantiateComponent","widget","dashboard","child","transformChildWithContext","forcedContext","transformedChild_1","deviceType","updateConfigTargetsWithContext","loadTemplate","loadConfigTemplate","editDashboard","editCurrentDashboard","dashboardId","copyDashboard","getDashboard","c8y_Dashboard","dashboardClipboard","pasteDashboard","newDashboard","navigateToDashboard","instantiateDeviceSelector","widgetConfig","transformedChild","dashboardContext","widgetComponent","innerHTML","test","relativeTo","getActivatedRoute","onlyDeviceSelector","settings","ng1","forms","rootId","configCmp","configComponent","configTemplateUrl","$watch","formStatus","formDisabled","componentForm","$invalid","ContextDashboardService","ActionBarService","WidgetComponent","dashboardBridgeService","ngOnInit","nativeElement","ng1Scope","resizeSubscription","onChangeDashboard","$broadcast","ngOnDestroy","$destroy","unsubscribe","WidgetsDashboardComponent","Optional","ElementRef","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","DeviceSelectorComponent","Ng1ComponentFactoryService","ng1Components","components","cmp","transformConfigWithContext","componentTransformConfigWithContext","nameDisplay","description","previewImage","noNewWidgets","CopyActionComponent","vcRef","createEmbeddedView","templateCopy","ViewContainerRef","tslib_1.__decorate","ViewChild","read","TemplateRef","static","PasteActionComponent","dashboardName","templatePaste","Ng1DashboardActionFactoryService","activeRoute","actions","canCopy","Device","Group","includes","canPaste","DashboardUpgradeModule","declarations","entryComponents","CommonModule","TranslateModule","dashboardBridgeFactory","HOOK_COMPONENTS"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { startsWith, unary, map, find, forEach } from 'lodash-es';\nimport { ViewContext } from '@c8y/ngx-components';\nimport { ReplaySubject } from 'rxjs';\n\nexport enum ViewContextLegacyParameter {\n  Device = 'deviceId',\n  Group = 'groupId',\n  User = 'userId',\n  Application = 'applicationId',\n  SubscribedApplications = 'applicationId',\n  Tenant = 'tenantId'\n}\n\nfunction c8yViewsProvider($routeProvider, c8yTabsProvider, c8yPathUtils) {\n  'ngInject';\n\n  const viewMap = {};\n  const contextViews = new ReplaySubject();\n\n  return {\n    when,\n    $get() {\n      return {\n        contextViews,\n        when(path, cfg) {\n          return when(path, cfg, true);\n        },\n        getByPath,\n        prefixWithSlash\n      };\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name when\n   * @methodOf c8y.ui.provider:c8yViewsProvider\n   *\n   * @description\n   * Defines a view for given route.\n   * If multiple views are defined for a single route then there will be a separate tab for each view available when user visits that route.\n   *\n   * @param path Target route.\n   * @param cfg View configuration object with the following properties:\n   *\n   * - **name** - `string` - View's name (in case of multiple views at single route this will be displayed as tab's title).\n   * - **priority** - `integer` - View's priority (in case of multiple views at single route this will determine the position of view's tab in the tabs stack).\n   * - **icon** - `string` - Font Awesome icon name for the view (displayed on the tab's header).\n   * - **showIf** - `function` - Function returning boolean value indicating whether to show a tab for the view or not.\n   * - **templateUrl** - `string` - Path to the template to use for displaying the view.\n   *\n   * You can also provide other view options - the same as available for standard {@link https://docs.angularjs.org/api/ngRoute/provider/$routeProvider $routeProvider} in AngularJS.\n   *\n   * @example\n   * The following example demonstrates how to add a new view to device details route\n   * (which will be displayed as a tab if other views are assigned to the same route):\n   * <pre>\n   *   c8yViewsProvider.when('/device/:deviceId', {\n   *     name: 'Tracking',\n   *     templateUrl: ':::PLUGIN_PATH:::/views/index.html',\n   *     icon: 'crosshairs',\n   *     showIf: ['$routeParams', 'c8yDevices', function ($routeParams, c8yDevices) {\n   *       var deviceId = $routeParams.deviceId;\n   *       return c8yDevices.detailCached(deviceId).then(function (res) {\n   *         var device = res.data;\n   *         return device && (device.c8y_MotionTracking || device.c8y_Geofence);\n   *       });\n   *     }]\n   *   });\n   * </pre>\n   */\n  function when(path, cfg, runPhase) {\n    const newPath = prefixWithSlash(path);\n    cfg.resolve = cfg.resolve || {};\n    // eslint-disable-next-line no-underscore-dangle\n    cfg.resolve.__c8y_locales = [\n      'c8yLocales',\n      c8yLocales => {\n        return c8yLocales.initDone;\n      }\n    ];\n\n    let currentCfg = viewMap[newPath];\n    const originalPath = newPath;\n\n    if (!cfg.name) {\n      // console.warn('View name not defined');\n    }\n\n    if (!currentCfg) {\n      viewMap[newPath] = [];\n      currentCfg = viewMap[newPath];\n    }\n\n    const upgradedContext = Object.keys(ViewContext)\n      .map(key => ({\n        key,\n        isUpgrade:\n          prefixWithSlash(ViewContext[key].replace('id', ViewContextLegacyParameter[key])) === path\n      }))\n      .find(({ isUpgrade }) => isUpgrade);\n\n    if (upgradedContext) {\n      currentCfg.push(cfg);\n      cfg.path = newPath;\n\n      const p = c8yPathUtils.appendSegment(originalPath.replace(path, ''), cfg.name);\n      contextViews.next({\n        ...cfg,\n        path: cfg.name ? p.substring(1) : '',\n        contextKey: upgradedContext.key,\n        runPhase\n      });\n      cfg.showIf = undefined;\n      if (cfg.name) {\n        cfg.path = c8yPathUtils.appendSegment(originalPath, cfg.name);\n      }\n    } else {\n      if (currentCfg.length === 1) {\n        const [existingConfig] = currentCfg;\n        existingConfig.path = c8yPathUtils.appendSegment(originalPath, existingConfig.name);\n        existingConfig.tab = createTab(originalPath, existingConfig);\n        $routeProvider.when(existingConfig.path, existingConfig);\n      }\n\n      currentCfg.push(cfg);\n      cfg.path = newPath;\n\n      if (currentCfg.length > 1) {\n        cfg.path = c8yPathUtils.appendSegment(originalPath, cfg.name);\n        createTab(originalPath, cfg);\n\n        $routeProvider.when(prefixWithSlash(originalPath), {\n          resolveRedirectTo($route, $q, c8yUiUtil, c8yTabs, gettextCatalog) {\n            'ngInject';\n\n            const sortedCurrentCfg = c8yTabsProvider.sortTabsViews(currentCfg, gettextCatalog);\n            const params = $route.current.pathParams;\n\n            return $q\n              .all(map(sortedCurrentCfg, unary(c8yUiUtil.configureVisibility)))\n              .then(views => {\n                const first = find(views, 'show');\n                let url = first.path;\n                forEach(params, (val, key) => {\n                  url = url.replace(`:${key}`, val);\n                });\n                c8yTabs.redirectedViewPath = url;\n                return url;\n              });\n          }\n        });\n      }\n    }\n    return $routeProvider.when(prefixWithSlash(cfg.path), cfg);\n  }\n\n  function getByPath(path) {\n    return viewMap[prefixWithSlash(path)];\n  }\n\n  function createTab(path, cfg) {\n    c8yTabsProvider.addTab(path, cfg);\n  }\n\n  function prefixWithSlash(path) {\n    const prefix = startsWith(path, '/') ? '' : '/';\n    return prefix + path;\n  }\n}\n\nexport { c8yViewsProvider };\n","import {\n  Action,\n  ActionBarItem,\n  ActionService,\n  AppStateService,\n  Breadcrumb,\n  BreadcrumbItem,\n  EmptyComponent,\n  RouterService,\n  Search,\n  Tab,\n  ViewContext,\n  gettext,\n  DocLink\n} from '@c8y/ngx-components';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subject,\n  combineLatest,\n  from,\n  fromEventPattern,\n  of\n} from 'rxjs';\nimport { debounceTime, filter, map, merge, skip, startWith, switchMap } from 'rxjs/operators';\nimport { isArray } from 'lodash-es';\n\nimport { ActivationEnd } from '@angular/router';\nimport { NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ViewContextLegacyParameter } from './ng1/views.provider';\n\nexport class BridgeService {\n  $routeChanges: Observable<any>;\n  $ng1RouteChangeSuccess: Observable<any>;\n  $ng1RouteChangeStart: Observable<any>;\n  $liveTabs: Subject<Tab[]> = new BehaviorSubject([]);\n  navigationNodes$: Observable<any>;\n  constructor(\n    public injector: any,\n    private appState: AppStateService,\n    public router: Router,\n    private ngZone: NgZone,\n    private routerService: RouterService,\n    private actionService: ActionService\n  ) {\n    this.fixE2eIssues();\n    this.$ng1RouteChangeSuccess = this.fromNg1Event(\n      this.injector.get('$rootScope'),\n      '$routeChangeSuccess'\n    );\n    this.$ng1RouteChangeStart = this.fromNg1Event(\n      this.injector.get('$rootScope'),\n      '$routeChangeStart'\n    );\n    this.hookLanguage();\n    this.hookTabs();\n    this.hookNavigator();\n    this.hookUserMenu();\n    this.hookViewProvider();\n    this.router.initialNavigation();\n    this.ng1Routes();\n  }\n\n  hookViewProvider() {\n    const c8yViews = this.injector.get('c8yViews');\n    // fix to trigger an angularjs route change success\n    // event on context route match to make legacy\n    // view-providers resolve.\n    c8yViews.when('/device/:id', {\n      template: ''\n    });\n    c8yViews.when('/group/:id', {\n      template: ''\n    });\n    c8yViews.contextViews.subscribe(cfg => this.addRoute(cfg));\n  }\n\n  addRoute(cfg) {\n    this.routerService.addRoute({\n      label: cfg.label || cfg.name,\n      path: cfg.path,\n      icon: cfg.icon,\n      context: ViewContext[cfg.contextKey] as ViewContext,\n      priority: cfg.priority,\n      component: EmptyComponent,\n      data: {\n        showIf: cfg.showIf\n          ? ngxRoute => {\n              const params = {\n                ...ngxRoute.params,\n                [ViewContextLegacyParameter[cfg.contextKey]]: ngxRoute.params.id\n              };\n              const showIfResult = this.injector.invoke(cfg.showIf, undefined, {\n                $routeParams: params\n              });\n              // make sure showIf result is a promise with boolean result:\n              return this.injector\n                .get('$q')\n                .when(showIfResult)\n                .then(Boolean);\n            }\n          : undefined\n      }\n    });\n\n    if (cfg.runPhase) {\n      this.routerService.refresh();\n    }\n  }\n\n  ng1Routes() {\n    const template = '';\n    const fallbackRoutes = [];\n\n    // tslint:disable-next-line: forin\n    for (const context in ViewContext) {\n      const path = ViewContext[context].match(/(\\w+)\\//)[1];\n      const regexp = new RegExp(`^/${path}/(?:([^/]+)).*$`);\n      fallbackRoutes.push({\n        keys: [{ name: ViewContextLegacyParameter[context], optional: false }],\n        regexp,\n        template\n      });\n    }\n\n    /**\n     * When asset detail routes (/device/:id,  /group/:id) are matched in Angular Router, ngRoute in\n     * angular.js must also have matching generic routes so that the ids can be extracted from the paths and\n     * injected in multiple calls (showIf, c8yActions, etc) as properties of $routeParams.\n     *\n     * The function in src/ngRoute/route.js (angular.js) where the routes are matched is called parseRoute(). This\n     * function calls angular.forEach and in turn this function checks for the presence of a forEach method before\n     * trying object key iteration.\n     * By attaching a non enumerable forEach method to the routes object we guarantee that the fallback generic routes\n     * are only matched after any other registered through $routeProvider.when.\n     */\n    const $route = this.injector.get('$route');\n    Object.defineProperty($route.routes, 'forEach', {\n      // make non enumerable\n      value: function forEach(iterator, context) {\n        // tslint:disable-next-line: forin\n        for (const key in this) {\n          iterator.call(context, this[key], key, this);\n        }\n        fallbackRoutes.forEach(r => iterator.call(context, r));\n      }\n    });\n\n    /**\n     * Some functions use the current context. As some parts are upgraded and some not, the following updates the\n     * angularjs getContext function to resolve always the right context.\n     */\n    const c8yUiUtil = this.injector.get('c8yUiUtil');\n    const _getContext = c8yUiUtil.getContext;\n    this.router.events\n      .pipe(filter(event => event instanceof ActivationEnd))\n      .subscribe((event: ActivationEnd) => {\n        if (event.snapshot.routeConfig.path === '**') {\n          c8yUiUtil.getContext = _getContext;\n        } else if (event.snapshot.data && event.snapshot.data.context) {\n          c8yUiUtil.getContext = () => {\n            return {\n              context: event.snapshot.data.context.replace('/:id', ''),\n              id: event.snapshot.data.contextData.id\n            };\n          };\n        } else {\n          c8yUiUtil.getContext = () => ({ context: null, id: null });\n        }\n      });\n  }\n\n  fixE2eIssues() {\n    try {\n      const { ngZone } = this;\n      const { Utils } = (window as any).org.cometd;\n      const timeoutFn = Utils.setTimeout;\n      // tslint:disable-next-line:only-arrow-functions\n      Utils.setTimeout = function(...args) {\n        return ngZone.runOutsideAngular(() => timeoutFn.apply(Utils, args));\n      };\n    } catch (e) {\n      // do nothing\n    }\n\n    try {\n      const { ace } = window as any;\n      const editFn = ace.edit;\n      const { ngZone } = this;\n      // tslint:disable-next-line:only-arrow-functions\n      ace.edit = function(...args) {\n        return ngZone.runOutsideAngular(() => editFn.apply(ace, args));\n      };\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  hookLanguage() {\n    let first = true;\n    this.appState\n      .map(store => store.lang)\n      .subscribe(lang => {\n        this.injector.get('c8yLocales').switchToLanguage(lang);\n        if (!first) {\n          this.injector.get('$rootScope').$apply();\n        }\n        first = false;\n      });\n  }\n\n  hookTabs() {\n    // Just for instantiation of the c8yAction service\n    this.injector.get('c8yActions');\n    const $location = this.injector.get('$location');\n    const c8yTabs = this.injector.get('c8yTabs');\n    let liveTabs = [];\n    c8yTabs.addTab = tab => {\n      liveTabs.push({\n        ...tab,\n        label: tab.label || tab.name,\n        path: decodeURIComponent(tab.path)\n      });\n      this.$liveTabs.next(liveTabs);\n    };\n    this.$ng1RouteChangeStart.subscribe(e => {\n      liveTabs = [];\n      this.$liveTabs.next(liveTabs);\n    });\n    this.$ng1RouteChangeSuccess.subscribe(e => {\n      const path = $location.path();\n      if (this.router.url !== path) {\n        this.router.navigate(path === '/' ? '' : path.split('/'), {\n          queryParams: $location.search(),\n          skipLocationChange: true\n        });\n      }\n      if (this.actionService) {\n        this.actionService.refresh();\n      }\n    });\n    this.$routeChanges = this.$ng1RouteChangeSuccess.pipe(\n      merge(this.fromNg1Event(c8yTabs, c8yTabs.EVENT_UPDATE), of(1)),\n      debounceTime(100)\n    );\n  }\n\n  hookNavigator() {\n    this.navigationNodes$ = this.injector.get('c8yNavigator').rootNodes$;\n  }\n\n  getTabs(): Observable<any> {\n    const onlyVisible = ({ show }) => show;\n    const upgradeTab = tab => ({\n      ...tab,\n      label: tab.label || tab.name,\n      path: decodeURIComponent(tab.path)\n    });\n    const routeTabs = this.$routeChanges.pipe(\n      switchMap(() => {\n        const routes = this.injector.get('c8yTabs').routeTabs;\n        const visibilityPromise = Promise.all(\n          routes.map(({ checkingVisibility }) => checkingVisibility)\n        );\n        return visibilityPromise.then(() => routes.filter(onlyVisible).map(upgradeTab));\n      }),\n      startWith([])\n    );\n    return combineLatest(routeTabs, this.$liveTabs).pipe(\n      map(([route, live]) => route.concat(live))\n    );\n  }\n\n  getQuickLinks(): Promise<DocLink[]> {\n    const c8yQuickLinks = this.injector.get('c8yQuickLinks');\n    return c8yQuickLinks.list();\n  }\n\n  getActionBarItems(): Observable<ActionBarItem> {\n    const c8yActionBar = this.injector.get('c8yActionBar');\n    const $rootScope = this.injector.get('$rootScope');\n    const getActionBarElements = () =>\n      c8yActionBar.elements.map(element => ({\n        priority: element.getAttribute('action-bar-priority') || 0,\n        template: element,\n        placement: element.getAttribute('action-bar-position') || 'right'\n      }));\n    return this.fromNg1Event($rootScope, 'c8yActionBarChanged').pipe(\n      startWith(1),\n      map(getActionBarElements)\n    );\n  }\n\n  getBreadcrumbs(): Observable<Breadcrumb[]> {\n    const $location = this.injector.get('$location');\n    const path = $location.path();\n    const c8yBreadcrumbs = this.injector.get('c8yBreadcrumbs');\n    const breadcrumbs = c8yBreadcrumbs.get(path) || {};\n    const breadcrumbsData = this.resolveBreadcrumbsData(breadcrumbs.data);\n    return from(breadcrumbsData).pipe(\n      map((value: any[]) => {\n        const liveBreadcrumbs = c8yBreadcrumbs.getLiveBreadcrumbs();\n        value = value.concat(liveBreadcrumbs);\n        return value.map(\n          items => ({ items: items as BreadcrumbItem[] } as Breadcrumb)\n        );\n      })\n    );\n  }\n\n  resolveBreadcrumbsData(data): Observable<any[]> {\n    try {\n      return this.injector.invoke(data);\n    } catch (ex) {\n      // empty\n    }\n    if (isArray(data)) {\n      return of([data]);\n    }\n    return of([]);\n  }\n\n  getSearch(): Search[] {\n    const c8ySearch = this.injector.get('c8ySearch');\n    return c8ySearch.list().map(item => {\n      return {\n        icon: 'search',\n        name: item.name,\n        term: '',\n        onSearch() {\n          if (this.term) {\n            c8ySearch.search(this.term);\n          }\n        }\n      } as Search;\n    });\n  }\n\n  getActions(): Observable<Action> {\n    const registeredActions = this.injector.get('c8yActions').registeredActions;\n    return of(\n      registeredActions\n        .filter(action => !action.hidden)\n        .map(action => ({\n          // The priority was reversed: Aligned it to dashboard, high first, low last.\n          priority: (action.priority || 0) * -1,\n          label: action.text,\n          icon: action.icon,\n          disabled: action.disabled,\n          action: () => {\n            this.injector.invoke(action.action, action);\n          }\n        }))\n    );\n  }\n\n  fromNg1Event(obj, evt) {\n    let stopListening;\n    function add(handler) {\n      stopListening = obj.$on(evt, handler);\n    }\n    return fromEventPattern(add, () => stopListening());\n  }\n\n  private hookUserMenu() {\n    const userMenuService = this.injector.get('c8yUserMenuService');\n    const c8yAccessDenied = this.injector.get('c8yAccessDenied');\n    userMenuService.add({\n      icon: 'exclamation-triangle',\n      priority: 10,\n      label: gettext('Access denied requests'),\n      click: c8yAccessDenied.showAccessDeniedRequestsList\n    });\n  }\n}\n\nexport function bridgeServiceFactory(\n  injector: any,\n  appState: AppStateService,\n  router: Router,\n  ngZone: NgZone,\n  routerService: RouterService,\n  actionService: ActionService\n) {\n  return new BridgeService(injector, appState, router, ngZone, routerService, actionService);\n}\n\nexport const bridgeServiceProvider = {\n  provide: BridgeService,\n  useFactory: bridgeServiceFactory,\n  deps: ['$injector', AppStateService, Router, NgZone, RouterService, ActionService]\n};\n","import { Injectable } from '@angular/core';\nimport { ActionBarFactory, ActionBarItem } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1ActionBarFactoryService implements ActionBarFactory {\n  routeChanges$: Observable<any>;\n  constructor(\n    private bridge: BridgeService\n  ) {\n    this.routeChanges$ = bridge.$routeChanges;\n  }\n\n  get(): Observable<ActionBarItem> {\n    return this.bridge.getActionBarItems();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Action, ActionFactory, TabsService } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class Ng1ActionFactoryService implements ActionFactory {\n  routeChanges$: Observable<any>;\n  $location: any;\n  constructor(\n    private bridge: BridgeService,\n    private tabs: TabsService\n  ) {\n    this.routeChanges$ = bridge.$routeChanges;\n    this.$location = bridge.injector.get('$location');\n    this.tabs.items$.subscribe((newTabs) => this.handleTabsRedirect(newTabs));\n  }\n\n  handleTabsRedirect(tabs) {\n    /**\n     * This function is doing the same process as function redirect in the file\n     * modules/core/ui/navigation/tabs.provider.js\n     * That function  is not run because bridge.service.ts overrides the method addTab where the redirect() was called.\n     */\n    const redirectedTab = tabs.find((tab) => tab.redirectedTo);\n    const [ topPriorityTab ] = tabs;\n    if (redirectedTab && !topPriorityTab.redirectedTo) {\n      this.$location.replace();\n      this.$location.path(topPriorityTab.path);\n      topPriorityTab.redirectedTo = true;\n      redirectedTab.redirectedTo = false;\n    }\n  }\n\n  get() {\n    return this.bridge.getActions();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BreadcrumbFactory } from '@c8y/ngx-components';\nimport { ReplaySubject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1BreadcrumbFactoryService implements BreadcrumbFactory {\n  private trigger: any = new ReplaySubject(1);\n  private breadcrumbs = this.trigger.pipe(\n    debounceTime(100),\n    switchMap(() => {\n      return this.bridge.getBreadcrumbs();\n    })\n  );\n  constructor(\n    private bridge: BridgeService\n  ) {}\n\n  get() {\n    this.trigger.next();\n    return this.breadcrumbs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigatorNodeFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1NodesFactoryService implements NavigatorNodeFactory {\n  constructor(\n    private bridge: BridgeService\n  ) {}\n\n  get() {\n    return this.bridge.navigationNodes$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Search, SearchFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1SearchFactoryService implements SearchFactory {\n  search: Search[];\n  constructor(private bridge: BridgeService) {\n    this.search = this.bridge.getSearch();\n  }\n\n  get() {\n    return this.search;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TabFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1TabsFactoryService implements TabFactory {\n  tabsObservable;\n  constructor(private bridge: BridgeService) {\n    this.tabsObservable = bridge.getTabs();\n  }\n  get() {\n    return this.tabsObservable;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DocLinkFactory, DocLink } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1DocsFactoryService implements DocLinkFactory {\n  private links: Promise<DocLink[]>;\n  constructor(private bridge: BridgeService) {\n    this.links = this.bridge.getQuickLinks();\n    this.links.then(list => {\n      list.map(el => {\n        el.type = el.type || 'quicklink';\n        return el;\n      });\n    });\n  }\n\n  get() {\n    return this.links;\n  }\n}\n","import {\n  AppStateService,\n} from '@c8y/ngx-components';\nimport { BasicAuth, FetchClient, ICredentials } from '@c8y/client';\n\nexport class AuthBridgeService {\n  constructor(\n    public injector: any,\n    private basicAuth: BasicAuth,\n    private fetchClient: FetchClient,\n    private appState: AppStateService\n  ) {\n    this.hookAuth();\n  }\n\n  updateBasicAuth(credentials: ICredentials) {\n    const { headers } = this.fetchClient.getFetchOptions({});\n    if (headers.Authorization) {\n      const token = headers.Authorization.match(/basic\\s(.*)$/i)[1];\n      if (token) {\n        this.basicAuth.updateCredentials(credentials);\n        this.fetchClient.setAuth(this.basicAuth);\n      }\n    }\n  }\n\n  hookAuth() {\n    this.appState.currentUser.subscribe(u => {\n      if (u) {\n        this.injector.get('c8yAuth').headers = () => this.fetchClient.getFetchOptions({}).headers;\n        const { headers } = this.fetchClient.getFetchOptions({});\n        if (headers.Authorization) {\n          const token = headers.Authorization.match(/basic\\s(.*)$/i)[1];\n          if (token) {\n            this.setToken(token, headers.tfatoken);\n          }\n        } else {\n          this.setToken(undefined, headers.tfatoken, 'Oauth');\n        }\n        this.injector.get('$rootScope').$emit('authStateChange', { hasAuth: true });\n      } else {\n        this.injector.get('$rootScope').$emit('authStateChange', { hasAuth: false });\n      }\n    });\n  }\n\n  setToken(token?: string, tfa?: string, type = 'Basic') {\n    const c8yAuth = this.injector.get('c8yAuth');\n    if (type === 'Basic') {\n      c8yAuth.onSetToken({ token, type });\n      if (tfa) {\n        c8yAuth.setTFAToken(tfa);\n      }\n    } else {\n      c8yAuth.authReady();\n    }\n  }\n}\n\nexport function authBridgeServiceFactory(\n  injector: any,\n  basicAuth: BasicAuth,\n  fetchClient: FetchClient,\n  appState: AppStateService\n) {\n  return new AuthBridgeService(injector, basicAuth, fetchClient, appState);\n}\n\nexport const authBridgeServiceProvider = {\n  provide: AuthBridgeService,\n  useFactory: authBridgeServiceFactory,\n  deps: ['$injector', BasicAuth, FetchClient, AppStateService]\n};\n","import { bridgeServiceProvider } from './bridge.service';\nimport {\n  HOOK_ACTION,\n  HOOK_ACTION_BAR,\n  HOOK_BREADCRUMB,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_SEARCH,\n  HOOK_TABS,\n  HOOK_DOCS,\n  RouterModule\n} from '@c8y/ngx-components';\nimport { Ng1ActionBarFactoryService } from './action-bar.factory';\nimport { Ng1ActionFactoryService } from './action.factory';\nimport { Ng1BreadcrumbFactoryService } from './breadcrumb.factory';\nimport { Ng1NodesFactoryService } from './nodes.factory';\nimport { Ng1SearchFactoryService } from './search.factory';\nimport { Ng1TabsFactoryService } from './tabs.factory';\nimport { NgModule } from '@angular/core';\nimport { Ng1DocsFactoryService } from './docs.factory';\nimport { authBridgeServiceProvider } from './auth-bridge.service';\n\n@NgModule({\n  imports: [RouterModule],\n  exports: [],\n  providers: [\n    bridgeServiceProvider,\n    authBridgeServiceProvider,\n    { provide: HOOK_NAVIGATOR_NODES, useClass: Ng1NodesFactoryService, multi: true },\n    { provide: HOOK_TABS, useClass: Ng1TabsFactoryService, multi: true },\n    { provide: HOOK_ACTION_BAR, useClass: Ng1ActionBarFactoryService, multi: true },\n    { provide: HOOK_ACTION, useClass: Ng1ActionFactoryService, multi: true },\n    { provide: HOOK_BREADCRUMB, useClass: Ng1BreadcrumbFactoryService, multi: true },\n    { provide: HOOK_SEARCH, useClass: Ng1SearchFactoryService, multi: true },\n    { provide: HOOK_DOCS, useClass: Ng1DocsFactoryService, multi: true }\n  ]\n})\nexport class UpgradeModule {}\n","import { downgradeComponent } from '@angular/upgrade/static';\nimport {\n  BootstrapComponent,\n  DataGridComponent,\n  UserTotpRevokeComponent\n} from '@c8y/ngx-components';\nimport { AppLogsAutoRefreshComponent } from '@c8y/ngx-components/app-logs';\nimport { ImpactProviderSettingsComponent } from '@c8y/ngx-components/connectivity';\nexport const bootstrapComponent = downgradeComponent({ component: BootstrapComponent });\nexport const userTotpComponent = downgradeComponent({ component: UserTotpRevokeComponent });\nexport const appLogsAutoRefreshComponent = downgradeComponent({\n  component: AppLogsAutoRefreshComponent\n});\nexport const dataGridComponent = downgradeComponent({ component: DataGridComponent });\nexport const impactProviderSettingsComponent = downgradeComponent({\n  component: ImpactProviderSettingsComponent\n});\n","import { Injectable, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HOOK_PATTERN_MESSAGES } from '@c8y/ngx-components';\n\n@Injectable()\nexport class ServerMessagesService {\n\n  MESSAGE_PATTERNS: any;\n  constructor(\n    private translateService: TranslateService,\n    @Inject(HOOK_PATTERN_MESSAGES) patterns\n  ) {\n    this.MESSAGE_PATTERNS = patterns;\n  }\n\n  translate(s: string) {\n    return this.translateService.instant(s);\n  }\n}\n","import { downgradeInjectable } from '@angular/upgrade/static';\nimport {\n  AlertService,\n  AppStateService,\n  DocsService,\n  HeaderService,\n  PasswordService,\n  UserMenuService,\n  CachedLocaleDictionaryService\n} from '@c8y/ngx-components';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { BulkOperationDetailsService } from '@c8y/ngx-components/operations/bulk-operations-list';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BridgeService } from '../bridge.service';\nimport { ServerMessagesService } from './serverMessages.service';\nimport { AuthBridgeService } from '../auth-bridge.service';\n\nexport const bridgeService = downgradeInjectable(BridgeService);\nexport const authBridgeService = downgradeInjectable(AuthBridgeService);\nexport const appStateService = downgradeInjectable(AppStateService);\nexport const headerService = downgradeInjectable(HeaderService);\nexport const alertsService = downgradeInjectable(AlertService);\nexport const userMenuService = downgradeInjectable(UserMenuService);\nexport const apiService = downgradeInjectable(ApiService);\nexport const docsService = downgradeInjectable(DocsService);\nexport const passwordService = downgradeInjectable(PasswordService);\nexport const translateService = downgradeInjectable(TranslateService);\nexport const cachedLocaleDictionaryService = downgradeInjectable(CachedLocaleDictionaryService);\nexport const serverMessagesService = downgradeInjectable(ServerMessagesService);\nexport const bulkOperationDetailsService = downgradeInjectable(BulkOperationDetailsService);\n","function c8yNg1HttpInterceptor(\r\n  $q,\r\n  c8yLoadingIndicator,\r\n  c8yApiService\r\n) {\r\n  'ngInject';\r\n\r\n  function request(config) {\r\n    const { url, method } = config;\r\n    c8yApiService.onStart({ url, method, options: config });\r\n    return config;\r\n  }\r\n\r\n  function requestError(rejection) {\r\n    finishRequest(rejection);\r\n    return $q.reject(rejection);\r\n  }\r\n\r\n  function response(res) {\r\n    finishRequest(res);\r\n    return res;\r\n  }\r\n\r\n  function responseError(rejection) {\r\n    finishRequest(rejection);\r\n    c8yLoadingIndicator.responseError(rejection);\r\n    return $q.reject(rejection);\r\n  }\r\n\r\n  function finishRequest(res) {\r\n    const { url, method } = res.config;\r\n    c8yApiService.onFinish({\r\n      url,\r\n      method,\r\n      response: res,\r\n      options: res.config\r\n    });\r\n  }\r\n\r\n  return {\r\n    request,\r\n    requestError,\r\n    response,\r\n    responseError\r\n  };\r\n}\r\n\r\nexport { c8yNg1HttpInterceptor };\r\n","import { NavigatorNodeRoot, NavigatorNode } from '@c8y/ngx-components';\nimport { assign } from 'lodash-es';\n\nexport class NavigatorNodeRootLegacy extends NavigatorNodeRoot {\n\n  addRoot(nodeData): NavigatorNode {\n    let duplicate;\n    if (nodeData.path === '') {\n      nodeData.path = '/';\n    }\n    nodeData.label = nodeData.name;\n    if (typeof nodeData.parent === 'object') {\n      nodeData.parent.label = nodeData.parent.name;\n    }\n\n    if (nodeData.preventDuplicates) {\n      duplicate = this.find(({ path, parents, label}) => {\n        return path === nodeData.path &&\n          (label === nodeData.label) &&\n          parents.some((p) => p.label === nodeData.parent);\n      });\n      if (duplicate) {\n        duplicate.routerLinkExact = false;\n      }\n    }\n\n    return duplicate || super.addRoot(nodeData);\n  }\n\n  createNode(node) {\n    const newNode = super.createNode(node);\n    const update = newNode.update.bind(newNode);\n    const root = this;\n    return Object.defineProperties(assign(newNode, {\n      realName: (newNode as any).name || newNode.label,\n      _parent: true, // just use it to detect if it has been deleted\n      update(data) {\n        if (this._parent === undefined) {\n          // _parent was deleted somene instead to put this in root\n          root.addRoot(this);\n          // put it back so it can be deleted again\n          this._parent = true;\n        }\n        update(data);\n      },\n      addChild(nodeChild) {\n        this.add(root.createNode(nodeChild));\n      }\n    }), {\n      label: {\n        get() {\n          return this.realName || '';\n        },\n        set(name) {\n          this.realName = name;\n        }\n      },\n      name: {\n        get() {\n          return this.realName || '';\n        },\n        set(name) {\n          this.realName = name;\n        }\n      },\n      show: {\n        get() {\n          return !this.hidden;\n        },\n        set(show) {\n          this.hidden = !show;\n        }\n      }\n    });\n  }\n}\n","const rootComponent = {\n  template: `\n  <c8y-bootstrap>\n    <div id=\"c8y-legacy-view\">\n      <div ng-view ng-if=\"vm.widthSet && vm.authState.hasAuth\"></div>\n    </div>\n  </c8y-bootstrap>`,\n  controller: c8yUiRootController,\n  controllerAs: 'vm'\n};\n\nfunction c8yUiRootController(\n  $rootScope,\n  $timeout,\n  c8yBase,\n  c8yNavigator,\n  c8yApplication,\n  c8yHeaderService\n) {\n  'ngInject';\n  const vm = this;\n\n  Object.assign(vm, {\n    $onInit,\n    navOpen: false\n  });\n\n  ////////////\n\n  function $onInit() {\n    c8yHeaderService.map((states) => states.nav.open).subscribe((isOpen) => {\n      vm.navOpen = isOpen;\n    });\n    c8yHeaderService.configNavigator({canToggle: true});\n    $rootScope.$on('authStateChange', onAuthStateChange);\n    vm.rootNodes = c8yNavigator.rootNodes;\n    c8yApplication.currentAppCached().then(onAppInfo);\n    vm.navHiddenOnStartup = c8yBase.appOption('hide_navigator');\n    checkReady();\n  }\n\n  function onAuthStateChange(evt, data) {\n    vm.authState = data;\n  }\n\n  function onAppInfo() {\n    vm.tabsHorizontal = c8yBase.appOption('tabsHorizontal');\n  }\n\n  function checkReady() {\n    const element = document.querySelector('#c8y-legacy-view');\n    const hasWidth = element && element.clientWidth;\n    if (hasWidth) {\n      vm.widthSet = true;\n    } else {\n      $timeout(checkReady);\n    }\n  }\n}\nexport { rootComponent };\n","import { NgZone } from '@angular/core';\nimport { downgradeInjectable } from '@angular/upgrade/static';\nimport * as angular from 'angular';\nimport { c8yAlertDecorator } from './alert.decorator';\nimport {\n  appLogsAutoRefreshComponent,\n  bootstrapComponent,\n  dataGridComponent,\n  impactProviderSettingsComponent,\n  userTotpComponent\n} from './downgraded.components';\nimport {\n  alertsService,\n  apiService,\n  appStateService,\n  bridgeService,\n  authBridgeService,\n  bulkOperationDetailsService,\n  docsService,\n  headerService,\n  passwordService,\n  serverMessagesService,\n  translateService,\n  userMenuService,\n  cachedLocaleDictionaryService\n} from './downgraded.services';\nimport { QueriesUtil } from '@c8y/client';\nimport { gettextCatalogDecorator } from './gettextCatalog.decorator';\nimport { groupTypesHierarchyNavigatorDecorator } from './groupsHierarchyNavigator.decorator';\nimport { c8yNg1HttpInterceptor } from './http.interceptor';\nimport { c8yNavigatorProvider } from './navigator.provider';\nimport { rootComponent } from './root.component';\nimport { c8yTitleDecorator } from './title.decorator';\nimport { c8yViewsProvider } from './views.provider';\n\nconst NAME = 'c8y.upgrade';\n(window as any).preventNg1Bootstrap = true;\n\nangular\n  .module(NAME, [])\n  .config($httpProvider => {\n    'ngInject';\n\n    const ng1InterceptorIndex = $httpProvider.interceptors.indexOf('c8yLoadingIndicator');\n    if (ng1InterceptorIndex > -1) {\n      $httpProvider.interceptors.splice(ng1InterceptorIndex, 1);\n    }\n    $httpProvider.interceptors.push(c8yNg1HttpInterceptor);\n  })\n  .component('c8yUiRoot', rootComponent)\n  .directive('c8yBootstrap', bootstrapComponent)\n  .factory('c8yBridgeService', bridgeService)\n  .factory('c8yAuthBridgeService', authBridgeService)\n  .factory('c8yAppStateService', appStateService)\n  .factory('c8yHeaderService', headerService)\n  .factory('c8yUserMenuService', userMenuService)\n  .service('c8yQueriesUtil', () => new QueriesUtil())\n  .decorator('c8yTitle', c8yTitleDecorator)\n  .factory('c8yAlert', alertsService)\n  .decorator('c8yAlert', c8yAlertDecorator)\n  .decorator('groupTypesHierarchyNavigator', groupTypesHierarchyNavigatorDecorator) // prevents loading the groups\n  .factory('c8yApiService', apiService)\n  .factory('c8yDocs', docsService)\n  .service('c8yPasswordConfirm', passwordService);\n\nangular\n  .module('c8y.ui')\n  .provider('c8yNavigator', c8yNavigatorProvider)\n  .provider('c8yViews', c8yViewsProvider)\n  .directive('c8yUserTotpRevoke', userTotpComponent)\n  .directive('c8yAppLogsAutoRefresh', appLogsAutoRefreshComponent)\n  .directive('c8yImpactProviderSettings', impactProviderSettingsComponent)\n  .directive('c8yDataGrid', dataGridComponent)\n  .factory('c8yTranslate', translateService)\n  .factory('c8yCachedLocaleDictionaryService', cachedLocaleDictionaryService)\n  .factory('c8yBulkOperationDetailsService', bulkOperationDetailsService)\n  .decorator('gettextCatalog', gettextCatalogDecorator)\n  .factory('c8yServerMessages', serverMessagesService)\n  .factory('ngZone', downgradeInjectable(NgZone));\n\nexport const ng1Modules = ['app', NAME];\n","import * as angular from 'angular';\n\nfunction c8yTitleDecorator(\n  $q,\n  $delegate,\n  $injector,\n  $rootScope,\n  $location,\n  $templateCache,\n  $compile,\n  c8yHeaderService\n) {\n  'ngInject';\n\n  $delegate.changeTitle = changeTitle;\n  $delegate.setTitleElement = setTitleElement;\n\n  $rootScope.$on('$routeChangeStart', () => {\n    changeTitle({});\n  });\n\n  $rootScope.$on('$routeChangeSuccess', (event) => {\n    const title = $delegate.get($location.path());\n    if (title) {\n      const titleData = $q.when(title.data ? $injector.invoke(title.data) : {});\n      titleData.then((data) => {\n        const { templateUrl } = data;\n        if (templateUrl) {\n          const template = $templateCache.get(templateUrl);\n          setTitleElement($compile(template)(event.targetScope));\n        } else {\n          changeTitle(data);\n        }\n      });\n    }\n  });\n\n  function changeTitle(newTitle) {\n    $q.when(newTitle).then((title) => changeTitleInAngular(translate(title)));\n  }\n\n  function translate({title, subtitle}) {\n    const isolatedScope = $rootScope.$new(true);\n    isolatedScope.title = title;\n    isolatedScope.subtitle = subtitle;\n    return $compile(angular.element(`\n      <h1 class=\"text-truncate\">{{title | translate}}\n      <small>{{ subtitle | translate }}</small></h1>\n    `))(isolatedScope)[0];\n  }\n\n  function changeTitleInAngular(domElement) {\n    c8yHeaderService.changeTitle(domElement);\n  }\n\n  function setTitleElement($element) {\n    $element.show();\n    changeTitleInAngular($element[0]);\n  }\n\n  return $delegate;\n}\n\nexport { c8yTitleDecorator };\n","function c8yAlertDecorator(\r\n    $delegate,\r\n    $rootScope,\r\n    $injector\r\n) {\r\n  'ngInject';\r\n\r\n  $delegate.add = (alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  };\r\n\r\n  $rootScope.$on('alert', (evt, alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  });\r\n\r\n  $rootScope.$on('message', (evt, alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  });\r\n\r\n  for (const property in $delegate) {\r\n    if (typeof $delegate[property] === 'function') {\r\n      $delegate[property] = $delegate[property].bind($delegate);\r\n    }\r\n  }\r\n\r\n  function transformAlert(alert: any) {\r\n    const newAlert: any = { ...alert };\r\n    if (alert.onClose) {\r\n      newAlert.onClose = () => {\r\n        $injector.invoke(alert.onClose);\r\n      };\r\n    }\r\n    if (alert.onDetail) {\r\n      newAlert.onDetail = () => {\r\n        $injector.invoke(alert.onDetail);\r\n      };\r\n    }\r\n    return newAlert;\r\n  }\r\n\r\n  return $delegate;\r\n}\r\n\r\nexport { c8yAlertDecorator };\r\n","function groupTypesHierarchyNavigatorDecorator(\n  $delegate,\n  $q,\n) {\n  'ngInject';\n  $delegate.loadAll = () => $q.when();\n  $delegate.addGroupNavigation = () => $q.when();\n  return $delegate;\n}\n\nexport { groupTypesHierarchyNavigatorDecorator };\n","import { NavigatorNode } from '@c8y/ngx-components';\nimport { Observable, Subject, defer, of } from 'rxjs';\nimport { merge } from 'rxjs/operators';\nimport { pick,  map, property, some, every } from 'lodash-es';\nimport { NavigatorNodeRootLegacy } from './navigator-node-root-legacy';\n\n// Just to hook into the bridge service\nexport function c8yNavigatorProvider() {\n  const root = new NavigatorNodeRootLegacy();\n  const rootNodesSubject: Subject<NavigatorNode[]> = new Subject();\n  const conditionalNodes = [];\n  const rootNodes$: Observable<NavigatorNode[]> = rootNodesSubject.pipe(\n    merge(defer(() => of(root.children))),\n  );\n\n  function addNavigation(nodes) {\n    const nodeList = (Array.isArray(nodes) ? nodes : [nodes]);\n    nodeList.forEach((node) => {\n      if (isConditional(node)) {\n        node.hidden = undefined;\n        conditionalNodes.push(node);\n      }\n      node.navNode = root.addRoot(node);\n    });\n    rootNodesSubject.next(root.children);\n  }\n\n  function removeNavigation(node) {\n    const found = root.find((n) => n === node);\n    if (found) {\n      found.parents.forEach((p) => p.remove(found));\n      rootNodesSubject.next(root.children);\n    }\n  }\n\n  function findNode(node) {\n    return root.find(node);\n  }\n\n  function isConditional(node) {\n    return node.showIf || node.showIfPermissions || node.showIfContainsVisibleViews;\n  }\n\n  function $get($q, $injector) {\n    'ngInject';\n\n    // This avoids the circular dependency\n    setTimeout(() => conditionalNodes.forEach(processShowIf));\n\n    function processShowIf(node) {\n      const c8yUiUtil = $injector.get('c8yUiUtil');\n      const visibilityPromises = [];\n      const {\n        showIf,\n        showIfPermissions,\n        showIfContainsVisibleViews\n      } = node;\n\n      if (showIf) {\n        visibilityPromises.push($injector.invoke(showIf));\n      }\n      if (showIfContainsVisibleViews) {\n        visibilityPromises.push(viewsConditionalVisibility(node));\n      }\n\n      c8yUiUtil.configureVisibility({\n        showIf: () => $q.all(visibilityPromises).then(every),\n        showIfPermissions\n      }, 'visible')\n        .then(({ visible }) => {\n          if (visible) {\n            node.navNode.update({\n              hidden: false,\n              showIf: null,\n              showIfPermission: null,\n              showIfContainsVisibleViews: null\n            });\n          } else {\n            node.navNode.update({\n              hidden: true\n            });\n          }\n        });\n    }\n\n    function viewsConditionalVisibility(node) {\n      const c8yUiUtil = $injector.get('c8yUiUtil');\n      const c8yViews = $injector.get('c8yViews');\n      const views = c8yViews.getByPath(node.path);\n      return $q.all(\n        map(views, (view) => c8yUiUtil\n          .configureVisibility(pick(view, ['showIf', 'showIfPermissions']), 'show', false)\n          .then(property('show'))\n        )\n      )\n      .then(some);\n    }\n\n    return {\n      rootNodes() {\n        return root.children;\n      },\n      findNode,\n      addNavigation,\n      removeNavigation,\n      rootNodes$\n    };\n  }\n\n  return {\n    $get,\n    addNavigation,\n    removeNavigation\n  };\n}\n","import * as angular from 'angular';\n\nfunction gettextCatalogDecorator(\n  $delegate,\n  $interpolate,\n  c8yTranslate\n) {\n  'ngInject';\n\n  const gettextCatalog = $delegate;\n  const originalGetString = angular.bind(gettextCatalog, gettextCatalog.getString);\n\n  function newGetString(input, scope, context) {\n    if (typeof input === 'string') {\n      const translatedString = originalGetString(input, scope, context);\n      const interpolatedString = scope ? $interpolate(input)(scope) : input;\n\n      let stringToReturn = translatedString;\n\n      if (translatedString && translatedString === interpolatedString) {\n        const translatedServerMessage = c8yTranslate.instant(interpolatedString);\n        stringToReturn = translatedServerMessage;\n      }\n\n      return stringToReturn;\n    }\n\n    return input;\n  }\n\n  gettextCatalog.getString = newGetString;\n\n  return gettextCatalog;\n}\n\nexport { gettextCatalogDecorator };\n","import { UpgradeModule as NgUpgradeModule } from '@angular/upgrade/static';\nimport { ng1Modules } from './ng1';\n\nexport abstract class HybridAppModule {\n  ng1Modules = ng1Modules;\n  protected upgrade: NgUpgradeModule;\n\n  ngDoBootstrap() {\n    (window as any).bootstrap();\n    this.upgrade.bootstrap(document.getElementById('app'), this.ng1Modules, { strictDi: false });\n  }\n}\n","import { EmptyComponent } from '@c8y/ngx-components';\n\nexport const UPGRADE_ROUTES = [\n  { path: '**', component: EmptyComponent}\n];\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionBarService, getActivatedRoute } from '@c8y/ngx-components';\nimport {\n  ContextDashboardService,\n  ContextDashboardManagedObject,\n  ContextWidgetConfig\n} from '@c8y/ngx-components/context-dashboard';\nimport { gettext } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\n\n@Injectable()\nexport class DashboardBridgeService {\n  dashboardSvc;\n  compile;\n  dashboardClipboard;\n\n  constructor(\n    private ng1Injector: any,\n    private zone: NgZone,\n    private router: Router,\n    private contextDashboardService: ContextDashboardService,\n    private actionBarService: ActionBarService\n  ) {\n    this.dashboardSvc = ng1Injector.get('dashboardSvc');\n    this.compile = ng1Injector.get('$compile');\n  }\n\n  get ng1Components() {\n    return this.ng1Injector.get('c8yComponents');\n  }\n\n  async instantiateComponent(widget, element) {\n    const { dashboard, context, child } = widget;\n    if (dashboard) {\n      const transformedChild = await this.dashboardSvc.transformChildWithContext(\n        this.dashboardSvc.forcedContext || context,\n        dashboard,\n        child\n      );\n      if (this.dashboardSvc.forcedContext || dashboard.deviceType) {\n        await this.dashboardSvc.updateConfigTargetsWithContext(\n          this.dashboardSvc.forcedContext || context,\n          transformedChild.config\n        );\n      }\n      return this.zone.runOutsideAngular(() =>\n        this.loadTemplate(transformedChild, child, element, context)\n      );\n    } else {\n      return this.loadConfigTemplate(element, widget);\n    }\n  }\n\n  async editDashboard(dashboard) {\n    return this.dashboardSvc.editCurrentDashboard({ dashboardId: dashboard.id });\n  }\n\n  copyDashboard() {\n    const dashboard = this.getDashboard();\n    const couldCopy = this.dashboardSvc.copyDashboard(dashboard.c8y_Dashboard);\n    if (couldCopy) {\n      this.dashboardClipboard = dashboard;\n      this.actionBarService.refresh();\n      return dashboard;\n    }\n  }\n\n  async pasteDashboard() {\n    try {\n      const newDashboard = await this.dashboardSvc.pasteDashboard();\n      this.navigateToDashboard(newDashboard);\n      this.dashboardClipboard = undefined;\n    } catch (ex) {\n      // intended empty\n    }\n    this.actionBarService.refresh();\n  }\n\n  instantiateDeviceSelector(element, widgetConfig: ContextWidgetConfig) {\n    return this.loadConfigTemplate(element, widgetConfig, true);\n  }\n\n  private loadTemplate(transformedChild, child, element, context) {\n    const scope = this.ng1Injector.get('$rootScope').$new(true);\n    scope.child = transformedChild;\n    scope.dashboardContext = context;\n    if (child.widgetComponent) {\n      element.innerHTML = `<c8y-ui-component component-name=\"'${\n        child.widgetComponent\n      }'\" config=\"child.config\" context=\"dashboardContext\"></c8y-ui-component>`;\n    } else if (child.templateUrl) {\n      element.innerHTML = `<ng-include src=\"'${child.templateUrl}'\"></ng-include>`;\n    }\n    this.compile(element)(scope);\n    return scope;\n  }\n\n  private navigateToDashboard(dashboard: ContextDashboardManagedObject) {\n    if (/dashboard/.test(this.router.url)) {\n      this.router.navigate(['..', dashboard.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    } else {\n      this.router.navigate(['..', 'dashboard', dashboard.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    }\n  }\n\n  private getDashboard() {\n    return getActivatedRoute(this.router).snapshot.data.dashboard;\n  }\n\n  private loadConfigTemplate(\n    element,\n    widgetConfig: ContextWidgetConfig,\n    onlyDeviceSelector = false\n  ) {\n    const { settings } = widgetConfig;\n    const scope = this.ng1Injector.get('$rootScope').$new(true);\n\n    scope.settings = { ...settings, ...settings.ng1 };\n    scope.options = widgetConfig.options;\n    scope.config = widgetConfig;\n    scope.forms = {};\n    scope.rootId = settings.context.id;\n    scope.dashboard = get(widgetConfig, 'settings.dashboardMo');\n\n    let configCmp = '';\n    if (!onlyDeviceSelector) {\n      if (widgetConfig.settings.configComponent) {\n        configCmp = `<c8y-ui-component component-name=\"'${\n          widgetConfig.settings.configComponent\n        }'\" config=\"config\"></c8y-ui-component>`;\n      } else if (widgetConfig.settings.configTemplateUrl) {\n        configCmp = `<ng-include src=\"'${widgetConfig.settings.configTemplateUrl}'\"></ng-include>`;\n      }\n    }\n\n    element.innerHTML = `\n    <ng-form name=\"forms.componentForm\">\n      <div class=\"form-group\"\n        ng-if=\"!settings.noDeviceTarget\"\n        ng-style=\"{height: settings.hideTarget && '0', overflow: 'hidden'}\"\n      >\n        <label translate>${gettext('Target assets or devices')}</label>\n        <c8y-device-selector-combo parent=\"rootId\"\n          selected-child-device=\"config.device\"\n          groups-selectable=\"settings.groupsSelectable\"\n          select-required=\"!settings.deviceTargetNotRequired\"\n        ></c8y-device-selector-combo>\n      </div>\n      ${configCmp}\n    </ng-form>`;\n\n    scope.$watch('forms.componentForm.$invalid', formStatus => {\n      this.contextDashboardService.formDisabled = formStatus;\n    });\n    this.compile(element)(scope);\n    this.contextDashboardService.formDisabled = scope.forms.componentForm.$invalid;\n\n    return scope;\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit, OnDestroy, Optional } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { WidgetsDashboardComponent } from '@c8y/ngx-components';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'c8y-widget-legacy',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WidgetComponent implements OnInit, OnDestroy {\n  ng1Scope;\n  config;\n  private resizeSubscription?: Subscription;\n  constructor(\n    @Optional() private dashboard: WidgetsDashboardComponent,\n    private dashboardBridgeService: DashboardBridgeService,\n    private el: ElementRef\n  ) {}\n\n  async ngOnInit() {\n    this.ng1Scope = await this.dashboardBridgeService.instantiateComponent(this.config, this.el.nativeElement);\n    if (this.dashboard) {\n      this.resizeSubscription = this.dashboard.onChangeDashboard.subscribe(() => {\n        this.ng1Scope.$broadcast('dashboardResize');\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.ng1Scope) {\n      this.ng1Scope.$destroy();\n    }\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-device-selector-legacy',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n  ng1Scope;\n  config;\n\n  constructor(\n    private dashboardBridgeService: DashboardBridgeService,\n    private el: ElementRef\n  ) {}\n\n  async ngOnInit() {\n    this.ng1Scope = this.dashboardBridgeService.instantiateDeviceSelector(this.el.nativeElement, this.config);\n  }\n\n  ngOnDestroy(): void {\n    if (this.ng1Scope) {\n      this.ng1Scope.$destroy();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DynamicComponentDefinition } from '@c8y/ngx-components';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { WidgetComponent } from './widget.component';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n@Injectable()\nexport class Ng1ComponentFactoryService {\n  constructor(private bridge: DashboardBridgeService) {}\n  async get() {\n    const components = (await this.bridge.ng1Components.list()).map(cmp => {\n      const data = {\n        settings: {\n          ...cmp.options,\n          configTemplateUrl: cmp.configTemplateUrl,\n          widgetComponent: cmp.widgetComponent,\n          configComponent: cmp.configComponent,\n          transformConfigWithContext:\n            cmp.transformConfigWithContext || cmp.componentTransformConfigWithContext,\n          upgrade: true\n        }\n      } as any;\n      data.settings.templateUrl = cmp.templateUrl; // workaround as in object it creates build error\n\n      return {\n        id: cmp.name,\n        label: cmp.nameDisplay || cmp.name,\n        description: cmp.description,\n        component: WidgetComponent,\n        configComponent: WidgetComponent,\n        previewImage: cmp.previewImage,\n        data\n      } as DynamicComponentDefinition;\n    });\n\n    // add the device selector legacy component\n    components.push({\n      id: 'device.selector.legacy',\n      label: 'Device selector',\n      description: '',\n      data: { settings: { noNewWidgets: true, upgrade: true } },\n      component: DeviceSelectorComponent\n    });\n\n    return components;\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-copy-action-legacy',\n  template: `\n    <ng-template #templateCopy>\n      <li>\n        <button title=\"{{'Copy dashboard' | translate}}\" (click)=\"copyDashboard()\">\n          <i class=\"fa fw fa-clone\"></i>&nbsp;<span translate>Copy dashboard</span>\n        </button>\n      </li>\n    </ng-template>\n  `\n})\nexport class CopyActionComponent implements OnInit {\n  @ViewChild('templateCopy', { read: TemplateRef, static: true }) templateCopy;\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private dashboardBridgeService: DashboardBridgeService\n  ) {}\n\n  ngOnInit() {\n    this.vcRef.createEmbeddedView(this.templateCopy);\n  }\n\n  copyDashboard() {\n    this.dashboardBridgeService.copyDashboard();\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-paste-action-legacy',\n  template: `\n    <ng-template #templatePaste>\n      <li>\n        <button title=\"{{'Paste dashboard' | translate}}\" (click)=\"pasteDashboard()\">\n          <i class=\"fa fw fa-clipboard\"></i>&nbsp;<span translate>Paste dashboard</span>&nbsp;<span\n            >\"{{ dashboardName }}\"</span\n          >\n        </button>\n      </li>\n    </ng-template>\n  `\n})\nexport class PasteActionComponent implements OnInit {\n  @ViewChild('templatePaste', { read: TemplateRef, static: true }) templatePaste;\n  dashboardName = '';\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private dashboardBridgeService: DashboardBridgeService\n  ) {}\n\n  ngOnInit() {\n    this.vcRef.createEmbeddedView(this.templatePaste);\n    this.dashboardName = this.dashboardBridgeService.dashboardClipboard.c8y_Dashboard.name;\n  }\n\n  pasteDashboard() {\n    this.dashboardBridgeService.pasteDashboard();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionBarFactory, ActionBarItem, ViewContext } from '@c8y/ngx-components';\nimport { CopyActionComponent } from './copy-action.component';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { PasteActionComponent } from './paste-action.component';\n\n@Injectable()\nexport class Ng1DashboardActionFactoryService implements ActionBarFactory {\n  constructor(private dashboardBridgeService: DashboardBridgeService) {}\n\n  get(activeRoute?: ActivatedRoute) {\n    const actions = [];\n    const data =\n      !activeRoute.parent || activeRoute.snapshot.data.context\n        ? activeRoute.snapshot.data\n        : activeRoute.parent.snapshot.data;\n    const { contextData } = data;\n    const canCopy =\n      contextData &&\n      activeRoute.snapshot.data.dashboard &&\n      [ViewContext.Device, ViewContext.Group].includes(data.context);\n    const canPaste =\n      contextData &&\n      [ViewContext.Device, ViewContext.Group].includes(data.context) &&\n      this.dashboardBridgeService.dashboardClipboard;\n\n    if (canCopy) {\n      actions.push({\n        priority: -20,\n        placement: 'more',\n        template: CopyActionComponent\n      } as ActionBarItem);\n    }\n\n    if (canPaste) {\n      actions.push({\n        priority: -10,\n        placement: 'more',\n        template: PasteActionComponent\n      } as ActionBarItem);\n    }\n\n    return actions;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, NgZone, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionBarService, HOOK_ACTION_BAR, HOOK_COMPONENTS} from '@c8y/ngx-components';\nimport { ContextDashboardService } from '@c8y/ngx-components/context-dashboard';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng1ComponentFactoryService } from './component.factory';\nimport { CopyActionComponent } from './copy-action.component';\nimport { Ng1DashboardActionFactoryService } from './dashboard-actions.factory';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { PasteActionComponent } from './paste-action.component';\nimport { WidgetComponent } from './widget.component';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n@NgModule({\n  declarations: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],\n  entryComponents: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],\n  imports: [CommonModule, TranslateModule],\n  providers: [\n    {\n      provide: DashboardBridgeService,\n      useFactory: dashboardBridgeFactory,\n      deps: ['$injector', NgZone, Router, [new Optional(), ContextDashboardService], ActionBarService]\n    },\n    { provide: HOOK_COMPONENTS, useClass: Ng1ComponentFactoryService, multi: true },\n    { provide: HOOK_ACTION_BAR, useClass: Ng1DashboardActionFactoryService, multi: true }\n  ]\n})\nexport class DashboardUpgradeModule {}\n\nexport function dashboardBridgeFactory(injector, ngZone, router, contextDashboardService, actionBarService) {\n  return new DashboardBridgeService(injector, ngZone, router, contextDashboardService, actionBarService);\n}\n"]}