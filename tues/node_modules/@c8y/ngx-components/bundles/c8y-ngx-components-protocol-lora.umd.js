(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/client'), require('@angular/router'), require('rxjs'), require('rxjs/operators'), require('lodash-es')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/protocol-lora', ['exports', '@angular/core', '@c8y/ngx-components', '@c8y/client', '@angular/router', 'rxjs', 'rxjs/operators', 'lodash-es'], factory) :
    (global = global || self, factory((global.c8y = global.c8y || {}, global.c8y['ngx-components'] = global.c8y['ngx-components'] || {}, global.c8y['ngx-components']['protocol-lora'] = {}), global.ng.core, global.c8y['ngx-components'], global.client, global.ng.router, global.rxjs, global.rxjs.operators, global.lodashEs));
}(this, (function (exports, core, ngxComponents, client, router, rxjs, operators, lodashEs) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var LoraSetDeviceProtocolService = /** @class */ (function () {
        function LoraSetDeviceProtocolService(inventoryService) {
            this.inventoryService = inventoryService;
        }
        LoraSetDeviceProtocolService.prototype.getCurrentProtocol = function (device) {
            return __awaiter(this, void 0, void 0, function () {
                var protocolId, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            protocolId = device.c8y_LpwanDevice.type
                                ? device.c8y_LpwanDevice.type.split('/')[2]
                                : null;
                            if (!protocolId) {
                                return [2 /*return*/, null];
                            }
                            return [4 /*yield*/, this.inventoryService.detail(protocolId)];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        LoraSetDeviceProtocolService.prototype.applyProtocol = function (device, selectedProtocol) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    device.c8y_LpwanDevice.type = 'inventory/managedObjects/' + selectedProtocol.id;
                    device.type = selectedProtocol.name;
                    return [2 /*return*/, this.inventoryService.update(device)];
                });
            });
        };
        LoraSetDeviceProtocolService.prototype.getAvailableProtocols = function () {
            return __awaiter(this, void 0, void 0, function () {
                var query;
                return __generator(this, function (_a) {
                    query = {
                        type: {
                            __in: ['c8y_ActilityDeviceType', 'c8y_LoraDeviceType']
                        }
                    };
                    return [2 /*return*/, this.inventoryService.listQuery(query)];
                });
            });
        };
        LoraSetDeviceProtocolService.ctorParameters = function () { return [
            { type: client.InventoryService }
        ]; };
        LoraSetDeviceProtocolService = __decorate([
            core.Injectable()
        ], LoraSetDeviceProtocolService);
        return LoraSetDeviceProtocolService;
    }());

    var LoraAssignDeviceProtocolComponent = /** @class */ (function () {
        function LoraAssignDeviceProtocolComponent(loraService, alertService, router, inventoryService) {
            var _this = this;
            this.loraService = loraService;
            this.alertService = alertService;
            this.router = router;
            this.inventoryService = inventoryService;
            this.filterCurrentProtocol = rxjs.pipe(operators.map(function (protocols) {
                return protocols.filter(function (protocol) { return !_this.currentProtocol || _this.currentProtocol.id !== protocol.id; });
            }));
        }
        LoraAssignDeviceProtocolComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.reload()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        LoraAssignDeviceProtocolComponent.prototype.reload = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, ex_1;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.loading = true;
                            this.newProtocol = null;
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 5, 6, 7]);
                            return [4 /*yield*/, this.loadDevice()];
                        case 2:
                            _c.sent();
                            _a = this;
                            return [4 /*yield*/, this.loraService.getAvailableProtocols()];
                        case 3:
                            _a.availableProtocols = _c.sent();
                            _b = this;
                            return [4 /*yield*/, this.loraService.getCurrentProtocol(this.device)];
                        case 4:
                            _b.currentProtocol = _c.sent();
                            return [3 /*break*/, 7];
                        case 5:
                            ex_1 = _c.sent();
                            this.alertService.addServerFailure(ex_1);
                            return [3 /*break*/, 7];
                        case 6:
                            this.loading = false;
                            return [7 /*endfinally*/];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        LoraAssignDeviceProtocolComponent.prototype.loadDevice = function () {
            return __awaiter(this, void 0, void 0, function () {
                var deviceId, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            deviceId = this.router.routerState.snapshot.url.match(/\d+/)[0];
                            return [4 /*yield*/, this.inventoryService.detail(deviceId)];
                        case 1:
                            data = (_a.sent()).data;
                            this.device = data;
                            return [2 /*return*/];
                    }
                });
            });
        };
        LoraAssignDeviceProtocolComponent.prototype.apply = function (selectedProtocol) {
            return __awaiter(this, void 0, void 0, function () {
                var ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            return [4 /*yield*/, this.loraService.applyProtocol(this.device, selectedProtocol)];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.reload()];
                        case 2:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Device protocol set.'));
                            this.loraSetDeviceProtocolForm.reset('dirty');
                            return [3 /*break*/, 4];
                        case 3:
                            ex_2 = _a.sent();
                            this.alertService.danger(ngxComponents.gettext('Could not set device protocol.'));
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        LoraAssignDeviceProtocolComponent.ctorParameters = function () { return [
            { type: LoraSetDeviceProtocolService },
            { type: ngxComponents.AlertService },
            { type: router.Router },
            { type: client.InventoryService }
        ]; };
        __decorate([
            core.ViewChild('loraSetDeviceProtocolForm', { static: false })
        ], LoraAssignDeviceProtocolComponent.prototype, "loraSetDeviceProtocolForm", void 0);
        LoraAssignDeviceProtocolComponent = __decorate([
            core.Component({
                selector: 'set-device-protocol',
                template: "<form #loraSetDeviceProtocolForm=\"ngForm\" class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header separator\">\n        <h4 class=\"card-title\">{{ 'LoRa device protocol' | translate }}</h4>\n      </div>\n      <div *ngIf=\"loading\" class=\"card-block\">\n        <div style=\"position: relative; min-height: 40px;min-width: 55px;\">\n          <div class=\"spinner\">\n            <div class=\"rect1\"></div>\n            <div class=\"rect2\"></div>\n            <div class=\"rect3\"></div>\n            <div class=\"rect4\"></div>\n          </div>\n        </div>\n        <span translate>Loading</span>\n      </div>\n      <div *ngIf=\"!loading\">\n        <div class=\"card-block\">\n          <div class=\"form-group\">\n            <label translate>Current device protocol</label>\n            <p class=\"form-control-static\" *ngIf=\"!currentProtocol\">\n              {{ 'c8y_LoriotLora' }}\n            </p>\n            <p class=\"form-control-static\" *ngIf=\"currentProtocol\">\n              {{ currentProtocol.name }}\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <label translate>New device protocol</label>\n            <div class=\"c8y-select-wrapper\">\n              <select class=\"form-control\" [(ngModel)]=\"newProtocol\" name=\"newProtocol\" required>\n                <option *ngIf=\"!newProtocol\" [ngValue]=\"null\">\n                  {{ 'Select device protocol' | translate }}\n                </option>\n                <option\n                  *c8yFor=\"let protocol of availableProtocols; pipe: filterCurrentProtocol\"\n                  [ngValue]=\"protocol\"\n                >\n                  {{ protocol.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer separator\">\n          <button\n            title=\"{{ 'Apply' | translate }}\"\n            class=\"btn btn-primary\"\n            (click)=\"apply(newProtocol)\"\n            translate\n            [disabled]=\"!loraSetDeviceProtocolForm.dirty\"\n          >\n            Apply\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\u200C\n"
            })
        ], LoraAssignDeviceProtocolComponent);
        return LoraAssignDeviceProtocolComponent;
    }());

    var LoraAgentGuard = /** @class */ (function () {
        function LoraAgentGuard() {
        }
        LoraAgentGuard.prototype.canActivate = function (route) {
            var contextData = route.data.contextData || route.parent.data.contextData;
            return contextData && !lodashEs.isUndefined(contextData.c8y_LpwanDevice) && (contextData.c8y_LpwanDevice.lpwanDeviceType === 'Lora');
        };
        LoraAgentGuard = __decorate([
            core.Injectable()
        ], LoraAgentGuard);
        return LoraAgentGuard;
    }());

    var routes = [
        {
            context: ngxComponents.ViewContext.Device,
            path: 'assign-protocol',
            component: LoraAssignDeviceProtocolComponent,
            label: ngxComponents.gettext('LPWAN'),
            icon: 'c8y-device-protocols',
            canActivate: [LoraAgentGuard]
        }
    ];
    var ɵ0 = routes;
    var LoraProtocolModule = /** @class */ (function () {
        function LoraProtocolModule() {
        }
        LoraProtocolModule = __decorate([
            core.NgModule({
                declarations: [
                    LoraAssignDeviceProtocolComponent
                ],
                imports: [
                    ngxComponents.CoreModule,
                    ngxComponents.FormsModule
                ],
                entryComponents: [LoraAssignDeviceProtocolComponent],
                providers: [
                    LoraAgentGuard,
                    LoraSetDeviceProtocolService,
                    {
                        provide: ngxComponents.HOOK_ONCE_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            })
        ], LoraProtocolModule);
        return LoraProtocolModule;
    }());

    exports.LoraAssignDeviceProtocolComponent = LoraAssignDeviceProtocolComponent;
    exports.LoraProtocolModule = LoraProtocolModule;
    exports.ɵ0 = ɵ0;
    exports.ɵa = LoraSetDeviceProtocolService;
    exports.ɵb = LoraAgentGuard;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=c8y-ngx-components-protocol-lora.umd.js.map
