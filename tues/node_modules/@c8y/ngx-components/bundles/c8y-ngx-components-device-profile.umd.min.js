!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@c8y/ngx-components"),require("@c8y/client"),require("lodash-es"),require("rxjs"),require("rxjs/operators"),require("@c8y/ngx-components/repository"),require("@angular/router"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/popover"),require("ngx-bootstrap/tooltip"),require("ngx-bootstrap/buttons"),require("@angular/forms"),require("@angular/common"),require("ngx-bootstrap/modal"),require("@ngx-translate/core"),require("@c8y/ngx-components/operations/single-operation-details")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/device-profile",["exports","@angular/core","@c8y/ngx-components","@c8y/client","lodash-es","rxjs","rxjs/operators","@c8y/ngx-components/repository","@angular/router","ngx-bootstrap/dropdown","ngx-bootstrap/popover","ngx-bootstrap/tooltip","ngx-bootstrap/buttons","@angular/forms","@angular/common","ngx-bootstrap/modal","@ngx-translate/core","@c8y/ngx-components/operations/single-operation-details"],t):t(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"]["device-profile"]={}),e.ng.core,e.c8y["ngx-components"],e.client,e.lodashEs,e.rxjs,e.rxjs.operators,e.c8y["ngx-components"].repository,e.ng.router,e.dropdown,e.popover,e.tooltip,e.buttons,e.ng.forms,e.ng.common,e.modal,e.core$1,e.c8y["ngx-components"].operations["single-operation-details"])}(this,(function(e,t,i,n,r,o,c,s,a,l,d,p,f,v,u,y,m,h){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function g(e,t,i,n){var r,o=arguments.length,c=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,i,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(c=(o<3?r(c):o>3?r(t,i,c):r(t,i))||c);return o>3&&c&&Object.defineProperty(t,i,c),c}function b(e,t,i,n){return new(i||(i=Promise))((function(r,o){function c(e){try{a(n.next(e))}catch(e){o(e)}}function s(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(c,s)}a((n=n.apply(e,t||[])).next())}))}function P(e,t){var i,n,r,o,c={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(i)throw new TypeError("Generator is already executing.");for(;c;)try{if(i=1,n&&(r=2&o[0]?n.return:o[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,o[1])).done)return r;switch(n=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,n=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!(r=c.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){c.label=o[1];break}if(6===o[0]&&c.label<r[1]){c.label=r[1],r=o;break}if(r&&c.label<r[2]){c.label=r[2],c.ops.push(o);break}r[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],n=0}finally{i=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}function w(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,r,o=i.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)c.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}return c}var _=function(){function e(){}return e.prototype.get=function(){return b(this,void 0,void 0,(function(){return P(this,(function(e){return this.nodeItem||(this.nodeItem=new i.NavigatorNode({label:i.gettext("Device profiles"),path:"/device-profiles",icon:"c8y-device-profile",parent:i.gettext("Management")})),[2,this.nodeItem]}))}))},e=g([t.Injectable()],e)}(),x=function(){function e(e,t,r){this.inventoryService=e,this.operationService=t,this.alertService=r,this.dateFrom=new Date(0),this.dateTo=new Date(Date.now()+864e5),this.NOT_INSTALLED_WARNING=i.gettext("Not installed on the device"),this.VERSION_MISSMATCH_WARNING=i.gettext("Version mismatch"),this.SAME_URL_WARNING=i.gettext("Url is the same"),this.queriesUtil=new n.QueriesUtil}return e.prototype.createDeviceProfile=function(e){return this.inventoryService.create(e)},e.prototype.getDeviceProfilesByDeviceType=function(e){var t={__or:[{"c8y_Filter.type":e},{__not:{__has:"c8y_Filter.type"}}]};return this.getDeviceProfiles(t)},e.prototype.getDeviceProfiles=function(e){var t={type:"c8y_Profile"};return t=this.queriesUtil.addAndFilter(t,e||{}),this.inventoryService.listQuery(t,{pageSize:100,withTotalPages:!0})},e.prototype.getProfileOperation=function(e){return b(this,void 0,void 0,(function(){var t,i;return P(this,(function(r){switch(r.label){case 0:return t={deviceId:e,fragmentType:"c8y_DeviceProfile",dateFrom:this.dateFrom.toISOString(),dateTo:this.dateTo.toISOString(),revert:!0,pageSize:1},[4,this.operationService.list(t)];case 1:return[2,(i=r.sent().data[0])&&i.status!==n.OperationStatus.SUCCESSFUL?i:void 0]}}))}))},e.prototype.createProfileOperation=function(e,t){return b(this,void 0,void 0,(function(){var i,n,r,o;return P(this,(function(c){switch(c.label){case 0:n={deviceId:e.id,profileId:t.id,profileName:t.name,c8y_DeviceProfile:t.c8y_DeviceProfile,description:"Assign device profile "+t.name+" to device "+e.name},c.label=1;case 1:return c.trys.push([1,3,,4]),[4,this.operationService.create(n)];case 2:return r=c.sent().data,i=r,[3,4];case 3:return o=c.sent(),this.alertService.addServerFailure(o),[3,4];case 4:return[2,i]}}))}))},e.prototype.getFirmwareItems=function(e,t){var i=e.c8y_Firmware,n=r.get(t,"c8y_DeviceProfile.firmware"),o=[],c=[];return i&&o.push(i),n&&c.push(n),this.createProfileComparison(o,c,"name","version",this.getAlert("firmware"))},e.prototype.getSoftwareItems=function(e,t){var i=e.c8y_SoftwareList,n=r.get(t,"c8y_DeviceProfile.software");return this.createProfileComparison(i,n,"name","version",this.getAlert("software"))},e.prototype.getConfigurationItems=function(e,t){var i=[];Object.keys(e).forEach((function(t){"c8y_Configuration_"===t.slice(0,18)&&i.push(e[t])}));var n=r.get(t,"c8y_DeviceProfile.configuration");return this.createProfileComparison(i,n,"url","type",this.getAlert("configuration"))},e.prototype.getAlert=function(e){var t=this,i=function(e){return e.device?"":t.NOT_INSTALLED_WARNING};switch(e){case"firmware":case"software":return function(e){return e.device&&e.profile&&e.device.itemDetails!==e.profile.itemDetails?t.VERSION_MISSMATCH_WARNING:i(e)};case"configuration":return function(e){return e.device&&e.profile&&(e.device.itemName!==e.profile.itemName||e.device.itemDetails!==e.profile.itemDetails)?t.SAME_URL_WARNING:i(e)};default:return i}},e.prototype.createProfileComparison=function(e,t,i,n,o){void 0===e&&(e=[]),void 0===t&&(t=[]);var c=this.createProfileComparisonFromDeviceItems(e,i,n),s=this.extendProfileComparisonWithProfileItems(c,t,i,n,o);return r.sortBy(r.toArray(s),"name")},e.prototype.createProfileComparisonFromDeviceItems=function(e,t,i){return e.reduce((function(e,n){var r;return Object.assign(e,((r={})[n[t]]={device:{itemName:n.name,itemDetails:n[i],itemUrl:n.url},profile:void 0},r))}),{})},e.prototype.extendProfileComparisonWithProfileItems=function(e,t,i,n,r){return t.forEach((function(t){var o={profile:{itemName:t.name,itemDetails:t[n],itemUrl:t.url},device:e[t[i]]?e[t[i]].device:void 0};o.comparisonAlert=r(o),e[t[i]]=o})),e},e.ctorParameters=function(){return[{type:n.InventoryService},{type:n.OperationService},{type:i.AlertService}]},e=g([t.Injectable()],e)}(),I=function(){function e(e){var r=this;this.repositoryService=e,this.title=i.gettext("Select configuration"),this.load=new o.Subject,this.configurations=this.load.pipe(c.switchMap((function(){return r.getItems()})),c.map((function(e){var t=e.data;return r.aggregate(t)}))),this.resultEmitter=new t.EventEmitter,this.deviceTypeQuery={},this.searchQuery={},this.labels={ok:i.gettext("Save")},this.queriesUtil=new n.QueriesUtil}return e.prototype.search=function(e){this.searchQuery=e?this.queriesUtil.addOrFilter({name:"*"+e+"*"},{configurationType:"*"+e+"*"}):{},this.load.next()},e.prototype.result=function(e){this.resultEmitter.emit(e)},e.prototype.getItems=function(){return this.repositoryService.listRepositoryEntries(s.RepositoryType.CONFIGURATION,{query:this.queriesUtil.addOrFilter(this.deviceTypeQuery,this.searchQuery),params:{pageSize:100}})},e.prototype.aggregate=function(e){var t=this.selected;return e.reduce((function(e,i){i.configurationType=i.configurationType||i.name;var n=t&&t.filter((function(e){return e.url===i.url})).length>0,r={body:[{value:i.name}],obj:i,selected:n},o=e.find((function(e){return e.body[0].value===i.configurationType}));return o?o.options.push(r):(o={groupId:i.id,body:[{value:i.configurationType}],options:[r]},e.push(o)),e}),[])},e.ctorParameters=function(){return[{type:s.RepositoryService}]},e=g([t.Component({selector:"c8y-select-configuration-modal",template:'<c8y-select-modal\n  [icon]="\'gears\'"\n  [title]="title"\n  [items]="configurations | async"\n  [mode]="\'multi\'"\n  (result)="result($event)"\n  (search)="search($event)"\n  [disableSelected]="true"\n  [labels]="labels"\n>\n</c8y-select-modal>\n'})],e)}();(e.DeviceProfileOperation||(e.DeviceProfileOperation={})).APPLY_PROFILE="c8y_DeviceProfile";var D=function(){function e(e,t,r,o,c,s,a){this.route=e,this.alertService=t,this.inventoryService=r,this.location=o,this.breadcrumbService=c,this.bsModal=s,this.repositoryService=a,this.DEVICE_TYPE_POPOVER=i.gettext("The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types."),this.queriesUtil=new n.QueriesUtil}return e.prototype.ngOnInit=function(){return b(this,void 0,void 0,(function(){var e,t;return P(this,(function(i){switch(i.label){case 0:return e=this.route.snapshot.paramMap.get("id"),t=this,[4,this.getDeviceProfile(e)];case 1:return t.deviceProfile=i.sent(),this.deviceProfile&&(this.profileName=this.deviceProfile.name,this.deviceProfile.c8y_DeviceProfile.software||(this.deviceProfile.c8y_DeviceProfile.software=[]),this.deviceProfile.c8y_DeviceProfile.configuration||(this.deviceProfile.c8y_DeviceProfile.configuration=[])),[2]}}))}))},e.prototype.addFirmware=function(){var e=this,t={deviceTypeQuery:this.getDeviceTypeQuery(s.RepositoryType.FIRMWARE),repositoryType:s.RepositoryType.FIRMWARE,repositoryEntriesWithVersionsFn$:function(t){return e.getRepositoryEntriesWithVersions$(t.content.searchTerm,s.RepositoryType.FIRMWARE)},icon:"c8y-firmware",title:i.gettext("Select firmware"),mode:i.ModalSelectionMode.SINGLE},n=this.bsModal.show(s.RepositorySelectModalComponent,{ignoreBackdropClick:!0,initialState:t});t.repositoryEntriesWithVersionsFn$&&(n.content.repositoryEntriesWithVersions$=t.repositoryEntriesWithVersionsFn$(n)),n.content.load.next(),n.content.resultEmitter.pipe(c.take(1)).subscribe((function(t){var i=w(t,1)[0];if(i){var n={c8y_DeviceProfile:e.deviceProfile.c8y_DeviceProfile||{}};r.assign(n.c8y_DeviceProfile,{firmware:{name:i.name,version:i.version,url:i.url,isPatch:i.isPatch,patchDependency:i.patchDependency}}),e.updateDeviceProfile(n)}}))},e.prototype.getRepositoryEntriesWithVersions$=function(e,t){var i=this;return e.pipe(c.distinctUntilChanged(),c.switchMap((function(e){return i.repositoryService.listRepositoryEntries(t,{partialName:e,params:{pageSize:100},skipLegacy:!0})})),c.map((function(e){return e.data})),c.map((function(e){return i.getAndAssignRepositoryBinaries(e)})),c.shareReplay(1))},e.prototype.getAndAssignRepositoryBinaries=function(e){var t=this;return e.forEach((function(e){e.versions=t.repositoryService.listBaseVersions(e)})),e},e.prototype.addConfiguration=function(){var e=this,t=this.bsModal.show(I,{ignoreBackdropClick:!0});t.content.deviceTypeQuery=this.getDeviceTypeQuery(s.RepositoryType.CONFIGURATION),t.content.selected=this.deviceProfile.c8y_DeviceProfile.configuration,t.content.load.next(),t.content.resultEmitter.pipe(c.take(1)).subscribe((function(t){var i=t.map((function(e){return r.assign({url:e.url,name:e.name},e.configurationType?{type:e.configurationType}:{})})),n=r.concat(i,e.deviceProfile.c8y_DeviceProfile.configuration||[]),o=r.uniqWith(n,(function(e,t){return e.type&&t.type&&e.type===t.type})),c={c8y_DeviceProfile:e.deviceProfile.c8y_DeviceProfile||{}};r.assign(c.c8y_DeviceProfile,{configuration:o}),e.updateDeviceProfile(c)}))},e.prototype.addSoftware=function(){var e=this,t={deviceTypeQuery:this.getDeviceTypeQuery(s.RepositoryType.SOFTWARE),repositoryType:s.RepositoryType.SOFTWARE,repositoryEntriesWithVersionsFn$:function(t){return e.getRepositoryEntriesWithVersions$(t.content.searchTerm,s.RepositoryType.SOFTWARE)},selected:this.deviceProfile.c8y_DeviceProfile.software,icon:"c8y-tools",title:i.gettext("Select software"),mode:i.ModalSelectionMode.MULTI},n=this.bsModal.show(s.RepositorySelectModalComponent,{ignoreBackdropClick:!0,initialState:t});t.repositoryEntriesWithVersionsFn$&&(n.content.repositoryEntriesWithVersions$=t.repositoryEntriesWithVersionsFn$(n)),n.content.load.next(),n.content.resultEmitter.pipe(c.take(1)).subscribe((function(t){var i=t.map((function(e){return{name:e.name,version:e.version,url:e.url,action:"install"}})),n=r.concat(i,e.deviceProfile.c8y_DeviceProfile.software||[]),o=r.uniqWith(n,(function(e,t){return e.name&&t.name&&e.name===t.name})),c={c8y_DeviceProfile:e.deviceProfile.c8y_DeviceProfile||{}};r.assign(c.c8y_DeviceProfile,{software:o}),e.updateDeviceProfile(c)}))},Object.defineProperty(e.prototype,"isDeviceProfileEmpty",{get:function(){var e=this.deviceProfile.c8y_DeviceProfile.software&&this.deviceProfile.c8y_DeviceProfile.software.length>0,t=Boolean(this.deviceProfile.c8y_DeviceProfile.firmware),i=this.deviceProfile.c8y_DeviceProfile.configuration&&this.deviceProfile.c8y_DeviceProfile.configuration.length>0;return e||t||i},enumerable:!0,configurable:!0}),e.prototype.removeItem=function(e,t){var i={c8y_DeviceProfile:this.deviceProfile.c8y_DeviceProfile},n=i.c8y_DeviceProfile[t].filter((function(t){return!r.isEqual(e,t)}));i.c8y_DeviceProfile[t]=n,this.updateDeviceProfile(i)},e.prototype.removeFirmware=function(){delete this.deviceProfile.c8y_DeviceProfile.firmware,this.updateDeviceProfile({c8y_DeviceProfile:this.deviceProfile.c8y_DeviceProfile})},e.prototype.updateDeviceProfile=function(e){return b(this,void 0,void 0,(function(){var t,n;return P(this,(function(r){switch(r.label){case 0:e.c8y_Filter&&""===e.c8y_Filter.type&&delete e.c8y_Filter.type,Object.assign(e,{id:this.deviceProfile.id}),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,this.inventoryService.update(e)];case 2:return t=r.sent().data,this.deviceProfile=t,this.profileName=this.deviceProfile.name,this.alertService.success(i.gettext("Device profile changed.")),[3,4];case 3:return n=r.sent(),this.alertService.addServerFailure(n),[3,4];case 4:return[2]}}))}))},e.prototype.getDeviceProfile=function(e){return b(this,void 0,void 0,(function(){var t;return P(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,this.inventoryService.detail(e)];case 1:return[2,i.sent().data];case 2:return t=i.sent(),this.alertService.addServerFailure(t),[3,3];case 3:return[2]}}))}))},e.prototype.getDeviceTypeQuery=function(e){return r.has(this.deviceProfile,"c8y_Filter.type")&&!r.isEmpty(this.deviceProfile.c8y_Filter.type)?e===s.RepositoryType.CONFIGURATION?this.queriesUtil.addOrFilter({deviceType:this.deviceProfile.c8y_Filter.type},{__not:{__has:"deviceType"}}):this.queriesUtil.addOrFilter({"c8y_Filter.type":this.deviceProfile.c8y_Filter.type},{__not:{__has:"c8y_Filter.type"}}):{}},e.ctorParameters=function(){return[{type:a.ActivatedRoute},{type:i.AlertService},{type:n.InventoryService},{type:u.Location},{type:i.BreadcrumbService},{type:y.BsModalService},{type:s.RepositoryService}]},e=g([t.Component({selector:"c8y-device-profile",template:'<c8y-title>{{ profileName }}</c8y-title>\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [icon]="\'c8y-device-profile\'"\n    [label]="\'Device profiles\' | translate"\n    [path]="\'device-profiles\'"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div *ngIf="deviceProfile">\n  <div class="card m-b-4" *ngIf="deviceProfile">\n    <div class="card-header separator">\n      <h4 translate>Name and device type</h4>\n    </div>\n    <div class="card-block">\n      <div class="row">\n        <div class="col-md-4">\n          <form #editNameForm="ngForm">\n            <c8y-form-group>\n              <label class="control-label" translate>\n                Name\n              </label>\n              <div class="input-group input-group-editable">\n                <input\n                  type="text"\n                  class="form-control"\n                  [(ngModel)]="deviceProfile.name"\n                  name="name"\n                  required\n                />\n                <span></span>\n                <div class="input-group-btn">\n                  <button\n                    (click)="\n                      updateDeviceProfile({ name: deviceProfile.name });\n                      editNameForm.form.markAsPristine()\n                    "\n                    class="btn btn-primary"\n                    title="{{ \'Save\' | translate }}"\n                    [disabled]="editNameForm.form.invalid"\n                  >\n                    {{ \'Save\' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </form>\n        </div>\n        <div class="col-md-4">\n          <form #editTypeForm="ngForm">\n            <c8y-form-group>\n              <label class="control-label">\n                {{ \'Device type\' | translate }}\n                <button\n                  class="btn btn-clean text-primary"\n                  popover="{{ DEVICE_TYPE_POPOVER | translate }}"\n                  triggers="focus"\n                  container="body"\n                  placement="right"\n                >\n                  <i [c8yIcon]="\'question-circle-o\'"></i>\n                </button>\n              </label>\n              <div class="input-group input-group-editable">\n                <input\n                  type="text"\n                  class="form-control"\n                  [(ngModel)]="deviceProfile.c8y_Filter.type"\n                  name="type"\n                  placeholder="{{ \'e.g.\' | translate }} c8y_Linux"\n                  [disabled]="isDeviceProfileEmpty"\n                />\n                <span></span>\n                <div class="input-group-btn">\n                  <button\n                    (click)="\n                      updateDeviceProfile({ c8y_Filter: { type: deviceProfile.c8y_Filter.type } });\n                      editTypeForm.form.markAsPristine()\n                    "\n                    class="btn btn-primary"\n                    title="{{ \'Save\' | translate }}"\n                    [disabled]="isDeviceProfileEmpty"\n                  >\n                    {{ \'Save\' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="card m-b-4">\n    <div class="card-header separator">\n      <div class="card-icon">\n        <i [c8yIcon]="\'c8y-firmware\'" class="c8y-icon-duocolor"></i>\n      </div>\n      <h4 class="card-title" translate>\n        Firmware\n      </h4>\n    </div>\n    <div class="card-block p-t-0">\n      <c8y-list-group *ngIf="deviceProfile.c8y_DeviceProfile.firmware">\n        <c8y-li>\n          <c8y-li-icon>\n            <i [c8yIcon]="\'c8y-firmware\'"></i>\n          </c8y-li-icon>\n          <c8y-li-body class="content-flex-50 left-m-xs">\n            <div class="col-6">\n              <span\n                class="text-truncate"\n                title="{{ deviceProfile.c8y_DeviceProfile.firmware.name }}"\n              >\n                {{ deviceProfile.c8y_DeviceProfile.firmware.name }}\n              </span>\n            </div>\n            <div class="col-5 flex-row">\n              <span\n                class="text-truncate"\n                title="{{ deviceProfile.c8y_DeviceProfile.firmware.version }}"\n              >\n                <span class="text-label-small m-r-4" translate>Version</span>\n                {{ deviceProfile.c8y_DeviceProfile.firmware.version }}\n              </span>\n              <button\n                class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8"\n                title="{{ \'Remove`firmware`\' | translate }}"\n                (click)="removeFirmware()"\n              >\n                <i c8yIcon="minus-circle"></i> {{ \'Remove`firmware`\' | translate }}\n              </button>\n            </div>\n            <div class="flex-item-right p-r-8 hidden-xs">\n              <button\n                class="btn btn-dot showOnHover"\n                title="{{ \'Remove`firmware`\' | translate }}"\n                (click)="removeFirmware()"\n              >\n                <i class="text-danger" c8yIcon="minus-circle"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class="p-t-8" *ngIf="!deviceProfile.c8y_DeviceProfile.firmware">\n        <button\n          title="{{ \'Add firmware\' | translate }}"\n          class="btn-add-block"\n          (click)="addFirmware()"\n        >\n          <i c8yIcon="plus-circle"></i> {{ \'No firmware defined. Add firmware\' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class="card m-b-4">\n    <div class="card-header separator">\n      <div class="card-icon">\n        <i [c8yIcon]="\'c8y-tools\'" class="c8y-icon-duocolor"></i>\n      </div>\n      <h4 class="card-title" translate>\n        Software\n      </h4>\n    </div>\n    <div class="card-block p-t-0">\n      <c8y-list-group>\n        <c8y-li *ngFor="let software of deviceProfile.c8y_DeviceProfile.software;">\n          <c8y-li-icon>\n            <i [c8yIcon]="\'c8y-tools\'"></i>\n          </c8y-li-icon>\n          <c8y-li-body class="content-flex-50 left-m-xs">\n            <div class="col-6">\n              <span class="text-truncate" title="{{ software.name }}">\n                {{ software.name }}\n              </span>\n            </div>\n            <div class="col-5 flex-row">\n              <span class="text-truncate" title="{{ software.version }}">\n                <span class="text-label-small m-r-8" translate>Version</span>\n                {{ software.version }}\n              </span>\n              <button\n                class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8"\n                title="{{ \'Remove`software`\' | translate }}"\n                ((click)="removeItem(software, \'software\')"\n              >\n                <i c8yIcon="minus-circle"></i> {{ \'Remove`software`\' | translate }}\n              </button>\n            </div>\n            <div class="flex-item-right p-r-8 hidden-xs ">\n              <button\n                class="btn btn-dot showOnHover text-danger"\n                title="{{ \'Remove`software`\' | translate }}"\n                (click)="removeItem(software, \'software\')"\n              >\n                <i c8yIcon="minus-circle"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class="p-t-8">\n        <button\n          title="{{ \'Add software\' | translate }}"\n          class="btn-add-block m-b-0"\n          (click)="addSoftware()"\n        >\n          <i c8yIcon="plus-circle"></i>\n          <span *ngIf="deviceProfile.c8y_DeviceProfile.software?.length === 0">\n            {{ \'No software defined.\' | translate }}&nbsp;\n          </span>\n          {{ \'Add software\' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class="card">\n    <div class="card-header separator">\n      <div class="card-icon">\n        <i [c8yIcon]="\'gears\'" class="c8y-icon-duocolor"></i>\n      </div>\n      <h4 class="card-title" translate>\n        Configuration\n      </h4>\n    </div>\n    <div class="card-block p-t-0">\n      <c8y-list-group class="m-b-8">\n        <c8y-li\n          *ngFor="let configuration of deviceProfile.c8y_DeviceProfile.configuration;"\n        >\n          <c8y-li-icon>\n            <i [c8yIcon]="\'gears\'"></i>\n          </c8y-li-icon>\n          <c8y-li-body class="content-flex-50">\n            <div class="col-6">\n              <span class="text-truncate" title="{{ configuration.name }}">\n                {{ configuration.name }}\n              </span>\n            </div>\n            <div class="col-5 flex-row">\n              <span class="label label-info">{{ configuration.type }}</span>\n              <button\n                class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8"\n                title="{{ \'Remove`configuration`\' | translate }}"\n                (click)="removeItem(configuration, \'configuration\')"\n              >\n                <i c8yIcon="minus-circle"></i> {{ \'Remove`configuration`\' | translate }}\n              </button>\n            </div>\n            <div class="flex-item-right p-r-8 hidden-xs">\n              <button\n                class="btn btn-dot showOnHover text-danger"\n                title="{{ \'Remove`configuration`\' | translate }}"\n                (click)="removeItem(configuration, \'configuration\')"\n              >\n                <i c8yIcon="minus-circle"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class="p-t-8">\n        <button\n          title="{{ \'Add configuration\' | translate }}"\n          class="btn-add-block m-b-0"\n          (click)="addConfiguration()"\n        >\n          <i c8yIcon="plus-circle"></i>\n          <span *ngIf="deviceProfile.c8y_DeviceProfile.configuration?.length === 0">\n            {{ \'No configuration defined.\' | translate }}&nbsp;</span\n          >\n          {{ \'Add configuration\' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n'})],e)}(),S=function(){function e(e,t){var n=this;this.modal=e,this.deviceProfileService=t,this.DEVICE_TYPE_POPOVER=i.gettext("The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types."),this.deviceProfile={name:"",type:"c8y_Profile",c8y_Filter:{},c8y_DeviceProfile:{}},this.result=new Promise((function(e,t){n._save=e,n._cancel=t}))}return e.prototype.create=function(){return b(this,void 0,void 0,(function(){var e;return P(this,(function(t){switch(t.label){case 0:return[4,this.deviceProfileService.createDeviceProfile(this.deviceProfile)];case 1:return e=t.sent().data,this._save(e.id),[2]}}))}))},e.prototype.close=function(){this._cancel(),this.modal.hide()},e.ctorParameters=function(){return[{type:y.BsModalRef},{type:x}]},e=g([t.Component({selector:"c8y-add-device-profile",template:'<div class="viewport-modal">\n  <div class="modal-header dialog-header">\n    <i [c8yIcon]="\'c8y-device-profile\'"></i>\n    <h4 translate>\n      Add device profile\n    </h4>\n  </div>\n\n  <div class="modal-inner-scroll">\n    <div class="modal-body">\n      <form #createDeviceProfile="ngForm">\n        <c8y-form-group>\n          <label translate for="name">Name</label>\n          <input\n            id="name"\n            type="text"\n            class="form-control"\n            autocomplete="off"\n            name="name"\n            [(ngModel)]="deviceProfile.name"\n            placeholder="{{ \'e.g. My device profile\' | translate }}"\n            required\n          />\n        </c8y-form-group>\n        <c8y-form-group>\n          <label>\n            {{ \'Device type\' | translate }}\n            <button\n              class="btn btn-clean"\n              popover="{{ DEVICE_TYPE_POPOVER | translate }}"\n              triggers="focus"\n            >\n              <i [c8yIcon]="\'question-circle-o\'"></i>\n            </button>\n          </label>\n          <input\n            id="deviceType"\n            class="form-control"\n            name="deviceType"\n            [(ngModel)]="deviceProfile.c8y_Filter.type"\n            placeholder="{{ \'e.g.\' | translate }} c8y_Linux"\n          />\n        </c8y-form-group>\n      </form>\n    </div>\n  </div>\n  <div class="modal-footer">\n    <button title="{{ \'Cancel\' | translate }}" class="btn btn-default" (click)="close()" translate>\n      Cancel\n    </button>\n\n    <button\n      title="{{ \'Continue\' | translate }}"\n      class="btn btn-primary"\n      (click)="create()"\n      [disabled]="createDeviceProfile.form.invalid"\n      translate\n    >\n      Continue\n    </button>\n  </div>\n</div>\n'})],e)}(),R=function(){function e(e,t,i,n,r,s,a){var l=this;this.inventoryService=e,this.translateService=t,this.modalService=i,this.alertService=n,this.bsModalService=r,this.router=s,this.deviceProfileService=a,this.reloading=!1,this.reload=new o.BehaviorSubject(null),this.deviceProfiles$=this.reload.pipe(c.tap((function(){return l.reloading=!0})),c.switchMap((function(){return l.deviceProfileService.getDeviceProfiles()})),c.tap((function(){return l.reloading=!1})))}return e.prototype.ngOnInit=function(){this.loadDeviceProfiles()},e.prototype.loadDeviceProfiles=function(){this.reload.next()},e.prototype.createDeviceProfile=function(){return b(this,void 0,void 0,(function(){var e,t;return P(this,(function(i){switch(i.label){case 0:e=this.bsModalService.show(S,{class:"modal-sm"}).content,i.label=1;case 1:return i.trys.push([1,3,,4]),[4,e.result];case 2:return t=i.sent(),e.close(),this.router.navigateByUrl("/device-profiles/"+t),[3,4];case 3:return i.sent(),[3,4];case 4:return[2]}}))}))},e.prototype.duplicateDeviceProfile=function(e){return b(this,void 0,void 0,(function(){var t,i;return P(this,(function(n){switch(n.label){case 0:return(t=r.cloneDeep(e)).id=null,t.name="Duplicate of "+e.name,[4,this.deviceProfileService.createDeviceProfile(t)];case 1:return i=n.sent().data,this.router.navigateByUrl("/device-profiles/"+i.id),[2]}}))}))},e.prototype.deleteDeviceProfile=function(e){return b(this,void 0,void 0,(function(){var t,n,r,o;return P(this,(function(c){switch(c.label){case 0:t=e.name,n=i.gettext("Delete device profile"),r=this.translateService.instant(i.gettext('You are about to delete a device profile "{{ deviceProfileName }}".'),{deviceProfileName:t}),o=this.translateService.instant(i.gettext("Do you want to proceed?")),c.label=1;case 1:return c.trys.push([1,4,,5]),[4,this.modalService.confirm(n,r+" "+o,i.Status.DANGER,{ok:i.gettext("Delete")})];case 2:return c.sent(),[4,this.delete(e.id)];case 3:return c.sent(),this.reload.next(),[3,5];case 4:return c.sent(),[3,5];case 5:return[2]}}))}))},e.prototype.delete=function(e){return b(this,void 0,void 0,(function(){var t;return P(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this.inventoryService.delete(e)];case 1:return n.sent(),this.alertService.success(i.gettext("Device profile deleted.")),[3,3];case 2:return t=n.sent(),this.alertService.addServerFailure(t),[3,3];case 3:return[2]}}))}))},e.ctorParameters=function(){return[{type:n.InventoryService},{type:m.TranslateService},{type:i.ModalService},{type:i.AlertService},{type:y.BsModalService},{type:a.Router},{type:x}]},e=g([t.Component({selector:"c8y-device-profile-list",template:'<c8y-title>{{ \'Device profiles\' | translate }}</c8y-title>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link"\n    (click)="createDeviceProfile()"\n    title="{{ \'Add device profile\' | translate }}"\n  >\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add device profile\' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]="\'right\'">\n  <button class="btn btn-link"\n    (click)="loadDeviceProfiles()"\n    title="{{ \'Reload\' | translate }}">\n    <i\n      c8yIcon="refresh"\n      [ngClass]="{ \'fa-spin\': reloading }"\n    ></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n\x3c!-- EMPTY STATE --\x3e\n<div class="c8y-empty-state text-left"\n  *ngIf="(deviceProfiles$ | async)?.data.length === 0"\n>\n  <h1 class="c8y-icon-duocolor"\n    [c8yIcon]="\'c8y-device-profile\'"\n  ></h1>\n  <h3 translate>\n    No device profiles available.\n  </h3>\n  <p translate>\n    Add a new device profile by clicking below.\n  </p>\n  <p>\n    <button class="btn btn-primary"\n      title="{{ \'Add device profile\' | translate }}"\n      (click)="createDeviceProfile()"\n      translate\n    >\n      Add device profile\n    </button>\n  </p>\n</div>\n\n\x3c!-- DEVICE PROFILES LIST --\x3e\n<c8y-list-group class="m-b-24"\n  [ngClass]="{\'dd-low\': (deviceProfiles$ | async)?.data.length < 10 }"\n>\n  <c8y-li class="page-sticky-header c8y-list__item--empty-actions hidden-xs"\n    *ngIf="(deviceProfiles$ | async)?.data.length > 0"\n  >\n    <c8y-li-icon>\n      <i class="fa"></i>\n    </c8y-li-icon>\n    <c8y-li-body class="content-flex-50">\n      <div class="col-6">\n        {{\'Device profile\' | translate}}\n      </div>\n      <div class="col-6">\n        {{\'Device type\' | translate}}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-li *c8yFor="let deviceProfile of deviceProfiles$">\n    <c8y-li-icon>\n      <i c8yIcon="c8y-device-profile"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class="content-flex-50">\n      <div class="col-6" \n        title="{{ deviceProfile.name }}"\n      >\n        <button class="btn-clean"\n          routerLink="/device-profiles/{{ deviceProfile.id }}"\n          style="max-width: inherit;"\n        >\n          <span class="text-truncate">\n            {{ deviceProfile.name }}\n          </span>\n        </button>\n      </div>\n      <div class="col-6"\n        title="{{ deviceProfile.c8y_Filter?.type || \'-\' }}"\n      >\n        <span class="text-label-small m-r-4 visible-xs" translate>\n            Device type\n        </span>\n        <span class="text-truncate"\n          *ngIf="deviceProfile.c8y_Filter?.type; else emptyText"\n        >\n          {{ deviceProfile.c8y_Filter?.type}}\n      </span>\n      </div>\n      <ng-template #emptyText>\n        <small class="text-muted">\n          <em>\n            {{ \'Undefined\' | translate }}\n          </em>\n        </small>\n      </ng-template>\n    </c8y-li-body>\n\n    <c8y-li-action\n      routerLink="/device-profiles/{{ deviceProfile.id }}"\n      icon="pencil"\n      label="{{ \'Edit\' | translate }}"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)="duplicateDeviceProfile(deviceProfile)"\n      icon="copy"\n      label="{{ \'Duplicate\' | translate }}"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)="deleteDeviceProfile(deviceProfile)"\n      icon="trash"\n      label="{{ \'Delete\' | translate }}"\n    >\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n'})],e)}(),T=function(){function i(){}return i.prototype.canActivate=function(t,i){var n=t.data.contextData||t.parent.data.contextData;return!!n&&this.hasSupportedOperation(n,e.DeviceProfileOperation.APPLY_PROFILE)},i.prototype.hasSupportedOperation=function(e,t){var i=e.c8y_SupportedOperations||[];return!!i&&!!i.find((function(e){return e===t}))},i=g([t.Injectable()],i)}(),O=function(){function e(e,t,i,n,r){this.deviceRealtime=e,this.deviceProfileService=t,this.route=i,this.realtime=n,this.alertService=r,this.firmwareItems=[],this.softwareItems=[],this.configurationItems=[],this.pattern="",this.reloading=!1}return e.prototype.ngOnInit=function(){return b(this,void 0,void 0,(function(){return P(this,(function(e){return this.device=this.route.snapshot.parent.data.contextData,this.getDeviceProfilesAndUpdateProfileItems(),this.subscribeToManagedObjects(),[2]}))}))},e.prototype.getDeviceProfilesAndUpdateProfileItems=function(){return b(this,void 0,void 0,(function(){var e,t,i;return P(this,(function(n){switch(n.label){case 0:return this.reloading=!0,e=this,[4,this.deviceProfileService.getDeviceProfilesByDeviceType(this.device.type)];case 1:return e.deviceProfiles=n.sent(),this.device.c8y_Profile&&(t=this.device.c8y_Profile.profileId,this.selectedProfile=this.deviceProfiles.data.find((function(e){return e.id===t}))),this.updateProfileItems(this.device,this.selectedProfile),i=this,[4,this.deviceProfileService.getProfileOperation(this.device.id)];case 2:return i.operation=n.sent(),this.subscribeToOperations(),this.reloading=!1,[2]}}))}))},e.prototype.selectProfile=function(e){this.selectedProfile=e,this.updateProfileItems(this.device,this.selectedProfile)},e.prototype.createOperation=function(){return b(this,void 0,void 0,(function(){var e;return P(this,(function(t){switch(t.label){case 0:return e=this,[4,this.deviceProfileService.createProfileOperation(this.device,this.selectedProfile)];case 1:return e.operation=t.sent(),[2]}}))}))},e.prototype.setPipe=function(e){this.pattern=e,this.filterPipe=o.pipe(c.map((function(t){return t.filter((function(t){return t.name&&t.name.toLowerCase().indexOf(e.toLowerCase())>-1}))})))},e.prototype.ngOnDestroy=function(){this.operationsSubscription.unsubscribe(),this.moOnUpdateSubscription.unsubscribe(),this.moOnDeleteSubscription.unsubscribe()},e.prototype.updateProfileItems=function(e,t){this.firmwareItems=this.deviceProfileService.getFirmwareItems(e,t),this.softwareItems=this.deviceProfileService.getSoftwareItems(e,t),this.configurationItems=this.deviceProfileService.getConfigurationItems(e,t)},e.prototype.subscribeToManagedObjects=function(){var e=this;this.moOnUpdateSubscription=this.deviceRealtime.onUpdate$(this.device.id).subscribe((function(t){e.updateProfileItems(t,e.selectedProfile)})),this.moOnDeleteSubscription=this.deviceRealtime.onDelete$(this.device.id).subscribe((function(){e.alertService.danger(i.gettext('This device has just been deleted. You will be redirected to "All devices" page now.')),window.location.href="#/device"}))},e.prototype.subscribeToOperations=function(){var e=this,t="/operations/"+this.device.id;this.operationsSubscription=this.realtime.observable(t).pipe(c.filter((function(e){return e.data.c8y_DeviceProfile}))).subscribe((function(t){var i=t.data;e.operation=i}))},e.ctorParameters=function(){return[{type:i.ManagedObjectRealtimeService},{type:x},{type:a.ActivatedRoute},{type:n.Realtime},{type:i.AlertService}]},e=g([t.Component({selector:"c8y-device-tab-profile",template:'<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="getDeviceProfilesAndUpdateProfileItems()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item [placement]="\'right\'">\n  <c8y-realtime-btn [service]="deviceRealtime"></c8y-realtime-btn>\n</c8y-action-bar-item>\n\n<div class="card card--grid--fullpage card--grid--fullpage card--grid grid__row--2-10--md">\n  <div class="card--grid grid__col--6-6--md">\n    \x3c!-- AVAILABLE PROFILES --\x3e\n    <div class="bg-white">\n      <div class="card-header separator">\n        <h4 class="card-title" translate>Device profile</h4>\n      </div>\n      <div class="p-16">\n        <form #deviceProfileForm="ngForm">\n          <div class="input-group">\n            <c8y-typeahead\n              class="flex-grow"\n              name="selectProfile"\n              [(ngModel)]="selectedProfile"\n              placeholder="{{ \'Select device profile\' | translate }}"\n              (onSearch)="setPipe($event)"\n              [allowFreeEntries]="false"\n            >\n              <c8y-li\n                *c8yFor="let profile of deviceProfiles; pipe: filterPipe"\n                class="p-l-8 p-r-8 c8y-list__item--link"\n                (click)="selectProfile(profile); setPipe(\'\')"\n              >\n                <c8y-highlight\n                  [text]="profile.name || \'&#45;&#45;\'"\n                  [pattern]="pattern"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                (click)="createOperation()"\n                title="{{ \'Assign device profile\' | translate }}"\n                [disabled]="!selectedProfile?.id"\n                translate\n              >\n                Assign device profile\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    \x3c!-- INSTALL PROFILE OPERATION --\x3e\n    <div class="bg-gray-white">\n      <div class="card-header separator">\n        <h4 class="card-title" translate>Currently installed</h4>\n      </div>\n      <div class="card-block">\n        <c8y-single-operation [operation]="operation"></c8y-single-operation>\n      </div>\n    </div>\n  </div>\n  <div class="card--grid__inner-scroll flex-col no-align-items">\n    <div class="d-contents">\n      \x3c!-- FIRMWARE --\x3e\n      <c8y-device-tab-profile-detail\n        [sectionTitle]="\'Firmware\' | translate"\n        [sectionIcon]="\'c8y-firmware\'"\n        [emptyStateText]="\'No firmware to display.\' | translate"\n        [emptyStateDetails]="\'No firmware assigned.\' | translate"\n        [isProfileSelected]="!!selectedProfile"\n        [items]="firmwareItems"\n        [isEmpty]="!selectedProfile?.c8y_DeviceProfile?.firmware?.name"\n        class="d-contents"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    <div class="d-contents">\n      \x3c!-- SOFTWARE --\x3e\n      <c8y-device-tab-profile-detail\n        [sectionTitle]="\'Software\' | translate"\n        [sectionIcon]="\'c8y-tools\'"\n        [emptyStateText]="\'No software to display.\' | translate"\n        [emptyStateDetails]="\'No software assigned.\' | translate"\n        [isProfileSelected]="!!selectedProfile"\n        [items]="softwareItems"\n        [isEmpty]="\n          !selectedProfile?.c8y_DeviceProfile?.software ||\n          selectedProfile?.c8y_DeviceProfile?.software?.length === 0\n        "\n        class="d-contents"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    <div class="d-contents">\n      \x3c!-- CONFIGURATION --\x3e\n      <c8y-device-tab-profile-detail\n        [sectionTitle]="\'Configuration\' | translate"\n        [sectionIcon]="\'gears\'"\n        [emptyStateText]="\'No configuration to display\' | translate"\n        [emptyStateDetails]="\'No configuration assigned\' | translate"\n        [isProfileSelected]="!!selectedProfile"\n        [items]="configurationItems"\n        [isEmpty]="\n          !selectedProfile?.c8y_DeviceProfile?.configuration ||\n          selectedProfile?.c8y_DeviceProfile?.configuration?.length === 0\n        "\n        [showTextLabel]="false"\n        class="d-contents"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    \x3c!-- fill in the remanining vertical space when empty --\x3e\n    <div class="card--grid grid__col--6-6--md flex-grow">\n      <div class="bg-white"></div>\n      <div class="bg-gray-white"></div>\n    </div>\n  </div>\n</div>\n',providers:[i.ManagedObjectRealtimeService]})],e)}(),E=function(){function e(){this.emptyStateText="",this.emptyStateDetails="",this.showTextLabel=!0}return g([t.Input()],e.prototype,"sectionTitle",void 0),g([t.Input()],e.prototype,"sectionIcon",void 0),g([t.Input()],e.prototype,"emptyStateText",void 0),g([t.Input()],e.prototype,"emptyStateDetails",void 0),g([t.Input()],e.prototype,"isProfileSelected",void 0),g([t.Input()],e.prototype,"isEmpty",void 0),g([t.Input()],e.prototype,"items",void 0),g([t.Input()],e.prototype,"showTextLabel",void 0),e=g([t.Component({selector:"c8y-device-tab-profile-detail",template:'<div class="card--grid grid__col--6-6--md">\n  <div class="bg-white card-block sticky-top">\n    <h5 class="legend form-block">{{ sectionTitle | translate }}</h5>\n  </div>\n  <div class="bg-gray-white  card-block sticky-top hidden-xs hidden-sm">\n    <h5 class="legend form-block">{{ sectionTitle | translate }}</h5>\n  </div>\n  <div class="bg-white p-l-16 p-r-16">\n    <hr class="m-0" />\n  </div>\n  <div class="bg-gray-white p-l-16 p-r-16">\n    <hr class="m-0" />\n  </div>\n  <div class="d-contents" *ngIf="!isProfileSelected || isEmpty">\n    <div class="p-l-16 p-r-16">\n      <div class="c8y-empty-state text-left">\n        <h1 [c8yIcon]="sectionIcon" class="c8y-icon-duocolor"></h1>\n        <p>\n          <span>{{ emptyStateText | translate }}</span\n          ><br />\n          <small *ngIf="isProfileSelected; else noItems">\n            {{ emptyStateDetails | translate }}\n          </small>\n          <ng-template #noItems>\n            <small translate>No device profile selected</small>\n          </ng-template>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class="bg-gray-white" *ngIf="items.length === 0"></div>\n  <c8y-device-profile-item-list\n    *ngIf="items.length > 0"\n    [icon]="sectionIcon"\n    [comparisonResults]="items"\n    [showProfileItems]="isProfileSelected && !isEmpty"\n    [showTextLabel]="showTextLabel"\n    class="d-contents"\n  ></c8y-device-profile-item-list>\n  <div class="bg-white p-t-24" *ngIf="isProfileSelected && !isEmpty"></div>\n  <div class="bg-gray-white p-t-24" *ngIf="isProfileSelected && !isEmpty"></div>\n</div>\n'})],e)}(),F=function(){function e(){}return g([t.Input()],e.prototype,"icon",void 0),g([t.Input()],e.prototype,"comparisonResults",void 0),g([t.Input()],e.prototype,"showProfileItems",void 0),g([t.Input()],e.prototype,"showTextLabel",void 0),e=g([t.Component({selector:"c8y-device-profile-item-list",template:'<div *ngFor="let comparisonResult of comparisonResults" class="d-contents">\n  <div class="p-l-16 p-r-16" *ngIf="showProfileItems">\n    <div class="c8y-list__item v-fit">\n      <div class="c8y-list__item__block" *ngIf="comparisonResult.profile">\n        <div class="c8y-list__item__icon">\n          <i [c8yIcon]="icon"></i>\n        </div>\n        <div class="c8y-list__item__body">\n          <ng-container *ngTemplateOutlet="comparisonResultInfo;context:comparisonResult.profile"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="p-l-16 p-r-16 bg-gray-white">\n    <div\n      class="c8y-list__item bg-gray-white"\n      [ngClass]="{\n        \'has-warning\': !!comparisonResult.comparisonAlert\n      }"\n    >\n      <div class="c8y-list__item__block">\n        <div class="c8y-list__item__icon">\n          <i [c8yIcon]="icon"></i>\n        </div>\n        <div class="c8y-list__item__body">\n          <ng-container *ngTemplateOutlet="comparisonResultInfo;context:comparisonResult.device ? comparisonResult.device : comparisonResult.profile"></ng-container>\n          <c8y-messages\n            class="m-0"\n            style="margin-bottom: calc(var(--margin-base, 8px) * -1);"\n            *ngIf="comparisonResult.comparisonAlert"\n          >\n            <c8y-message>\n              {{ comparisonResult.comparisonAlert | translate }}\n            </c8y-message>\n          </c8y-messages>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="p-l-16 p-r-16 bg-white hidden-xs hidden-sm" *ngIf="!showProfileItems"></div>\n</div>\n\n<ng-template #comparisonResultInfo let-name="itemName" let-details="itemDetails">\n <div class="content-flex-40">\n   <div class="col-7">\n    <span class="text-truncate">\n      <span class="text-label-small m-r-4">Name</span>\n       <span title="{{ name }}">\n           {{ name }}\n        </span>\n     </span>\n   </div>\n  <div class="col-5">\n    <span *ngIf="showTextLabel && details; else showInfoLabel" class="text-truncate">\n      <span translate class="text-label-small m-r-4">Version</span>\n      <span title="{{details}}">{{ details }}</span>\n    </span>\n     <ng-template #showInfoLabel>\n        <span class="label label-info">{{ details }}</span>\n      </ng-template>\n    </div>\n  </div>\n</ng-template>\n'})],e)}(),A=[{path:"device-profiles/:id",component:D},{path:"device-profiles",component:R}],N=[{context:i.ViewContext.Device,path:"device-profile",component:O,label:i.gettext("Device profile"),icon:"c8y-device-profile",canActivate:[T]}],C=function(){function e(){}return e=g([t.NgModule({declarations:[D,R,S,I,O,E,F],exports:[],imports:[i.CoreModule,i.CommonModule,s.RepositoryModule,a.RouterModule.forChild(A),l.BsDropdownModule.forRoot(),p.TooltipModule,v.ReactiveFormsModule,f.ButtonsModule,d.PopoverModule,h.SingleOperationDetailsModule],entryComponents:[S,I,O],providers:[{provide:i.HOOK_NAVIGATOR_NODES,useClass:_,multi:!0},{provide:i.HOOK_ONCE_ROUTE,useValue:N,multi:!0},x,T]})],e)}();e.AddDeviceProfileComponent=S,e.DeviceProfileComponent=D,e.DeviceProfileGuard=T,e.DeviceProfileItemListComponent=F,e.DeviceProfileListComponent=R,e.DeviceProfileModule=C,e.DeviceProfileNavigationFactory=_,e.DeviceProfileService=x,e.DeviceTabProfileComponent=O,e.DeviceTabProfileDetailComponent=E,e.SelectConfigurationModalComponent=I,e.ɵ0=N,e.ɵa=O,e.ɵb=E,e.ɵc=F,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-device-profile.umd.min.js.map