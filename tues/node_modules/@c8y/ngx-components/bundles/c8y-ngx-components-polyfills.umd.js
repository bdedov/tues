(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@c8y/client')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/polyfills', ['exports', '@c8y/client'], factory) :
    (global = global || self, factory((global.c8y = global.c8y || {}, global.c8y['ngx-components'] = global.c8y['ngx-components'] || {}, global.c8y['ngx-components'].polyfills = {}), global.client));
}(this, (function (exports, client) { 'use strict';

    function addPolyfills() {
        client.polyfillFetch();
        // https://stackoverflow.com/questions/46715190
        if (!Element.prototype.matches) {
            Element.prototype.matches =
                Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
        }
        if (!Element.prototype.closest) {
            Element.prototype.closest = function (s) {
                var el = this;
                do {
                    if (el.matches(s)) {
                        return el;
                    }
                    el = el.parentElement || el.parentNode;
                } while (el !== null && el.nodeType === 1);
                return null;
            };
        }
    }

    exports.addPolyfills = addPolyfills;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=c8y-ngx-components-polyfills.umd.js.map
