{"version":3,"file":"c8y-ngx-components-operations.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/operations/details/operation-details.component.ts","ng://@c8y/ngx-components/operations/bulk/custom-step.directive.ts","ng://@c8y/ngx-components/operations/bulk/creation/bulk-operation-stepper.component.ts","ng://@c8y/ngx-components/operations/bulk/base-stepper.component.ts","ng://@c8y/ngx-components/operations/bulk/create-from-single/bulk-operation-from-single.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/bulk-operations-stepper-container.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/device-profile-update-stepper/confirm-device-profile-selection-step.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/device-profile-update-stepper/select-device-profile-step.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/firmware-update-stepper/select-firmware.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/firmware-update-stepper/version-or-patch.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/software-update-stepper/confirm-software-selection-step.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/software-update-stepper/select-software-step.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/stepper-bulk-type-configuration.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/stepper-bulk-type-device-profile.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/stepper-bulk-type-firmware.component.ts","ng://@c8y/ngx-components/operations/bulk/creation/stepper-bulk-type-software.component.ts","ng://@c8y/ngx-components/operations/device-selector/device-selector.component.ts","ng://@c8y/ngx-components/operations/factories/tabs.factory.ts","ng://@c8y/ngx-components/operations/operations.module.ts","ng://@c8y/ngx-components/operations/bulk-operation-scheduler/operation-scheduler.component.ts","ng://@c8y/ngx-components/operations/bulk-operation-scheduler/bulk-operation-scheduler.module.ts","ng://@c8y/ngx-components/operations/operation-summary/operation-summary.component.ts","ng://@c8y/ngx-components/operations/operation-summary/operation-summary.module.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation-modal.component.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation-details.service.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation.component.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation-list-item.component.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation-details.component.ts","ng://@c8y/ngx-components/operations/single-operation-details/single-operation-details.module.ts","ng://@c8y/ngx-components/operations/status-filter/status-filter.component.ts","ng://@c8y/ngx-components/operations/status-filter/status-filter.module.ts","ng://@c8y/ngx-components/operations/bulk-operations-service/bulk-operation.model.ts","ng://@c8y/ngx-components/operations/bulk-operations-service/bulk-operations.service.ts","ng://@c8y/ngx-components/operations/bulk-operations-service/bulk-operations-service.module.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-wrapper.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-details.service.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/modals/bulk-operations-modal.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/modals/bulk-operation-modals.service.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/modals/bulk-operations-reschedule-modal.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-list-item.model.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-list-item.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operations-list.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-details-tabs.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operation-details.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/single-operation-item.model.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/single-operations-list.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/single-operation-item.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/type-list/bulk-operation-type-list.component.ts","ng://@c8y/ngx-components/operations/bulk-operations-list/bulk-operations-list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormGroupConfig, gettext } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport {\n  BulkOperationType,\n  OperationDetails\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-operation-details',\n  templateUrl: 'operation-details.component.html'\n})\nexport class OperationDetailsComponent implements OnInit {\n  @Input()\n  set bulkOperationType(bulkOperationType: BulkOperationType) {\n    this.titlePlaceholder = get(this.placeholders[bulkOperationType], 'title');\n    this.descriptionPlaceholder = get(this.placeholders[bulkOperationType], 'description');\n  }\n\n  titlePlaceholder: string = gettext('e.g. Reset factory settings');\n  descriptionPlaceholder: string = gettext(\n    'e.g. Reset factory settings of all devices of model XYZ'\n  );\n  fgOperationDescription: FormGroup;\n\n  private placeholders: { [key in BulkOperationType]: { title: string; description: string } } = {\n    [BulkOperationType.SOFTWARE]: {\n      title: gettext('e.g. Cloud connectivity software'),\n      description: gettext(\n        'e.g. Cloud connectivity software applied to devices with type c8y_Linux'\n      )\n    },\n    [BulkOperationType.FIRMWARE]: {\n      title: gettext('e.g. Firmware for hardware revision b'),\n      description: gettext(\n        'e.g. Firmware for hardware revision b applied to devices with type c8y_Linux'\n      )\n    },\n    [BulkOperationType.CONFIGURATION]: {\n      title: gettext('e.g. Host configuration c8y_Linux'),\n      description: gettext('e.g. Host configuration applied to devices with type c8y_Linux')\n    },\n    [BulkOperationType.DEVICE_PROFILE]: {\n      title: gettext('e.g. Device profile for c8y_Linux devices'),\n      description: gettext('e.g. Device profile applied to devices with type c8y_Linux')\n    }\n  };\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    const config: FormGroupConfig<OperationDetails> = {\n      description: ['', Validators.required],\n      note: [''],\n      schedule: []\n    };\n\n    this.fgOperationDescription = this.formBuilder.group(config);\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Directive, Input, TemplateRef } from '@angular/core';\nimport { C8yStepper } from '@c8y/ngx-components';\n\n@Directive({ selector: '[customStep]' })\nexport class CustomStep {\n  @Input('customStep') label: string;\n  @Input('customStepCompleted') completed: string;\n  @Input('customStepButtonsDisabled') buttonsDisabled: boolean = false;\n  constructor(public templateRef: TemplateRef<any>) {}\n  @Input('customStepOnNext') onNext: (event: { stepper: C8yStepper; step: CdkStep }) => void = ({\n    stepper,\n    step\n  }) => {\n    // steps without own `onNext` handler, e.g. preview steps need to mark themselves as `completed`,\n    // otherwise stepper will not allow to move forth from them as soon as the user navigates back\n    // and the `c8y-stepper-buttons` component marks the step as incomplete.\n    step.completed = true;\n    stepper.next();\n  };\n}\n","import { CdkStep, StepperSelectionEvent } from '@angular/cdk/stepper';\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AlertService, C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { OperationDetailsComponent } from '../../details/operation-details.component';\nimport { OperationSchedule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { CustomStep } from '../custom-step.directive';\nimport {\n  OperationDetails,\n  BulkOperationType,\n  BulkOperationsService\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operation-stepper',\n  templateUrl: 'bulk-operation-stepper.component.html'\n})\nexport class BulkOperationStepper implements OnDestroy {\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter();\n  @ContentChildren(CustomStep) customSteps: QueryList<CustomStep>;\n  @ViewChild(C8yStepper, { static: false })\n  stepper: C8yStepper;\n  @ViewChild(OperationDetailsComponent, { static: false })\n  operationDetailsComponent: OperationDetailsComponent;\n\n  steps: CustomStep[] = [];\n  showStepper: boolean = false;\n  showButtons: boolean = false;\n  pendingStatus: boolean;\n  stepperButtonsLabels = { custom: gettext('Schedule bulk operation') };\n  deviceTypes$: Observable<string[]>;\n  deviceQueryString: string;\n  bulkOperationType: BulkOperationType;\n  scheduleData: OperationSchedule;\n  operationDetailsForm: FormGroup;\n  operationDetails: OperationDetails;\n  retrieveOperationDetails: () => OperationDetails | Promise<OperationDetails>;\n\n  private deviceTypesSubject$: Subject<string[]> = new Subject();\n  private endSubscriptions: Subject<void> = new Subject();\n\n  constructor(\n    private bulkOperationService: BulkOperationsService,\n    private modal: ModalService,\n    private alert: AlertService\n  ) {\n    this.deviceTypes$ = this.deviceTypesSubject$.asObservable();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      // wait for the next event loop turn as `steps` has already been checked in this CD cycle\n      this.steps = this.customSteps.toArray();\n      this.showStepper = true;\n      setTimeout(() => {\n        // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered\n        this.showButtons = true;\n        if (this.stepper) {\n          this.stepper.selectionChange.pipe(takeUntil(this.endSubscriptions)).subscribe(event => {\n            this.selectionChange.next(event);\n          });\n          this.operationDetailsForm = this.operationDetailsComponent.fgOperationDescription;\n        }\n      });\n    });\n  }\n\n  changeDeviceTypes(deviceTypes: string | string[]) {\n    if (deviceTypes) {\n      this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);\n    } else {\n      this.deviceTypesSubject$.next([]);\n    }\n  }\n\n  async confirmDeviceSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    if (!this.deviceQueryString) {\n      try {\n        await this.modal.confirm(\n          gettext('All devices selected'),\n          gettext(\n            'You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'\n          ),\n          Status.WARNING,\n          { ok: gettext('Schedule for all devices'), cancel: gettext('Cancel and select devices') }\n        );\n        $event.step.completed = true;\n        $event.stepper.next();\n        this.operationDetails = this.retrieveOperationDetails\n          ? await this.retrieveOperationDetails()\n          : undefined;\n      } catch (ex) {\n        // Intentionally empty\n      }\n    } else {\n      $event.step.completed = true;\n      $event.stepper.next();\n      this.operationDetails = this.retrieveOperationDetails\n        ? await this.retrieveOperationDetails()\n        : undefined;\n    }\n\n    this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(\n      get(this.operationDetails, 'prototype')\n    );\n    if (\n      this.operationDetailsForm &&\n      get(this.operationDetailsForm, 'controls.description.pristine') &&\n      this.operationDetails\n    ) {\n      this.operationDetailsForm.patchValue({\n        description: get(this.operationDetails, 'prototype.description')\n      });\n    }\n  }\n\n  cancel() {\n    this.close();\n  }\n\n  async scheduleBulkOperation() {\n    this.pendingStatus = true;\n\n    try {\n      this.operationDetails.prototype.description = get(\n        this.operationDetailsForm,\n        'controls.description.value'\n      );\n      this.operationDetails.note = get(this.operationDetailsForm, 'controls.note.value');\n      this.operationDetails.schedule = get(this.operationDetailsForm, 'controls.schedule.value');\n\n      await this.bulkOperationService.scheduleBulkOperation(\n        this.deviceQueryString,\n        this.operationDetails\n      );\n      this.alert.success(gettext('New bulk operation scheduled.'));\n      this.close();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n\n    this.pendingStatus = false;\n  }\n\n  ngOnDestroy(): void {\n    this.endSubscriptions.next();\n    this.endSubscriptions.complete();\n  }\n\n  private close() {\n    this.stepper.reset();\n    this.bulkOperationService.returnToBulkOperationOverview();\n  }\n}\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BulkOperationStepper } from './creation/bulk-operation-stepper.component';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\n\nexport abstract class BaseStepperComponent implements OnInit, OnDestroy {\n  @ViewChild(BulkOperationStepper, { static: true }) operationStepper: BulkOperationStepper;\n\n  set deviceTypes(deviceTypes: string | string[]) {\n    if (this.operationStepper) {\n      this.operationStepper.changeDeviceTypes(deviceTypes);\n    }\n  }\n\n  /**\n   * A map holding step data. The order of properties need to match the order of\n   * the steps they hold data for as the index of the property is used to clear\n   * step data when navigating forth after changing data at an earlier step.\n   */\n  stepData: { [key: string]: IManagedObject } = {};\n\n  private endSubscriptions: Subject<void> = new Subject();\n\n  ngOnInit(): void {\n    this.operationStepper.retrieveOperationDetails = this.retrieveOperationPrototype.bind(this);\n\n    this.operationStepper.selectionChange\n      .pipe(takeUntil(this.endSubscriptions))\n      .subscribe(this.onSelectionChange.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.endSubscriptions.next();\n    this.endSubscriptions.complete();\n  }\n\n  protected abstract retrieveOperationPrototype(): OperationDetails | Promise<OperationDetails>;\n\n  protected onSelectionChange(event: StepperSelectionEvent) {\n    const { selectedIndex, previouslySelectedIndex } = event;\n    if (\n      selectedIndex > previouslySelectedIndex &&\n      selectedIndex < Object.keys(this.stepData).length\n    ) {\n      // TODO clear step data only if previous step is \"dirty\"\n      this.stepData[this.getStepDataKeyByIndex(selectedIndex)] = undefined;\n    }\n  }\n\n  private getStepDataKeyByIndex(index: number): string {\n    return Object.keys(this.stepData)[index];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IOperation } from '@c8y/client';\nimport { get } from 'lodash-es';\nimport { BaseStepperComponent } from '../base-stepper.component';\nimport {\n  BulkOperationsService,\n  OperationDetails\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'bulk-operation-from-single',\n  templateUrl: 'bulk-operation-from-single.component.html'\n})\nexport class BulkOperationFromSingleComponent extends BaseStepperComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private bulkOperationService: BulkOperationsService\n  ) {\n    super();\n  }\n\n  protected async retrieveOperationPrototype(): Promise<OperationDetails> {\n    const prototype: IOperation = (await this.bulkOperationService.getOperation(\n      this.activatedRoute.snapshot.params.operationId\n    )).data;\n\n    return {\n      description: get(prototype, 'description'),\n      prototype\n    };\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewContainerRef,\n  ViewChild,\n  ComponentFactoryResolver,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'bulk-operations-stepper-container',\n  templateUrl: 'bulk-operations-stepper-container.component.html'\n})\nexport class BulkOperationsStepperContainerComponent implements OnInit {\n  @ViewChild('container', { static: false, read: ViewContainerRef }) container;\n  bulkOperationType: string;\n\n  private component: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private bulkOpsService: BulkOperationsService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      if (params && params.type) {\n        this.bulkOperationType = params.type;\n\n        this.component = this.bulkOpsService\n          .getBulkTypes()\n          .find(element => element.path.includes(this.bulkOperationType)).component;\n\n        this.changeDetector.detectChanges();\n        this.createComponent(this.component);\n      }\n    });\n  }\n\n  private createComponent(component) {\n    if (component) {\n      const factory = this.resolver.resolveComponentFactory(component);\n      this.container.createComponent(factory);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { get } from 'lodash-es';\nimport { IManagedObject } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-confirm-device-profile-selection-step',\n  templateUrl: 'confirm-device-profile-selection-step.component.html'\n})\nexport class ConfirmDeviceProfileSelectionStepComponent {\n  @Input() selectedDeviceProfile: IManagedObject;\n  readonly DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');\n\n  constructor(\n    private translate: TranslateService\n  ) {}\n\n  get softwares() {\n    return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'software'], []);\n  }\n\n  get configurations() {\n    return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'configuration'], []);\n  }\n\n  getDeviceTypeTitle(deviceProfile: IManagedObject): string {\n    return get(\n      deviceProfile,\n      'c8y_Filter.type',\n      this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));\n\n  }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { Observable, BehaviorSubject, combineLatest, Subscription, from } from 'rxjs';\nimport { switchMap, shareReplay, debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { property, isEqual, uniqWith, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DeviceProfileService } from '@c8y/ngx-components/device-profile';\n\n@Component({\n  selector: 'c8y-select-device-profile-step',\n  templateUrl: 'select-device-profile-step.component.html'\n})\nexport class SelectDeviceProfileStepComponent {\n  @Output() deviceProfile: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceType$: BehaviorSubject<string> = new BehaviorSubject('');\n  readonly DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');\n  deviceTypes = [];\n  selectedDeviceType = { name: '' };\n  deviceProfile$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.deviceType$\n  ).pipe(\n    switchMap(([name, deviceType]) => this.getDeviceProfiles(name, deviceType)),\n    shareReplay(1)\n  );\n  private deviceTypeSubscription: Subscription;\n\n  constructor(\n    private deviceProfileService: DeviceProfileService,\n    private translate: TranslateService\n  ) {\n    this.loadDeviceTypes();\n  }\n\n  loadDeviceTypes() {\n    this.deviceTypeSubscription = this.deviceType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { 'c8y_Filter.type': `*${searchStr}*` };\n          return from(this.deviceProfileService.getDeviceProfiles(query));\n        })\n      )\n      .subscribe( ({ data }) => {\n        this.deviceTypes = uniqWith(\n          data.map(val => ({ name: val.c8y_Filter.type })).filter(val => val.name),\n          isEqual\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    this.deviceTypeSubscription.unsubscribe();\n  }\n\n  selectDeviceProfile(deviceProfile: IManagedObject) {\n    this.deviceProfile.emit(deviceProfile);\n  }\n\n  getDeviceTypeTitle(deviceProfile: IManagedObject): string {\n    return get(\n      deviceProfile,\n      'c8y_Filter.type',\n      this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));\n  }\n\n  private getDeviceProfiles(name?: string, deviceType?: string) {\n    const query: any = deviceType ? { 'c8y_Filter.type': deviceType } : {};\n    if (name) {\n      query.name = `*${name}*`;\n    }\n    return this.deviceProfileService.getDeviceProfiles(query);\n  }\n\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap, shareReplay } from 'rxjs/operators';\nimport { memoize } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { gettext } from '@c8y/ngx-components';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { property, get } from 'lodash-es';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-select-firmware-step',\n  templateUrl: 'select-firmware.component.html'\n})\nexport class SelectFirmwareComponent {\n  @Input() selected: IManagedObject;\n  @Output() firmware: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n  elementCount: number = 0;\n  DD_LOW_COUNT: number = 10;\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  firmwares$: Observable<IResultList<IManagedObject>> = this.textFilter$\n    .pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    )\n    .pipe(\n      switchMap(text => this.getFirmwares(text)),\n      tap(resp => {\n        this.elementCount = resp.data ? resp.data.length : 0;\n      }),\n      shareReplay(1)\n    );\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n  readonly DESCRIPTION_NOT_AVAILABLE: string = gettext('No description available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bulkOpsService: BulkOperationsService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.DD_LOW_COUNT = this.bulkOpsService.DD_LOW_COUNT;\n  }\n\n  selectFirmware(selected: boolean, fw: IManagedObject) {\n    if (selected) {\n      this.firmware.emit(fw);\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDescriptionTitle(firmware: IManagedObject): string {\n    return get(firmware, 'description', this.translate.instant(this.DESCRIPTION_NOT_AVAILABLE));\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(firmware, 'c8y_Filter.type', this.translate.instant(this.DEVICE_TYPE_NOT_AVAILABLE));\n  }\n\n  private getFirmwares(partialName?: string) {\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { partialName });\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  shareReplay,\n  map,\n  switchMap,\n  distinctUntilKeyChanged,\n  distinctUntilChanged,\n  catchError,\n  tap\n} from 'rxjs/operators';\nimport { IManagedObject, IResultList, InventoryService } from '@c8y/client';\nimport { memoize } from '@c8y/ngx-components';\nimport { RepositoryService, FirmwareBinary } from '@c8y/ngx-components/repository';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { property } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-version-or-patch-step',\n  templateUrl: 'version-or-patch.component.html'\n})\nexport class VersionOrPatchComponent {\n  @Input() selected: IManagedObject;\n  @Output() versionOrPatch: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n\n  elementCount: number = 0;\n  DD_LOW_COUNT: number = 10;\n\n  firmware$: Observable<IManagedObject> = this.bulkOpsService.firmwareId.pipe(\n    distinctUntilChanged(),\n    switchMap(id => this.inventoryService.detail$(id).pipe(catchError(error => of(error)))),\n    shareReplay(1)\n  );\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = this.firmware$.pipe(\n    distinctUntilKeyChanged('id'),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    tap(resp => {\n      this.elementCount = resp.data ? resp.data.length : 0;\n    }),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  expanded: { [id: string]: boolean } = {};\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private inventoryService: InventoryService,\n    private bulkOpsService: BulkOperationsService\n  ) {\n    this.DD_LOW_COUNT = this.bulkOpsService.DD_LOW_COUNT;\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getBaseVersionAndPatches$(baseVersion) {\n    return this.firmware$.pipe(\n      distinctUntilKeyChanged('id'),\n      switchMap(firmware =>\n        this.repositoryService.listBaseVersionAndPatches(firmware, baseVersion)\n      ),\n      shareReplay(1)\n    );\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return this.firmware$.pipe(\n      distinctUntilKeyChanged('id'),\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  selectVersionOrPatch(selected: boolean, versionOrPatch: IManagedObject) {\n    if (selected) {\n      this.versionOrPatch.emit(versionOrPatch);\n    }\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { has, uniq } from 'lodash-es';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-confirm-software-selection-step',\n  templateUrl: 'confirm-software-selection-step.component.html'\n})\nexport class ConfirmSoftwareSelectionStepComponent implements OnChanges {\n  @Input() selectedItems: ISelectedSoftware[];\n  title: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedItems) {\n      const deviceTypes: string[] = this.deviceTypes;\n      this.title = deviceTypes && deviceTypes.length ? deviceTypes.join(', ') : gettext('Undefined`device type`');\n    }\n  }\n\n  get selectedToInstall() {\n    return this.selectedItems.filter(software => software.action === 'install');\n  }\n\n  get selectedToDelete() {\n    return this.selectedItems.filter(software => software.action === 'delete');\n  }\n\n  get deviceTypes() {\n    return uniq(\n      this.selectedItems\n        .filter(val => has(val, ['software', 'c8y_Filter', 'type']))\n        .map(val => val.software.c8y_Filter.type)\n    );\n  }\n}\n","import { Component, EventEmitter, Output, QueryList, ViewChildren } from '@angular/core';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { gettext, ListItemRadioComponent, memoize } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get, isEqual, property, uniqWith } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, Observable, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-select-software-step',\n  templateUrl: 'select-software-step.component.html'\n})\nexport class SelectSoftwareStepComponent {\n  @Output() software: EventEmitter<ISelectedSoftware> = new EventEmitter<ISelectedSoftware>();\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceType$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceTypes = [];\n  selectedDeviceType = { name: '' };\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  software$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.deviceType$\n  ).pipe(\n    switchMap(([name, deviceType]) => this.getSoftware(name, deviceType)),\n    shareReplay(1)\n  );\n  readonly NO_DEVICE_TYPE_AVAILABLE = gettext('No device type available');\n  @ViewChildren(ListItemRadioComponent) radioButtons: QueryList<ListItemRadioComponent>;\n\n  private deviceTypeSubscription: Subscription;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translate: TranslateService\n  ) {\n    this.loadDeviceTypes();\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number> {\n    return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));\n  }\n\n  @memoize(property('id'))\n  getVersions(software: IManagedObject) {\n    return this.repositoryService.listAllVersions(software);\n  }\n\n  getDeviceTypeTitle(software: IManagedObject): string {\n    return get(\n      software,\n      'c8y_Filter.type',\n      this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));\n  }\n\n  loadDeviceTypes() {\n    this.deviceTypeSubscription = this.deviceType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { 'c8y_Filter.type': `*${searchStr}*` };\n          return from(\n            this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query })\n          );\n        })\n      )\n      .subscribe(result => {\n        const { data } = result;\n        this.deviceTypes = uniqWith(data.map(val => ({ name: val.c8y_Filter.type })), isEqual);\n      });\n  }\n\n  ngOnDestroy() {\n    this.deviceTypeSubscription.unsubscribe();\n  }\n\n  resetSelection() {\n    this.radioButtons.map(radio => radio.reset());\n  }\n\n  selectSoftware({ option, software }) {\n    software.selectedId = option.id;\n    option.action = 'install';\n    this.emitSoftware({ option, software });\n  }\n\n  emitSoftware({ option, software }) {\n    const emitData = Object.assign(\n      {},\n      { software },\n      { version: option },\n      { action: option.action }\n    );\n    this.software.emit(emitData);\n  }\n\n  private getSoftware(name?: string, deviceType?: string) {\n    const query: any = name ? { name: `*${name}*` } : {};\n    if (deviceType) {\n      query.__or = [{ 'c8y_Filter.type': deviceType }, { __not: { __has: `c8y_Filter.type` } }];\n    }\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query });\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component } from '@angular/core';\nimport { IManagedObject, IOperation, IResultList } from '@c8y/client';\nimport { C8yStepper, gettext } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get, isEqual, uniqWith } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, Observable, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';\nimport { BaseStepperComponent } from '../base-stepper.component';\nimport {\n  BulkOperationsService,\n  OperationDetails\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-configuration',\n  templateUrl: 'stepper-bulk-type-configuration.component.html'\n})\nexport class StepperBulkTypeConfiguration extends BaseStepperComponent {\n  readonly NO_DEVICE_TYPE_AVAILABLE = gettext('Undefined`device type`');\n  selectedConfiguration: IManagedObject;\n  elementCount: number = 0;\n  DD_LOW_COUNT: number = 10;\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  configType$: BehaviorSubject<string> = new BehaviorSubject('');\n  configTypes = [];\n  selectedConfigType = { name: '' };\n  configurations$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.configType$\n  ).pipe(\n    switchMap(([name, configType]) => this.getConfiguration(name, configType)),\n    shareReplay(1)\n  );\n  private configTypeSubscription: Subscription;\n\n  constructor(\n    private bulkOperationService: BulkOperationsService,\n    private repositoryService: RepositoryService,\n    private translate: TranslateService\n  ) {\n    super();\n    this.DD_LOW_COUNT = this.bulkOperationService.DD_LOW_COUNT;\n    this.loadConfigurationTypes();\n  }\n\n  loadConfigurationTypes() {\n    this.configTypeSubscription = this.configType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { configurationType: `*${searchStr}*` };\n          return from(\n            this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query })\n          );\n        })\n      )\n      .subscribe(result => {\n        const { data } = result;\n        this.configTypes = uniqWith(data.map(val => ({ name: val.configurationType })), isEqual);\n      });\n  }\n  ngOnDestroy(): void {\n    this.configTypeSubscription.unsubscribe();\n  }\n\n  selectConfiguration(configuration: IManagedObject) {\n    this.selectedConfiguration = configuration;\n  }\n\n  goToSecondStep($event: { stepper: C8yStepper; step: CdkStep }) {\n    $event.stepper.next();\n    this.getConfigBinary();\n    this.deviceTypes = this.selectedConfiguration.deviceType;\n  }\n\n  async getConfigBinary() {\n    if (this.selectedConfiguration.url) {\n      this.selectedConfiguration.binary = await this.repositoryService.getBinaryText(\n        this.selectedConfiguration.url,\n        { allowExternal: true, noAlerts: true }\n      );\n    }\n  }\n\n  getDeviceTypeTitle(configuration: IManagedObject): string {\n    return get(configuration, 'deviceType', this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const configuration = {\n      type: this.selectedConfiguration.configurationType,\n      url: this.selectedConfiguration.url\n    };\n\n    return {\n      name: gettext('Configuration update'),\n      description: get(this.selectedConfiguration, 'name'),\n      prototype: ({\n        description: `Update configuration to: ${this.selectedConfiguration.name}.`,\n        c8y_DownloadConfigFile: configuration\n      } as unknown) as IOperation\n    };\n  }\n\n  private getConfiguration(name?: string, configurationType?: string) {\n    const query: any = name ? { name: `*${name}*` } : {};\n    if (configurationType) {\n      query.__or = [{ configurationType }, { __not: { __has: `configurationType` } }];\n    }\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query });\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { C8yStepper, gettext } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { BaseStepperComponent } from '../base-stepper.component';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-device-profile',\n  templateUrl: 'stepper-bulk-type-device-profile.component.html'\n})\nexport class StepperBulkTypeDeviceProfile extends BaseStepperComponent {\n  selectedDeviceProfile: IManagedObject;\n\n  goToConfirmSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    this.deviceTypes = get(this.selectedDeviceProfile, 'c8y_Filter.type');\n    $event.stepper.next();\n  }\n\n  onDeviceProfileSelected(selectedItem) {\n    this.selectedDeviceProfile = selectedItem;\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    return {\n      name: gettext('Apply device profile'),\n      description: get(this.selectedDeviceProfile, 'name'),\n      prototype: ({\n        description: `Apply device profile: ${this.selectedDeviceProfile.name}`,\n        profileId: this.selectedDeviceProfile.id,\n        profileName: this.selectedDeviceProfile.name,\n        c8y_DeviceProfile: this.selectedDeviceProfile.c8y_DeviceProfile\n      } as unknown) as IOperation\n    };\n  }\n}\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { Component, OnDestroy } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { BaseStepperComponent } from '../base-stepper.component';\nimport {\n  BulkOperationsService,\n  OperationDetails\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-stepper-firmware',\n  templateUrl: 'stepper-bulk-type-firmware.component.html'\n})\nexport class StepperFirmware extends BaseStepperComponent implements OnDestroy {\n  readonly descriptionTemplate: string = gettext('{{ name }} (version {{ version }})');\n\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  stepData: { firmware: IManagedObject; versionOrPatch: IManagedObject } = {\n    firmware: undefined,\n    versionOrPatch: undefined\n  };\n\n  selectedFirmware: IManagedObject;\n  selectedVersionOrPatch: IManagedObject;\n\n  private subscription: Subscription;\n\n  constructor(\n    private bulkOperationService: BulkOperationsService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  goToVersionOrPatchStep({ stepper }) {\n    const selectedFirmware = this.stepData.firmware;\n    this.bulkOperationService.setFirmwareId(selectedFirmware.id);\n    this.deviceTypes = (selectedFirmware.c8y_Filter || {}).type;\n    stepper.next();\n  }\n\n  onVersionOrPatchSelected(versionOrPatch: IManagedObject) {\n    this.stepData.versionOrPatch = versionOrPatch;\n  }\n\n  onFirmwareSelected(fw: IManagedObject) {\n    this.stepData.firmware = fw;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const selectedFirmware = this.stepData.firmware;\n    const selectedVersionOrPatch = this.stepData.versionOrPatch;\n\n    if (!selectedFirmware || !selectedVersionOrPatch) {\n      return;\n    }\n\n    const firmware: IManagedObject = ({\n      name: selectedFirmware.name,\n      version: selectedVersionOrPatch.c8y_Firmware.version,\n      url: selectedVersionOrPatch.c8y_Firmware.url\n    } as unknown) as IManagedObject;\n\n    if (selectedVersionOrPatch.c8y_Patch) {\n      firmware.isPatch = true;\n      firmware.dependency = selectedVersionOrPatch.c8y_Patch.dependency;\n    }\n\n    const name = selectedFirmware.name;\n    const version = selectedVersionOrPatch.c8y_Firmware.version;\n    const description: string = `Update firmware to: ${name} (version: ${version}).`;\n\n    return {\n      name: gettext('Firmware update'),\n      description: this.translate.instant(this.descriptionTemplate, {\n        name: get(this.stepData, 'firmware.name'),\n        version: get(this.stepData, 'versionOrPatch.c8y_Firmware.version')\n      }),\n      prototype: ({\n        description,\n        c8y_Firmware: firmware\n      } as unknown) as IOperation\n    };\n  }\n\n  protected onSelectionChange(event: StepperSelectionEvent) {\n    this.textFilter$.next('');\n    super.onSelectionChange(event);\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component, ViewChild } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { uniq } from 'lodash-es';\nimport { BaseStepperComponent } from '../base-stepper.component';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { SelectSoftwareStepComponent } from './software-update-stepper/select-software-step.component';\nimport {\n  ISelectedSoftware,\n  ISoftwareUpdateOperationPrototype\n} from './software-update-stepper/select-software.model';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-software',\n  templateUrl: 'stepper-bulk-type-software.component.html'\n})\nexport class StepperBulkTypeSoftware extends BaseStepperComponent {\n  readonly descriptionTemplateSingle: string = gettext(\n    'Update software to: {{ name }} (version {{ version }})'\n  );\n  readonly descriptionTemplateOneOther: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and one other'\n  );\n  readonly descriptionTemplateMultiple: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and {{ count }} others'\n  );\n\n  selectedSoftware: ISelectedSoftware[] = [];\n  @ViewChild(SelectSoftwareStepComponent, { static: false })\n  selectSoftware: SelectSoftwareStepComponent;\n\n  constructor(private modal: ModalService, private translate: TranslateService) {\n    super();\n  }\n\n  onSoftwareSelected(selectedItem) {\n    this.selectedSoftware = this.selectedSoftware.filter(\n      item => item.software.id !== selectedItem.software.id\n    );\n    this.selectedSoftware.push(selectedItem);\n  }\n\n  async confirmSoftwareSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    const deviceTypes: string[] = this.getUniqueDeviceTypes();\n    this.deviceTypes = deviceTypes;\n    if (deviceTypes.length > 1) {\n      try {\n        await this.modal.confirm(\n          gettext('Selected software for various device types'),\n          gettext('Operation may fail due to unsupported software. Do you want to proceed?'),\n          Status.WARNING,\n          { ok: gettext('Confirm'), cancel: gettext('Cancel') }\n        );\n        $event.stepper.next();\n      } catch (ex) {\n        this.selectedSoftware = [];\n        this.selectSoftware.resetSelection();\n      }\n    } else {\n      $event.stepper.next();\n    }\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const softwareList: ISoftwareUpdateOperationPrototype[] = this.selectedSoftware.map(item => ({\n      name: item.software.name,\n      version: item.version.c8y_Software.version,\n      url: item.version.c8y_Software.url,\n      action: item.action\n    }));\n\n    const interpolationParams: object = {\n      name: softwareList[0].name,\n      version: softwareList[0].version,\n      count: softwareList.length - 1\n    };\n    let description: string;\n    switch (softwareList.length) {\n      case 1:\n        description = this.translate.instant(this.descriptionTemplateSingle, interpolationParams);\n        break;\n      case 2:\n        description = this.translate.instant(this.descriptionTemplateOneOther, interpolationParams);\n        break;\n      default:\n        description = this.translate.instant(this.descriptionTemplateMultiple, interpolationParams);\n    }\n\n    return {\n      name: gettext('Software update'),\n      prototype: ({\n        description,\n        c8y_SoftwareUpdate: softwareList\n      } as unknown) as IOperation\n    };\n  }\n\n  private getUniqueDeviceTypes(): string[] {\n    return uniq(\n      this.selectedSoftware\n        .map(item => item.software.c8y_Filter && item.software.c8y_Filter.type)\n        .filter(type => !!type)\n    );\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {\n  AlarmsDeviceGridColumn,\n  DeviceGridComponent,\n  GroupDeviceGridColumn,\n  ModelDeviceGridColumn,\n  NameDeviceGridColumn,\n  RegistrationDateDeviceGridColumn,\n  StatusDeviceGridColumn,\n  TypeDeviceGridColumn\n} from '@c8y/ngx-components/device-grid';\nimport { Column, FilteringActionType } from '@c8y/ngx-components';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-selector',\n  templateUrl: 'device-selector.component.html'\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n  @ViewChild(DeviceGridComponent, { static: true })\n  deviceGrid: DeviceGridComponent;\n\n  @Input()\n  deviceTypes: Observable<string[]>;\n\n  typeColumn: Column = new TypeDeviceGridColumn();\n\n  @Output()\n  onDeviceQueryStringChange: EventEmitter<string> = new EventEmitter<string>();\n\n  columns: Column[] = [\n    new StatusDeviceGridColumn(),\n    new NameDeviceGridColumn(),\n    this.typeColumn,\n    new ModelDeviceGridColumn(),\n    new GroupDeviceGridColumn(),\n    new RegistrationDateDeviceGridColumn(),\n    new AlarmsDeviceGridColumn()\n  ];\n\n  private unsubscribe$: Subject<boolean> = new Subject();\n\n  ngOnInit(): void {\n    if (this.deviceTypes) {\n      this.deviceTypes\n        .pipe(\n          distinctUntilChanged(),\n          takeUntil(this.unsubscribe$)\n        )\n        .subscribe((types: string[]) => {\n          this.deviceGrid.updateFiltering([this.typeColumn.name], {\n            type:\n              types && types.length\n                ? FilteringActionType.ApplyFilter\n                : FilteringActionType.ResetFilter,\n            payload: types\n              ? {\n                  filteringModifier: {\n                    externalFilterQuery: {\n                      types\n                    }\n                  }\n                }\n              : undefined\n          });\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { gettext, Tab, TabFactory } from '@c8y/ngx-components';\r\n\r\n@Injectable()\r\nexport class TabsFactory implements TabFactory {\r\n  constructor(public router: Router) {}\r\n  get() {\r\n    const tabs: Tab[] = [];\r\n    if (this.router.url.match(/devicecontrol/g)) {\r\n      tabs.push({\r\n        path: 'devicecontrol/single',\r\n        label: gettext('Single operations'),\r\n        icon: 'c8y-icon c8y-icon-device-control',\r\n        priority: 1100,\r\n        orientation: 'horizontal'\r\n      } as Tab);\r\n      tabs.push({\r\n        path: 'devicecontrol/bulk',\r\n        label: gettext('Bulk operations'),\r\n        icon: 'c8y-icon c8y-icon-energy',\r\n        priority: 1050,\r\n        orientation: 'horizontal'\r\n      } as Tab);\r\n    }\r\n\r\n    return tabs;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule, FormsModule, HOOK_TABS, Route } from '@c8y/ngx-components';\nimport { DeviceGridModule } from '@c8y/ngx-components/device-grid';\nimport { DeviceProfileModule } from '@c8y/ngx-components/device-profile';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\nimport { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';\nimport { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\n\nimport { BulkOperationFromSingleComponent } from './bulk/create-from-single/bulk-operation-from-single.component';\nimport { BulkOperationStepper } from './bulk/creation/bulk-operation-stepper.component';\nimport { BulkOperationsStepperContainerComponent } from './bulk/creation/bulk-operations-stepper-container.component';\nimport { ConfirmDeviceProfileSelectionStepComponent } from './bulk/creation/device-profile-update-stepper/confirm-device-profile-selection-step.component';\nimport { SelectDeviceProfileStepComponent } from './bulk/creation/device-profile-update-stepper/select-device-profile-step.component';\nimport { SelectFirmwareComponent } from './bulk/creation/firmware-update-stepper/select-firmware.component';\nimport { VersionOrPatchComponent } from './bulk/creation/firmware-update-stepper/version-or-patch.component';\nimport { ConfirmSoftwareSelectionStepComponent } from './bulk/creation/software-update-stepper/confirm-software-selection-step.component';\nimport { SelectSoftwareStepComponent } from './bulk/creation/software-update-stepper/select-software-step.component';\nimport { StepperBulkTypeConfiguration } from './bulk/creation/stepper-bulk-type-configuration.component';\nimport { StepperBulkTypeDeviceProfile } from './bulk/creation/stepper-bulk-type-device-profile.component';\nimport { StepperFirmware } from './bulk/creation/stepper-bulk-type-firmware.component';\nimport { StepperBulkTypeSoftware } from './bulk/creation/stepper-bulk-type-software.component';\nimport { CustomStep } from './bulk/custom-step.directive';\nimport { OperationDetailsComponent } from './details/operation-details.component';\nimport { DeviceSelectorComponent } from './device-selector/device-selector.component';\nimport { TabsFactory } from './factories/tabs.factory';\n\nexport const routes: Route[] = [\n  {\n    path: 'devicecontrol',\n    redirectTo: 'devicecontrol/single',\n    pathMatch: 'full'\n  },\n  {\n    path: 'devicecontrol/bulk/creation/:type',\n    component: BulkOperationsStepperContainerComponent\n  },\n  {\n    path: 'devicecontrol/single/create-bulk/:operationId',\n    component: BulkOperationFromSingleComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    BulkOperationStepper,\n    BulkOperationsStepperContainerComponent,\n    BulkOperationFromSingleComponent,\n    CustomStep,\n    DeviceSelectorComponent,\n    StepperBulkTypeSoftware,\n    StepperFirmware,\n    StepperBulkTypeConfiguration,\n    StepperBulkTypeDeviceProfile,\n    OperationDetailsComponent,\n    VersionOrPatchComponent,\n    SelectFirmwareComponent,\n    ConfirmSoftwareSelectionStepComponent,\n    SelectSoftwareStepComponent,\n    SelectDeviceProfileStepComponent,\n    ConfirmDeviceProfileSelectionStepComponent\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    CollapseModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    RepositoryModule,\n    DeviceProfileModule,\n    DeviceGridModule,\n    SingleOperationDetailsModule,\n    OperationSummaryModule,\n    BulkOperationSchedulerModule\n  ],\n  exports: [BulkOperationStepper, CustomStep],\n  providers: [{ provide: HOOK_TABS, useClass: TabsFactory, multi: true }],\n  entryComponents: [BulkOperationsStepperContainerComponent]\n})\nexport class OperationsModule {}\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  Validators\n} from '@angular/forms';\nimport { gettext } from '@c8y/ngx-components';\nimport { isEmpty } from 'lodash-es';\nimport { Subscription } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport { OperationSchedule } from './operation-schedule.interface';\n\n@Component({\n  selector: 'c8y-operation-scheduler',\n  templateUrl: 'operation-scheduler.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => OperationSchedulerComponent)\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => OperationSchedulerComponent)\n    }\n  ]\n})\nexport class OperationSchedulerComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy {\n  @Input('minutesAhead') set _minutesAhead(minutes: number) {\n    if (minutes && minutes > this.MINUTES_AHEAD_DEFAULT) {\n      this.minutesAhead = minutes;\n    }\n  }\n  @Input('delayConfig') set _delayConfig(config: { seconds: number; milliseconds: number }) {\n    if (config) {\n      if (config.seconds > this.DELAY_SECONDS_DEFAULT) {\n        this.delaySeconds = config.seconds;\n      }\n\n      if (config.milliseconds > this.DELAY_MILLISECONDS_DEFAULT) {\n        this.delayMilliseconds = config.milliseconds;\n      }\n    }\n  }\n\n  placeholder: string = gettext('Start date');\n  fgOperationScheduler: FormGroup;\n  minDate: Date;\n  minDelay: number;\n  delayErrors: ValidationErrors = null;\n  pickerErrors: ValidationErrors = null;\n\n  private readonly DELAY_SECONDS_DEFAULT: number = 1;\n  private readonly DELAY_MILLISECONDS_DEFAULT: number = 1;\n  private readonly MINUTES_AHEAD_DEFAULT: number = 5;\n  private delaySeconds: number = this.DELAY_SECONDS_DEFAULT;\n  private delayMilliseconds: number = this.DELAY_MILLISECONDS_DEFAULT;\n  private minutesAhead: number = this.MINUTES_AHEAD_DEFAULT;\n  private currentUnit: string = 'seconds';\n  private delayInSeconds: number;\n  private initialDate: Date;\n  private subscription: Subscription;\n\n  private onChange: (name) => void;\n  private onTouched: () => void;\n  private onValidatorChanged: () => void;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.minDate = new Date();\n    this.initialDate = new Date(\n      this.minDate.setMinutes(this.minDate.getMinutes() + this.minutesAhead)\n    );\n    this.minDelay = this.delaySeconds;\n\n    this.fgOperationScheduler = this.formBuilder.group({\n      picker: ['', [Validators.required, this.dateValidation]],\n      time: ['', [Validators.required, this.timeValidation]],\n      delay: ['', [Validators.required, Validators.min(this.minDelay)]],\n      unit: ['seconds']\n    });\n\n    this.fgOperationScheduler.patchValue({\n      picker: this.initialDate,\n      time: this.initialDate,\n      delay: this.minDelay\n    });\n\n    // Due to the validation of picker and time it could be possible that value changes\n    // are emitted more than once. Therefore we throttle the emits.\n    const valueChanges$ = this.fgOperationScheduler.valueChanges.pipe(throttleTime(100));\n    this.subscription = valueChanges$.subscribe(data => {\n      this.delayErrors = this.fgOperationScheduler.controls.delay.errors;\n      this.pickerErrors = this.fgOperationScheduler.controls.picker.errors;\n      this.convertDelayHandler(data.unit);\n      this.emitData(data);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  writeValue(value: OperationSchedule): void {\n    if (value) {\n      this.fgOperationScheduler.patchValue({\n        picker: value.scheduledDate,\n        time: value.scheduledDate,\n        delay: value.delayInSeconds > 1 ? value.delayInSeconds : value.delayInSeconds * 1000,\n        unit: value.delayInSeconds > 1 ? 'seconds' : 'milliseconds'\n      });\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.fgOperationScheduler.disable() : this.fgOperationScheduler.enable();\n  }\n\n  validate(): ValidationErrors {\n    if (this.fgOperationScheduler.invalid) {\n      return {\n        ...this.fgOperationScheduler.controls.picker.errors,\n        ...this.fgOperationScheduler.controls.time.errors,\n        ...this.fgOperationScheduler.controls.delay.errors\n      };\n    }\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChanged = fn;\n  }\n\n  markAsTouched(): void {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  convertDelayHandler(unit: string) {\n    if (this.currentUnit === unit) {\n      return;\n    }\n\n    this.currentUnit = unit;\n    this.convertDelay(this.currentUnit);\n\n    // update validator on delay control to make sure that\n    // switching from minutes to seconds or vice versa does not harm validation.\n    this.fgOperationScheduler.controls.delay.setValidators([Validators.required]);\n    this.fgOperationScheduler.controls.delay.updateValueAndValidity();\n  }\n\n  emitData(data: { delayInSeconds: number; picker: Date; time?: Date; delay?: number }) {\n    if (this.onValidatorChanged) {\n      this.onValidatorChanged();\n    }\n\n    if (data.picker && data.time) {\n      data.picker = this.combineDateAndTime(data.picker, data.time);\n    }\n\n    this.convertDelay(this.currentUnit);\n    data.delayInSeconds = this.delayInSeconds;\n\n    if (this.onChange) {\n      this.onChange({\n        delayInSeconds: data.delayInSeconds,\n        scheduledDate: data.picker\n      });\n    }\n  }\n\n  private convertDelay(unit: string) {\n    if (unit && this.fgOperationScheduler.controls.delay.value) {\n      this.delayMilliseconds = this.fgOperationScheduler.controls.delay.value;\n      if (unit === 'milliseconds') {\n        this.minDelay =\n          this.delayMilliseconds > this.DELAY_MILLISECONDS_DEFAULT\n            ? this.delayMilliseconds\n            : this.DELAY_MILLISECONDS_DEFAULT;\n        this.delayInSeconds = this.fgOperationScheduler.controls.delay.value / 1000;\n      } else {\n        this.delaySeconds = this.fgOperationScheduler.controls.delay.value;\n        this.minDelay =\n          this.delaySeconds > this.DELAY_SECONDS_DEFAULT\n            ? this.delaySeconds\n            : this.DELAY_SECONDS_DEFAULT;\n        this.delayInSeconds = this.fgOperationScheduler.controls.delay.value;\n      }\n    }\n  }\n\n  private combineDateAndTime(date: Date, time: Date) {\n    return new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    );\n  }\n\n  private dateValidation(fControl: FormControl) {\n    if (fControl.value) {\n      const date = fControl.value as Date;\n      fControl.parent.get('time').setValue(date);\n      return date >= new Date()\n        ? null\n        : {\n            dateValidation: true\n          };\n    }\n    return { dateValidation: true };\n  }\n\n  private timeValidation(fControl: FormControl) {\n    if (fControl.value) {\n      const date = fControl.value as Date;\n      const result =\n        date >= new Date()\n          ? null\n          : {\n              dateValidation: true\n            };\n\n      const picker = fControl.parent.get('picker');\n\n      if (result) {\n        picker.setErrors(result);\n        picker.markAsTouched();\n        return result;\n      }\n\n      if (picker && picker.errors && picker.errors.dateValidation) {\n        delete picker.errors.dateValidation;\n\n        if (isEmpty(picker.errors)) {\n          picker.setErrors(null);\n          return result;\n        }\n\n        picker.setErrors(picker.errors);\n      }\n      return result;\n    }\n    return { dateValidation: true };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationSchedulerComponent } from './operation-scheduler.component';\n\n/**\n * This module provides components for scheduling bulk operations.\n */\n@NgModule({\n  imports: [CoreModule, ReactiveFormsModule, BsDatepickerModule, TimepickerModule],\n  providers: [],\n  declarations: [OperationSchedulerComponent],\n  entryComponents: [OperationSchedulerComponent],\n  exports: [OperationSchedulerComponent]\n})\nexport class BulkOperationSchedulerModule {}\n","import { Component, Input } from '@angular/core';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-operation-summary',\n  templateUrl: 'operation-summary.component.html'\n})\nexport class OperationSummaryComponent {\n  @Input()\n  name: string;\n\n  @Input()\n  description: string;\n\n  @Input()\n  set deviceQueryString(query: string) {\n    this.displayDeviceCount = true;\n    const filters = {\n      q: query || '',\n      pageSize: 1,\n      currentPage: 1,\n      withTotalPages: true\n    };\n    this.inventoryService\n      .list(filters)\n      .then((result: IResultList<IManagedObject>) => (this.deviceCount = result.paging.totalPages));\n  }\n\n  deviceCount: number = 0;\n  displayDeviceCount: boolean = false;\n\n  constructor(private inventoryService: InventoryService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationSummaryComponent } from './operation-summary.component';\n\n/**\n * This module provides a component for displaying the summary of given bulk operation.\n */\n@NgModule({\n  imports: [CoreModule],\n  declarations: [OperationSummaryComponent],\n  entryComponents: [OperationSummaryComponent],\n  exports: [OperationSummaryComponent]\n})\nexport class OperationSummaryModule {}\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { IOperation } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-single-operation-modal',\n  templateUrl: './single-operation-modal.component.html'\n})\nexport class SingleOperationModalComponent {\n  @Input() operation: Partial<IOperation>;\n  @Input() collapsed: boolean = false;\n  @Input() readOnly: boolean = false;\n\n  constructor(public modalRef: BsModalRef) {}\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { IOperation, OperationService } from '@c8y/client';\nimport { SingleOperationModalComponent } from './single-operation-modal.component';\n\n@Injectable()\nexport class SingleOperationDetailsService {\n  constructor(private operationService: OperationService, private modalService: BsModalService) {}\n\n  /**\n   * Opens a modal window with the details of given single operation.\n   * @param operationOrOperationId Operation's object or id.\n   * @param options Additional options:\n   * - `collapsed`: boolean - whether the details pane should be initially collapsed\n   * - `readOnly`: boolean - whether the details should be displayed in read-only mode\n   */\n  async openDetails(\n    operationOrOperationId: IOperation | string | number,\n    options?: { collapsed?: boolean; readOnly?: boolean }\n  ) {\n    const operation: IOperation = (operationOrOperationId as IOperation).id\n      ? (operationOrOperationId as IOperation)\n      : (await this.operationService.detail(operationOrOperationId)).data;\n    const initialState = { operation, ...options };\n\n    this.modalService.show(SingleOperationModalComponent, {\n      initialState,\n      class: 'modal-lg'\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { operationStatusClasses, operationStatusIcons } from '@c8y/ngx-components';\nimport { SingleOperationDetailsService } from './single-operation-details.service';\n\n/**\n * Single operation component displays a single operation's status, description and creationTime.\n *\n * Example:\n *\n * ```html\n * <c8y-single-operation [operation]=\"operation\"></c8y-single-operation>\n * ```\n */\n@Component({\n  selector: 'c8y-single-operation',\n  templateUrl: './single-operation.component.html'\n})\nexport class SingleOperationComponent {\n  @Input() operation: IOperation;\n\n  statusIcons: object;\n  statusClasses: object;\n\n  constructor(private singleOperationDetailsService: SingleOperationDetailsService) {}\n\n  ngOnInit() {\n    this.statusIcons = operationStatusIcons;\n    this.statusClasses = operationStatusClasses;\n  }\n\n  openDetails() {\n    this.singleOperationDetailsService.openDetails(this.operation);\n  }\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { assign, get } from 'lodash-es';\nimport { IOperation, OperationService, OperationStatus } from '@c8y/client';\nimport {\n  AlertService,\n  ListItemComponent,\n  Tab,\n  gettext,\n  operationStatusClasses,\n  operationStatusIcons\n} from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-single-operation-list-item',\n  templateUrl: './single-operation-list-item.component.html'\n})\nexport class SingleOperationListItemComponent implements OnInit {\n  @Input() operation: Partial<IOperation>;\n  @Input() collapsed: boolean = true;\n  @Input() readOnly: boolean = false;\n\n  @ViewChild('listItem', { static: true }) listItem: ListItemComponent;\n  @ViewChild('details', { static: true }) detailsTabTemplate: any;\n  @ViewChild('historyOfChanges', { static: true }) historyOfChangesTabTemplate: any;\n\n  tabs: Tab[] = [];\n  selectedTab: Tab;\n  statusIcons = operationStatusIcons;\n  statusClasses = operationStatusClasses;\n  OperationStatus = OperationStatus;\n\n  get displayedDescription() {\n    const commandText = get(this.operation, 'c8y_Command.text');\n    const opDescription = get(this.operation, 'description');\n    return commandText || opDescription || gettext('(no command text or description available)');\n  }\n\n  constructor(\n    private router: Router,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.statusIcons = operationStatusIcons;\n    this.statusClasses = operationStatusClasses;\n\n    this.tabs = [\n      {\n        label: gettext('Details'),\n        icon: 'asterisk',\n        template: this.detailsTabTemplate\n      } as Tab,\n      {\n        label: gettext('History of changes'),\n        icon: 'archive',\n        template: this.historyOfChangesTabTemplate\n      } as Tab\n    ];\n    this.selectedTab = this.tabs[0];\n  }\n\n  scheduleAsBulkOperation() {\n    this.router.navigateByUrl(`/devicecontrol/single/create-bulk/${this.operation.id}`);\n  }\n\n  async cancel() {\n    try {\n      const operationAfterUpdate = (await this.operationService.update({\n        id: this.operation.id,\n        status: OperationStatus.FAILED,\n        failureReason: gettext('Operation cancelled by user.')\n      })).data;\n      assign(this.operation, operationAfterUpdate);\n      this.alertService.success(gettext('Operation cancelled.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { BulkOperationDetailsService } from '@c8y/ngx-components/operations/bulk-operations-list';\n\n@Component({\n  selector: 'c8y-single-operation-details',\n  templateUrl: './single-operation-details.component.html'\n})\nexport class SingleOperationDetailsComponent {\n  @Input() operation: Partial<IOperation>;\n  @Input() readOnly: boolean = false;\n\n  constructor(private bulkOperationDetailsService: BulkOperationDetailsService) {}\n\n  openBulkOperationDetails() {\n    this.bulkOperationDetailsService.openDetails(this.operation.bulkOperationId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule } from '@c8y/ngx-components';\nimport { BulkOperationsListModule } from '@c8y/ngx-components/operations/bulk-operations-list';\nimport { BulkOperationsServiceModule } from '@c8y/ngx-components/operations/bulk-operations-service';\n\nimport { SingleOperationDetailsService } from './single-operation-details.service';\nimport { SingleOperationComponent } from './single-operation.component';\nimport { SingleOperationModalComponent } from './single-operation-modal.component';\nimport { SingleOperationListItemComponent } from './single-operation-list-item.component';\nimport { SingleOperationDetailsComponent } from './single-operation-details.component';\n\n/**\n * This module allows to display details of a single operation in a modal.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    PopoverModule,\n    TooltipModule,\n    CollapseModule,\n    BulkOperationsListModule,\n    BulkOperationsServiceModule\n  ],\n  providers: [SingleOperationDetailsService],\n  declarations: [\n    SingleOperationComponent,\n    SingleOperationModalComponent,\n    SingleOperationListItemComponent,\n    SingleOperationDetailsComponent\n  ],\n  entryComponents: [\n    SingleOperationComponent,\n    SingleOperationModalComponent,\n    SingleOperationListItemComponent,\n    SingleOperationDetailsComponent\n  ],\n  exports: [SingleOperationComponent]\n})\nexport class SingleOperationDetailsModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { IStatusOption } from './status-option.model';\n\n@Component({\n  selector: 'c8y-status-filter',\n  templateUrl: './status-filter.component.html',\n  host: { class: 'btn-group' }\n})\nexport class StatusFilterComponent {\n  statusOptions: Array<{ selected: boolean; option: IStatusOption }> = [];\n\n  /** List of filter options to be displayed */\n  @Input() set options(options: IStatusOption[]) {\n    this.statusOptions = (options || []).map(option => ({ selected: false, option }));\n  }\n\n  /**\n   * Allows multiple options to be active simultaneosly.\n   */\n  @Input('multiple') set _multiple(multiple: boolean) {\n    this.multiple = coerceBooleanProperty(multiple);\n  }\n\n  /** Display the filter as a small button group */\n  @Input('small') set _small(small: boolean) {\n    this.small = coerceBooleanProperty(small);\n  }\n\n  @HostBinding('class.btn-group-sm') get displaySmall() {\n    return this.small;\n  }\n\n  @Output() onFilterChanged: EventEmitter<IStatusOption[]> = new EventEmitter();\n\n  isAllButtonSelected: boolean = true;\n\n  private multiple: boolean;\n  private small: boolean;\n\n  changeFilter(option: { selected: boolean; option: IStatusOption }) {\n    this.isAllButtonSelected = false;\n    let emitNeeded: boolean = false;\n\n    if (this.multiple) {\n      option.selected = !option.selected;\n      emitNeeded = true;\n    } else if (!option.selected) {\n      option.selected = true;\n      this.statusOptions.filter(op => op !== option).forEach(op => (op.selected = false));\n      emitNeeded = true;\n    }\n\n    if (emitNeeded) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  removeFilter() {\n    this.isAllButtonSelected = true;\n    this.statusOptions.forEach(op => (op.selected = false));\n\n    this.emitSelectedOptions();\n  }\n\n  /**\n   * Allows the filter to be initalliy displayed with some preset filters.\n   *\n   * @param filters An `IStatusOption` array defining filter options to be preset.\n   * @param emit  (optional) If `true` component will emit `onFilterChanged` event.\n   */\n  preset(filters: IStatusOption[], emit: boolean = true) {\n    let firstSelected: boolean = false;\n\n    this.statusOptions.forEach(option => (option.selected = false));\n\n    this.statusOptions\n      .filter(option => (filters || []).map(o => o.label).includes(option.option.label))\n      .filter(() => {\n        // only first option passed will be set in single selection mode\n        const include: boolean = this.multiple || !firstSelected;\n        if (include) {\n          firstSelected = true;\n        }\n\n        return include;\n      })\n      .forEach(option => (option.selected = true));\n\n    this.isAllButtonSelected = !(filters && filters.length);\n\n    if (emit) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  reset() {\n    this.removeFilter();\n  }\n\n  activeFilters(): IStatusOption[] {\n    return this.statusOptions.filter(option => option.selected).map(option => option.option);\n  }\n\n  isFilterApplied(): boolean {\n    return this.statusOptions.some(option => option.selected);\n  }\n\n  private emitSelectedOptions() {\n    this.onFilterChanged.emit(\n      this.statusOptions.filter(option => option.selected).map(option => option.option)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { StatusFilterComponent } from './status-filter.component';\n\n/**\n * This module provides a component for selecting status filter.\n */\n@NgModule({\n  imports: [CoreModule, TooltipModule],\n  declarations: [StatusFilterComponent],\n  entryComponents: [StatusFilterComponent],\n  exports: [StatusFilterComponent]\n})\nexport class StatusFilterModule {}\n","export enum BulkOperationType {\n  SOFTWARE = 'software',\n  FIRMWARE = 'firmware',\n  CONFIGURATION = 'configuration',\n  DEVICE_PROFILE = 'device-profile'\n}\n","import { Location } from '@angular/common';\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { has, isUndefined } from 'lodash-es';\nimport { Subject } from 'rxjs';\n\nimport {\n  IdReference,\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IOperationBulk,\n  IResult,\n  OperationBulkService,\n  OperationService\n} from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\n\nimport { OperationDetails } from './operation-details.model';\nimport { OperationType } from './operation-type.model';\nimport { BulkOperationType } from './bulk-operation.model';\n\nexport const baseUrl = 'devicecontrol/bulk/creation/';\nexport const HOOK_LIST_BULK_TYPE = new InjectionToken<OperationType[]>('LIST_BULK_TYPE');\nexport const C8Y_BULK_TYPES: OperationType[] = [\n  {\n    type: BulkOperationType.CONFIGURATION,\n    c8yIcon: 'cogs',\n    name: gettext('Configuration update'),\n    path: `${baseUrl}configuration`,\n    component: undefined,\n    fragments: ['c8y_DownloadConfigFile', 'c8y_Configuration'],\n    selected: false\n  },\n  {\n    type: BulkOperationType.FIRMWARE,\n    c8yIcon: 'c8y-firmware',\n    name: gettext('Firmware update'),\n    path: `${baseUrl}firmware`,\n    component: undefined,\n    fragments: ['c8y_Firmware'],\n    selected: false\n  },\n  {\n    type: BulkOperationType.SOFTWARE,\n    c8yIcon: 'c8y-tools',\n    name: gettext('Software update'),\n    path: `${baseUrl}software`,\n    component: undefined,\n    fragments: ['c8y_SoftwareList', 'c8y_SoftwareUpdate'],\n    selected: false\n  },\n  {\n    type: BulkOperationType.DEVICE_PROFILE,\n    c8yIcon: 'c8y-device-profile',\n    name: gettext('Apply device profile'),\n    path: `${baseUrl}device-profile`,\n    component: undefined,\n    fragments: ['c8y_DeviceProfile'],\n    selected: false\n  }\n];\nexport const C8Y_BULK_TYPE_FRAGMENTS: string[] = C8Y_BULK_TYPES.reduce(\n  (flattened, current) => flattened.concat(current.fragments),\n  []\n);\n\n@Injectable()\nexport class BulkOperationsService {\n  readonly DD_LOW_COUNT: number = 10;\n  firmwareId: Subject<IdReference> = new Subject<IdReference>();\n\n  constructor(\n    private operationBulkService: OperationBulkService,\n    private operationService: OperationService,\n    private inventoryService: InventoryService,\n    private location: Location,\n\n    @Inject(HOOK_LIST_BULK_TYPE) private bulkTypes: OperationType[]\n  ) {\n    if (bulkTypes && bulkTypes.length > 0) {\n      this.bulkTypes = bulkTypes.map(type => {\n        if (isUndefined(type.selected)) {\n          type.selected = false;\n        }\n        return type;\n      });\n    }\n  }\n\n  getBulkOperations(customFilter = {}) {\n    const filter = {\n      withTotalPages: true,\n      withDeleted: true,\n      pageSize: 50,\n      ...customFilter\n    };\n\n    return this.operationBulkService.list(filter);\n  }\n\n  getBulkOperationById(bulkOperationId: string | number) {\n    return this.operationBulkService.detail(bulkOperationId);\n  }\n\n  createBulkOperation(bulkOperation: Partial<IOperationBulk>) {\n    return this.operationBulkService.create(bulkOperation);\n  }\n\n  deleteBulkOperation(bulkOperationId) {\n    return this.operationBulkService.delete(bulkOperationId);\n  }\n\n  updateBulkOperation(bulkOperation: Partial<IOperationBulk>) {\n    return this.operationBulkService.update(bulkOperation);\n  }\n\n  getOperation(id: string): Promise<IResult<IOperation>> {\n    return this.operationService.detail(id);\n  }\n\n  returnToBulkOperationOverview() {\n    this.location.back();\n  }\n\n  setBulkTypes(list: OperationType[]) {\n    this.bulkTypes = list;\n  }\n\n  getBulkTypes(): OperationType[] {\n    return this.bulkTypes;\n  }\n\n  setFirmwareId(id: IdReference) {\n    this.firmwareId.next(id);\n  }\n\n  createGroup(deviceQueryDataString: string) {\n    const dynamicGroup: Partial<IManagedObject> = {\n      name: 'Bulk operations group',\n      type: 'c8y_DynamicGroup',\n      c8y_IsDynamicGroup: { invisible: {} },\n      c8y_DeviceQueryString: deviceQueryDataString\n    };\n\n    return this.inventoryService.create(dynamicGroup);\n  }\n\n  async scheduleBulkOperation(deviceQueryString: string, details: OperationDetails) {\n    const dynamicGroup = await this.createGroup(deviceQueryString);\n\n    const bulkOperation: IOperationBulk = {\n      groupId: dynamicGroup.data.id,\n      operationPrototype: details.prototype,\n      creationRamp: details.schedule.delayInSeconds,\n      startDate: details.schedule.scheduledDate.toISOString(),\n      note: details.note\n    };\n\n    await this.createBulkOperation(bulkOperation);\n  }\n\n  getSingleOperationsByStatus(status, bulkOperationId) {\n    const filter = {\n      withTotalPages: true,\n      bulkOperationId,\n      status: (status && status.toUpperCase()) || ''\n    };\n\n    return this.operationService.list(filter);\n  }\n\n  createSingleOperation(operation: IOperation) {\n    return this.operationService.create(operation);\n  }\n\n  updateSingleOperation(partialUpdateObject: Partial<IOperation>) {\n    return this.operationService.update(partialUpdateObject);\n  }\n\n  getManagedObject(deviceId: IdReference) {\n    return this.inventoryService.detail(deviceId);\n  }\n\n  retrieveBulkOperationType(operation: IOperation): BulkOperationType {\n    let type: BulkOperationType;\n\n    C8Y_BULK_TYPES.some(t => {\n      if (t.fragments.some(fragment => has(operation, fragment))) {\n        type = t.type;\n        return true;\n      }\n    });\n\n    return type;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  BulkOperationsService,\n  HOOK_LIST_BULK_TYPE,\n  C8Y_BULK_TYPES\n} from './bulk-operations.service';\n\n/**\n * This module provides a shared bulk operations service.\n */\n@NgModule({\n  imports: [],\n  providers: [BulkOperationsService, { provide: HOOK_LIST_BULK_TYPE, useValue: C8Y_BULK_TYPES }]\n})\nexport class BulkOperationsServiceModule {}\n","import { Component, Input } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BulkOperationDetailsService } from './bulk-operation-details.service';\n\n@Component({\n  selector: 'c8y-bulk-operations-wrapper',\n  templateUrl: './bulk-operation-wrapper.component.html'\n})\nexport class BulkOperationWrapperComponent {\n  @Input() bulkOperation: Partial<IOperationBulk>;\n\n  constructor(\n    public bulkOperationDetailsService: BulkOperationDetailsService,\n    public modalRef: BsModalRef\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationWrapperComponent } from './bulk-operation-wrapper.component';\n\n@Injectable()\nexport class BulkOperationDetailsService {\n  constructor(\n    private bulkOperationsService: BulkOperationsService,\n    private modalService: BsModalService\n  ) {}\n\n  async openDetails(bulkOperationId) {\n    const bulkOperation: IOperationBulk = (await this.bulkOperationsService.getBulkOperationById(\n      bulkOperationId\n    )).data;\n    const initialState = { bulkOperation };\n    this.modalService.show(BulkOperationWrapperComponent, {\n      initialState,\n      class: 'modal-lg'\n    });\n  }\n}\n","import { Component, ViewContainerRef, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { OperationType } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operations-modal',\n  templateUrl: 'bulk-operations-modal.component.html'\n})\nexport class BulkOperationsModalComponent {\n  @ViewChild('container', { static: false, read: ViewContainerRef }) container;\n  showComponent: boolean = false;\n  constructor(private bsModalRef: BsModalRef, private resolver: ComponentFactoryResolver) {}\n\n  cancel() {\n    this.bsModalRef.hide();\n  }\n\n  createComponent(item: OperationType) {\n    if (item && item.component) {\n      this.showComponent = true;\n      const factory = this.resolver.resolveComponentFactory(item.component);\n      this.container.createComponent(factory);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BulkOperationsModalComponent } from './bulk-operations-modal.component';\n\n@Injectable()\nexport class BulkOperationModalsService {\n  private bsModalRef: BsModalRef;\n\n  constructor(private bsModalService: BsModalService) {}\n\n  showNewBulkOperationModal() {\n    this.bsModalRef = this.bsModalService.show(BulkOperationsModalComponent, {\n      backdrop: 'static',\n      class: 'modal-sm'\n    });\n  }\n\n  hideNewBulkOperationModal() {\n    if (this.bsModalRef) {\n      this.bsModalRef.hide();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { OperationSchedule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operations-reschedule-modal',\n  templateUrl: 'bulk-operations-reschedule-modal.component.html'\n})\nexport class BulkOperationsRescheduleModalComponent implements OnInit {\n  closeSubject: Subject<IOperationBulk> = new Subject();\n  dateAndDelay: OperationSchedule;\n  bulkOperation: Partial<IOperationBulk>;\n  isRetryOperation: boolean;\n  modalTitle: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private bulkOperationsService: BulkOperationsService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.modalTitle = this.getTitle();\n  }\n\n  onDateAndDelaySelect($event) {\n    this.dateAndDelay = $event;\n  }\n\n  getTitle() {\n    return this.isRetryOperation ? gettext('Retry operation') : gettext('Edit schedule');\n  }\n\n  onCancel() {\n    this.bsModalRef.hide();\n  }\n\n  async onSave() {\n    let newBulkOperation;\n    this.bulkOperation.startDate = this.dateAndDelay.scheduledDate.toISOString();\n    this.bulkOperation.creationRamp = this.dateAndDelay.delayInSeconds;\n\n    if (this.isRetryOperation) {\n      try {\n        newBulkOperation = await this.bulkOperationsService.createBulkOperation(this.bulkOperation);\n        this.alert.success(gettext('Successfully rescheduled for a retry.'));\n      } catch (er) {\n        this.alert.addServerFailure(er);\n      }\n    } else {\n      try {\n        newBulkOperation = await this.bulkOperationsService.updateBulkOperation(this.bulkOperation);\n        this.alert.success(gettext('Successfully rescheduled.'));\n      } catch (er) {\n        this.alert.addServerFailure(er);\n      }\n    }\n\n    // send back to component from which modal was called\n    this.closeSubject.next(newBulkOperation.data);\n    this.bsModalRef.hide();\n  }\n}\n","import { OperationBulkGeneralStatus } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { IStatusOption } from '@c8y/ngx-components/operations/status-filter';\n\nexport const BULK_OPERATION_STATUS_LABELS = {\n  SCHEDULED: gettext('Scheduled'),\n  EXECUTING: gettext('Executing'),\n  CANCELED: gettext('Canceled'),\n  FAILED: gettext('Completed with failures'),\n  SUCCESSFUL: gettext('Completed successfully')\n};\n\nexport const BULK_OPERATION_STATUS_OPTIONS: IStatusOption[] = [\n  {\n    label: BULK_OPERATION_STATUS_LABELS.SCHEDULED,\n    generalStatus: [OperationBulkGeneralStatus.SCHEDULED],\n    iconClass: 'fa fa-calendar text-info'\n  },\n  {\n    label: BULK_OPERATION_STATUS_LABELS.EXECUTING,\n    generalStatus: [\n      OperationBulkGeneralStatus.EXECUTING,\n      OperationBulkGeneralStatus.EXECUTING_WITH_ERROR\n    ],\n    iconClass: 'fa fa-refresh text-primary'\n  },\n  {\n    label: BULK_OPERATION_STATUS_LABELS.CANCELED,\n    generalStatus: [OperationBulkGeneralStatus.CANCELED],\n    iconClass: 'fa fa-ban text-muted'\n  },\n  {\n    label: BULK_OPERATION_STATUS_LABELS.FAILED,\n    generalStatus: [OperationBulkGeneralStatus.FAILED],\n    iconClass: 'fa fa-exclamation-triangle text-danger'\n  },\n  {\n    label: BULK_OPERATION_STATUS_LABELS.SUCCESSFUL,\n    generalStatus: [OperationBulkGeneralStatus.SUCCESSFUL],\n    iconClass: 'fa fa-check text-success'\n  }\n];\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { IOperationBulk, OperationBulkGeneralStatus } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ListItemComponent,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { assign, cloneDeep } from 'lodash-es';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { IStatusOption } from '@c8y/ngx-components/operations/status-filter';\nimport { BulkOperationsRescheduleModalComponent } from './modals/bulk-operations-reschedule-modal.component';\nimport { BULK_OPERATION_STATUS_OPTIONS } from './bulk-operation-list-item.model';\n\n@Component({\n  selector: 'c8y-bulk-operation-list-item',\n  templateUrl: './bulk-operation-list-item.component.html'\n})\nexport class BulkOperationListItemComponent implements OnInit, OnChanges {\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  detailsCollapsed: boolean = true;\n  @Input()\n  readOnly: boolean = false;\n  @Output() showFailedOperation = new EventEmitter();\n  @Output() reload: EventEmitter<any> = new EventEmitter();\n  @ViewChild('listItem', { static: true }) listItem: ListItemComponent;\n  iconClass: string;\n  finishDate: number;\n  refreshLoading = false;\n  bulkOperationGeneralStatus = OperationBulkGeneralStatus;\n  bulkOperationStatusOptions: IStatusOption[] = BULK_OPERATION_STATUS_OPTIONS;\n  bsModalRef: BsModalRef;\n  finishDatePopoverText: string = gettext(\n    'Approximate date, estimated based on the bulk operation settings.'\n  );\n  progressBarClass: string = 'progress';\n  progressBarColor: string;\n  progressBarStatus: number = 0;\n\n  constructor(\n    private bulkOperationsService: BulkOperationsService,\n    private modal: ModalService,\n    private alert: AlertService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n    this.finishDate = this.calculateFinishDateMs();\n    this.setProgressBar();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.bulkOperation && !changes.bulkOperation.firstChange) {\n      this.iconClass = this.getIconClass();\n      this.setProgressBar();\n    }\n  }\n\n  getIconClass() {\n    return this.bulkOperationStatusOptions.find(statusOption =>\n      statusOption.generalStatus.includes(this.bulkOperation.generalStatus)\n    ).iconClass;\n  }\n\n  calculateFinishDateMs(): number {\n    const startDateMs: number = new Date(this.bulkOperation.startDate).getTime();\n    const creationRampMs: number = this.bulkOperation.creationRamp * 1000;\n\n    return startDateMs + creationRampMs * this.bulkOperation.progress.all;\n  }\n\n  progressBarProgressFn() {\n    return (\n      ((this.bulkOperation.progress.successful + this.bulkOperation.progress.failed) /\n        this.bulkOperation.progress.all) *\n      100\n    );\n  }\n\n  setProgressBar() {\n    const staticContentOfClass = 'progress-bar progress-striped active progress-bar';\n\n    const progressBarState = {\n      EXECUTING: {\n        progressBarClass: 'progress progress-striped active',\n        progressBarColor: `${staticContentOfClass}-primary`,\n        progressBarStatus: this.progressBarProgressFn()\n      },\n      EXECUTING_WITH_ERROR: {\n        progressBarClass: 'progress progress-striped active',\n        progressBarColor: `${staticContentOfClass}-danger`,\n        progressBarStatus: this.progressBarProgressFn()\n      },\n      FAILED: {\n        progressBarClass: 'progress',\n        progressBarColor: `${staticContentOfClass}-danger`,\n        progressBarStatus: 100\n      },\n      SUCCESSFUL: {\n        progressBarClass: 'progress',\n        progressBarColor: `${staticContentOfClass}-success`,\n        progressBarStatus: 100\n      }\n    };\n\n    assign(this, progressBarState[this.bulkOperation.generalStatus]);\n  }\n\n  editSchedule() {\n    const rescheduledOperation = cloneDeep(this.bulkOperation);\n    const initialState = {\n      bulkOperation: rescheduledOperation\n    };\n    const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' } as ModalOptions;\n    this.bsModalRef = this.bsModalService.show(\n      BulkOperationsRescheduleModalComponent,\n      modalOptions\n    );\n  }\n\n  async cancelBulkOperation() {\n    try {\n      await this.modal.confirm(\n        gettext('Cancel bulk operation'),\n        gettext('You are about to cancel the bulk operation. Do you want to proceed?'),\n        Status.DANGER\n      );\n      await this.bulkOperationsService.deleteBulkOperation(this.bulkOperation.id);\n      this.reload.emit();\n      this.alert.success(gettext('Operation canceled.'));\n    } catch (er) {\n      this.alert.addServerFailure(er);\n    }\n  }\n\n  retryFailedOperation() {\n    const clonedBulk = cloneDeep(this.bulkOperation);\n\n    // change the id to failedparentId similar to the logic in deviceBulkControl.service.js\n    delete clonedBulk.groupId;\n    clonedBulk.failedParentId = this.bulkOperation.id;\n\n    // show reschdedule modal:\n    const initialState = {\n      bulkOperation: clonedBulk,\n      isRetryOperation: true\n    };\n    const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' } as ModalOptions;\n    this.bsModalRef = this.bsModalService.show(\n      BulkOperationsRescheduleModalComponent,\n      modalOptions\n    );\n    this.bsModalRef.content.closeSubject.subscribe(() => {\n      this.reload.emit();\n    });\n  }\n\n  async setToSuccessful() {\n    try {\n      await this.modal.confirm(\n        gettext('Set manually bulk operation to SUCCESSFUL'),\n        gettext(\n          'You are about to change the bulk operation status to SUCCESSFUL. Do you want to proceed?'\n        ),\n        Status.DANGER\n      );\n\n      await this.bulkOperationsService.updateBulkOperation({\n        id: this.bulkOperation.id,\n        generalStatus: OperationBulkGeneralStatus.SUCCESSFUL\n      });\n      this.reload.emit();\n      this.alert.success(gettext('Operation status changed to SUCCESSFUL.'));\n    } catch (er) {\n      this.alert.addServerFailure(er);\n    }\n  }\n\n  openFailedOperation(failedParentId) {\n    this.showFailedOperation.emit(failedParentId);\n  }\n\n  isStatusScheduled() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.SCHEDULED;\n  }\n\n  isStatusExecutingOrExecutingWithError() {\n    return (\n      this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING ||\n      this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING_WITH_ERROR\n    );\n  }\n\n  allOperationsCreated() {\n    return (\n      this.bulkOperation.progress.all ===\n      this.bulkOperation.progress.executing +\n        this.bulkOperation.progress.failed +\n        this.bulkOperation.progress.pending +\n        this.bulkOperation.progress.successful\n    );\n  }\n\n  isStatusCanceled() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.CANCELED;\n  }\n\n  isStatusFailed() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.FAILED;\n  }\n}\n","import { Component, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { IOperationBulk, IResultList } from '@c8y/client';\nimport { OperationBulkRealtimeService, DatePickerComponent } from '@c8y/ngx-components';\nimport { flatten } from 'lodash-es';\nimport { BehaviorSubject, Observable, combineLatest, pipe } from 'rxjs';\nimport { map, tap, switchMap, withLatestFrom, shareReplay } from 'rxjs/operators';\nimport { StatusFilterComponent, IStatusOption } from '@c8y/ngx-components/operations/status-filter';\nimport {\n  BulkOperationsService,\n  OperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationModalsService } from './modals/bulk-operation-modals.service';\nimport { BulkOperationListItemComponent } from './bulk-operation-list-item.component';\nimport { BULK_OPERATION_STATUS_OPTIONS } from './bulk-operation-list-item.model';\n@Component({\n  selector: 'c8y-bulk-operations',\n  templateUrl: './bulk-operations-list.component.html',\n  providers: [OperationBulkRealtimeService]\n})\nexport class BulkOperationsListComponent {\n  selectedTypeFilters = this.getTypeFilters();\n  bulkOperationStatusOptions: IStatusOption[] = BULK_OPERATION_STATUS_OPTIONS;\n\n  filterPipe;\n  refreshLoading: boolean = false;\n  statusFilter$: BehaviorSubject<IStatusOption[]> = new BehaviorSubject(null);\n  typeFilter$: BehaviorSubject<OperationType[]> = new BehaviorSubject(null);\n  timeFilter$: BehaviorSubject<any> = new BehaviorSubject(null);\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  @ViewChildren(BulkOperationListItemComponent) listItems: QueryList<\n    BulkOperationListItemComponent\n  >;\n  @ViewChild('statusFilter', { static: true }) statusFilter: StatusFilterComponent;\n  @ViewChild(DatePickerComponent, { static: true }) datePicker: DatePickerComponent;\n\n  bulkOperations$: Observable<IResultList<IOperationBulk>> = combineLatest(\n    this.statusFilter$,\n    this.timeFilter$,\n    this.typeFilter$,\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.refreshLoading = true;\n    }),\n    switchMap(([statusFilters, timeFilters]) => this.filter(statusFilters, timeFilters)),\n    withLatestFrom(this.typeFilter$),\n    map(([result, typeFilter]: [IResultList<IOperationBulk>, OperationType[]]) => {\n      this.filterPipe = pipe(map((data: []) => this.filterByType(data, typeFilter)));\n      return { ...result, data: this.filterByType(result.data, typeFilter) };\n    }),\n    tap(() => {\n      this.refreshLoading = false;\n    }),\n    shareReplay(1)\n  );\n\n  private allFilterFragments: string[];\n\n  constructor(\n    public realtime: OperationBulkRealtimeService,\n    private bulkOperationsService: BulkOperationsService,\n    private bulkOperationModalsService: BulkOperationModalsService\n  ) {\n    this.allFilterFragments = this.flattenFilterFragments(this.getTypeFilters());\n  }\n\n  filterByType(bulkOperations: IOperationBulk[], typeFilter) {\n    const flattenedFragments: string[] = this.flattenFilterFragments(typeFilter);\n    if (\n      // return data unfiltered if no filters selected...\n      !flattenedFragments.length ||\n      // ...or when all filters are selected\n      this.allFilterFragments.every(fragment => flattenedFragments.includes(fragment))\n    ) {\n      return bulkOperations;\n    }\n\n    const filteredData = bulkOperations.filter(item => {\n      return Object.keys(item.operationPrototype).some(key => flattenedFragments.includes(key));\n    });\n\n    return filteredData;\n  }\n\n  resetFilter() {\n    this.statusFilter$.next(null);\n    this.timeFilter$.next(null);\n    this.typeFilter$.next(null);\n\n    this.datePicker.clearFilter();\n    this.selectedTypeFilters = this.getTypeFilters();\n    this.statusFilter.statusOptions.map(option => {\n      option.selected = false;\n      return option;\n    });\n  }\n\n  isFilterApplied() {\n    return (\n      this.statusFilter$.getValue() || this.typeFilter$.getValue() || this.timeFilter$.getValue()\n    );\n  }\n\n  filter(statusFilters, timeFilter) {\n    const status =\n      statusFilters && statusFilters.length > 0\n        ? {\n            generalStatus: flatten(statusFilters.map(statusFilter => statusFilter.generalStatus))\n          }\n        : {};\n\n    const time = timeFilter\n      ? {\n          ...(timeFilter.dateFrom && {\n            dateFrom: timeFilter.dateFrom.toISOString()\n          }),\n          ...(timeFilter.dateTo && {\n            dateTo: timeFilter.dateTo.toISOString()\n          })\n        }\n      : {};\n    return this.getBulkOperations({ ...status, ...time });\n  }\n\n  getBulkOperations(filter?) {\n    return this.bulkOperationsService.getBulkOperations(filter);\n  }\n\n  getTypeFilters() {\n    return this.bulkOperationsService.getBulkTypes();\n  }\n\n  addBulkOperation() {\n    this.bulkOperationModalsService.showNewBulkOperationModal();\n  }\n\n  openFailedOperation(failedParentId) {\n    this.listItems.forEach(item => {\n      if (item.bulkOperation.id === failedParentId) {\n        item.listItem.collapsed = false;\n        item.listItem.element.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    });\n  }\n\n  compareOperations(operationA: IOperationBulk, operationB: IOperationBulk): number {\n    return new Date(operationA.startDate).getTime() - new Date(operationB.startDate).getTime();\n  }\n\n  private flattenFilterFragments(filters: OperationType[]): string[] {\n    return (filters || []).reduce((flattened, current) => flattened.concat(current.fragments), []);\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { gettext, Tab } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-bulk-operation-details-tabs',\n  templateUrl: './bulk-operation-details-tabs.component.html'\n})\nexport class BulkOperationDetailsTabsComponent implements OnInit {\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  readOnly: boolean = false;\n  @Output() onRetryFailedOperations: EventEmitter<Partial<IOperationBulk>> = new EventEmitter();\n  @Output() showFailedOperation: EventEmitter<number> = new EventEmitter();\n\n  @ViewChild('details', { static: true }) detailsTemplate: any;\n  @ViewChild('audit', { static: true }) auditTemplate: any;\n\n  tabs: Tab[] = [];\n  template: ViewContainerRef;\n\n  ngOnInit(): void {\n    this.template = this.detailsTemplate;\n\n    this.tabs = [\n      {\n        label: gettext('Details'),\n        path: null,\n        icon: 'asterisk',\n        template: this.detailsTemplate\n      },\n      {\n        label: gettext('History of changes'),\n        path: null,\n        icon: 'archive',\n        template: this.auditTemplate\n      }\n    ];\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IManagedObject, IOperationBulk } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-bulk-operation-details',\n  templateUrl: './bulk-operation-details.component.html'\n})\nexport class BulkOperationDetailsComponent {\n  allFilterIsSelected: boolean = false;\n  collapsed: boolean;\n  device: IManagedObject;\n\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  readOnly: boolean = false;\n  @Output() showFailedOperation: EventEmitter<number> = new EventEmitter();\n\n  scrollToRetriedFromOperation(failedOperationId) {\n    this.showFailedOperation.emit(failedOperationId);\n  }\n}\n","import { gettext } from '@c8y/ngx-components';\n\nexport const SINGLE_OP_STATUS_NAMES = {\n  PENDING: gettext('Pending'),\n  EXECUTING: gettext('Executing'),\n  FAILED: gettext('Failed'),\n  SUCCESSFUL: gettext('Successful'),\n  ALL: gettext('All')\n};\n\nexport const SINGLE_OP_STATUS_PROPERTIES = [\n  {\n    label: SINGLE_OP_STATUS_NAMES.PENDING,\n    iconClass: 'fa fw fa-clock-o text-info',\n    selected: false\n  },\n  {\n    label: SINGLE_OP_STATUS_NAMES.EXECUTING,\n    iconClass: 'fa fw fa-refresh text-info',\n    selected: false\n  },\n  {\n    label: SINGLE_OP_STATUS_NAMES.SUCCESSFUL,\n    iconClass: 'fa fw fa-check-circle text-success',\n    selected: false\n  },\n  {\n    label: SINGLE_OP_STATUS_NAMES.FAILED,\n    iconClass: 'fa fw fa-exclamation-circle text-danger',\n    selected: false\n  }\n];\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { IOperation, IOperationBulk, IResultList } from '@c8y/client';\nimport { StatusFilterComponent, IStatusOption } from '@c8y/ngx-components/operations/status-filter';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';\n\n@Component({\n  selector: 'c8y-single-operations-list',\n  templateUrl: './single-operations-list.component.html'\n})\nexport class SingleOperationsListComponent implements AfterViewInit, OnChanges {\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  readOnly: boolean = false;\n  @Output() onRetryFailedOperations: EventEmitter<Partial<IOperationBulk>> = new EventEmitter();\n\n  @ViewChild(StatusFilterComponent, { static: false })\n  statusFilter: StatusFilterComponent;\n\n  singleOperationStatusProperties = SINGLE_OP_STATUS_PROPERTIES;\n  singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;\n  singleOperations: IResultList<IOperation>;\n\n  constructor(private bulkOperationsService: BulkOperationsService) {}\n\n  async ngAfterViewInit() {\n    if (this.statusFilter) {\n      this.filterOperationsByType();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.bulkOperation && !changes.bulkOperation.firstChange) {\n      this.filterOperationsByType();\n    }\n  }\n\n  filterOperationsByType() {\n    if (this.statusFilter) {\n      const typeFilter = this.getFilterTypeOfSingleOperations();\n\n      this.statusFilter.preset(\n        typeFilter === this.singleOperationStatusNames.ALL\n          ? []\n          : [{ label: typeFilter } as IStatusOption]\n      );\n    } else {\n      setTimeout(this.filterOperationsByType.bind(this));\n    }\n  }\n\n  getFilterTypeOfSingleOperations() {\n    const progress = this.bulkOperation.progress;\n\n    if (progress.failed > 0) {\n      return this.singleOperationStatusNames.FAILED;\n    } else if (progress.failed === 0 && progress.successful === 0 && progress.pending === 0) {\n      return this.singleOperationStatusNames.EXECUTING;\n    } else if (progress.failed === 0 && progress.successful === 0 && progress.executing === 0) {\n      return this.singleOperationStatusNames.PENDING;\n    } else if (progress.failed === 0 && progress.pending === 0 && progress.executing === 0) {\n      return this.singleOperationStatusNames.SUCCESSFUL;\n    }\n\n    return this.singleOperationStatusNames.ALL;\n  }\n\n  async getOperationsByStatus(filter: IStatusOption[]) {\n    this.singleOperations = await this.bulkOperationsService.getSingleOperationsByStatus(\n      filter[0] && filter[0].label,\n      this.bulkOperation.id\n    );\n  }\n\n  retryBulkOperation() {\n    this.onRetryFailedOperations.emit(this.bulkOperation);\n  }\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport {\n  BulkOperationsService,\n  C8Y_BULK_TYPE_FRAGMENTS\n} from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { omit } from 'lodash-es';\nimport { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';\n\n@Component({\n  selector: 'c8y-single-operation-item',\n  templateUrl: './single-operation-item.component.html'\n})\nexport class SingleOperationItemComponent {\n  device = {};\n  showIfTextTruncated = false;\n  singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;\n  singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;\n  iconClass: string;\n  @Input()\n  operation: IOperation;\n  @Input()\n  readOnly: boolean = false;\n  @ViewChild('failureReason', { static: true }) failureReasonRef: ElementRef;\n\n  constructor(\n    private bulkOperationsService: BulkOperationsService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.iconClass = this.getIconClass();\n    this.device = await this.getDeviceMO(this.operation.deviceId);\n  }\n\n  ngAfterViewInit() {\n    this.isTextTruncated();\n  }\n\n  async retrySingleOperation(singleOperation) {\n    const operationToCreate = omit(singleOperation, [\n      'id',\n      'self',\n      'status',\n      'failureReason',\n      'creationTime',\n      'delivery'\n    ]);\n\n    try {\n      await this.bulkOperationsService.createSingleOperation(operationToCreate);\n      this.alertService.success(gettext('Operation created.'));\n    } catch (er) {\n      this.alertService.addServerFailure(er);\n    }\n  }\n\n  getIconClass() {\n    return this.singleOperationsStatusProperties.find(\n      operationProperties => operationProperties.label.toUpperCase() === this.operation.status\n    ).iconClass;\n  }\n\n  private async getDeviceMO(deviceId) {\n    const inventoryMO = await this.bulkOperationsService.getManagedObject(deviceId);\n    if (inventoryMO) {\n      return inventoryMO.data;\n    }\n  }\n\n  private isTextTruncated() {\n    if (this.operation.failureReason) {\n      const el = this.failureReasonRef.nativeElement;\n      this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;\n    }\n  }\n}\n","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  BulkOperationsService,\n  OperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationModalsService } from '../modals/bulk-operation-modals.service';\n\n@Component({\n  selector: 'c8y-bulk-operation-type-list',\n  templateUrl: './bulk-operation-type-list.component.html'\n})\nexport class BulkOperationTypeListComponent implements OnInit {\n  @Output() onCustomType: EventEmitter<OperationType> = new EventEmitter();\n  bulkList: OperationType[] = [];\n\n  constructor(\n    private router: Router,\n    private bulkOperationsService: BulkOperationsService,\n    private bulkOperationModalsService: BulkOperationModalsService\n  ) {}\n\n  ngOnInit() {\n    this.bulkList = this.bulkOperationsService.getBulkTypes();\n  }\n\n  handleClick(item: OperationType) {\n    if (item.path) {\n      this.bulkOperationModalsService.hideNewBulkOperationModal();\n      this.router.navigateByUrl(item.path);\n    } else if (item.component) {\n      this.onCustomType.emit(item);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule, Route } from '@c8y/ngx-components';\nimport { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';\nimport { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';\nimport { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\n\nimport { BulkOperationDetailsService } from './bulk-operation-details.service';\nimport { BulkOperationsListComponent } from './bulk-operations-list.component';\nimport { BulkOperationListItemComponent } from './bulk-operation-list-item.component';\nimport { BulkOperationDetailsTabsComponent } from './bulk-operation-details-tabs.component';\nimport { BulkOperationDetailsComponent } from './bulk-operation-details.component';\nimport { SingleOperationsListComponent } from './single-operations-list.component';\nimport { SingleOperationItemComponent } from './single-operation-item.component';\nimport { BulkOperationWrapperComponent } from './bulk-operation-wrapper.component';\nimport { BulkOperationTypeListComponent } from './type-list/bulk-operation-type-list.component';\nimport { BulkOperationModalsService } from './modals/bulk-operation-modals.service';\nimport { BulkOperationsModalComponent } from './modals/bulk-operations-modal.component';\nimport { BulkOperationsRescheduleModalComponent } from './modals/bulk-operations-reschedule-modal.component';\n\nexport const bulkOperationListRoutes: Route[] = [\n  {\n    path: 'devicecontrol/bulk',\n    component: BulkOperationsListComponent\n  }\n];\n\n/**\n * This module allows for displaying the list of bulk operations and their details.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    PopoverModule,\n    TooltipModule,\n    StatusFilterModule,\n    OperationSummaryModule,\n    BulkOperationSchedulerModule,\n    RouterModule.forChild(bulkOperationListRoutes)\n  ],\n  providers: [BulkOperationDetailsService, BulkOperationModalsService],\n  declarations: [\n    BulkOperationsListComponent,\n    BulkOperationListItemComponent,\n    BulkOperationDetailsTabsComponent,\n    BulkOperationDetailsComponent,\n    SingleOperationsListComponent,\n    SingleOperationItemComponent,\n    BulkOperationWrapperComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent,\n    BulkOperationsRescheduleModalComponent\n  ],\n  entryComponents: [\n    BulkOperationsListComponent,\n    BulkOperationListItemComponent,\n    BulkOperationDetailsTabsComponent,\n    BulkOperationDetailsComponent,\n    SingleOperationsListComponent,\n    SingleOperationItemComponent,\n    BulkOperationWrapperComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent,\n    BulkOperationsRescheduleModalComponent\n  ],\n  exports: [\n    BulkOperationsListComponent,\n    BulkOperationListItemComponent,\n    BulkOperationDetailsTabsComponent,\n    BulkOperationDetailsComponent,\n    SingleOperationsListComponent,\n    SingleOperationItemComponent,\n    BulkOperationWrapperComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent,\n    BulkOperationsRescheduleModalComponent\n  ]\n})\nexport class BulkOperationsListModule {}\n"],"names":["gettext","BulkOperationType","get","Validators","FormBuilder","tslib_1.__decorate","Input","Component","TemplateRef","Directive","EventEmitter","Subject","takeUntil","Status","BulkOperationsService","ModalService","AlertService","Output","ContentChildren","ViewChild","C8yStepper","tslib_1.__extends","ActivatedRoute","ComponentFactoryResolver","ChangeDetectorRef","ViewContainerRef","TranslateService","BehaviorSubject","combineLatest","switchMap","shareReplay","debounceTime","distinctUntilChanged","from","uniqWith","isEqual","DeviceProfileService","tap","RepositoryType","RepositoryService","memoize","property","catchError","of","distinctUntilKeyChanged","map","InventoryService","uniq","has","ViewChildren","ListItemRadioComponent","TypeDeviceGridColumn","StatusDeviceGridColumn","NameDeviceGridColumn","ModelDeviceGridColumn","GroupDeviceGridColumn","RegistrationDateDeviceGridColumn","AlarmsDeviceGridColumn","FilteringActionType","DeviceGridComponent","Router","Injectable","NgModule","CoreModule","FormsModule","ReactiveFormsModule","RouterModule","TooltipModule","PopoverModule","CollapseModule","BsDropdownModule","BsDatepickerModule","TimepickerModule","RepositoryModule","DeviceProfileModule","DeviceGridModule","SingleOperationDetailsModule","OperationSummaryModule","BulkOperationSchedulerModule","HOOK_TABS","throttleTime","isEmpty","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","BsModalRef","OperationService","BsModalService","operationStatusIcons","operationStatusClasses","OperationStatus","assign","BulkOperationDetailsService","BulkOperationsListModule","BulkOperationsServiceModule","coerceBooleanProperty","HostBinding","InjectionToken","isUndefined","OperationBulkService","Location","Inject","tslib_1.__param","OperationBulkGeneralStatus","cloneDeep","withLatestFrom","pipe","flatten","OperationBulkRealtimeService","DatePickerComponent","StatusFilterComponent","omit","StatusFilterModule"],"mappings":"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"}