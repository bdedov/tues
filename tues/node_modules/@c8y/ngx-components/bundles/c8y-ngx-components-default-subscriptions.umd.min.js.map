{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions.model.ts","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions.service.ts","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions.component.ts","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions.guard.ts","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions-navigation.factory.ts","ng://@c8y/ngx-components/default-subscriptions/default-subscriptions.module.ts"],"names":["DefaultSubscriptionsContext","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","__spread","concat","DefaultSubscriptionsService","applicationService","tenantService","tenantOptionsService","humanizeAppNamePipe","prototype","getSubscribableTenantApps","current","currentTenant","_a","data","listByTenant","pageSize","allApps","ownApps","filter","app","owner","tenant","id","name","inheritedApps","filteredApps","forEach","inheritedApp","some","filteredApp","all","map","_this","transform","pipe","debounceTime","take","toPromise","humanizedName","filteredAppsWithHumanizedNames","sortedAppsWithHumanizedNames","sortBy","getDefaultSubscriptionsEvaluatedFromParentTenant","getDefaultSubscriptions","DefaultSubscriptionsContextTenant","PARENT_TENANT","getDefaultSubscriptionsFromCurrentTenant","CURRENT_TENANT","saveDefaultSubscriptionsToCurrentTenant","defaultSubscriptions","saveOnCreationSubscriptions","saveOnUpgradeSubscriptions","contextTenant","tenantOptionsParams","evaluate","overridable","getTenantOptions","_b","onCreationApps","onCreationMicroservices","onUpgradeAppsEnabled","onUpgradeApps","onUpgradeMicroservicesEnabled","onUpgradeMicroservices","onCreationSubscriptions","namesToPartialApps","appsNamesStr","microservicesNamesStr","onUpgradeAppsDefault","onUpgradeMicroservicesDefault","onUpgradeSubscriptions","overrideOnCreationSubscriptions","overrideOnUpgradeSubscriptions","params","getTenantOption","category","setTenantOption","partialAppsListToAppsNames","partialAppsToMicroservicesNames","unsetTenantOption","option","defaultValue","detail","JSON","parse","isUndefined","update","delete","ex_2","res","status","split","trim","type","ApplicationType","MICROSERVICE","apps","join","ApplicationService","TenantService","TenantOptionsService","HumanizeAppNamePipe","Injectable","DefaultSubscriptionsComponent","fb","defaultSubscriptionsService","alertService","ngOnInit","loading","initForm","loadDefaultSubscriptions","form","group","appRows","array","controls","subscribedOnCreation","subscribedOnUpgrade","get","valueChanges","subscribe","onOverrideOnCreationSubscriptionsChange","onOverrideOnUpgradeSubscriptionsChange","shouldShowAppRow","appRowRawValue","isEmptyView","getRawValue","isSubscribed","subscribedApps","subscribedApp","save","getDefaultSubscriptionsForSave","success","gettext","addServerFailure","ex_1","enableSubscribeOnCreationCheckboxes","disableSubscribeOnCreationCheckboxes","restoreSubscribeOnCreationFromParent","appRowControl","enable","emitEvent","disable","patchValue","parentDefaultSubscriptions","enableSubscribeOnUpgradeCheckboxes","disableSubscribeOnUpgradeCheckboxes","restoreSubscribeOnUpgradeFromParent","_d","currentDefaultSubscriptions","_c","FormBuilder","AlertService","Component","selector","template","DefaultSubscriptionsGuard","tenantUiService","canActivate","undefined","active","isManagementTenant","isEnterpriseTenant","TenantUiService","DefaultSubscriptionsNavigationFactory","defaultSubscriptionsGuard","navNode","NavigatorNode","path","icon","parent","priority","component","DefaultSubscriptionsModule","NgModule","imports","CoreModule","ReactiveFormsModule","declarations","entryComponents","exports","providers","provide","HOOK_NAVIGATOR_NODES","useClass","multi","HOOK_ONCE_ROUTE","useValue","Éµ0"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { IApplication } from '@c8y/client';\n\n/** The list of partial application objects. */\nexport type PartialAppsList = Array<Partial<IApplication>>;\n\n/** The interface for default subscriptions configuration. */\nexport interface DefaultSubscriptions {\n  /** Whether the list of on tenant creation subscriptions is overridden in the current tenant. Won't be defined for inherited configuration. */\n  overrideOnCreationSubscriptions?: boolean;\n  /** The list of applications subscribed to new tenants on creation. */\n  onCreationSubscriptions: PartialAppsList;\n  /** Whether the list of on platform upgrade subscriptions is overridden in the current tenant. Won't be defined for inherited configuration. */\n  overrideOnUpgradeSubscriptions?: boolean;\n  /** The list of applications subscribed to existing tenants on platform upgrade. */\n  onUpgradeSubscriptions: PartialAppsList;\n}\n\n/** The context for evaluating default subscriptions configuration */\nexport enum DefaultSubscriptionsContext {\n  /** Current tenant context (only current tenant options are taken into account). */\n  CURRENT_TENANT,\n  /** Parent tenant context (only parent tenant options are taken into account). */\n  PARENT_TENANT\n}\n","import { Injectable } from '@angular/core';\nimport { isUndefined, sortBy } from 'lodash-es';\nimport { debounceTime, take } from 'rxjs/operators';\n\nimport {\n  IApplication,\n  ApplicationType,\n  ApplicationService,\n  ISystemOption,\n  TenantService,\n  TenantOptionsService\n} from '@c8y/client';\nimport { HumanizeAppNamePipe } from '@c8y/ngx-components';\n\nimport {\n  PartialAppsList,\n  DefaultSubscriptions,\n  DefaultSubscriptionsContext as DefaultSubscriptionsContextTenant\n} from './default-subscriptions.model';\n\n@Injectable()\nexport class DefaultSubscriptionsService {\n  constructor(\n    private applicationService: ApplicationService,\n    private tenantService: TenantService,\n    private tenantOptionsService: TenantOptionsService,\n    private humanizeAppNamePipe: HumanizeAppNamePipe\n  ) {}\n\n  /**\n   * Gets the list of applications which can be used in default subscriptions, i.e.:\n   * - current tenant's all own applications,\n   * - inherited applications, which do not have the same names as current tenant's own apps.\n   * The list is sorted alphabetically by humanized app name and contains up to 2000 items.\n   * @returns The list of applications, which can be used in default subscriptions.\n   */\n  async getSubscribableTenantApps(): Promise<IApplication[]> {\n    const currentTenant = (await this.tenantService.current()).data;\n\n    const allApps = (await this.applicationService.listByTenant(null, { pageSize: 2000 })).data;\n    const ownApps = allApps.filter(app => app.owner.tenant.id === currentTenant.name);\n    const inheritedApps = allApps.filter(app => app.owner.tenant.id !== currentTenant.name);\n\n    const filteredApps: IApplication[] = [...ownApps];\n    inheritedApps.forEach(inheritedApp => {\n      if (!filteredApps.some(filteredApp => filteredApp.name === inheritedApp.name)) {\n        filteredApps.push(inheritedApp);\n      }\n    });\n\n    const filteredAppsWithHumanizedNames = await Promise.all(\n      filteredApps.map(async app => {\n        const humanizedName = await this.humanizeAppNamePipe\n          .transform(app.name)\n          .pipe(\n            debounceTime(250),\n            take(1)\n          )\n          .toPromise();\n        return { app, humanizedName };\n      })\n    );\n    const sortedAppsWithHumanizedNames = sortBy(filteredAppsWithHumanizedNames, ['humanizedName']);\n    const sortedApps = sortedAppsWithHumanizedNames.map(({ app }) => app);\n\n    return sortedApps;\n  }\n\n  /**\n   * Gets the default subscriptions configuration inherited from parent tenant.\n   * @returns The default subscriptions object with settings from parent tenant.\n   */\n  async getDefaultSubscriptionsEvaluatedFromParentTenant(): Promise<DefaultSubscriptions> {\n    return this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.PARENT_TENANT);\n  }\n\n  /**\n   * Gets the default subscriptions configuration from the current tenant.\n   * @returns The default subscriptions object with settings from the current tenant.\n   */\n  async getDefaultSubscriptionsFromCurrentTenant(): Promise<DefaultSubscriptions> {\n    return this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.CURRENT_TENANT);\n  }\n\n  /**\n   * Saves given default subscriptions configuration to the current tenant\n   * (either sets, updates, or deletes corresponding tenant options).\n   * @param defaultSubscriptions The default subscriptions configuration to be saved.\n   */\n  async saveDefaultSubscriptionsToCurrentTenant(defaultSubscriptions: DefaultSubscriptions) {\n    await this.saveOnCreationSubscriptions(defaultSubscriptions);\n    await this.saveOnUpgradeSubscriptions(defaultSubscriptions);\n  }\n\n  /**\n   * Gets default subscriptions in the context of current or parent tenant.\n   * @param contextTenant Tells whether to use current or parent tenant as context.\n   */\n  private async getDefaultSubscriptions(\n    contextTenant: DefaultSubscriptionsContextTenant\n  ): Promise<DefaultSubscriptions> {\n    let tenantOptionsParams: object;\n    let overridable: boolean;\n\n    switch (contextTenant) {\n      case DefaultSubscriptionsContextTenant.CURRENT_TENANT:\n        tenantOptionsParams = { evaluate: 'current' };\n        overridable = true;\n        break;\n\n      case DefaultSubscriptionsContextTenant.PARENT_TENANT:\n        tenantOptionsParams = { evaluate: 'inherited' };\n        overridable = false;\n        break;\n    }\n\n    const {\n      onCreationApps,\n      onCreationMicroservices,\n      onUpgradeAppsEnabled,\n      onUpgradeApps,\n      onUpgradeMicroservicesEnabled,\n      onUpgradeMicroservices\n    } = await this.getTenantOptions(tenantOptionsParams);\n\n    const onCreationSubscriptions = this.namesToPartialApps({\n      appsNamesStr: onCreationApps,\n      microservicesNamesStr: onCreationMicroservices\n    });\n\n    const onUpgradeAppsDefault = overridable ? null : onCreationApps;\n    const onUpgradeMicroservicesDefault = overridable ? null : onCreationMicroservices;\n    const onUpgradeSubscriptions = this.namesToPartialApps({\n      appsNamesStr: onUpgradeAppsEnabled ? onUpgradeApps : onUpgradeAppsDefault,\n      microservicesNamesStr: onUpgradeMicroservicesEnabled\n        ? onUpgradeMicroservices\n        : onUpgradeMicroservicesDefault\n    });\n\n    const defaultSubscriptions: DefaultSubscriptions = {\n      onCreationSubscriptions,\n      onUpgradeSubscriptions\n    };\n\n    if (overridable) {\n      defaultSubscriptions.overrideOnCreationSubscriptions =\n        onCreationApps !== null || onCreationMicroservices !== null;\n      defaultSubscriptions.overrideOnUpgradeSubscriptions =\n        onUpgradeAppsEnabled || onUpgradeMicroservicesEnabled;\n    }\n\n    return defaultSubscriptions;\n  }\n\n  private async getTenantOptions(params = {}) {\n    return {\n      onCreationApps: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'default.tenant.applications'\n        },\n        null,\n        params\n      ),\n      onCreationMicroservices: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'default.tenant.microservices'\n        },\n        null,\n        params\n      ),\n      onUpgradeAppsEnabled: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.applications.enabled'\n        },\n        false,\n        params\n      ),\n      onUpgradeApps: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.applications'\n        },\n        null,\n        params\n      ),\n      onUpgradeMicroservicesEnabled: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.microservices.enabled'\n        },\n        false,\n        params\n      ),\n      onUpgradeMicroservices: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.microservices'\n        },\n        null,\n        params\n      )\n    };\n  }\n\n  private async saveOnCreationSubscriptions(defaultSubscriptions: DefaultSubscriptions) {\n    if (defaultSubscriptions.overrideOnCreationSubscriptions) {\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.applications',\n        value: this.partialAppsListToAppsNames(defaultSubscriptions.onCreationSubscriptions)\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.microservices',\n        value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onCreationSubscriptions)\n      });\n    } else {\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.applications'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.microservices'\n      });\n    }\n  }\n\n  private async saveOnUpgradeSubscriptions(defaultSubscriptions: DefaultSubscriptions) {\n    if (defaultSubscriptions.overrideOnUpgradeSubscriptions) {\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications.enabled',\n        value: 'true'\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices.enabled',\n        value: 'true'\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications',\n        value: this.partialAppsListToAppsNames(defaultSubscriptions.onUpgradeSubscriptions)\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices',\n        value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onUpgradeSubscriptions)\n      });\n    } else {\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications.enabled'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices.enabled'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices'\n      });\n    }\n  }\n\n  private async getTenantOption(option: ISystemOption, defaultValue = null, params = {}) {\n    let value;\n    try {\n      value = (await this.tenantOptionsService.detail(option, params)).data.value;\n      value = JSON.parse(value);\n    } catch (ex) {\n      value = !isUndefined(value) ? value : defaultValue;\n    }\n    return value;\n  }\n\n  private async setTenantOption(option: ISystemOption) {\n    return this.tenantOptionsService.update(option);\n  }\n\n  private async unsetTenantOption(option: ISystemOption) {\n    try {\n      await this.tenantOptionsService.delete(option);\n    } catch (ex) {\n      if (!ex || !ex.res || ex.res.status !== 404) {\n        throw ex;\n      }\n    }\n  }\n\n  private namesToPartialApps({\n    appsNamesStr,\n    microservicesNamesStr\n  }: {\n    appsNamesStr?: string;\n    microservicesNamesStr?: string;\n  }): PartialAppsList {\n    if (appsNamesStr === null && microservicesNamesStr === null) {\n      return null;\n    }\n\n    return [\n      ...(appsNamesStr || '')\n        .split(',')\n        .filter(name => name.length)\n        .map(name => ({ name: name.trim() })),\n      ...(microservicesNamesStr || '')\n        .split(',')\n        .filter(name => name.length)\n        .map(name => ({\n          name: name.trim(),\n          type: ApplicationType.MICROSERVICE\n        }))\n    ];\n  }\n\n  private partialAppsListToAppsNames(apps: PartialAppsList): string {\n    return apps\n      .filter(app => app.type !== ApplicationType.MICROSERVICE)\n      .map(app => app.name)\n      .join(',');\n  }\n\n  private partialAppsToMicroservicesNames(apps: PartialAppsList): string {\n    return apps\n      .filter(app => app.type === ApplicationType.MICROSERVICE)\n      .map(app => app.name)\n      .join(',');\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { IApplication } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DefaultSubscriptions, PartialAppsList } from './default-subscriptions.model';\nimport { DefaultSubscriptionsService } from './default-subscriptions.service';\n\n/**\n * The component shows the main view for managing default subscriptions configuration.\n */\n@Component({\n  selector: 'c8y-default-subscriptions',\n  templateUrl: './default-subscriptions.component.html'\n})\nexport class DefaultSubscriptionsComponent {\n  /** Default subscriptions inherited from parent tenant. */\n  parentDefaultSubscriptions: DefaultSubscriptions;\n  /** Default subscriptions defined in the current tenant. */\n  currentDefaultSubscriptions: DefaultSubscriptions;\n  /** Form object. */\n  form: FormGroup;\n  /** Whether the configuration is being loaded. */\n  loading: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private defaultSubscriptionsService: DefaultSubscriptionsService,\n    private alertService: AlertService\n  ) {}\n\n  /** Initializes the loading of the form and the current settings. */\n  async ngOnInit() {\n    this.loading = true;\n    await this.initForm();\n    await this.loadDefaultSubscriptions();\n    this.loading = false;\n  }\n\n  /** Loads the list of apps, builds the form and hooks value change events for override switches. */\n  async initForm() {\n    this.form = this.fb.group({\n      overrideOnCreationSubscriptions: [''],\n      overrideOnUpgradeSubscriptions: [''],\n      appRows: this.fb.array([])\n    });\n\n    const apps = await this.defaultSubscriptionsService.getSubscribableTenantApps();\n    const appRows = this.form.controls.appRows as FormArray;\n    apps.forEach(app => {\n      appRows.push(\n        this.fb.group({\n          app: [app],\n          subscribedOnCreation: [''],\n          subscribedOnUpgrade: ['']\n        })\n      );\n    });\n\n    this.form\n      .get('overrideOnCreationSubscriptions')\n      .valueChanges.subscribe(value => this.onOverrideOnCreationSubscriptionsChange(value));\n\n    this.form\n      .get('overrideOnUpgradeSubscriptions')\n      .valueChanges.subscribe(value => this.onOverrideOnUpgradeSubscriptionsChange(value));\n  }\n\n  /**\n   * Checks if given application row should be displayed.\n   * The row is displayed when any of its checkboxes is selected or any of the lists is being overridden.\n   */\n  shouldShowAppRow(appRowRawValue): boolean {\n    const { subscribedOnCreation, subscribedOnUpgrade } = appRowRawValue;\n    const { overrideOnCreationSubscriptions, overrideOnUpgradeSubscriptions } = this.form.value;\n\n    return (\n      subscribedOnCreation ||\n      subscribedOnUpgrade ||\n      overrideOnCreationSubscriptions ||\n      overrideOnUpgradeSubscriptions\n    );\n  }\n\n  /** Checks if there are no application rows to be displayed. */\n  isEmptyView(): boolean {\n    return !this.form\n      .getRawValue()\n      .appRows.some(appRowRawValue => this.shouldShowAppRow(appRowRawValue));\n  }\n\n  /**\n   * Checks if given application is subscribed (present in the given list of applications).\n   * @param app Application object to check.\n   * @param subscribedApps The list of application objects to check against.\n   * @returns True, if the application is present in the list.\n   */\n  isSubscribed(app: IApplication, subscribedApps: PartialAppsList): boolean {\n    return subscribedApps && subscribedApps.some(subscribedApp => subscribedApp.name === app.name);\n  }\n\n  /** Saves the current value of form object to backend. */\n  async save() {\n    try {\n      const defaultSubscriptions = this.getDefaultSubscriptionsForSave();\n      await this.defaultSubscriptionsService.saveDefaultSubscriptionsToCurrentTenant(\n        defaultSubscriptions\n      );\n      this.alertService.success(gettext('Saved.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOverrideOnCreationSubscriptionsChange(overrideOnCreationSubscriptions: boolean) {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    if (overrideOnCreationSubscriptions) {\n      this.enableSubscribeOnCreationCheckboxes();\n      return;\n    }\n    this.disableSubscribeOnCreationCheckboxes();\n    this.restoreSubscribeOnCreationFromParent();\n  }\n\n  private enableSubscribeOnCreationCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnCreation').enable({ emitEvent: false });\n    });\n  }\n\n  private disableSubscribeOnCreationCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnCreation').disable({ emitEvent: false });\n    });\n  }\n\n  private restoreSubscribeOnCreationFromParent() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnCreation: this.isSubscribed(\n          appRowControl.value.app,\n          this.parentDefaultSubscriptions.onCreationSubscriptions\n        )\n      });\n    });\n  }\n\n  private onOverrideOnUpgradeSubscriptionsChange(overrideOnUpgradeSubscriptions: boolean) {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    if (overrideOnUpgradeSubscriptions) {\n      this.enableSubscribeOnUpgradeCheckboxes();\n      return;\n    }\n    this.disableSubscribeOnUpgradeCheckboxes();\n    this.restoreSubscribeOnUpgradeFromParent();\n  }\n\n  private enableSubscribeOnUpgradeCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnUpgrade').enable({ emitEvent: false });\n    });\n  }\n\n  private disableSubscribeOnUpgradeCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnUpgrade').disable({ emitEvent: false });\n    });\n  }\n\n  private restoreSubscribeOnUpgradeFromParent() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnUpgrade: this.isSubscribed(\n          appRowControl.value.app,\n          this.parentDefaultSubscriptions.onUpgradeSubscriptions\n        )\n      });\n    });\n  }\n\n  private async loadDefaultSubscriptions() {\n    this.parentDefaultSubscriptions = await this.defaultSubscriptionsService.getDefaultSubscriptionsEvaluatedFromParentTenant();\n    this.currentDefaultSubscriptions = await this.defaultSubscriptionsService.getDefaultSubscriptionsFromCurrentTenant();\n\n    const {\n      overrideOnCreationSubscriptions,\n      overrideOnUpgradeSubscriptions\n    } = this.currentDefaultSubscriptions;\n    const onCreationSubscriptions = overrideOnCreationSubscriptions\n      ? this.currentDefaultSubscriptions.onCreationSubscriptions\n      : this.parentDefaultSubscriptions.onCreationSubscriptions;\n    const onUpgradeSubscriptions = overrideOnUpgradeSubscriptions\n      ? this.currentDefaultSubscriptions.onUpgradeSubscriptions\n      : this.parentDefaultSubscriptions.onUpgradeSubscriptions;\n\n    this.form.patchValue({\n      overrideOnCreationSubscriptions,\n      overrideOnUpgradeSubscriptions\n    });\n    (this.form.controls.appRows as FormArray).controls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnCreation: this.isSubscribed(appRowControl.value.app, onCreationSubscriptions),\n        subscribedOnUpgrade: this.isSubscribed(appRowControl.value.app, onUpgradeSubscriptions)\n      });\n    });\n  }\n\n  private getDefaultSubscriptionsForSave(): DefaultSubscriptions {\n    const { value } = this.form;\n    return {\n      overrideOnCreationSubscriptions: value.overrideOnCreationSubscriptions,\n      onCreationSubscriptions: value.overrideOnCreationSubscriptions\n        ? value.appRows.filter(app => app.subscribedOnCreation).map(app => app.app)\n        : null,\n      overrideOnUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions,\n      onUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions\n        ? value.appRows.filter(app => app.subscribedOnUpgrade).map(app => app.app)\n        : null\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { TenantUiService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DefaultSubscriptionsGuard implements CanActivate {\n  private active: boolean;\n\n  constructor(private tenantUiService: TenantUiService) {}\n\n  /**\n   * Checks if default subscriptions feature should be active,\n   * i.e. whether the current tenant is the management or an enterprise tenant.\n   * **Note: the check is executed only once in the runtime.**\n   *\n   * @returns True, if the feature should be active.\n   */\n  async canActivate(): Promise<boolean> {\n    if (this.active === undefined) {\n      this.active =\n        (await this.tenantUiService.isManagementTenant()) ||\n        (await this.tenantUiService.isEnterpriseTenant());\n    }\n    return this.active;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\nimport { DefaultSubscriptionsGuard } from './default-subscriptions.guard';\n\n@Injectable()\nexport class DefaultSubscriptionsNavigationFactory implements NavigatorNodeFactory {\n  private navNode = new NavigatorNode({\n    label: gettext('Default subscriptions'),\n    path: '/default-subscriptions',\n    icon: 'c8y-c8y-data',\n    parent: gettext('Applications'),\n    priority: 1000\n  });\n\n  constructor(private defaultSubscriptionsGuard: DefaultSubscriptionsGuard) {}\n\n  /** Returns the navigation node if the feature is active. */\n  async get(): Promise<NavigatorNode> {\n    if (await this.defaultSubscriptionsGuard.canActivate()) {\n      return this.navNode;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE, Route } from '@c8y/ngx-components';\n\nimport { DefaultSubscriptionsComponent } from './default-subscriptions.component';\nimport { DefaultSubscriptionsService } from './default-subscriptions.service';\nimport { DefaultSubscriptionsGuard } from './default-subscriptions.guard';\nimport { DefaultSubscriptionsNavigationFactory } from './default-subscriptions-navigation.factory';\n\n@NgModule({\n  imports: [CoreModule, ReactiveFormsModule],\n  declarations: [DefaultSubscriptionsComponent],\n  entryComponents: [DefaultSubscriptionsComponent],\n  exports: [DefaultSubscriptionsComponent],\n  providers: [\n    DefaultSubscriptionsService,\n    DefaultSubscriptionsGuard,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: DefaultSubscriptionsNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: [\n        {\n          path: 'default-subscriptions',\n          component: DefaultSubscriptionsComponent,\n          canActivate: [DefaultSubscriptionsGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class DefaultSubscriptionsModule {}\n"]}