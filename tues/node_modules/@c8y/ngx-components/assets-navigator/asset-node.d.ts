import { Paging } from '@c8y/client';
import { ClickOptions, NavigatorNode, DeviceStatusComponent } from '@c8y/ngx-components';
import { Subject } from 'rxjs';
import { AssetNodeMo, AssetNodeService } from './asset-node.service';
import { LoadMoreNode } from './load-more-node';
import { Action } from './action.enum';
export declare class AssetNode extends NavigatorNode {
    protected service: AssetNodeService;
    root: boolean;
    mo: any;
    readonly label: any;
    readonly hasChildren: boolean;
    readonly iconComponent: typeof DeviceStatusComponent;
    readonly isDevice: boolean;
    readonly isDeviceOrProbablyChildDevice: boolean;
    readonly isNeitherDeviceOrGroup: boolean;
    events: Subject<Action>;
    protected paging: Paging<AssetNodeMo>;
    protected loadMoreNode: LoadMoreNode;
    private onUpdateSubscription;
    constructor(service: AssetNodeService, config?: {});
    openOnStart(url: any): boolean;
    refresh(mo?: any, method?: string): void;
    click(options?: ClickOptions): void;
    sort(): void;
    addManagedObject(mo: any): void;
    isChildAddition(childAdditions: any, mo: any): any;
    destroy(): void;
    readonly canDrop: boolean;
    dragStart($event: any): void;
    dragEnd($event: any): void;
    drop($event: any): Promise<void>;
    hookEvents(): void;
    protected fetch(): Promise<any>;
    protected handleEvent(evt: Action): Promise<void>;
    protected addNodes(res: any): void;
    protected toggleLoadMore(show: boolean): void;
    private moveNode;
    private showDropConfirm;
    private verifyNodeAccess;
    private addMovedNode;
    private removeMovedNode;
    private updateIcon;
}
