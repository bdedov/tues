{"__symbolic":"module","version":4,"exports":[{"from":"./bulk-operations-service.module"},{"from":"./bulk-operations.service"},{"from":"./operation-details.model"},{"from":"./bulk-operation.model"},{"from":"./operation-type.model"},{"from":"./single-operation-details.component"}],"metadata":{"routes":[{"path":"devicecontrol","redirectTo":"devicecontrol/single","pathMatch":"full"},{"path":"devicecontrol/bulk/creation/:type","component":{"__symbolic":"reference","name":"BulkOperationsStepperContainerComponent"}},{"path":"devicecontrol/single/create-bulk/:operationId","component":{"__symbolic":"reference","name":"BulkOperationFromSingleComponent"}}],"OperationsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":53,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"BulkOperationStepper"},{"__symbolic":"reference","name":"BulkOperationsStepperContainerComponent"},{"__symbolic":"reference","name":"BulkOperationFromSingleComponent"},{"__symbolic":"reference","name":"CustomStep"},{"__symbolic":"reference","name":"DeviceSelectorComponent"},{"__symbolic":"reference","name":"StepperBulkTypeSoftware"},{"__symbolic":"reference","name":"StepperFirmware"},{"__symbolic":"reference","name":"StepperBulkTypeConfiguration"},{"__symbolic":"reference","name":"StepperBulkTypeDeviceProfile"},{"__symbolic":"reference","name":"OperationDetailsComponent"},{"__symbolic":"reference","name":"VersionOrPatchComponent"},{"__symbolic":"reference","name":"SelectFirmwareComponent"},{"__symbolic":"reference","name":"ConfirmSoftwareSelectionStepComponent"},{"__symbolic":"reference","name":"SelectSoftwareStepComponent"},{"__symbolic":"reference","name":"SelectDeviceProfileStepComponent"},{"__symbolic":"reference","name":"ConfirmDeviceProfileSelectionStepComponent"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":73,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":74,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":75,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":76,"character":4},"member":"forRoot"},"arguments":[{"__symbolic":"reference","name":"routes"},{"useHash":true}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/tooltip","name":"TooltipModule","line":77,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/popover","name":"PopoverModule","line":78,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/collapse","name":"CollapseModule","line":79,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/dropdown","name":"BsDropdownModule","line":80,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/datepicker","name":"BsDatepickerModule","line":81,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/timepicker","name":"TimepickerModule","line":82,"character":4},"member":"forRoot"}},{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryModule","line":83,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/device-profile","name":"DeviceProfileModule","line":84,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/device-grid","name":"DeviceGridModule","line":85,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/single-operation-details","name":"SingleOperationDetailsModule","line":86,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/operation-summary","name":"OperationSummaryModule","line":87,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-scheduler","name":"BulkOperationSchedulerModule","line":88,"character":4}],"exports":[{"__symbolic":"reference","name":"BulkOperationStepper"},{"__symbolic":"reference","name":"CustomStep"}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_TABS","line":91,"character":25},"useClass":{"__symbolic":"reference","name":"TabsFactory"},"multi":true}],"entryComponents":[{"__symbolic":"reference","name":"BulkOperationsStepperContainerComponent"}]}]}],"members":{}},"TabsFactory":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":6,"character":29}]}],"get":[{"__symbolic":"method"}]}},"OperationDetailsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"c8y-operation-details","template":"<div [formGroup]=\"fgOperationDescription\">\n  <c8y-form-group>\n    <label translate>Title</label>\n    <input\n      formControlName=\"description\"\n      class=\"form-control\"\n      [placeholder]=\"titlePlaceholder | translate\"\n      required\n    />\n    <c8y-messages *ngIf=\"fgOperationDescription?.controls?.description?.errors\">\n      <c8y-message *ngIf=\"fgOperationDescription.controls.description.errors.required\" translate>\n        This field is required.\n      </c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n  <c8y-form-group>\n    <label translate>Description</label>\n    <textarea\n      formControlName=\"note\"\n      class=\"form-control\"\n      [placeholder]=\"descriptionPlaceholder | translate\"\n      rows=\"3\"\n    ></textarea>\n  </c8y-form-group>\n  <c8y-operation-scheduler formControlName=\"schedule\"></c8y-operation-scheduler>\n</div>\n"}]}],"members":{"bulkOperationType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":49,"character":35}]}],"ngOnInit":[{"__symbolic":"method"}]}},"DeviceSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"c8y-device-selector","template":"<c8y-device-grid\n  [title]=\"'Select target devices' | translate\"\n  [columns]=\"columns\"\n  [actionControls]=\"[]\"\n  [infiniteScroll]=\"'auto'\"\n  (onDeviceQueryStringChange)=\"onDeviceQueryStringChange.emit($event)\"\n></c8y-device-grid>\n"}]}],"members":{"deviceGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":28,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components/device-grid","name":"DeviceGridComponent","line":28,"character":13},{"static":true}]}]}],"deviceTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"onDeviceQueryStringChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"BaseStepperComponent":{"__symbolic":"class","members":{"operationStepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":9,"character":3},"arguments":[{"__symbolic":"reference","name":"BulkOperationStepper"},{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}],"getStepDataKeyByIndex":[{"__symbolic":"method"}]}},"CustomStep":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":4,"character":1},"arguments":[{"selector":"[customStep]"}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":6,"character":3},"arguments":["customStep"]}]}],"completed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":7,"character":3},"arguments":["customStepCompleted"]}]}],"buttonsDisabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":8,"character":3},"arguments":["customStepButtonsDisabled"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}],"onNext":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3},"arguments":["customStepOnNext"]}]}]}},"bulkOperationListRoutes":[{"path":"devicecontrol/bulk","component":{"__symbolic":"reference","name":"BulkOperationsListComponent"}}],"BulkOperationsListModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":33,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":35,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap/popover","name":"PopoverModule","line":36,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap/tooltip","name":"TooltipModule","line":37,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/status-filter","name":"StatusFilterModule","line":38,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/operation-summary","name":"OperationSummaryModule","line":39,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-scheduler","name":"BulkOperationSchedulerModule","line":40,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":41,"character":4},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"bulkOperationListRoutes"}]}],"providers":[{"__symbolic":"reference","name":"BulkOperationDetailsService"},{"__symbolic":"reference","name":"BulkOperationModalsService"}],"declarations":[{"__symbolic":"reference","name":"BulkOperationsListComponent"},{"__symbolic":"reference","name":"BulkOperationListItemComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsTabsComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsComponent"},{"__symbolic":"reference","name":"SingleOperationsListComponent"},{"__symbolic":"reference","name":"SingleOperationItemComponent"},{"__symbolic":"reference","name":"BulkOperationWrapperComponent"},{"__symbolic":"reference","name":"BulkOperationTypeListComponent"},{"__symbolic":"reference","name":"BulkOperationsModalComponent"},{"__symbolic":"reference","name":"BulkOperationsRescheduleModalComponent"}],"entryComponents":[{"__symbolic":"reference","name":"BulkOperationsListComponent"},{"__symbolic":"reference","name":"BulkOperationListItemComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsTabsComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsComponent"},{"__symbolic":"reference","name":"SingleOperationsListComponent"},{"__symbolic":"reference","name":"SingleOperationItemComponent"},{"__symbolic":"reference","name":"BulkOperationWrapperComponent"},{"__symbolic":"reference","name":"BulkOperationTypeListComponent"},{"__symbolic":"reference","name":"BulkOperationsModalComponent"},{"__symbolic":"reference","name":"BulkOperationsRescheduleModalComponent"}],"exports":[{"__symbolic":"reference","name":"BulkOperationsListComponent"},{"__symbolic":"reference","name":"BulkOperationListItemComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsTabsComponent"},{"__symbolic":"reference","name":"BulkOperationDetailsComponent"},{"__symbolic":"reference","name":"SingleOperationsListComponent"},{"__symbolic":"reference","name":"SingleOperationItemComponent"},{"__symbolic":"reference","name":"BulkOperationWrapperComponent"},{"__symbolic":"reference","name":"BulkOperationTypeListComponent"},{"__symbolic":"reference","name":"BulkOperationsModalComponent"},{"__symbolic":"reference","name":"BulkOperationsRescheduleModalComponent"}]}]}],"members":{}},"BulkOperationDetailsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":9,"character":35},{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":10,"character":26}]}],"openDetails":[{"__symbolic":"method"}]}},"BulkOperationsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"c8y-bulk-operations","providers":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"OperationBulkRealtimeService","line":17,"character":14}],"template":"<c8y-title> {{ 'Device control' | translate }}</c8y-title>\n<c8y-action-bar-item itemClass=\"navbar-form\" [placement]=\"'left'\">\n  <label translate> Operation type</label>\n  <c8y-select\n    style=\"width: 180px;\"\n    [items]=\"getTypeFilters()\"\n    [selected]=\"selectedTypeFilters\"\n    (onChange)=\"selectedTypeFilters = $event; typeFilter$.next(selectedTypeFilters)\"\n  >\n  </c8y-select>\n</c8y-action-bar-item>\n<c8y-action-bar-item itemClass=\"btn-group\" [placement]=\"'left'\">\n  <c8y-status-filter\n    #statusFilter\n    [options]=\"bulkOperationStatusOptions\"\n    (onFilterChanged)=\"statusFilter$.next($event)\"\n  ></c8y-status-filter>\n</c8y-action-bar-item>\n<c8y-action-bar-item itemClass=\"navbar-form\" [placement]=\"'left'\">\n  <c8y-date-picker (onDateSelected)=\"timeFilter$.next($event)\"></c8y-date-picker>\n</c8y-action-bar-item>\n<c8y-action-bar-item [placement]=\"'right'\">\n  <c8y-realtime-btn [service]=\"realtime\"></c8y-realtime-btn>\n</c8y-action-bar-item>\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    (click)=\"addBulkOperation()\"\n    title=\"{{ 'New bulk operation' | translate }}\"\n  >\n    <i class=\"fa fa-plus-circle\"></i> {{ 'New bulk operation' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"reload$.next()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': refreshLoading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n<!-- Empty state  -->\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"(bulkOperations$ | async)?.data.length === 0 && !isFilterApplied()\"\n>\n  <h1 class=\"c8y-icon c8y-icon-energy c8y-icon-duocolor\"></h1>\n  <h3 translate>No items to display</h3>\n  <p translate>Bulk operations will be displayed here</p>\n  <button\n    type=\"button\"\n    title=\"{{ 'New bulk operation' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"addBulkOperation()\"\n    translate\n  >\n    New bulk operation\n  </button>\n</div>\n\n<!-- No results empty state -->\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"(bulkOperations$ | async)?.data.length === 0 && isFilterApplied()\"\n>\n  <h1 class=\"c8y-icon fa fa-search c8y-icon-duocolor\"></h1>\n  <h3 translate>No results to display.</h3>\n  <p translate>Adjust or reset the filter.</p>\n  <button\n    type=\"button\"\n    title=\"{{ 'Reset filter' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"resetFilter()\"\n    translate\n  >\n    Reset filter\n  </button>\n</div>\n\n<!-- Detailed list of operations + load more button -->\n<c8y-list-group\n  class=\"m-b-24\"\n  [ngClass]=\"{ 'dd-low': (bulkOperations$ | async)?.data.length < 10 }\"\n>\n  <div\n    class=\"page-sticky-header hidden-xs c8y-list__item--double-actions c8y-list__item\"\n    *ngIf=\"(bulkOperations$ | async)?.data.length\"\n  >\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i class=\"fa\"></i>\n      </div>\n      <div class=\"c8y-list__item__body\">\n        <div class=\"content-flex-57\">\n          <div class=\"col-5\">\n            {{ 'Operation' | translate }}\n          </div>\n          <div class=\"flex-grow\">\n            {{ 'Progress' | translate }}\n          </div>\n          <div class=\"col-4\">\n            {{ 'Status' | translate }}\n          </div>\n        </div>\n      </div>\n      <div class=\"c8y-list__item__actions\"></div>\n    </div>\n  </div>\n  <div\n    class=\"d-contents\"\n    *c8yFor=\"\n      let bulkOperation of bulkOperations$ | async;\n      let i = index;\n      realtime: realtime;\n      pipe: filterPipe;\n      comparator: compareOperations.bind(this);\n      loadMore: 'auto';\n    \"\n  >\n    <c8y-bulk-operation-list-item\n      [bulkOperation]=\"bulkOperation\"\n      (reload)=\"reload$.next()\"\n      (showFailedOperation)=\"openFailedOperation($event)\"\n      class=\"d-contents\"\n    >\n    </c8y-bulk-operation-list-item>\n  </div>\n</c8y-list-group>\n"}]}],"members":{"listItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":29,"character":3},"arguments":[{"__symbolic":"reference","name":"BulkOperationListItemComponent"}]}]}],"statusFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":32,"character":3},"arguments":["statusFilter",{"static":true}]}]}],"datePicker":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":33,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"DatePickerComponent","line":33,"character":13},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"OperationBulkRealtimeService","line":59,"character":21},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":60,"character":35},{"__symbolic":"reference","name":"BulkOperationModalsService"}]}],"filterByType":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}],"isFilterApplied":[{"__symbolic":"method"}],"filter":[{"__symbolic":"method"}],"getBulkOperations":[{"__symbolic":"method"}],"getTypeFilters":[{"__symbolic":"method"}],"addBulkOperation":[{"__symbolic":"method"}],"openFailedOperation":[{"__symbolic":"method"}],"compareOperations":[{"__symbolic":"method"}],"flattenFilterFragments":[{"__symbolic":"method"}]}},"BulkOperationListItemComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"c8y-bulk-operation-list-item","template":"<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !detailsCollapsed }\"\n  [collapsed]=\"detailsCollapsed\"\n  #listItem\n  id=\"{{ bulkOperation.id }}\"\n>\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-58': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-5\">\n      <span\n        class=\"text-truncate\"\n        title=\"{{ bulkOperation.id }} - {{\n          bulkOperation.operationPrototype.description | translate\n        }}\"\n      >\n        <strong class=\"text-muted m-r-4\">{{ bulkOperation.id }}</strong>\n        {{ bulkOperation.operationPrototype.description | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\">\n      <div class=\"m-t-8 visible-xs\"></div>\n      <hr *ngIf=\"isStatusCanceled(); else statusNotCanceled\" class=\"m-t-16 m-b-0\" />\n      <ng-template #statusNotCanceled>\n        <div [class]=\"progressBarClass\" title=\"{{ progressBarStatus | number: '1.0-0' }}%\">\n          <div\n            [class]=\"progressBarColor\"\n            role=\"progressbar\"\n            aria-valuenow=\"0\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            [style.width.%]=\"progressBarStatus\"\n          >\n            <span *ngIf=\"progressBarStatus !== 0\">{{ progressBarStatus | number: '1.0-0' }}%</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"p-t-8 visible-xs\"></div>\n      <small *ngIf=\"bulkOperation.progress.successful > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-check-circle text-success m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountSuccessful: bulkOperation.progress.successful }\"\n        >\n          {{ bulkOperationsCountSuccessful }} successful\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.failed > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-warning text-danger m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountFailed: bulkOperation.progress.failed }\"\n        >\n          {{ bulkOperationsCountFailed }} failed\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.pending > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-clock-o text-primary m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountPending: bulkOperation.progress.pending }\"\n        >\n          {{ bulkOperationsCountPending }} pending\n        </span>\n      </small>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <span class=\"text-label-small m-r-4\" translate>Start</span>\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>\n          {{ bulkOperation.startDate | c8yDate }}\n        </span>\n      </small>\n    </div>\n    <div class=\"m-r-16\" *ngIf=\"bulkOperationGeneralStatus.CANCELED !== bulkOperation.generalStatus\">\n      <span class=\"text-label-small m-r-4\" translate>Finish</span>\n\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>{{ finishDate | c8yDate }}</span>\n      </small>\n      <a\n        container=\"body\"\n        *ngIf=\"isStatusScheduled() || isStatusExecutingOrExecutingWithError()\"\n        class=\"btn-clean m-l-4\"\n        popover=\"{{ finishDatePopoverText | translate }}\"\n        placement=\"right\"\n        outsideClick=\"true\"\n      >\n        <i c8yIcon=\"question-circle-o text-primary\"></i>\n      </a>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!readOnly\">\n    <c8y-li-action\n      *ngIf=\"isStatusScheduled()\"\n      label=\"{{ 'Edit schedule' | translate }}\"\n      (click)=\"editSchedule()\"\n      icon=\"pencil\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"\n        isStatusScheduled() || (isStatusExecutingOrExecutingWithError() && !allOperationsCreated())\n      \"\n      label=\"{{ 'Cancel bulk operation' | translate }}\"\n      (click)=\"cancelBulkOperation()\"\n      icon=\"remove\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Retry failed operations' | translate }}\"\n      (click)=\"retryFailedOperation()\"\n      icon=\"repeat\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Set operation to SUCCESSFUL' | translate }}\"\n      (click)=\"setToSuccessful()\"\n      icon=\"check\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <c8y-bulk-operation-details-tabs\n      *ngIf=\"!listItem.collapsed\"\n      [bulkOperation]=\"bulkOperation\"\n      [readOnly]=\"readOnly\"\n      (onRetryFailedOperations)=\"retryFailedOperation()\"\n      (showFailedOperation)=\"openFailedOperation($event)\"\n    >\n    </c8y-bulk-operation-details-tabs>\n  </c8y-li-collapse>\n</c8y-li>\n"}]}],"members":{"bulkOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"detailsCollapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"showFailedOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":3}}]}],"reload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":3}}]}],"listItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":38,"character":3},"arguments":["listItem",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":53,"character":35},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":54,"character":19},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":55,"character":19},{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":56,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getIconClass":[{"__symbolic":"method"}],"calculateFinishDateMs":[{"__symbolic":"method"}],"progressBarProgressFn":[{"__symbolic":"method"}],"setProgressBar":[{"__symbolic":"method"}],"editSchedule":[{"__symbolic":"method"}],"cancelBulkOperation":[{"__symbolic":"method"}],"retryFailedOperation":[{"__symbolic":"method"}],"setToSuccessful":[{"__symbolic":"method"}],"openFailedOperation":[{"__symbolic":"method"}],"isStatusScheduled":[{"__symbolic":"method"}],"isStatusExecutingOrExecutingWithError":[{"__symbolic":"method"}],"allOperationsCreated":[{"__symbolic":"method"}],"isStatusCanceled":[{"__symbolic":"method"}],"isStatusFailed":[{"__symbolic":"method"}]}},"BulkOperationDetailsTabsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"c8y-bulk-operation-details-tabs","template":"<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn-clean\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-bulk-operation-details\n    [bulkOperation]=\"bulkOperation\"\n    [readOnly]=\"readOnly\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n  >\n  </c8y-bulk-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"bulkOperation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  [bulkOperation]=\"bulkOperation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n"}]}],"members":{"bulkOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"onRetryFailedOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":21,"character":3}}]}],"showFailedOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":22,"character":3}}]}],"detailsTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":24,"character":3},"arguments":["details",{"static":true}]}]}],"auditTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":25,"character":3},"arguments":["audit",{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}]}},"BulkOperationDetailsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"c8y-bulk-operation-details","template":"<div class=\"row d-flex-md v-fit m-t-16\">\n  <div class=\"col-md-3 flex-item-top\">\n    <div class=\"legend form-block\" translate>\n      Details\n    </div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n        <label class=\"small m-0\" translate>Start date</label>\n        <span class=\"flex-item-right\">{{ bulkOperation.startDate | c8yDate }}</span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n        <label class=\"small m-0\">\n          {{ 'Delay' | translate }}\n          <a\n            class=\"text-primary\"\n            tooltip=\"{{ 'Delay before sending the operation to the next device.' | translate }}\"\n            container=\"body\"\n          >\n            <i [c8yIcon]=\"'info-circle'\"></i>\n          </a>\n        </label>\n        <span [ngPlural]=\"bulkOperation.creationRamp\" class=\"flex-item-right\">\n          <ng-template ngPluralCase=\"=1\">\n            {{ bulkOperation.creationRamp }} <span translate>second</span>\n          </ng-template>\n          <ng-template ngPluralCase=\"other\">\n            {{ bulkOperation.creationRamp }} <span translate>seconds</span>\n          </ng-template>\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n        <label class=\"small m-0\" translate>Status</label>\n        <span class=\"flex-item-right text-uppercase\">\n          {{ bulkOperation.generalStatus.toString() | translate }}\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n        <label class=\"small flex-item-top\" translate>Result</label>\n        <div class=\"flex-row flex-grow flex-item-right flex-end\">\n          <div class=\"flex-col\">\n            <div *ngIf=\"bulkOperation.progress.successful > 0\" class=\"icon-flex flex-item-left\">\n              <i class=\"fa fw fa-check-circle text-success m-r-4\"></i>\n              <span\n                ngNonBindable\n                translate\n                [translateParams]=\"{\n                  bulkOperationsCountSuccessful: bulkOperation.progress.successful\n                }\"\n              >\n                {{ bulkOperationsCountSuccessful }} successful\n              </span>\n            </div>\n            <div class=\"icon-flex flex-item-left\" *ngIf=\"bulkOperation.progress.failed > 0\">\n              <i class=\"fa fw fa-warning text-danger m-r-4\"></i>\n              <span\n                ngNonBindable\n                translate\n                [translateParams]=\"{ bulkOperationsCountFailed: bulkOperation.progress.failed }\"\n              >\n                {{ bulkOperationsCountFailed }} failed\n              </span>\n            </div>\n            <div class=\"icon-flex flex-item-left\" *ngIf=\"bulkOperation.progress.pending > 0\">\n              <i class=\"fa fw fa-clock-o m-r-4 text-info\"></i>\n              <span\n                ngNonBindable\n                translate\n                [translateParams]=\"{ bulkOperationsCountPending: bulkOperation.progress.pending }\"\n              >\n                {{ bulkOperationsCountPending }} pending\n              </span>\n            </div>\n          </div>\n        </div>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"bulkOperation.failedParentId\">\n        <label class=\"small m-0\" translate>Retried from</label>\n        <span class=\"flex-item-right\">\n          <button\n            class=\"btn btn-default btn-xs\"\n            (click)=\"scrollToRetriedFromOperation(bulkOperation.failedParentId)\"\n          >\n            {{ bulkOperation.failedParentId }}\n          </button>\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"bulkOperation.note\">\n        <label class=\"small flex-item-top\" translate>Description</label>\n        <div class=\"flex-item-right text-right m-l-8\">\n          {{ bulkOperation.note }}\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-9 v-fit d-flex d-col\">\n    <div class=\"legend form-block\" translate>\n      Operation\n    </div>\n    <pre class=\"inner-scroll p-16 text-pre-wrap\">{{ bulkOperation.operationPrototype | json }}</pre>\n  </div>\n</div>\n"}]}],"members":{"bulkOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"showFailedOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":16,"character":3}}]}],"scrollToRetriedFromOperation":[{"__symbolic":"method"}]}},"SingleOperationsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"c8y-single-operations-list","template":"<ng-container\n  *ngIf=\"\n    bulkOperation.progress.failed ||\n    bulkOperation.progress.executing ||\n    bulkOperation.progress.pending ||\n    bulkOperation.progress.successful\n  \"\n>\n  <div class=\"legend form-block\" translate>\n    Operations\n  </div>\n  <div class=\"flex-row p-b-8\">\n    <div class=\"flex-grow p-b-8\">\n      <span class=\"m-r-4\" translate>Filter by status</span>\n      <c8y-status-filter\n        small\n        [options]=\"singleOperationStatusProperties\"\n        (onFilterChanged)=\"getOperationsByStatus($event)\"\n      ></c8y-status-filter>\n    </div>\n    <div class=\"p-b-8\" *ngIf=\"!readOnly && bulkOperation.progress.failed > 0\">\n      <button\n        class=\"btn btn-navbar\"\n        (click)=\"retryBulkOperation()\"\n        title=\"{{ 'Retry failed operations' | translate }}\"\n      >\n        <i class=\"fa fa-repeat m-r-4\"></i> <span translate>Retry failed operations</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"inner-scroll\">\n    <c8y-list-group>\n      <div class=\"d-contents\" *c8yFor=\"let operation of singleOperations; loadMore: 'auto'\">\n        <c8y-single-operation-item\n          [operation]=\"operation\"\n          [readOnly]=\"readOnly\"\n          style=\"display: contents;\"\n        >\n        </c8y-single-operation-item>\n      </div>\n\n      <c8y-li *ngIf=\"singleOperations && singleOperations.data.length === 0\">\n        <c8y-li-body>\n          <div class=\"c8y-empty-state text-center\">\n            <h2 class=\"c8y-icon c8y-icon-energy c8y-icon-duocolor m-b-16\"></h2>\n            <div>\n              <h3 translate>No single operations of the selected status to display.</h3>\n              <p class=\"m-b-16\" translate>Single operations will be displayed here</p>\n            </div>\n          </div>\n        </c8y-li-body>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</ng-container>\n"}]}],"members":{"bulkOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"onRetryFailedOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":3}}]}],"statusFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":26,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/status-filter","name":"StatusFilterComponent","line":26,"character":13},{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":33,"character":45}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"filterOperationsByType":[{"__symbolic":"method"}],"getFilterTypeOfSingleOperations":[{"__symbolic":"method"}],"getOperationsByStatus":[{"__symbolic":"method"}],"retryBulkOperation":[{"__symbolic":"method"}]}},"SingleOperationItemComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"c8y-single-operation-item","template":"<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{'content-flex-80': !readOnly, 'content-flex-50': readOnly}\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 v-fit-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i><span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"}]}],"members":{"operation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"failureReasonRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":24,"character":3},"arguments":["failureReason",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":27,"character":35},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":28,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"retrySingleOperation":[{"__symbolic":"method"}],"getIconClass":[{"__symbolic":"method"}],"getDeviceMO":[{"__symbolic":"method"}],"isTextTruncated":[{"__symbolic":"method"}]}},"BulkOperationWrapperComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-bulk-operations-wrapper","template":"<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Bulk operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-bulk-operation-list-item\n      [bulkOperation]=\"bulkOperation\"\n      [detailsCollapsed]=\"false\"\n      [readOnly]=\"true\"\n      (showFailedOperation)=\"bulkOperationDetailsService.openDetails($event)\"\n    ></c8y-bulk-operation-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"}]}],"members":{"bulkOperation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"BulkOperationDetailsService"},{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":14,"character":21}]}]}},"BulkOperationTypeListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-bulk-operation-type-list","template":"<div class=\"list-group list-group-links\">\n  <button\n    *ngFor=\"let item of bulkList\"\n    type=\"button\"\n    class=\"list-group-item flex-row\"\n    (click)=\"handleClick(item)\"\n  >\n    <div *ngIf=\"item.c8yIcon; else icon\" class=\"list-item-icon\">\n      <i [c8yIcon]=\"item.c8yIcon\"></i>\n    </div>\n    <ng-template #icon>\n      <div class=\"list-item-icon\">\n        <i c8yIcon=\"cogs\"></i>\n      </div>\n    </ng-template>\n    <div title=\"{{ item.name | translate }}\" class=\"list-item-body text-truncate\">\n      {{ item.name | translate }}\n    </div>\n  </button>\n</div>\n"}]}],"members":{"onCustomType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":17,"character":20},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":18,"character":35},{"__symbolic":"reference","name":"BulkOperationModalsService"}]}],"ngOnInit":[{"__symbolic":"method"}],"handleClick":[{"__symbolic":"method"}]}},"BulkOperationModalsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":8,"character":38}]}],"showNewBulkOperationModal":[{"__symbolic":"method"}],"hideNewBulkOperationModal":[{"__symbolic":"method"}]}},"BulkOperationsModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"c8y-bulk-operations-modal","template":"<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <h1 class=\"c8y-icon c8y-icon-energy\"></h1>\n    <h4 translate>New bulk operation</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body text-center\" [hidden]=\"showComponent\">\n      <h4 translate>Select one of the available options</h4>\n      <p c8y-guide-docs>\n        <small forceHtmlTranslate ngNonBindable>\n          Check the\n          <a c8y-guide-href=\"users-guide/device-management/#bulk-operation-wizard\"\n            >User guide`KEEP_ORIGINAL`</a\n          >\n          for more details.</small\n        >\n      </p>\n    </div>\n\n    <c8y-bulk-operation-type-list\n      (onCustomType)=\"createComponent($event)\"\n    ></c8y-bulk-operation-type-list>\n    <template #container></template>\n  </div>\n  <div class=\"modal-footer\" [hidden]=\"showComponent\">\n    <button\n      (click)=\"cancel()\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n    >\n      <span translate>Cancel</span>\n    </button>\n  </div>\n</div>\n"}]}],"members":{"container":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":9,"character":3},"arguments":["container",{"static":false,"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":9,"character":49}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":11,"character":34},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":11,"character":64}]}],"cancel":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}]}},"BulkOperationsRescheduleModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-bulk-operations-reschedule-modal","template":"<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <h1 class=\"c8y-icon c8y-icon-energy\"></h1>\n    <h4>{{ modalTitle | translate }}</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\">\n      <div class=\"text-center\">\n        <c8y-operation-summary\n          [description]=\"bulkOperation.operationPrototype.description\"\n        ></c8y-operation-summary>\n      </div>\n      <div class=\"p-t-16 center-block\" style=\"max-width: 300px;\">\n        <c8y-operation-scheduler\n          [(ngModel)]=\"dateAndDelay\"\n          #scheduler=\"ngModel\"\n        ></c8y-operation-scheduler>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"onCancel()\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n    >\n      <span translate>Cancel</span>\n    </button>\n    <button\n      id=\"save-btn\"\n      (click)=\"onSave()\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Save' | translate }}\"\n      [disabled]=\"scheduler?.control?.errors\"\n    >\n      <span translate>Save</span>\n    </button>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":20,"character":23},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":21,"character":35},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":22,"character":19}]}],"ngOnInit":[{"__symbolic":"method"}],"onDateAndDelaySelect":[{"__symbolic":"method"}],"getTitle":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"onSave":[{"__symbolic":"method"}]}},"BulkOperationFromSingleComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"BaseStepperComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"bulk-operation-from-single","template":"<c8y-bulk-operation-stepper> </c8y-bulk-operation-stepper>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":16,"character":28},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":17,"character":34}]}],"retrieveOperationPrototype":[{"__symbolic":"method"}]}},"StepperBulkTypeDeviceProfile":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"BaseStepperComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-stepper-bulk-type-device-profile","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select device profile' | translate; \n      completed: !!selectedDeviceProfile;\n      buttonsDisabled: !selectedDeviceProfile; \n      onNext: goToConfirmSelection.bind(this)\"\n  >\n    <c8y-select-device-profile-step\n      (deviceProfile)=\"onDeviceProfileSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-device-profile-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected device profile' | translate\">\n    <c8y-confirm-device-profile-selection-step\n      class=\"d-contents\"\n      [selectedDeviceProfile]=\"selectedDeviceProfile\"\n    ></c8y-confirm-device-profile-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"goToConfirmSelection":[{"__symbolic":"method"}],"onDeviceProfileSelected":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}]}},"StepperFirmware":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"BaseStepperComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"c8y-stepper-firmware","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select firmware' | translate;\n      completed: !!stepData?.firmware;\n      buttonsDisabled: !stepData?.firmware;\n      onNext: goToVersionOrPatchStep.bind(this)\n    \"\n  >\n    <c8y-select-firmware-step\n      [selected]=\"stepData?.firmware\"\n      (firmware)=\"onFirmwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-firmware-step\n  ></ng-container>\n  <ng-container\n    *customStep=\"\n      'Select version or patch' | translate;\n      completed: !!stepData?.versionOrPatch;\n      buttonsDisabled: !stepData?.versionOrPatch\n    \"\n  >\n    <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <h4 class=\"text-center m-b-16 text-gray\" translate>\n            Select version or patch\n          </h4>\n          <p class=\"text-center p-b-8 text-truncate\">\n            <strong [title]=\"stepData?.firmware?.name\">{{ stepData?.firmware?.name }}</strong\n            ><br />\n            <small [title]=\"stepData?.firmware?.description\">{{\n              stepData?.firmware?.description\n            }}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-v\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-version-or-patch-step\n            [selected]=\"stepData?.versionOrPatch\"\n            (versionOrPatch)=\"onVersionOrPatchSelected($event)\">\n          </c8y-version-or-patch-step>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":33,"character":34},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":34,"character":23}]}],"goToVersionOrPatchStep":[{"__symbolic":"method"}],"onVersionOrPatchSelected":[{"__symbolic":"method"}],"onFirmwareSelected":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}]}},"StepperBulkTypeSoftware":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"BaseStepperComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"c8y-stepper-bulk-type-software","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select software' | translate; \n      completed: !!selectedSoftware.length;\n      buttonsDisabled: !selectedSoftware.length; \n      onNext: confirmSoftwareSelection.bind(this)\"\n  >\n    <c8y-select-software-step\n      (software)=\"onSoftwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-software-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected software' | translate\">\n    <c8y-confirm-software-selection-step\n      class=\"d-contents\"\n      [selectedItems]=\"selectedSoftware\"\n    ></c8y-confirm-software-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"selectSoftware":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":30,"character":3},"arguments":[{"__symbolic":"reference","name":"SelectSoftwareStepComponent"},{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":33,"character":29},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":33,"character":62}]}],"onSoftwareSelected":[{"__symbolic":"method"}],"confirmSoftwareSelection":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"getUniqueDeviceTypes":[{"__symbolic":"method"}]}},"StepperBulkTypeConfiguration":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"BaseStepperComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"c8y-stepper-bulk-type-configuration","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select configuration' | translate;\n      completed: !!selectedConfiguration;\n      buttonsDisabled: !selectedConfiguration;\n      onNext: goToSecondStep.bind(this)\"\n  >\n    <div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <h4 class=\"text-center m-b-16\">{{ 'Select configuration' | translate }}</h4>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group input-group-search\">\n                <input\n                  type=\"search\"\n                  class=\"form-control\"\n                  title=\"{{ 'Filter…' | translate }}\"\n                  placeholder=\"{{ 'Filter…' | translate }}\"\n                  [ngModel]=\"textFilter$ | async\"\n                  (ngModelChange)=\"textFilter$.next($event)\"\n                />\n                <span class=\"input-group-addon\">\n                  <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n                  <i\n                    c8yIcon=\"times\"\n                    class=\"text-muted\"\n                    *ngIf=\"(textFilter$ | async).length > 0\"\n                    (click)=\"textFilter$.next('')\"\n                  ></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n            <div class=\"col-md-6\">\n              <c8y-form-group class=\"m-0\">\n                <c8y-typeahead\n                  name=\"configType\"\n                  [(ngModel)]=\"selectedConfigType\"\n                  placeholder=\"{{ 'Type to filter configuration types…' | translate }}\"\n                  (onSearch)=\"configType$.next($event)\"\n                >\n                  <c8y-li\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = { name: '' }; configType$.next('')\"\n                  >\n                    <span>{{ 'All configuration types' | translate }}</span>\n                  </c8y-li>\n                  <c8y-li\n                    *ngFor=\"let configType of configTypes\"\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = configType; configType$.next(configType.name)\"\n                    [active]=\"selectedConfigType === configType\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configType.name\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </c8y-li>\n                </c8y-typeahead>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-v\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount < DD_LOW_COUNT }\">\n            <c8y-li #listItem *c8yFor=\"let configuration of configurations$ | async\">\n              <c8y-li-radio (onSelect)=\"selectConfiguration(configuration)\"></c8y-li-radio>\n              <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n              <c8y-li-body class=\"content-flex-60\">\n                <div class=\"col-5\">\n                  <div class=\"text-truncate\" title=\"{{ configuration.name || '-' }}\">\n                    <c8y-highlight\n                      [text]=\"configuration.name || '-'\"\n                      [pattern]=\"textFilter$ | async\"\n                    ></c8y-highlight>\n                  </div>\n                </div>\n                <div class=\"col-4\">\n                  <div\n                    class=\"text-truncate\"\n                    title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(configuration) }}\"\n                  >\n                    <span translate class=\"text-label-small m-r-4\">Device type</span>\n                    {{ configuration.deviceType }}\n                    <em class=\"text-muted\" *ngIf=\"!configuration.deviceType\">\n                      {{ 'Undefined`device type`' | translate }}\n                    </em>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <span\n                    class=\"label label-info\"\n                    *ngIf=\"configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{\n                      configuration.configurationType\n                    }}\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configuration.configurationType\"\n                      elementClass=\"text-gray-lighter\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </span>\n                  <span\n                    class=\"label label-default\"\n                    *ngIf=\"!configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{ 'Undefined' | translate }}\"\n                  >\n                    {{ 'Undefined' | translate }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *customStep=\"'Preview configuration' | translate\">\n    <div class=\"d-contents\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom\">\n        <div class=\"row\">\n          <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Preview configuration' | translate }}\n            </h4>\n            <div class=\"row no-gutter\">\n              <div class=\"col-xs-6\">\n                <div class=\"text-right text-truncate\" title=\"{{ selectedConfiguration?.name }}\">\n                  <strong>{{ selectedConfiguration?.name }}</strong>\n                </div>\n                <span class=\"label label-primary\" *ngIf=\"selectedConfiguration?.configurationType\">\n                  {{ selectedConfiguration.configurationType }}\n                </span>\n                <span class=\"label label-default\" *ngIf=\"!selectedConfiguration?.configurationType\">\n                  {{ 'Undefined' | translate }}\n                </span>\n              </div>\n              <div class=\"col-xs-6 text-right\">\n                <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(selectedConfiguration) }}\">\n                  <span translate class=\"text-label-small m-r-4\">\n                    Device type\n                  </span>\n                  {{ selectedConfiguration?.deviceType }}\n                  <em class=\"text-muted\" *ngIf=\"!selectedConfiguration?.deviceType\" translate>\n                    Undefined`device type`\n                  </em>\n                </div>\n                <p>\n                  <span translate class=\"text-label-small m-r-4\">Updated</span>\n                  <small>{{ selectedConfiguration?.lastUpdated | c8yDate }}</small>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-v\">\n          <div class=\"card-block p-t-0\">\n            <div class=\"row\">\n              <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"legend form-block\" translate>Preview</div>\n                <div\n                  class=\"c8y-empty-state text-left\"\n                  *ngIf=\"!this.selectedConfiguration?.binary; else binaryPreview\"\n                >\n                  <h1 [c8yIcon]=\"'file-code-o'\"></h1>\n                  <p>\n                    <strong translate>No preview available.</strong><br />\n                    <small translate>Could not fetch the file.</small>\n                  </p>\n                </div>\n                <ng-template #binaryPreview>\n                  <pre\n                    style=\"min-height: 98px;\"\n                  ><code>{{ this.selectedConfiguration?.binary }}</code></pre>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":38,"character":34},{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":39,"character":31},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":40,"character":23}]}],"loadConfigurationTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"selectConfiguration":[{"__symbolic":"method"}],"goToSecondStep":[{"__symbolic":"method"}],"getConfigBinary":[{"__symbolic":"method"}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"getConfiguration":[{"__symbolic":"method"}]}},"BulkOperationStepper":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"c8y-bulk-operation-stepper","template":"<div class=\"fit-v\">\n  <c8y-stepper\n    class=\"flex-col no-align-items fit-v c8y-stepper--no-btns\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-md-6', 'col-md-offset-3', 'p-t-16', 'p-b-32', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Select target devices' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Select target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-v\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"text-center p-b-16\">\n              <c8y-operation-summary\n                [name]=\"operationDetails?.name | translate\"\n                [description]=\"operationDetails?.description | translate\"\n                [deviceQueryString]=\"deviceQueryString\"\n              ></c8y-operation-summary>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4 col-md-offset-4\">\n                <c8y-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      >\n      </c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n"}]}],"members":{"selectionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":29,"character":3}}]}],"customSteps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":30,"character":3},"arguments":[{"__symbolic":"reference","name":"CustomStep"}]}]}],"stepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":31,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"C8yStepper","line":31,"character":13},{"static":false}]}]}],"operationDetailsComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":33,"character":3},"arguments":[{"__symbolic":"reference","name":"OperationDetailsComponent"},{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":53,"character":34},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":54,"character":19},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":55,"character":19}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"changeDeviceTypes":[{"__symbolic":"method"}],"confirmDeviceSelection":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"scheduleBulkOperation":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}]}},"BulkOperationsStepperContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"bulk-operations-stepper-container","template":"<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <ng-container [ngSwitch]=\"bulkOperationType\">\n    <!-- Cases: software, firmware and configuration are default c8y-types -->\n    <div *ngSwitchCase=\"'software'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-software></c8y-stepper-bulk-type-software>\n    </div>\n    <div *ngSwitchCase=\"'firmware'\" class=\"d-contents\">\n      <c8y-stepper-firmware></c8y-stepper-firmware>\n    </div>\n    <div *ngSwitchCase=\"'configuration'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-configuration></c8y-stepper-bulk-type-configuration>\n    </div>\n    <div *ngSwitchCase=\"'device-profile'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-device-profile></c8y-stepper-bulk-type-device-profile>\n    </div>\n    <!-- This case is for 3rd-party-dev defined types -->\n    <div *ngSwitchDefault class=\"d-contents\">\n      <template #container></template>\n    </div>\n  </ng-container>\n</div>\n"}]}],"members":{"container":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":16,"character":3},"arguments":["container",{"static":false,"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":16,"character":49}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":21,"character":28},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":22,"character":28},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":23,"character":22},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":24,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}]}},"SelectDeviceProfileStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"c8y-select-device-profile-step","template":"<div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select device profile' | translate }}</h4>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              title=\"{{ 'Filter device profiles…' | translate }}\"\n              placeholder=\"{{ 'Filter device profiles…' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                c8yIcon=\"times\"\n                class=\"text-muted\"\n                *ngIf=\"(textFilter$ | async).length\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <c8y-form-group class=\"m-0\">\n            <c8y-typeahead\n              name=\"deviceType\"\n              [(ngModel)]=\"selectedDeviceType\"\n              placeholder=\"{{ 'Type to filter device types…' | translate }}\"\n              (onSearch)=\"deviceType$.next($event)\"\n              [allowFreeEntries]=\"false\"\n            >\n              <c8y-li\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = {name: ''}; deviceType$.next('')\"\n              >\n                <span>{{'All device types' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n                *ngFor=\"let deviceType of deviceTypes\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n                [active]=\"selectedDeviceType === deviceType\"\n              >\n                <c8y-highlight\n                  [text]=\"deviceType.name\"\n                  [pattern]=\"deviceType$ | async\"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n            ><c8y-message\n              name=\"notExisting\"\n              [text]=\"'Select one of the existing device types.' | translate\"\n            ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group>\n        <c8y-li *c8yFor=\"let deviceProfile of deviceProfile$ | async; loadMore: 'auto'\">\n          <c8y-li-radio (onSelect)=\"selectDeviceProfile(deviceProfile)\"></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-device-profile\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-5\">\n              <div class=\"text-truncate\" title=\"{{ deviceProfile.name }}\">\n                {{ deviceProfile.name }}\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(deviceProfile) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"deviceProfile.c8y_Filter?.type; else noType\">\n                  {{ deviceProfile.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <small><em class=\"text-muted\" translate>Undefined`device type`</em></small>\n                </ng-template>\n              </div>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"deviceProfile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/device-profile","name":"DeviceProfileService","line":30,"character":34},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":31,"character":23}]}],"loadDeviceTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"selectDeviceProfile":[{"__symbolic":"method"}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"getDeviceProfiles":[{"__symbolic":"method"}]}},"VersionOrPatchComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"c8y-version-or-patch-step","template":"<c8y-list-group\n  class=\"m-b-16\"\n  [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\"\n  *ngIf=\"(baseVersions$ | async)?.data.length > 0\"\n>\n  <c8y-li *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-firmware\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-10\">\n        <p>{{ baseVersion.c8y_Firmware.version }}</p>\n      </div>\n      <div class=\"col-2\">\n        <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning\">\n          {{ 'Legacy' | translate }}\n        </span>\n\n        <span *ngIf=\"!(isLegacy$ | async)\">\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) === null\">\n            <span class=\"label label-info\">\n              <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n            </span>\n          </span>\n\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) !== null\">\n            <span [ngPlural]=\"getPatchVersionsCount$(baseVersion) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default\"> <span translate>No patches</span></span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info\">\n                  <span translate>1 patch</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info\">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ count: getPatchVersionsCount$(baseVersion) | async }\"\n                    >{{ count }} patches</span\n                  ></span\n                >\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <c8y-list-group>\n        <c8y-li\n          *c8yFor=\"\n            let patchVersion of getBaseVersionAndPatches$(baseVersion) | async;\n            let i = index;\n            loadMore: 'auto'\n          \"\n        >\n          <c8y-li-radio\n            (onSelect)=\"selectVersionOrPatch($event, patchVersion)\"\n            [selected]=\"patchVersion === selected\"\n          ></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50\">\n            <div class=\"col-3\">\n              {{ patchVersion.c8y_Firmware.version }}\n            </div>\n            <div class=\"col-3\">\n              <span *ngIf=\"patchVersion.c8y_Patch; else version\" translate class=\"label label-info\"\n                >patch</span\n              >\n              <ng-template #version\n                ><span translate class=\"label label-primary\">version</span></ng-template\n              >\n            </div>\n            <div class=\"col-6 text-truncate\">\n              <span class=\"text-label-small m-r-4\" translate>\n                File\n              </span>\n              <span title=\"{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\">\n                {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n"}]}],"members":{"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"versionOrPatch":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":51,"character":31},{"__symbolic":"reference","module":"@c8y/client","name":"InventoryService","line":52,"character":30},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":53,"character":28}]}],"getBinaryName$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":58,"character":3}}]}],"getBaseVersionAndPatches$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":63,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":63,"character":11},"arguments":["id"]}]}]}],"getPatchVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":74,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":74,"character":11},"arguments":["id"]}]}]}],"selectVersionOrPatch":[{"__symbolic":"method"}]}},"ConfirmDeviceProfileSelectionStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-confirm-device-profile-selection-step","template":"<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-gray\">{{ 'Confirm selection' | translate }}</h4>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(selectedDeviceProfile) }}\">\n            <span class=\"legend form-block\" translate>Device type</span>\n            <ng-container *ngIf=\"selectedDeviceProfile?.c8y_Filter?.type; else noType\">\n              <span>{{ selectedDeviceProfile.c8y_Filter.type }}</span>\n            </ng-container>\n            <ng-template #noType>\n              ---\n            </ng-template>\n          </div>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"selectedDeviceProfile?.c8y_DeviceProfile.firmware\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Firmware</span>\n          <c8y-list-group>\n            <c8y-li>\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-firmware\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-500\">\n                <div class=\"col-5\">\n                  {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.name }}\n                </div>\n                <div class=\"col-5\">\n                  <span class=\"text-label-small m-r-8\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"softwares.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Software</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let software of softwares\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-500\">\n                <div class=\"col-5\">\n                  {{ software.name }}\n                </div>\n                <div class=\"col-5\">\n                  <span class=\"text-label-small m-r-8\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"configurations.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Configuration</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let configuration of configurations\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-500\">\n                <div class=\"col-5\">\n                  {{ configuration.name }}\n                </div>\n                <div class=\"col-5\">\n                  <span class=\"label label-info\" *ngIf=\"configuration.type\">\n                    {{ configuration.type }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"selectedDeviceProfile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":15,"character":23}]}],"getDeviceTypeTitle":[{"__symbolic":"method"}]}},"SelectFirmwareComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"c8y-select-firmware-step","template":"<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select firmware' | translate }}</h4>\n      <div class=\"input-group input-group-search\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          title=\"{{ 'Filter firmware…' | translate }}\"\n          placeholder=\"{{ 'Filter firmware…' | translate }}\"\n          [ngModel]=\"textFilter$ | async\"\n          (ngModelChange)=\"textFilter$.next($event)\"\n        />\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n          <i\n            c8yIcon=\"times\"\n            class=\"text-muted\"\n            *ngIf=\"(textFilter$ | async).length > 0\"\n            (click)=\"textFilter$.next('')\"\n          ></i>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n<c8y-search-result-empty *ngIf=\"(textFilter$ | async).length > 0 && elementCount===0\">\n</c8y-search-result-empty>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\">\n        <c8y-li *c8yFor=\"let firmware of firmwares$ | async; let i = index; loadMore: 'auto'\">\n          <c8y-li-radio (onSelect)=\"selectFirmware($event, firmware)\" [selected]=\"firmware === selected\"></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ firmware.name }}\">\n                {{ firmware.name }}\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"text-truncate\" title=\"{{ getDescriptionTitle(firmware) }}\">\n                <small *ngIf=\"firmware.description; else noDesc\">\n                  {{ firmware.description }}\n                </small>\n                <ng-template #noDesc>\n                  <small>\n                    <em class=\"text-muted\" translate>No description available</em>\n                  </small>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(firmware) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"firmware.c8y_Filter?.type; else noType\">\n                  {{ firmware.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <em class=\"text-muted\" translate>Undefined`device type`</em>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <span *ngIf=\"isLegacy(firmware)\" class=\"label label-warning\">\n                <span translate>Legacy</span>\n              </span>\n\n              <span *ngIf=\"!isLegacy(firmware)\">\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) === null\">\n                  <span class=\"label label-info\">\n                    <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n                  </span>\n                </span>\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) !== null\">\n                  <span [ngPlural]=\"getBaseVersionsCount$(firmware) | async\">\n                    <ng-template ngPluralCase=\"=0\">\n                      <span class=\"label label-default\">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"=1\">\n                      <span class=\"label label-info\"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"other\">\n                      <span class=\"label label-info\">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]=\"{\n                            count: getBaseVersionsCount$(firmware) | async\n                          }\"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"firmware":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":39,"character":31},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":40,"character":28},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":41,"character":23}]}],"ngOnInit":[{"__symbolic":"method"}],"selectFirmware":[{"__symbolic":"method"}],"getBaseVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":54,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":54,"character":11},"arguments":["id"]}]}]}],"getDescriptionTitle":[{"__symbolic":"method"}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"getFirmwares":[{"__symbolic":"method"}]}},"SelectSoftwareStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"c8y-select-software-step","template":"<div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select software' | translate }}</h4>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              title=\"{{ 'Filter software…' | translate }}\"\n              placeholder=\"{{ 'Filter software…' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                c8yIcon=\"times\"\n                class=\"text-muted\"\n                *ngIf=\"(textFilter$ | async).length > 0\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n        <div class=\"col-md-6\">\n          <c8y-form-group class=\"m-0\">\n            <c8y-typeahead\n              name=\"deviceType\"\n              [(ngModel)]=\"selectedDeviceType\"\n              placeholder=\"{{ 'Type to filter device types…' | translate }}\"\n              (onSearch)=\"deviceType$.next($event)\"\n              [allowFreeEntries]=\"false\"\n            >\n              <c8y-li\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = {name: ''}; deviceType$.next('')\"\n              >\n                <span>{{'All device types' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n              *ngFor=\"let deviceType of deviceTypes\"\n              class=\"p-l-8 p-r-8 c8y-list__item--link\"\n              (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n              [active]=\"selectedDeviceType === deviceType\"\n              >\n              <c8y-highlight\n              [text]=\"deviceType.name\"\n              [pattern]=\"deviceType$ | async\"\n              ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n            ><c8y-message\n              name=\"notExisting\"\n              [text]=\"'Select one of the existing device types.' | translate\"\n            ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group [ngClass]=\"{ 'dd-low': (software$ | async)?.data.length < 10 }\">\n        <c8y-li *c8yFor=\"let software of software$ | async; loadMore: 'auto'\">\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-tools\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-5\">\n              <div class=\"text-truncate\" title=\"{{ software.name }}\">\n                {{ software.name }}\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(software) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"software.c8y_Filter?.type; else noType\">\n                  {{ software.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <small><em class=\"text-muted\" translate>Undefined`device type`</em></small>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <span *ngIf=\"isLegacy(software)\" class=\"label label-warning flex-item-right-sm\">\n                <span translate>Legacy</span>\n              </span>\n              <span *ngIf=\"!isLegacy(software)\">\n                <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n                  <span class=\"label label-info\">\n                    <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n                  </span>\n                </span>\n                <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n                  <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n                    <ng-template ngPluralCase=\"=0\">\n                      <span class=\"label label-default flex-item-right-sm\">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"=1\">\n                      <span class=\"label label-info\"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"other\">\n                      <span class=\"label label-info\">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]=\"{\n                            count: (getBaseVersionsCount$(software) | async) || ''\n                          }\"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-collapse>\n            <c8y-list-group>\n              <c8y-li *c8yFor=\"let option of getVersions(software) | async\">\n                <c8y-li-radio\n                  [name]=\"software.id\"\n                  (onSelect)=\"selectSoftware({ option: option, software: software })\"\n                ></c8y-li-radio>\n                <c8y-li-body class=\"content-flex-40 p-r-16\">\n                  <div class=\"col-4\">\n                    {{ option.c8y_Software.version }}\n                  </div>\n                  <div class=\"col-5\">\n                    <div class=\"text-truncate\" title=\"{{ option.c8y_Software.url }}\">\n                      <span class=\"text-label-small m-r-4\" translate> File </span>\n                      <span>{{ option.c8y_Software.url }}</span>\n                    </div>\n                  </div>\n                  <div class=\"col-3\" *ngIf=\"option.id === software.selectedId\">\n                    <div class=\"c8y-select-wrapper d-inline-block\" style=\"margin: -4px 0;\">\n                      <select\n                        id=\"action\"\n                        class=\"form-control input-sm\"\n                        [(ngModel)]=\"option.action\"\n                        (change)=\"emitSoftware({ option: option, software: software })\"\n                      >\n                        <option [ngValue]=\"'install'\">{{ 'Install/update`software`' | translate }}</option>\n                        <option [ngValue]=\"'delete'\">{{ 'Remove`software`' | translate }}</option>\n                      </select>\n                      <span></span>\n                    </div>\n                  </div>\n                </c8y-li-body>\n              </c8y-li>\n            </c8y-list-group>\n          </c8y-li-collapse>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"software":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":15,"character":3}}]}],"radioButtons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":29,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ListItemRadioComponent","line":29,"character":16}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":34,"character":31},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":35,"character":23}]}],"getBaseVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":40,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":40,"character":11},"arguments":["id"]}]}]}],"getVersions":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":45,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":45,"character":11},"arguments":["id"]}]}]}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"loadDeviceTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"resetSelection":[{"__symbolic":"method"}],"selectSoftware":[{"__symbolic":"method"}],"emitSoftware":[{"__symbolic":"method"}],"getSoftware":[{"__symbolic":"method"}]}},"ISelectedSoftware":{"__symbolic":"interface"},"ISoftwareUpdateOperationPrototype":{"__symbolic":"interface"},"ConfirmSoftwareSelectionStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-confirm-software-selection-step","template":"<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-gray\">{{ 'Confirm selection' | translate }}</h4>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <div class=\"text-truncate\" title=\"{{ this.title }}\">\n            <span class=\"legend form-block\" translate>Device type</span>\n            <ng-container *ngIf=\"deviceTypes.length > 0; else noType\">\n              <span *ngFor=\"let deviceType of deviceTypes; let last = last\">{{ deviceType }}{{ last ? '' : ', ' }}</span>\n            </ng-container>\n            <ng-template #noType>\n              <em class=\"text-muted\" translate>Undefined`device type`</em>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"selectedToInstall.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Installations/updates`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let selectedItem of selectedToInstall\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-10\">\n                <div class=\"col-6 text-truncate\" title=\"{{ selectedItem.software.name }}\">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class=\"col-6 text-right\">\n                  <span class=\"text-label-small m-r-4\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"selectedToDelete.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Removals`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let selectedItem of selectedToDelete\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-10\">\n                <div class=\"col-6\">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class=\"col-6 text-right\">\n                  <span class=\"text-label-small m-r-8\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"selectedItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"ngOnChanges":[{"__symbolic":"method"}]}}},"origins":{"routes":"./operations.module","OperationsModule":"./operations.module","TabsFactory":"./factories/tabs.factory","OperationDetailsComponent":"./details/operation-details.component","DeviceSelectorComponent":"./device-selector/device-selector.component","BaseStepperComponent":"./bulk/base-stepper.component","CustomStep":"./bulk/custom-step.directive","bulkOperationListRoutes":"./bulk-operations-list/bulk-operations-list.module","BulkOperationsListModule":"./bulk-operations-list/bulk-operations-list.module","BulkOperationDetailsService":"./bulk-operations-list/bulk-operation-details.service","BulkOperationsListComponent":"./bulk-operations-list/bulk-operations-list.component","BulkOperationListItemComponent":"./bulk-operations-list/bulk-operation-list-item.component","BulkOperationDetailsTabsComponent":"./bulk-operations-list/bulk-operation-details-tabs.component","BulkOperationDetailsComponent":"./bulk-operations-list/bulk-operation-details.component","SingleOperationsListComponent":"./bulk-operations-list/single-operations-list.component","SingleOperationItemComponent":"./bulk-operations-list/single-operation-item.component","BulkOperationWrapperComponent":"./bulk-operations-list/bulk-operation-wrapper.component","BulkOperationTypeListComponent":"./bulk-operations-list/type-list/bulk-operation-type-list.component","BulkOperationModalsService":"./bulk-operations-list/modals/bulk-operation-modals.service","BulkOperationsModalComponent":"./bulk-operations-list/modals/bulk-operations-modal.component","BulkOperationsRescheduleModalComponent":"./bulk-operations-list/modals/bulk-operations-reschedule-modal.component","BulkOperationFromSingleComponent":"./bulk/create-from-single/bulk-operation-from-single.component","StepperBulkTypeDeviceProfile":"./bulk/creation/stepper-bulk-type-device-profile.component","StepperFirmware":"./bulk/creation/stepper-bulk-type-firmware.component","StepperBulkTypeSoftware":"./bulk/creation/stepper-bulk-type-software.component","StepperBulkTypeConfiguration":"./bulk/creation/stepper-bulk-type-configuration.component","BulkOperationStepper":"./bulk/creation/bulk-operation-stepper.component","BulkOperationsStepperContainerComponent":"./bulk/creation/bulk-operations-stepper-container.component","SelectDeviceProfileStepComponent":"./bulk/creation/device-profile-update-stepper/select-device-profile-step.component","VersionOrPatchComponent":"./bulk/creation/firmware-update-stepper/version-or-patch.component","ConfirmDeviceProfileSelectionStepComponent":"./bulk/creation/device-profile-update-stepper/confirm-device-profile-selection-step.component","SelectFirmwareComponent":"./bulk/creation/firmware-update-stepper/select-firmware.component","SelectSoftwareStepComponent":"./bulk/creation/software-update-stepper/select-software-step.component","ISelectedSoftware":"./bulk/creation/software-update-stepper/select-software.model","ISoftwareUpdateOperationPrototype":"./bulk/creation/software-update-stepper/select-software.model","ConfirmSoftwareSelectionStepComponent":"./bulk/creation/software-update-stepper/confirm-software-selection-step.component"},"importAs":"@c8y/ngx-components/operations"}