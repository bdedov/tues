import { InjectionToken, Injector } from '@angular/core';
import { Router } from '@angular/router';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { StateService } from '../common/state-service.abstract';
import { Breadcrumb } from './breadcrumb.model';
export declare const HOOK_BREADCRUMB: InjectionToken<unknown>;
export declare class BreadcrumbService extends StateService {
    private injector;
    items$: Observable<Breadcrumb[]>;
    readonly refreshTrigger: Subject<unknown>;
    readonly state$: BehaviorSubject<Set<Breadcrumb>>;
    private preferredPath;
    constructor(injector: Injector, router: Router);
    readonly state: Set<Breadcrumb>;
    /**
     * Adds a new item to the action bar in the header.
     * @param item The item to add.
     */
    add(item: Breadcrumb): void;
    /**
     * Removes an action bar item from the header.
     * @param item The item to remove.
     */
    remove(item: Breadcrumb): void;
    /**
     * Refresh the extension factories
     */
    refresh(): void;
    /**
     * Sets the crumb that contains that path to the top.
     * @param path The path to prefer.
     */
    selectPreferredByPath(path: string): void;
    sortByPreferredPath(breadcrumbs: any): any;
}
