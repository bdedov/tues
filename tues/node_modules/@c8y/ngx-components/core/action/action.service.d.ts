import { Injector, InjectionToken } from '@angular/core';
import { Router } from '@angular/router';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { StateService } from '../common/state-service.abstract';
import { Action } from './action.model';
import { ExtensionPoint } from '../common/extension-hooks';
/**
 * A hook to use for Multi Provider extension.
 */
export declare const HOOK_ACTION: InjectionToken<unknown>;
/**
 * A service which defines global actions.
 */
export declare class ActionService extends StateService implements ExtensionPoint<Action> {
    private injector;
    items$: Observable<Action[]>;
    readonly refreshTrigger: Subject<unknown>;
    readonly state$: BehaviorSubject<Set<Action>>;
    constructor(injector: Injector, router: Router);
    /**
     * Refresh the extension factories
     */
    refresh(): void;
    /**
     * Returns the current state.
     * @readonly
     * @returns The current set of actions.
     */
    readonly state: Set<Action>;
    /**
     * Adds a new item to the actions in the header and emits a state change.
     * @param item The item to add.
     */
    add(item: Action): void;
    /**
     * Removes an action from the header and emits a state change.
     * @param item The item to remove.
     */
    remove(item: Action): void;
}
