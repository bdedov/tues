import { EventEmitter, OnInit } from '@angular/core';
import { IUser, UserService, TenantLoginOptionsService, TenantService } from '@c8y/client';
import { AppStateService } from '../common/ui-state.service';
import { TranslateService } from '../i18n/translate.service';
import { NewPassword } from '../authentication/password.model';
import { BsModalService } from 'ngx-bootstrap/modal';
import { PasswordService } from '../authentication/password.service';
import { AlertService } from '../alert/alert.service';
import { ModalService } from '../modal/modal.service';
export interface User extends IUser {
    phone: string;
    sendPasswordResetEmail: boolean;
    newsletter?: boolean;
}
export declare class UserEditComponent implements OnInit {
    state: AppStateService;
    translate: TranslateService;
    passwordService: PasswordService;
    modalConfirmService: ModalService;
    private bsModalService;
    private alert;
    private userService;
    private tenantLoginOptionsService;
    private tenantService;
    lang: string;
    loading: boolean;
    user: User;
    onUser: EventEmitter<User>;
    onLanguage: EventEmitter<string>;
    onCancel: EventEmitter<void>;
    userHasActiveTotp: boolean;
    userCanSetupTotp: boolean;
    isPhoneRequired: boolean;
    userIsExternal: any;
    isTfaEnabled: boolean;
    private _user;
    constructor(state: AppStateService, translate: TranslateService, passwordService: PasswordService, modalConfirmService: ModalService, bsModalService: BsModalService, alert: AlertService, userService: UserService, tenantLoginOptionsService: TenantLoginOptionsService, tenantService: TenantService);
    ngOnInit(): Promise<void>;
    readonly langs: any;
    setupTotp(): void;
    cancel(): void;
    save(): void;
    onNewPasswordChanged(newPassword: NewPassword): void;
    private initializeTotpSettings;
    private canUserSetupTotp;
    private saveAfterPasswordConfirmation;
}
