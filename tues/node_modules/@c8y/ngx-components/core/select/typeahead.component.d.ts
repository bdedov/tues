import { EventEmitter, ElementRef, QueryList } from '@angular/core';
import { Validator, AbstractControl } from '@angular/forms';
import { IIdentified } from '@c8y/client';
import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import { ListItemComponent } from '../list-group/list-item.component';
import { ControlValueAccessor } from '@angular/forms';
export declare class TypeaheadComponent implements ControlValueAccessor, Validator {
    searchControl: ElementRef;
    dropdown: BsDropdownDirective;
    list: QueryList<ListItemComponent>;
    required: boolean;
    disabled: boolean;
    allowFreeEntries: boolean;
    placeholder: string;
    displayProperty: string;
    name: string;
    container: '' | 'body';
    selected: IIdentified;
    selectedChange: EventEmitter<IIdentified>;
    onSearch: EventEmitter<string>;
    private subscription;
    private onChange;
    private onTouched;
    private readonly KEYCODE_UP;
    private readonly KEYCODE_DOWN;
    private readonly KEYCODE_TAB;
    private readonly KEYCODE_ENTER;
    private readonly KEYCODE_ESC;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    doBlur(): void;
    getDisplayProperty(): any;
    onShown(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    handleKeyboard(event: any): void;
    validate(ctrl: AbstractControl): {
        [key: string]: any;
    };
}
