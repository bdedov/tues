import { Injector } from '@angular/core';
import { Router } from '@angular/router';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { ExtensionPoint } from '../common/extension-hooks';
import { StateService } from '../common/state-service.abstract';
import { DynamicComponentDefinition } from './dynamic-component.model';
export declare class DynamicComponentService extends StateService implements ExtensionPoint<DynamicComponentDefinition> {
    private injector;
    items$: Observable<DynamicComponentDefinition[]>;
    readonly refreshTrigger: Subject<unknown>;
    readonly state$: BehaviorSubject<Set<DynamicComponentDefinition>>;
    constructor(injector: Injector, router: Router);
    getComponentsViaDeprecatedHook(): DynamicComponentDefinition[];
    refresh(): void;
    readonly state: Set<DynamicComponentDefinition>;
    /**
     * Returns a component by it's id as an observable.
     * @param id The id of the component.
     */
    getById$(id: any): Observable<DynamicComponentDefinition>;
    add(component: DynamicComponentDefinition): void;
    remove(component: DynamicComponentDefinition): void;
}
