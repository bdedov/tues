{"version":3,"file":"c8y-ngx-components-binary-file-download.js","sources":["ng://@c8y/ngx-components/binary-file-download/binary-file-download.service.ts","ng://@c8y/ngx-components/binary-file-download/binary-file-download.module.ts","ng://@c8y/ngx-components/binary-file-download/c8y-ngx-components-binary-file-download.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { InventoryBinaryService, InventoryService } from '@c8y/client';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { isUndefined } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class BinaryFileDownloadService {\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private inventoryService: InventoryService,\n              private alertService: AlertService,\n              private modalService: ModalService,\n              private translate: TranslateService,\n              private inventoryBinary: InventoryBinaryService) {\n  }\n\n  run() {\n    this.router.events\n      .pipe(\n        filter((event) => { return event instanceof NavigationEnd\n          && this.route.snapshot.queryParams.download; }),\n        map(() => this.route.snapshot.queryParams.download))\n      .subscribe(async (downloadId) => {\n        try {\n          const { data } = await this.inventoryService.detail(downloadId);\n          if ( !isUndefined(data.c8y_IsBinary) ) {\n            this.showDownloadModal(data);\n          } else {\n            const alertMessage = this.translate.instant(\n              gettext('Could not download the file: object with ID \"{{ id }}\" is not a valid binary.'),\n              { id: data.id }\n            );\n            this.alertService.danger(alertMessage);\n          }\n        } catch (ex) {\n          this.alertService.addServerFailure(ex);\n        }\n      });\n  }\n\n  async showDownloadModal(data) {\n    try {\n      const modalBody = this.translate.instant(\n        gettext('You are about to download file \"{{ fileName }}\". Do you want to proceed?'),\n        { fileName: data.name }\n      );\n      await this.modalService.confirm(\n        gettext('File download'),\n        modalBody,\n        Status.INFO,\n        { ok: gettext('Download') }\n      );\n      const binary = await this.getBinary(data.id);\n      const fileBinary = new File([binary], data.name, { type: data.contentType });\n      saveAs(fileBinary);\n    } catch (e) {\n      // empty body :(\n    }\n  }\n\n  private async getBinary(binaryId) {\n    let binary;\n    try {\n      const res = await this.inventoryBinary.download(binaryId);\n      binary = await res.text();\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alertService.danger(msg);\n    }\n\n    return binary;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@c8y/ngx-components';\nimport { BinaryFileDownloadService } from './binary-file-download.service';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [BinaryFileDownloadService]\n})\nexport class BinaryFileDownloadModule {\n  constructor(binaryFileDownloadService: BinaryFileDownloadService) {\n    binaryFileDownloadService.run();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}