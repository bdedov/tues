{"version":3,"file":"c8y-ngx-components-sensor-phone.js","sources":["ng://@c8y/ngx-components/sensor-phone/sensor-phone.service.ts","ng://@c8y/ngx-components/sensor-phone/sensor-phone-modal.component.ts","ng://@c8y/ngx-components/sensor-phone/connect-smartphone.factory.ts","ng://@c8y/ngx-components/sensor-phone/sensor-phone.module.ts","ng://@c8y/ngx-components/sensor-phone/real-time-mock.service.ts","ng://@c8y/ngx-components/sensor-phone/c8y-ngx-components-sensor-phone.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\nimport { AppStateService } from '@c8y/ngx-components';\nimport { InventoryService } from '@c8y/client';\nimport { head } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\n\n@Injectable()\nexport class SensorPhoneService {\n  readonly HTTP_STATUS_CODE = {\n    OK: 200,\n    CREATED: 201\n  };\n  private domainName: string;\n  private tenantId: string;\n  private PHONE_GROUP_FRAGMENT = 'c8y_IsSensorPhoneGroup';\n  private readonly PHONE_GROUP_NAME = gettext('Phones');\n\n  constructor(\n    private bsModalService: BsModalService,\n    private ui: AppStateService,\n    private inventoryService: InventoryService\n  ) {\n    this.ui.currentTenant.subscribe(data => {\n      if (data) {\n        this.domainName = data.domainName;\n        this.tenantId = data.name;\n      }\n    });\n  }\n\n  createModal() {\n    this.bsModalService.show(SensorPhoneModalComponent, {\n      backdrop: 'static',\n      class: 'lg'\n    });\n  }\n\n  getHost() {\n    return this.domainName.substring(this.domainName.indexOf('.') + 1);\n  }\n\n  getTenantName() {\n    return this.domainName.split('.')[0];\n  }\n\n  getTenantId() {\n    return this.tenantId;\n  }\n\n  async checkPhoneGroupExists() {\n    const { data, res } = await this.inventoryService.list({\n      fragmentType: this.PHONE_GROUP_FRAGMENT\n    });\n    if (data && res && res.status === this.HTTP_STATUS_CODE.OK) {\n      return head(data);\n    }\n    return null;\n  }\n\n  async addPhoneGroup() {\n    const group = await this.checkPhoneGroupExists();\n    if (group) {\n      return group;\n    }\n    return await this.createPhoneGroup();\n  }\n\n  async createPhoneGroup() {\n    const newPhoneGroup = {\n      c8y_Global: {},\n      c8y_IsDeviceGroup: {},\n      type: 'c8y_DeviceGroup',\n      name: this.PHONE_GROUP_NAME,\n      [this.PHONE_GROUP_FRAGMENT]: {}\n    };\n\n    const { data, res } = await this.inventoryService.create(newPhoneGroup);\n    if (data && res && res.status === this.HTTP_STATUS_CODE.CREATED) {\n      return data;\n    }\n    return null;\n  }\n\n  generateRegistrationData(deviceId) {\n    const res = 'c8y://' + this.getTenantName() + '.' + this.getHost() + '/?deviceId=' + deviceId;\n    return res;\n  }\n}\n","import { Component, ViewChild, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { C8yStepper, gettext } from '@c8y/ngx-components';\nimport { SensorPhoneService } from './sensor-phone.service';\nimport { throttleTime } from 'rxjs/operators';\nimport { Realtime, DeviceRegistrationService } from '@c8y/client';\nimport { Router } from '@angular/router';\nimport { get } from 'lodash-es';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-sensor-phone',\n  templateUrl: 'sensor-phone-modal.component.html'\n})\nexport class SensorPhoneModalComponent implements AfterViewInit {\n  @ViewChild(C8yStepper, { static: false })\n  stepper: C8yStepper;\n  @ViewChild(C8yStepper, { read: ElementRef, static: false })\n  container: ElementRef;\n  pendingDeviceBootstrap: boolean = true;\n  success;\n  errorMessage = gettext('Failed to register a smartphone.');\n  registrationData = null;\n  tenantId;\n  instance;\n  deviceId: string;\n  dashboardLink: string = '';\n  private bootStrapObservable: Subscription;\n  private managedObjectObservable: Subscription;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private sensorPhoneService: SensorPhoneService,\n    private renderer: Renderer2,\n    private deviceRegistrationService: DeviceRegistrationService,\n    private realTime: Realtime,\n    private router: Router\n  ) {}\n\n  ngAfterViewInit() {\n    this.stepper.selectionChange\n      .pipe(throttleTime(100))\n      .subscribe((partialStepper: Partial<C8yStepper>) => this.bootstrapDevice(partialStepper));\n    this.tenantId = this.sensorPhoneService.getTenantName();\n    this.instance = this.sensorPhoneService.getHost();\n  }\n\n  async bootstrapDevice(stepper: Partial<C8yStepper>) {\n    const { selectedIndex } = stepper;\n    if (selectedIndex && selectedIndex === 2) {\n      let device;\n      this.deviceId = this.generateDeviceId();\n      this.bootStrapObservable = this.realTime\n        .observable('/bootstrap')\n        .pipe(\n          filter(\n            status =>\n              get(status, 'data.id') === this.deviceId && get(status, 'realtimeAction') === 'UPDATE'\n          )\n        )\n        .subscribe(status => {\n          this.pendingDeviceBootstrap = false;\n          this.onDeviceStatusChanged(this.deviceId);\n          this.bootStrapObservable.unsubscribe();\n        });\n      try {\n        const group = await this.sensorPhoneService.addPhoneGroup();\n        if (group) {\n          device = { id: this.deviceId, groupId: group.id };\n\n          this.registrationData = this.sensorPhoneService.generateRegistrationData(this.deviceId);\n\n          const { data, res } = await this.deviceRegistrationService.create(device);\n          if (res.status !== this.sensorPhoneService.HTTP_STATUS_CODE.CREATED) {\n            this.onFailure();\n          }\n        }\n      } catch (error) {\n        this.onFailure();\n      }\n    }\n  }\n\n  generateDeviceId() {\n    return 'phone' + Math.floor(Math.random() * 100000);\n  }\n\n  async onDeviceStatusChanged(deviceId) {\n    let deviceMo;\n    let dashboardMo;\n    this.managedObjectObservable = this.realTime\n      .observable(`/managedobjects/*`)\n      .pipe(\n        filter(\n          status =>\n            get(status, 'data.owner') === `device_${deviceId}` &&\n            get(status, 'realtimeAction') === 'CREATE'\n        )\n      )\n      .subscribe(response => {\n        const mo = response.data;\n        if (mo.type === 'c8y_SensorPhone') {\n          deviceMo = mo;\n        }\n        if (mo.c8y_Dashboard) {\n          dashboardMo = mo;\n        }\n        if (deviceMo && dashboardMo) {\n          this.onManagedObjectCreated(deviceMo, dashboardMo);\n          this.managedObjectObservable.unsubscribe();\n        }\n      });\n\n    try {\n      const { res } = await this.deviceRegistrationService.accept(deviceId);\n      if (res.status !== this.sensorPhoneService.HTTP_STATUS_CODE.OK) {\n        this.onFailure();\n      }\n    } catch (error) {\n      this.onFailure();\n    }\n  }\n\n  onManagedObjectCreated(deviceMo, dashboardMo) {\n    const { id } = dashboardMo;\n    this.dashboardLink = `/device/${deviceMo.id}/dashboard/${id}`;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n      this.success = true;\n    }\n  }\n\n  openDashboard() {\n    if (this.dashboardLink) {\n      this.router.navigate([this.dashboardLink]);\n      this.cancel();\n    }\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this.deleteDeviceRequest();\n    this.cleanSubscription();\n  }\n\n  retry() {\n    this.success = undefined;\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'block');\n    }\n    this.deleteDeviceRequest();\n    this.cleanSubscription();\n    this.stepper.selectedIndex = 2;\n  }\n\n  onFailure() {\n    this.success = false;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n    }\n  }\n\n  async deleteDeviceRequest() {\n    if (this.deviceId) {\n      try {\n        const { data, res } = await this.deviceRegistrationService.delete(this.deviceId);\n      } catch (error) {\n        //\n      }\n    }\n  }\n\n  cleanSubscription() {\n    if (this.bootStrapObservable && !this.bootStrapObservable.closed) {\n      this.bootStrapObservable.unsubscribe();\n    }\n    if (this.managedObjectObservable && !this.managedObjectObservable.closed) {\n      this.managedObjectObservable.unsubscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.cleanSubscription();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DocLinkFactory, OptionsService, gettext, DocLink } from '@c8y/ngx-components';\nimport { of } from 'rxjs';\nimport { SensorPhoneService } from './sensor-phone.service';\n\n@Injectable()\nexport class ConnectSmartphoneFactory implements DocLinkFactory {\n  constructor(\n    private optionsService: OptionsService,\n    private sensorPhoneService: SensorPhoneService\n  ) {}\n  get() {\n    if (this.optionsService.get('sensorPhone', false)) {\n      return of([\n        {\n          icon: 'c8y-icon c8y-icon-mobile-add',\n          type: 'quicklink',\n          label: gettext('Connect smartphone'),\n          url: undefined,\n          click: () => this.sensorPhoneService.createModal()\n        } as DocLink\n      ]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, HOOK_DOCS } from '@c8y/ngx-components';\nimport { ConnectSmartphoneFactory } from './connect-smartphone.factory';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { SensorPhoneService } from './sensor-phone.service';\n\n@NgModule({\n  imports: [CoreModule, QRCodeModule],\n  declarations: [SensorPhoneModalComponent],\n  entryComponents: [SensorPhoneModalComponent],\n  providers: [\n    {\n      provide: HOOK_DOCS,\n      useClass: ConnectSmartphoneFactory,\n      multi: true\n    },\n    SensorPhoneService\n  ]\n})\nexport class SensorPhoneModule {}\n","import { Observable } from 'rxjs';\n\nexport class RealTimeMock {\n  deviceId;\n  bootstrapObserver;\n  managedObjObserver;\n  observable(channel) {\n    if (channel === '/bootstrap') {\n      return new Observable(observer => {\n        this.bootstrapObserver = observer;\n      });\n    } else {\n      return new Observable(observer => {\n        this.managedObjObserver = observer;\n      });\n    }\n  }\n\n  triggerBootstrap(res) {\n    this.bootstrapObserver.next(res);\n  }\n  triggerManagedObject(res) {\n    this.managedObjObserver.next(res);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}