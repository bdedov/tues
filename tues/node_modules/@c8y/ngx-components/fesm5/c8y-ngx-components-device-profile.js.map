{"version":3,"file":"c8y-ngx-components-device-profile.js","sources":["ng://@c8y/ngx-components/device-profile/device-profile-navigation.factory.ts","ng://@c8y/ngx-components/device-profile/device-profile.service.ts","ng://@c8y/ngx-components/device-profile/select-configuration-modal.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.model.ts","ng://@c8y/ngx-components/device-profile/device-profile.component.ts","ng://@c8y/ngx-components/device-profile/add-device-profile.component.ts","ng://@c8y/ngx-components/device-profile/device-profile-list.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.guard.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-tab-profile.component.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-tab-profile-detail.component.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-profile-item-list.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.module.ts","ng://@c8y/ngx-components/device-profile/c8y-ngx-components-device-profile.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileNavigationFactory implements NavigatorNodeFactory {\n  nodeItem: NavigatorNode;\n\n  async get() {\n    if (!this.nodeItem) {\n      this.nodeItem = new NavigatorNode({\n        label: gettext('Device profiles'),\n        path: '/device-profiles',\n        icon: 'c8y-device-profile',\n        parent: gettext('Management')\n      });\n    }\n    return this.nodeItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport {\n  DeviceProfile,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware,\n  ComparisonResult\n} from './device-profile.model';\nimport { AlertService } from '@c8y/ngx-components';\nimport { sortBy, toArray, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  private NOT_INSTALLED_WARNING = gettext('Not installed on the device');\n  private VERSION_MISSMATCH_WARNING = gettext('Version mismatch');\n  private SAME_URL_WARNING = gettext('Url is the same');\n\n  constructor(\n    private inventoryService: InventoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  createDeviceProfile(deviceProfile: Partial<DeviceProfile>) {\n    return this.inventoryService.create(deviceProfile as IManagedObject);\n  }\n\n  getDeviceProfilesByDeviceType(deviceType: string): Promise<IResultList<IManagedObject>> {\n    const deviceTypeFilter = {\n      __or: [{ 'c8y_Filter.type': deviceType }, { __not: { __has: 'c8y_Filter.type' } }]\n    };\n    return this.getDeviceProfiles(deviceTypeFilter);\n  }\n\n  getDeviceProfiles(andQuery?: any): Promise<IResultList<IManagedObject>> {\n    let query: object = {\n      type: 'c8y_Profile'\n    };\n    const filter: object = {\n      pageSize: 100,\n      withTotalPages: true\n    };\n    query = this.queriesUtil.addAndFilter(query, andQuery || {});\n    return this.inventoryService.listQuery(query, filter);\n  }\n\n  async getProfileOperation(deviceId: string | number) {\n    const filter: object = {\n      deviceId,\n      fragmentType: 'c8y_DeviceProfile',\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n\n    const operation = (await this.operationService.list(filter)).data[0];\n    return operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createProfileOperation(device: IManagedObject, deviceProfile: Partial<DeviceProfile>) {\n    let operation;\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      profileId: deviceProfile.id,\n      profileName: deviceProfile.name,\n      c8y_DeviceProfile: deviceProfile.c8y_DeviceProfile,\n      description: `Assign device profile ${deviceProfile.name} to device ${device.name}`\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  getFirmwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceFirmware = device.c8y_Firmware;\n    const profileFirmware = get(selectedProfile, 'c8y_DeviceProfile.firmware');\n    const deviceItems = [];\n    const profileItems = [];\n\n    if (deviceFirmware) {\n      deviceItems.push(deviceFirmware);\n    }\n    if (profileFirmware) {\n      profileItems.push(profileFirmware);\n    }\n    return this.createProfileComparison(deviceItems, profileItems, 'name', 'version', this.getAlert('firmware'));\n  }\n\n  getSoftwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceSoftware = device.c8y_SoftwareList;\n    const profileSoftware = get(selectedProfile, 'c8y_DeviceProfile.software');\n    return this.createProfileComparison(deviceSoftware, profileSoftware, 'name', 'version', this.getAlert('software'));\n  }\n\n  getConfigurationItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceConfiguration = [];\n    Object.keys(device).forEach(key => {\n      if (key.slice(0, 18) === 'c8y_Configuration_') {\n        deviceConfiguration.push(device[key]);\n      }\n    });\n    const profileConfiguration = get(selectedProfile, 'c8y_DeviceProfile.configuration');\n    return this.createProfileComparison(deviceConfiguration, profileConfiguration, 'url', 'type', this.getAlert('configuration'));\n  }\n\n  private getAlert(itemType: string): (comparisionResult: ComparisonResult) => string  {\n    const notInstalled = (comparisionResult: ComparisonResult) => {\n      return !comparisionResult.device ? this.NOT_INSTALLED_WARNING : '';\n    };\n\n    switch (itemType) {\n      case 'firmware':\n      case 'software':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device && comparisionResult.profile && comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails ?\n            this.VERSION_MISSMATCH_WARNING : notInstalled(comparisionResult);\n        };\n      case 'configuration':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device && comparisionResult.profile &&\n            ((comparisionResult.device.itemName !== comparisionResult.profile.itemName) ||\n            (comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails)) ?\n            this.SAME_URL_WARNING : notInstalled(comparisionResult);\n        };\n      default:\n        return notInstalled;\n    }\n  }\n\n  private createProfileComparison(\n    deviceItems: any[] = [],\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware> = [],\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: ( comparisionResult: ComparisonResult ) => string\n  ): ComparisonResult[] {\n    const comparisonObj = this.createProfileComparisonFromDeviceItems(deviceItems, mergeByProperty, propertyNameWithDetails);\n    const extendedComparisonObj = this.extendProfileComparisonWithProfileItems(\n      comparisonObj,\n      profileItems,\n      mergeByProperty,\n      propertyNameWithDetails,\n      getAlert\n    );\n    return sortBy(toArray(extendedComparisonObj), 'name');\n  }\n\n  private createProfileComparisonFromDeviceItems(\n    deviceItems: any[],\n    mergeByProperty: string,\n    propertyNameWithDetails: string\n  ): any {\n    return deviceItems.reduce(\n      (comapritionItem, deviceItem) =>\n        Object.assign(comapritionItem, {\n          [deviceItem[mergeByProperty]]: {\n            device: {\n              itemName: deviceItem.name,\n              itemDetails: deviceItem[propertyNameWithDetails],\n              itemUrl: deviceItem.url\n            },\n            profile: undefined,\n          }\n        }),\n      {}\n    );\n  }\n\n  private extendProfileComparisonWithProfileItems(\n    comparisonObj: object,\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware>,\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: ( comparisionResult: ComparisonResult ) => string\n  ) {\n    profileItems.forEach(profileItem => {\n      const comparisionResult: ComparisonResult = {\n        profile: {\n          itemName: profileItem.name,\n          itemDetails: profileItem[propertyNameWithDetails],\n          itemUrl: profileItem.url\n        },\n        device: comparisonObj[profileItem[mergeByProperty]] ? comparisonObj[profileItem[mergeByProperty]].device : undefined,\n      };\n      comparisionResult.comparisonAlert = getAlert(comparisionResult);\n      comparisonObj[profileItem[mergeByProperty]] = comparisionResult;\n    });\n    return comparisonObj;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { gettext, ISelectModalObject, ISelectModalOption, ModalLabels } from '@c8y/ngx-components';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { assign } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-select-configuration-modal',\n  templateUrl: './select-configuration-modal.component.html'\n})\nexport class SelectConfigurationModalComponent {\n  title: string = gettext('Select configuration');\n  load: Subject<void> = new Subject();\n  configurations: Observable<any[]> = this.load.pipe(\n    switchMap(() => this.getItems()),\n    map(({ data }) => this.aggregate(data))\n  );\n  resultEmitter: EventEmitter<any[]> = new EventEmitter<any>();\n  selected: [];\n  deviceTypeQuery: any = {};\n  searchQuery: any = {};\n  labels: ModalLabels = { ok: gettext('Save') };\n  private queriesUtil: QueriesUtil;\n\n  constructor(private repositoryService: RepositoryService) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  search(searchTerm) {\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = this.queriesUtil.addOrFilter(\n        { name: `*${searchTerm}*` },\n        { configurationType: `*${searchTerm}*` }\n      );\n    }\n    this.load.next();\n  }\n\n  result(selectedItems) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  getItems() {\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n      params: { pageSize: 100 }\n    });\n  }\n\n  aggregate(mos: IManagedObject[]): ISelectModalObject[] {\n    const selectedItems: any[] = this.selected;\n    return mos.reduce((acc, curr) => {\n      curr.configurationType = curr.configurationType || curr.name;\n      const selected =\n        selectedItems && selectedItems.filter(val => val.url === curr.url).length > 0;\n      const selectModalOption: ISelectModalOption = {\n        body: [{ value: curr.name }],\n        obj: curr,\n        selected\n      };\n      let selectModalObject: ISelectModalObject = acc.find(\n        val => val.body[0].value === curr.configurationType\n      ) as ISelectModalObject;\n      if (selectModalObject) {\n        selectModalObject.options.push(selectModalOption);\n      } else {\n        selectModalObject = {\n          groupId: curr.id,\n          body: [{ value: curr.configurationType }],\n          options: [selectModalOption]\n        };\n        acc.push(selectModalObject);\n      }\n      return acc;\n    }, []);\n  }\n}\n","import { IManagedObject } from '@c8y/client';\n\nexport interface DeviceProfile extends Partial<IManagedObject> {\n  name?: string;\n  type: string;\n  c8y_Filter: {\n    type?: string;\n  };\n  c8y_DeviceProfile: {\n    firmware?: DeviceProfileFirmware;\n    software?: DeviceProfileSoftware[];\n    configuration?: DeviceProfileConfiguration[];\n  };\n}\n\nexport interface DeviceProfileFirmware {\n  name: string;\n  version: string;\n  url: string;\n  isPatch: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceProfileSoftware {\n  name: string;\n  version: string;\n  url: string;\n  action: string;\n}\n\nexport interface DeviceProfileConfiguration {\n  url: string;\n  name: string;\n  type: string;\n}\n\nexport interface ComparisonResult {\n  profile: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  device: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  comparisonAlert?: string;\n}\n\nexport enum DeviceProfileOperation {\n  APPLY_PROFILE = 'c8y_DeviceProfile'\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  DeviceProfile,\n  DeviceProfileConfiguration,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware\n} from './device-profile.model';\nimport { AlertService, BreadcrumbService, gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { assign, isEqual, concat, uniqWith } from 'lodash-es';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { has, isEmpty } from 'lodash-es';\nimport { take, distinctUntilChanged, switchMap, map, shareReplay } from 'rxjs/operators';\nimport { RepositoryType, RepositorySelectModalComponent } from '@c8y/ngx-components/repository';\nimport { BehaviorSubject, } from 'rxjs';\nimport { RepositoryService } from '@c8y/ngx-components/repository';\n\n@Component({\n  selector: 'c8y-device-profile',\n  templateUrl: './device-profile.component.html'\n})\nexport class DeviceProfileComponent implements OnInit {\n  DEVICE_TYPE_POPOVER = gettext(\n    'The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.'\n  );\n  deviceProfile: DeviceProfile;\n  profileName: string;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private location: Location,\n    private breadcrumbService: BreadcrumbService,\n    private bsModal: BsModalService,\n    private repositoryService: RepositoryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  async ngOnInit() {\n    const profileId = this.route.snapshot.paramMap.get('id');\n    this.deviceProfile = (await this.getDeviceProfile(profileId)) as DeviceProfile;\n    if (this.deviceProfile) {\n      this.profileName = this.deviceProfile.name;\n      if (!this.deviceProfile.c8y_DeviceProfile.software) {\n        this.deviceProfile.c8y_DeviceProfile.software = [];\n      }\n      if (!this.deviceProfile.c8y_DeviceProfile.configuration) {\n        this.deviceProfile.c8y_DeviceProfile.configuration = [];\n      }\n    }\n  }\n\n  addFirmware() {\n    const initialState = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.FIRMWARE),\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.FIRMWARE),\n      icon: 'c8y-firmware',\n      title: gettext('Select firmware'),\n      mode: ModalSelectionMode.SINGLE\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(firmwareList => {\n      const [firmware] = firmwareList;\n      if (!firmware) {\n        return;\n      }\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, {\n        firmware: {\n          name: firmware.name,\n          version: firmware.version,\n          url: firmware.url,\n          isPatch: firmware.isPatch,\n          patchDependency: firmware.patchDependency\n        } as DeviceProfileFirmware\n      });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>, repoType: RepositoryType) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repositoryService.listRepositoryEntries(repoType, {\n          partialName: searchTerm,\n          params: { pageSize: 100 },\n          skipLegacy: true\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addConfiguration() {\n    const modal = this.bsModal.show(SelectConfigurationModalComponent, {\n      ignoreBackdropClick: true\n    });\n    modal.content.deviceTypeQuery = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION);\n    modal.content.selected = this.deviceProfile.c8y_DeviceProfile.configuration;\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedConfigurations => {\n      const selectedMapped: DeviceProfileConfiguration = selectedConfigurations.map(\n        selectedItem => {\n          return assign(\n            {\n              url: selectedItem.url,\n              name: selectedItem.name\n            },\n            selectedItem.configurationType ? { type: selectedItem.configurationType } : {}\n          );\n        }\n      );\n      const merged: DeviceProfileConfiguration = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.configuration || []\n      );\n      const configuration: DeviceProfileConfiguration = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.type && othVal.type && arrVal.type === othVal.type;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { configuration });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  addSoftware() {\n    const initialState = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.SOFTWARE),\n      repositoryType: RepositoryType.SOFTWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.SOFTWARE),\n      selected: this.deviceProfile.c8y_DeviceProfile.software,\n      icon: 'c8y-tools',\n      title: gettext('Select software'),\n      mode: ModalSelectionMode.MULTI\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedSoftware => {\n      const selectedMapped: DeviceProfileSoftware = selectedSoftware.map(selectedItem => {\n        return {\n          name: selectedItem.name,\n          version: selectedItem.version,\n          url: selectedItem.url,\n          action: 'install'\n        };\n      });\n      const merged: DeviceProfileSoftware = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.software || []\n      );\n      const software: DeviceProfileSoftware = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.name && othVal.name && arrVal.name === othVal.name;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { software });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  get isDeviceProfileEmpty() {\n    const isSoftware =\n      this.deviceProfile.c8y_DeviceProfile.software &&\n      this.deviceProfile.c8y_DeviceProfile.software.length > 0;\n    const isFirmware = Boolean(this.deviceProfile.c8y_DeviceProfile.firmware);\n    const isConfiguration =\n      this.deviceProfile.c8y_DeviceProfile.configuration &&\n      this.deviceProfile.c8y_DeviceProfile.configuration.length > 0;\n    return isSoftware || isFirmware || isConfiguration;\n  }\n\n  removeItem(removedItem, category) {\n    const deviceProfilePartial: Partial<IManagedObject> = {\n      c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile\n    };\n    const filtered = deviceProfilePartial.c8y_DeviceProfile[category].filter(\n      item => !isEqual(removedItem, item)\n    );\n    deviceProfilePartial.c8y_DeviceProfile[category] = filtered;\n    this.updateDeviceProfile(deviceProfilePartial);\n  }\n\n  removeFirmware() {\n    delete this.deviceProfile.c8y_DeviceProfile.firmware;\n    this.updateDeviceProfile({ c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile });\n  }\n\n  async updateDeviceProfile(partialDeviceProfile) {\n    if (partialDeviceProfile.c8y_Filter && partialDeviceProfile.c8y_Filter.type === '') {\n      delete partialDeviceProfile.c8y_Filter.type;\n    }\n    Object.assign(partialDeviceProfile, { id: this.deviceProfile.id });\n    try {\n      const { data } = await this.inventoryService.update(partialDeviceProfile);\n      this.deviceProfile = data as DeviceProfile;\n      this.profileName = this.deviceProfile.name;\n      this.alertService.success(gettext('Device profile changed.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private async getDeviceProfile(profileId) {\n    try {\n      const { data } = await this.inventoryService.detail(profileId);\n      return data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private getDeviceTypeQuery(repositoryType) {\n    if (\n      has(this.deviceProfile, 'c8y_Filter.type') &&\n      !isEmpty(this.deviceProfile.c8y_Filter.type)\n    ) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        return this.queriesUtil.addOrFilter(\n          { deviceType: this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `deviceType` } }\n        );\n      } else {\n        return this.queriesUtil.addOrFilter(\n          { 'c8y_Filter.type': this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `c8y_Filter.type` } }\n        );\n      }\n    }\n    return {};\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DeviceProfile } from './device-profile.model';\nimport { DeviceProfileService } from './device-profile.service';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-device-profile',\n  templateUrl: './add-device-profile-component.html'\n})\nexport class AddDeviceProfileComponent {\n  DEVICE_TYPE_POPOVER = gettext('The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.');\n  deviceProfile: Partial<DeviceProfile> = {\n    name: '',\n    type: 'c8y_Profile',\n    c8y_Filter: {},\n    c8y_DeviceProfile : {\n    }\n  };\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(private modal: BsModalRef, private deviceProfileService: DeviceProfileService) {}\n\n  async create() {\n    const mo = (await this.deviceProfileService.createDeviceProfile(this.deviceProfile)).data;\n    this._save(mo.id);\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { cloneDeep } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileService } from './device-profile.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-profile-list',\n  templateUrl: './device-profile-list.component.html'\n})\nexport class DeviceProfileListComponent implements OnInit {\n  reloading: boolean = false;\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  deviceProfiles$: Observable<IResultList<IManagedObject>> = this.reload.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.deviceProfileService.getDeviceProfiles()),\n    tap(() => (this.reloading = false))\n  );\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private bsModalService: BsModalService,\n    private router: Router,\n    private deviceProfileService: DeviceProfileService\n  ) {}\n\n  ngOnInit() {\n    this.loadDeviceProfiles();\n  }\n\n  loadDeviceProfiles() {\n    this.reload.next();\n  }\n\n  async createDeviceProfile() {\n    const modal = this.bsModalService.show(AddDeviceProfileComponent, {\n      class: 'modal-sm'\n    }).content as AddDeviceProfileComponent;\n    try {\n      const profileId = await modal.result;\n      modal.close();\n      this.router.navigateByUrl(`/device-profiles/${profileId}`);\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async duplicateDeviceProfile(deviceProfile) {\n    const copy = cloneDeep(deviceProfile);\n    copy.id = null;\n    copy.name = 'Duplicate of ' + deviceProfile.name;\n    const mo = (await this.deviceProfileService.createDeviceProfile(copy)).data;\n    this.router.navigateByUrl(`/device-profiles/${mo.id}`);\n  }\n\n  async deleteDeviceProfile(deviceProfile) {\n    const deviceProfileName = deviceProfile.name;\n    const title = gettext('Delete device profile');\n    const confirmationText = this.translateService.instant(\n      gettext('You are about to delete a device profile \"{{ deviceProfileName }}\".'),\n      { deviceProfileName }\n    );\n    const finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));\n    try {\n      await this.modalService.confirm(\n        title,\n        `${confirmationText} ${finalQuestion}`,\n        Status.DANGER,\n        {\n          ok: gettext('Delete')\n        }\n      );\n      await this.delete(deviceProfile.id);\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  private async delete(profileId) {\n    try {\n      await this.inventoryService.delete(profileId);\n      this.alertService.success(gettext('Device profile deleted.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { DeviceProfileOperation } from './device-profile.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceProfileGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return this.hasSupportedOperation(contextData, DeviceProfileOperation.APPLY_PROFILE);\n  }\n\n  private hasSupportedOperation(mo: IManagedObject, operation: DeviceProfileOperation) {\n    const supported = mo.c8y_SupportedOperations || [];\n    if (!supported) {\n      return false;\n    }\n    return !!supported.find(supportedOperation => supportedOperation === operation);\n  }\n}\n","import { Component, OnDestroy, OnInit, Pipe } from '@angular/core';\nimport { IManagedObject, IOperation, IResultList, Realtime } from '@c8y/client';\nimport { ActivatedRoute } from '@angular/router';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { DeviceProfileService } from '../device-profile.service';\nimport { DeviceProfile, ComparisonResult } from '../device-profile.model';\nimport { AlertService, gettext, ManagedObjectRealtimeService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-tab-profile',\n  templateUrl: './device-tab-profile.component.html',\n  providers: [ManagedObjectRealtimeService]\n})\nexport class DeviceTabProfileComponent implements OnInit, OnDestroy {\n  device: IManagedObject;\n  deviceProfiles: IResultList<IManagedObject>;\n  selectedProfile: Partial<DeviceProfile>;\n  operation: IOperation;\n  firmwareItems: ComparisonResult[] = [];\n  softwareItems: ComparisonResult[] = [];\n  configurationItems: ComparisonResult[] = [];\n\n  filterPipe: Pipe;\n  pattern: string = '';\n  reloading: boolean = false;\n  private operationsSubscription: Subscription;\n  private moOnDeleteSubscription: Subscription;\n  private moOnUpdateSubscription: Subscription;\n\n  constructor(\n    public deviceRealtime: ManagedObjectRealtimeService,\n    private deviceProfileService: DeviceProfileService,\n    private route: ActivatedRoute,\n    private realtime: Realtime,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.getDeviceProfilesAndUpdateProfileItems();\n    this.subscribeToManagedObjects();\n  }\n\n  async getDeviceProfilesAndUpdateProfileItems() {\n    this.reloading = true;\n    this.deviceProfiles = await this.deviceProfileService.getDeviceProfilesByDeviceType(\n      this.device.type\n    );\n    if (this.device.c8y_Profile) {\n      const profileId = this.device.c8y_Profile.profileId;\n      this.selectedProfile = this.deviceProfiles.data.find(mo => mo.id === profileId);\n    }\n    this.updateProfileItems(this.device, this.selectedProfile);\n    this.operation = await this.deviceProfileService.getProfileOperation(this.device.id);\n    this.subscribeToOperations();\n    this.reloading = false;\n  }\n\n  selectProfile(mo: DeviceProfile) {\n    this.selectedProfile = mo;\n    this.updateProfileItems(this.device, this.selectedProfile);\n  }\n\n  async createOperation() {\n    this.operation = await this.deviceProfileService.createProfileOperation(\n      this.device,\n      this.selectedProfile\n    );\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: any[]) => {\n        return data.filter(\n          (mo: any) => mo.name && mo.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n    this.moOnUpdateSubscription.unsubscribe();\n    this.moOnDeleteSubscription.unsubscribe();\n  }\n\n  updateProfileItems(device, profile) {\n    this.firmwareItems = this.deviceProfileService.getFirmwareItems(device, profile);\n    this.softwareItems = this.deviceProfileService.getSoftwareItems(device, profile);\n    this.configurationItems = this.deviceProfileService.getConfigurationItems(device, profile);\n  }\n\n  private subscribeToManagedObjects() {\n    this.moOnUpdateSubscription = this.deviceRealtime\n      .onUpdate$(this.device.id)\n      .subscribe((managedObject: IManagedObject) => {\n        this.updateProfileItems(managedObject, this.selectedProfile);\n      });\n    this.moOnDeleteSubscription = this.deviceRealtime.onDelete$(this.device.id).subscribe(() => {\n      this.alertService.danger(gettext('This device has just been deleted. You will be redirected to \"All devices\" page now.'));\n      window.location.href = '#/device';\n    });\n  }\n\n  private subscribeToOperations() {\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .pipe(filter(({ data }) => data.c8y_DeviceProfile))\n      .subscribe(({ data }) => {\n        this.operation = data;\n      });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-tab-profile-detail',\n  templateUrl: './device-tab-profile-detail.component.html'\n})\nexport class DeviceTabProfileDetailComponent {\n  @Input() sectionTitle: string;\n  @Input() sectionIcon: string;\n  @Input() emptyStateText: string = '';\n  @Input() emptyStateDetails: string = '';\n  @Input() isProfileSelected: boolean;\n  @Input() isEmpty: boolean;\n  @Input() items: ComparisonResult[];\n  @Input() showTextLabel: boolean = true;\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-profile-item-list',\n  templateUrl: './device-profile-item-list.component.html'\n})\nexport class DeviceProfileItemListComponent {\n  @Input() icon: string;\n  @Input() comparisonResults: ComparisonResult[];\n  @Input() showProfileItems: boolean;\n  @Input() showTextLabel: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport {\n  CommonModule,\n  CoreModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ONCE_ROUTE,\n  gettext,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeviceProfileComponent } from './device-profile.component';\nimport { DeviceProfileListComponent } from './device-profile-list.component';\nimport { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';\nimport { DeviceProfileService } from './device-profile.service';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileGuard } from './device-profile.guard';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';\nimport { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';\nimport { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\n\nconst deviceProfilesRoutes: Route[] = [\n  {\n    path: 'device-profiles/:id',\n    component: DeviceProfileComponent\n  },\n  {\n    path: 'device-profiles',\n    component: DeviceProfileListComponent\n  }\n];\n\nconst deviceTabProfileRoutes: any[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-profile',\n    component: DeviceTabProfileComponent,\n    label: gettext('Device profile'),\n    icon: 'c8y-device-profile',\n    canActivate: [DeviceProfileGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceProfileComponent,\n    DeviceProfileListComponent,\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent,\n    DeviceTabProfileDetailComponent,\n    DeviceProfileItemListComponent\n  ],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RepositoryModule,\n    RouterModule.forChild(deviceProfilesRoutes),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule,\n    SingleOperationDetailsModule\n  ],\n  entryComponents: [\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent\n  ],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: DeviceProfileNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: deviceTabProfileRoutes,\n      multi: true\n    },\n    DeviceProfileService,\n    DeviceProfileGuard\n  ]\n})\nexport class DeviceProfileModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DeviceProfileItemListComponent as ɵc} from './device-tab-profile/device-profile-item-list.component';\nexport {DeviceTabProfileDetailComponent as ɵb} from './device-tab-profile/device-tab-profile-detail.component';\nexport {DeviceTabProfileComponent as ɵa} from './device-tab-profile/device-tab-profile.component';"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;IAIA;KAcC;IAXO,4CAAG,GAAT;;;gBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC;wBAChC,KAAK,EAAE,OAAO,CAAC,iBAAiB,CAAC;wBACjC,IAAI,EAAE,kBAAkB;wBACxB,IAAI,EAAE,oBAAoB;wBAC1B,MAAM,EAAE,OAAO,CAAC,YAAY,CAAC;qBAC9B,CAAC,CAAC;iBACJ;gBACD,sBAAO,IAAI,CAAC,QAAQ,EAAC;;;KACtB;IAbU,8BAA8B;QAD1C,UAAU,EAAE;OACA,8BAA8B,CAc1C;IAAD,qCAAC;CAdD;;;IC0BE,8BACU,gBAAkC,EAClC,gBAAkC,EAClC,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAX3B,aAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,WAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC;QAG1C,0BAAqB,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAC/D,8BAAyB,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACxD,qBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAOpD,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;KACtC;IAED,kDAAmB,GAAnB,UAAoB,aAAqC;QACvD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAA+B,CAAC,CAAC;KACtE;IAED,4DAA6B,GAA7B,UAA8B,UAAkB;QAC9C,IAAM,gBAAgB,GAAG;YACvB,IAAI,EAAE,CAAC,EAAE,iBAAiB,EAAE,UAAU,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC;SACnF,CAAC;QACF,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;KACjD;IAED,gDAAiB,GAAjB,UAAkB,QAAc;QAC9B,IAAI,KAAK,GAAW;YAClB,IAAI,EAAE,aAAa;SACpB,CAAC;QACF,IAAM,MAAM,GAAW;YACrB,QAAQ,EAAE,GAAG;YACb,cAAc,EAAE,IAAI;SACrB,CAAC;QACF,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KACvD;IAEK,kDAAmB,GAAzB,UAA0B,QAAyB;;;;;;wBAC3C,MAAM,GAAW;4BACrB,QAAQ,UAAA;4BACR,YAAY,EAAE,mBAAmB;4BACjC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;4BACrC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;4BACjC,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,CAAC;yBACZ,CAAC;wBAEiB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAA;;wBAArD,SAAS,GAAG,CAAC,SAAwC,EAAE,IAAI,CAAC,CAAC,CAAC;wBACpE,sBAAO,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,eAAe,CAAC,UAAU,GAAG,SAAS,GAAG,SAAS,EAAC;;;;KAC7F;IAEK,qDAAsB,GAA5B,UAA6B,MAAsB,EAAE,aAAqC;;;;;;wBAElF,YAAY,GAAe;4BAC/B,QAAQ,EAAE,MAAM,CAAC,EAAE;4BACnB,SAAS,EAAE,aAAa,CAAC,EAAE;4BAC3B,WAAW,EAAE,aAAa,CAAC,IAAI;4BAC/B,iBAAiB,EAAE,aAAa,CAAC,iBAAiB;4BAClD,WAAW,EAAE,2BAAyB,aAAa,CAAC,IAAI,mBAAc,MAAM,CAAC,IAAM;yBACpF,CAAC;;;;wBAEiB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,CAAC,EAAA;;wBAAzD,IAAI,GAAK,CAAA,SAAgD,MAArD;wBACZ,SAAS,GAAG,IAAI,CAAC;;;;wBAEjB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAE,CAAC,CAAC;;4BAEzC,sBAAO,SAAS,EAAC;;;;KAClB;IAED,+CAAgB,GAAhB,UACE,MAAsB,EACtB,eAAuC;QAEvC,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC;QAC3C,IAAM,eAAe,GAAG,GAAG,CAAC,eAAe,EAAE,4BAA4B,CAAC,CAAC;QAC3E,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAM,YAAY,GAAG,EAAE,CAAC;QAExB,IAAI,cAAc,EAAE;YAClB,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAClC;QACD,IAAI,eAAe,EAAE;YACnB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;KAC9G;IAED,+CAAgB,GAAhB,UACE,MAAsB,EACtB,eAAuC;QAEvC,IAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAC/C,IAAM,eAAe,GAAG,GAAG,CAAC,eAAe,EAAE,4BAA4B,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC,uBAAuB,CAAC,cAAc,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;KACpH;IAED,oDAAqB,GAArB,UACE,MAAsB,EACtB,eAAuC;QAEvC,IAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YAC7B,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,oBAAoB,EAAE;gBAC7C,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aACvC;SACF,CAAC,CAAC;QACH,IAAM,oBAAoB,GAAG,GAAG,CAAC,eAAe,EAAE,iCAAiC,CAAC,CAAC;QACrF,OAAO,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,oBAAoB,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;KAC/H;IAEO,uCAAQ,GAAhB,UAAiB,QAAgB;QAAjC,iBAsBC;QArBC,IAAM,YAAY,GAAG,UAAC,iBAAmC;YACvD,OAAO,CAAC,iBAAiB,CAAC,MAAM,GAAG,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;SACpE,CAAC;QAEF,QAAQ,QAAQ;YACd,KAAK,UAAU,CAAC;YAChB,KAAK,UAAU;gBACb,OAAO,UAAC,iBAAmC;oBACzC,OAAO,iBAAiB,CAAC,MAAM,IAAI,iBAAiB,CAAC,OAAO,IAAI,iBAAiB,CAAC,MAAM,CAAC,WAAW,KAAK,iBAAiB,CAAC,OAAO,CAAC,WAAW;wBAC5I,KAAI,CAAC,yBAAyB,GAAG,YAAY,CAAC,iBAAiB,CAAC,CAAC;iBACpE,CAAC;YACJ,KAAK,eAAe;gBAClB,OAAO,UAAC,iBAAmC;oBACzC,OAAO,iBAAiB,CAAC,MAAM,IAAI,iBAAiB,CAAC,OAAO;yBACzD,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,KAAK,iBAAiB,CAAC,OAAO,CAAC,QAAQ;6BACzE,iBAAiB,CAAC,MAAM,CAAC,WAAW,KAAK,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBACjF,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,iBAAiB,CAAC,CAAC;iBAC3D,CAAC;YACJ;gBACE,OAAO,YAAY,CAAC;SACvB;KACF;IAEO,sDAAuB,GAA/B,UACE,WAAuB,EACvB,YAAuE,EACvE,eAAuB,EACvB,uBAA+B,EAC/B,QAA2D;QAJ3D,4BAAA,EAAA,gBAAuB;QACvB,6BAAA,EAAA,iBAAuE;QAKvE,IAAM,aAAa,GAAG,IAAI,CAAC,sCAAsC,CAAC,WAAW,EAAE,eAAe,EAAE,uBAAuB,CAAC,CAAC;QACzH,IAAM,qBAAqB,GAAG,IAAI,CAAC,uCAAuC,CACxE,aAAa,EACb,YAAY,EACZ,eAAe,EACf,uBAAuB,EACvB,QAAQ,CACT,CAAC;QACF,OAAO,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,MAAM,CAAC,CAAC;KACvD;IAEO,qEAAsC,GAA9C,UACE,WAAkB,EAClB,eAAuB,EACvB,uBAA+B;QAE/B,OAAO,WAAW,CAAC,MAAM,CACvB,UAAC,eAAe,EAAE,UAAU;;YAC1B,OAAA,MAAM,CAAC,MAAM,CAAC,eAAe;gBAC3B,GAAC,UAAU,CAAC,eAAe,CAAC,IAAG;oBAC7B,MAAM,EAAE;wBACN,QAAQ,EAAE,UAAU,CAAC,IAAI;wBACzB,WAAW,EAAE,UAAU,CAAC,uBAAuB,CAAC;wBAChD,OAAO,EAAE,UAAU,CAAC,GAAG;qBACxB;oBACD,OAAO,EAAE,SAAS;iBACnB;oBACD;SAAA,EACJ,EAAE,CACH,CAAC;KACH;IAEO,sEAAuC,GAA/C,UACE,aAAqB,EACrB,YAAkE,EAClE,eAAuB,EACvB,uBAA+B,EAC/B,QAA2D;QAE3D,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW;YAC9B,IAAM,iBAAiB,GAAqB;gBAC1C,OAAO,EAAE;oBACP,QAAQ,EAAE,WAAW,CAAC,IAAI;oBAC1B,WAAW,EAAE,WAAW,CAAC,uBAAuB,CAAC;oBACjD,OAAO,EAAE,WAAW,CAAC,GAAG;iBACzB;gBACD,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,GAAG,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,GAAG,SAAS;aACrH,CAAC;YACF,iBAAiB,CAAC,eAAe,GAAG,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAChE,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,GAAG,iBAAiB,CAAC;SACjE,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;KACtB;;gBA1L2B,gBAAgB;gBAChB,gBAAgB;gBACpB,YAAY;;IAZzB,oBAAoB;QADhC,UAAU,EAAE;OACA,oBAAoB,CAqMhC;IAAD,2BAAC;CArMD;;;ICKE,2CAAoB,iBAAoC;QAAxD,iBAEC;QAFmB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAbxD,UAAK,GAAW,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAChD,SAAI,GAAkB,IAAI,OAAO,EAAE,CAAC;QACpC,mBAAc,GAAsB,IAAI,CAAC,IAAI,CAAC,IAAI,CAChD,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,EAAE,GAAA,CAAC,EAChC,GAAG,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAAO,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAAA,CAAC,CACxC,CAAC;QACF,kBAAa,GAAwB,IAAI,YAAY,EAAO,CAAC;QAE7D,oBAAe,GAAQ,EAAE,CAAC;QAC1B,gBAAW,GAAQ,EAAE,CAAC;QACtB,WAAM,GAAgB,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QAI5C,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;KACtC;IAED,kDAAM,GAAN,UAAO,UAAU;QACf,IAAI,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAC7C,EAAE,IAAI,EAAE,MAAI,UAAU,MAAG,EAAE,EAC3B,EAAE,iBAAiB,EAAE,MAAI,UAAU,MAAG,EAAE,CACzC,CAAC;SACH;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;IAED,kDAAM,GAAN,UAAO,aAAa;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACxC;IAED,oDAAQ,GAAR;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,cAAc,CAAC,aAAa,EAAE;YAChF,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;YAC3E,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE;SAC1B,CAAC,CAAC;KACJ;IAED,qDAAS,GAAT,UAAU,GAAqB;QAC7B,IAAM,aAAa,GAAU,IAAI,CAAC,QAAQ,CAAC;QAC3C,OAAO,GAAG,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,IAAI;YAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC;YAC7D,IAAM,QAAQ,GACZ,aAAa,IAAI,aAAa,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAChF,IAAM,iBAAiB,GAAuB;gBAC5C,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC5B,GAAG,EAAE,IAAI;gBACT,QAAQ,UAAA;aACT,CAAC;YACF,IAAI,iBAAiB,GAAuB,GAAG,CAAC,IAAI,CAClD,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,iBAAiB,GAAA,CAC9B,CAAC;YACxB,IAAI,iBAAiB,EAAE;gBACrB,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aACnD;iBAAM;gBACL,iBAAiB,GAAG;oBAClB,OAAO,EAAE,IAAI,CAAC,EAAE;oBAChB,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzC,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B,CAAC;gBACF,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC7B;YACD,OAAO,GAAG,CAAC;SACZ,EAAE,EAAE,CAAC,CAAC;KACR;;gBArDsC,iBAAiB;;IAd7C,iCAAiC;QAJ7C,SAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;YAC1C,iRAA0D;SAC3D,CAAC;OACW,iCAAiC,CAoE7C;IAAD,wCAAC;CApED;;ICsCY,sBAEX;AAFD,WAAY,sBAAsB;IAChC,6DAAmC,CAAA;CACpC,EAFW,sBAAsB,KAAtB,sBAAsB,QAEjC;;;ICpBC,gCACU,KAAqB,EACrB,YAA0B,EAC1B,gBAAkC,EAClC,QAAkB,EAClB,iBAAoC,EACpC,OAAuB,EACvB,iBAAoC;QANpC,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAgB;QACvB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAd9C,wBAAmB,GAAG,OAAO,CAC3B,8IAA8I,CAC/I,CAAC;QAcA,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;KACtC;IAEK,yCAAQ,GAAd;;;;;;wBACQ,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBACzD,KAAA,IAAI,CAAA;wBAAkB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAA;;wBAA5D,GAAK,aAAa,IAAI,SAAsC,CAAkB,CAAC;wBAC/E,IAAI,IAAI,CAAC,aAAa,EAAE;4BACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;4BAC3C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,EAAE;gCAClD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,GAAG,EAAE,CAAC;6BACpD;4BACD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE;gCACvD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,GAAG,EAAE,CAAC;6BACzD;yBACF;;;;;KACF;IAED,4CAAW,GAAX;QAAA,iBAyCC;QAxCC,IAAM,YAAY,GAAG;YACnB,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC;YACjE,cAAc,EAAE,cAAc,CAAC,QAAQ;YACvC,gCAAgC,EAAE,UAAA,WAAW;gBAC3C,OAAA,KAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,QAAQ,CAAC;aAAA;YACjG,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,OAAO,CAAC,iBAAiB,CAAC;YACjC,IAAI,EAAE,kBAAkB,CAAC,MAAM;SAChC,CAAC;QACF,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC9D,mBAAmB,EAAE,IAAI;YACzB,YAAY,cAAA;SACb,CAAC,CAAC;QAEH,IAAI,YAAY,CAAC,gCAAgC,EAAE;YACjD,KAAK,CAAC,OAAO,CAAC,8BAA8B,GAAG,YAAY,CAAC,gCAAgC,CAC1F,KAAK,CACN,CAAC;SACH;QAED,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC1B,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,YAAY;YACxD,IAAA,4BAAyB,EAAxB,gBAAwB,CAAC;YAChC,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO;aACR;YACD,IAAM,oBAAoB,GAA4B;gBACpD,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;aAC9D,CAAC;YACF,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE;gBAC7C,QAAQ,EAAE;oBACR,IAAI,EAAE,QAAQ,CAAC,IAAI;oBACnB,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,GAAG,EAAE,QAAQ,CAAC,GAAG;oBACjB,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,eAAe,EAAE,QAAQ,CAAC,eAAe;iBACjB;aAC3B,CAAC,CAAC;YACH,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;SAChD,CAAC,CAAC;KACJ;IAED,kEAAiC,GAAjC,UAAkC,WAAoC,EAAE,QAAwB;QAAhG,iBAcC;QAbC,OAAO,WAAW,CAAC,IAAI,CACrB,oBAAoB,EAAE,EACtB,SAAS,CAAC,UAAA,UAAU;YAClB,OAAA,KAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,QAAQ,EAAE;gBACrD,WAAW,EAAE,UAAU;gBACvB,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE;gBACzB,UAAU,EAAE,IAAI;aACjB,CAAC;SAAA,CACH,EACD,GAAG,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAAO,OAAA,IAAI;SAAA,CAAC,EACvB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,GAAA,CAAC,EACpD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;KACH;IAED,+DAA8B,GAA9B,UAA+B,GAAqB;QAApD,iBAKC;QAJC,GAAG,CAAC,OAAO,CAAC,UAAA,EAAE;YACZ,EAAE,CAAC,QAAQ,GAAG,KAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;SAC3D,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;KACZ;IAED,iDAAgB,GAAhB;QAAA,iBAgCC;QA/BC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE;YACjE,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACtF,KAAK,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,CAAC;QAC5E,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC1B,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,sBAAsB;YACxE,IAAM,cAAc,GAA+B,sBAAsB,CAAC,GAAG,CAC3E,UAAA,YAAY;gBACV,OAAO,MAAM,CACX;oBACE,GAAG,EAAE,YAAY,CAAC,GAAG;oBACrB,IAAI,EAAE,YAAY,CAAC,IAAI;iBACxB,EACD,YAAY,CAAC,iBAAiB,GAAG,EAAE,IAAI,EAAE,YAAY,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAC/E,CAAC;aACH,CACF,CAAC;YACF,IAAM,MAAM,GAA+B,MAAM,CAC/C,cAAc,EACd,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,IAAI,EAAE,CACzD,CAAC;YACF,IAAM,aAAa,GAA+B,QAAQ,CAAC,MAAM,EAAE,UAAC,MAAM,EAAE,MAAM;gBAChF,OAAO,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;aAClE,CAAC,CAAC;YACH,IAAM,oBAAoB,GAA4B;gBACpD,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;aAC9D,CAAC;YACF,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,CAAC;YAClE,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;SAChD,CAAC,CAAC;KACJ;IAED,4CAAW,GAAX;QAAA,iBA6CC;QA5CC,IAAM,YAAY,GAAG;YACnB,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC;YACjE,cAAc,EAAE,cAAc,CAAC,QAAQ;YACvC,gCAAgC,EAAE,UAAA,WAAW;gBAC3C,OAAA,KAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,QAAQ,CAAC;aAAA;YACjG,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ;YACvD,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,OAAO,CAAC,iBAAiB,CAAC;YACjC,IAAI,EAAE,kBAAkB,CAAC,KAAK;SAC/B,CAAC;QACF,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC9D,mBAAmB,EAAE,IAAI;YACzB,YAAY,cAAA;SACb,CAAC,CAAC;QAEH,IAAI,YAAY,CAAC,gCAAgC,EAAE;YACjD,KAAK,CAAC,OAAO,CAAC,8BAA8B,GAAG,YAAY,CAAC,gCAAgC,CAC1F,KAAK,CACN,CAAC;SACH;QAED,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC1B,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,gBAAgB;YAClE,IAAM,cAAc,GAA0B,gBAAgB,CAAC,GAAG,CAAC,UAAA,YAAY;gBAC7E,OAAO;oBACL,IAAI,EAAE,YAAY,CAAC,IAAI;oBACvB,OAAO,EAAE,YAAY,CAAC,OAAO;oBAC7B,GAAG,EAAE,YAAY,CAAC,GAAG;oBACrB,MAAM,EAAE,SAAS;iBAClB,CAAC;aACH,CAAC,CAAC;YACH,IAAM,MAAM,GAA0B,MAAM,CAC1C,cAAc,EACd,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,IAAI,EAAE,CACpD,CAAC;YACF,IAAM,QAAQ,GAA0B,QAAQ,CAAC,MAAM,EAAE,UAAC,MAAM,EAAE,MAAM;gBACtE,OAAO,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;aAClE,CAAC,CAAC;YACH,IAAM,oBAAoB,GAA4B;gBACpD,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;aAC9D,CAAC;YACF,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;YAC7D,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;SAChD,CAAC,CAAC;KACJ;IAED,sBAAI,wDAAoB;aAAxB;YACE,IAAM,UAAU,GACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ;gBAC7C,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3D,IAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC1E,IAAM,eAAe,GACnB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa;gBAClD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;YAChE,OAAO,UAAU,IAAI,UAAU,IAAI,eAAe,CAAC;SACpD;;;OAAA;IAED,2CAAU,GAAV,UAAW,WAAW,EAAE,QAAQ;QAC9B,IAAM,oBAAoB,GAA4B;YACpD,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB;SACxD,CAAC;QACF,IAAM,QAAQ,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,MAAM,CACtE,UAAA,IAAI,IAAI,OAAA,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,GAAA,CACpC,CAAC;QACF,oBAAoB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;QAC5D,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;KAChD;IAED,+CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,mBAAmB,CAAC,EAAE,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACvF;IAEK,oDAAmB,GAAzB,UAA0B,oBAAoB;;;;;;wBAC5C,IAAI,oBAAoB,CAAC,UAAU,IAAI,oBAAoB,CAAC,UAAU,CAAC,IAAI,KAAK,EAAE,EAAE;4BAClF,OAAO,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC;yBAC7C;wBACD,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC;;;;wBAEhD,qBAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAA;;wBAAjE,IAAI,GAAK,CAAA,SAAwD,MAA7D;wBACZ,IAAI,CAAC,aAAa,GAAG,IAAqB,CAAC;wBAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;wBAC3C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;;;;wBAE9D,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAE,CAAC,CAAC;;;;;;KAE1C;IAEa,iDAAgB,GAA9B,UAA+B,SAAS;;;;;;;wBAEnB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,EAAA;;wBAAtD,IAAI,GAAK,CAAA,SAA6C,MAAlD;wBACZ,sBAAO,IAAI,EAAC;;;wBAEZ,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAE,CAAC,CAAC;;;;;;KAE1C;IAEO,mDAAkB,GAA1B,UAA2B,cAAc;QACvC,IACE,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,iBAAiB,CAAC;YAC1C,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,EAC5C;YACA,IAAI,cAAc,KAAK,cAAc,CAAC,aAAa,EAAE;gBACnD,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CACjC,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,EAClD,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,CACnC,CAAC;aACH;iBAAM;gBACL,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CACjC,EAAE,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,EACzD,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE,CACxC,CAAC;aACH;SACF;QACD,OAAO,EAAE,CAAC;KACX;;gBAjPgB,cAAc;gBACP,YAAY;gBACR,gBAAgB;gBACxB,QAAQ;gBACC,iBAAiB;gBAC3B,cAAc;gBACJ,iBAAiB;;IAfnC,sBAAsB;QAJlC,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,62UAA8C;SAC/C,CAAC;OACW,sBAAsB,CA2PlC;IAAD,6BAAC;CA3PD;;;ICEE,mCAAoB,KAAiB,EAAU,oBAA0C;QAAzF,iBAA6F;QAAzE,UAAK,GAAL,KAAK,CAAY;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAfzF,wBAAmB,GAAG,OAAO,CAAC,8IAA8I,CAAC,CAAC;QAC9K,kBAAa,GAA2B;YACtC,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,aAAa;YACnB,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAG,EACnB;SACF,CAAC;QACF,WAAM,GAAiB,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjD,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACrB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB,CAAC,CAAC;KAI0F;IAEvF,0CAAM,GAAZ;;;;;4BACc,qBAAM,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAA;;wBAA7E,EAAE,GAAG,CAAC,SAAuE,EAAE,IAAI;wBACzF,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;;KACnB;IAED,yCAAK,GAAL;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;;gBAV0B,UAAU;gBAAgC,oBAAoB;;IAhB9E,yBAAyB;QAJrC,SAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,8zDAAkD;SACnD,CAAC;OACW,yBAAyB,CA2BrC;IAAD,gCAAC;CA3BD;;;ICeE,oCACU,gBAAkC,EAClC,gBAAkC,EAClC,YAA0B,EAC1B,YAA0B,EAC1B,cAA8B,EAC9B,MAAc,EACd,oBAA0C;QAPpD,iBAQI;QAPM,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAfpD,cAAS,GAAY,KAAK,CAAC;QAC3B,WAAM,GAA0B,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC1D,oBAAe,GAA4C,IAAI,CAAC,MAAM,CAAC,IAAI,CACzE,GAAG,CAAC,cAAM,QAAC,KAAI,CAAC,SAAS,GAAG,IAAI,IAAC,CAAC,EAClC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,GAAA,CAAC,EAC9D,GAAG,CAAC,cAAM,QAAC,KAAI,CAAC,SAAS,GAAG,KAAK,IAAC,CAAC,CACpC,CAAC;KAUE;IAEJ,6CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,uDAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAEK,wDAAmB,GAAzB;;;;;;wBACQ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,yBAAyB,EAAE;4BAChE,KAAK,EAAE,UAAU;yBAClB,CAAC,CAAC,OAAoC,CAAC;;;;wBAEpB,qBAAM,KAAK,CAAC,MAAM,EAAA;;wBAA9B,SAAS,GAAG,SAAkB;wBACpC,KAAK,CAAC,KAAK,EAAE,CAAC;wBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAoB,SAAW,CAAC,CAAC;;;;;;;;;KAI9D;IAEK,2DAAsB,GAA5B,UAA6B,aAAa;;;;;;wBAClC,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;wBACtC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;wBACf,IAAI,CAAC,IAAI,GAAG,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC;wBACrC,qBAAM,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAA;;wBAA/D,EAAE,GAAG,CAAC,SAAyD,EAAE,IAAI;wBAC3E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAoB,EAAE,CAAC,EAAI,CAAC,CAAC;;;;;KACxD;IAEK,wDAAmB,GAAzB,UAA0B,aAAa;;;;;;wBAC/B,iBAAiB,GAAG,aAAa,CAAC,IAAI,CAAC;wBACvC,KAAK,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;wBACzC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpD,OAAO,CAAC,qEAAqE,CAAC,EAC9E,EAAE,iBAAiB,mBAAA,EAAE,CACtB,CAAC;wBACI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;;;;wBAEtF,qBAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAC7B,KAAK,EACF,gBAAgB,SAAI,aAAe,EACtC,MAAM,CAAC,MAAM,EACb;gCACE,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC;6BACtB,CACF,EAAA;;wBAPD,SAOC,CAAC;wBACF,qBAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,EAAA;;wBAAnC,SAAmC,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;;;;;;;;KAItB;IAEa,2CAAM,GAApB,UAAqB,SAAS;;;;;;;wBAE1B,qBAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,EAAA;;wBAA7C,SAA6C,CAAC;wBAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;;;;wBAE9D,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAE,CAAC,CAAC;;;;;;KAE1C;;gBArE2B,gBAAgB;gBAChB,gBAAgB;gBACpB,YAAY;gBACZ,YAAY;gBACV,cAAc;gBACtB,MAAM;gBACQ,oBAAoB;;IAhBzC,0BAA0B;QAJtC,SAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,2gHAAmD;SACpD,CAAC;OACW,0BAA0B,CAgFtC;IAAD,iCAAC;CAhFD;;;ICVA;KAgBC;IAfC,wCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5E,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,sBAAsB,CAAC,aAAa,CAAC,CAAC;KACtF;IAEO,kDAAqB,GAA7B,UAA8B,EAAkB,EAAE,SAAiC;QACjF,IAAM,SAAS,GAAG,EAAE,CAAC,uBAAuB,IAAI,EAAE,CAAC;QACnD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,kBAAkB,IAAI,OAAA,kBAAkB,KAAK,SAAS,GAAA,CAAC,CAAC;KACjF;IAfU,kBAAkB;QAD9B,UAAU,EAAE;OACA,kBAAkB,CAgB9B;IAAD,yBAAC;CAhBD;;;ICwBE,mCACS,cAA4C,EAC3C,oBAA0C,EAC1C,KAAqB,EACrB,QAAkB,EAClB,YAA0B;QAJ3B,mBAAc,GAAd,cAAc,CAA8B;QAC3C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAhBpC,kBAAa,GAAuB,EAAE,CAAC;QACvC,kBAAa,GAAuB,EAAE,CAAC;QACvC,uBAAkB,GAAuB,EAAE,CAAC;QAG5C,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAY,KAAK,CAAC;KAWvB;IAEE,4CAAQ,GAAd;;;gBACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC1D,IAAI,CAAC,sCAAsC,EAAE,CAAC;gBAC9C,IAAI,CAAC,yBAAyB,EAAE,CAAC;;;;KAClC;IAEK,0EAAsC,GAA5C;;;;;;wBACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,KAAA,IAAI,CAAA;wBAAkB,qBAAM,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,CACjF,IAAI,CAAC,MAAM,CAAC,IAAI,CACjB,EAAA;;wBAFD,GAAK,cAAc,GAAG,SAErB,CAAC;wBACF,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;4BACrB,cAAY,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;4BACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,EAAE,KAAK,WAAS,GAAA,CAAC,CAAC;yBACjF;wBACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC3D,KAAA,IAAI,CAAA;wBAAa,qBAAM,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAA;;wBAApF,GAAK,SAAS,GAAG,SAAmE,CAAC;wBACrF,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;;;;KACxB;IAED,iDAAa,GAAb,UAAc,EAAiB;QAC7B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5D;IAEK,mDAAe,GAArB;;;;;;wBACE,KAAA,IAAI,CAAA;wBAAa,qBAAM,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CACrE,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,eAAe,CACrB,EAAA;;wBAHD,GAAK,SAAS,GAAG,SAGhB,CAAC;;;;;KACH;IAED,2CAAO,GAAP,UAAQ,SAAiB;QACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CACpB,GAAG,CAAC,UAAC,IAAW;YACd,OAAO,IAAI,CAAC,MAAM,CAChB,UAAC,EAAO,IAAK,OAAA,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,GAAA,CACpF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;KAC3C;IAED,sDAAkB,GAAlB,UAAmB,MAAM,EAAE,OAAO;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC5F;IAEO,6DAAyB,GAAjC;QAAA,iBAUC;QATC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc;aAC9C,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aACzB,SAAS,CAAC,UAAC,aAA6B;YACvC,KAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,KAAI,CAAC,eAAe,CAAC,CAAC;SAC9D,CAAC,CAAC;QACL,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YACpF,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,sFAAsF,CAAC,CAAC,CAAC;YAC1H,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;SACnC,CAAC,CAAC;KACJ;IAEO,yDAAqB,GAA7B;QAAA,iBAQC;QAPC,IAAM,iBAAiB,GAAG,iBAAe,IAAI,CAAC,MAAM,CAAC,EAAI,CAAC;QAC1D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ;aACxC,UAAU,CAAC,iBAAiB,CAAC;aAC7B,IAAI,CAAC,MAAM,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAAO,OAAA,IAAI,CAAC,iBAAiB;SAAA,CAAC,CAAC;aAClD,SAAS,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAChB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB,CAAC,CAAC;KACN;;gBAnFwB,4BAA4B;gBACrB,oBAAoB;gBACnC,cAAc;gBACX,QAAQ;gBACJ,YAAY;;IArBzB,yBAAyB;QALrC,SAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,oqJAAkD;YAClD,SAAS,EAAE,CAAC,4BAA4B,CAAC;SAC1C,CAAC;OACW,yBAAyB,CAqGrC;IAAD,gCAAC;CArGD;;;ICXA;QAOW,mBAAc,GAAW,EAAE,CAAC;QAC5B,sBAAiB,GAAW,EAAE,CAAC;QAI/B,kBAAa,GAAY,IAAI,CAAC;KACxC;IARUA;QAAR,KAAK,EAAE;yEAAsB;IACrBA;QAAR,KAAK,EAAE;wEAAqB;IACpBA;QAAR,KAAK,EAAE;2EAA6B;IAC5BA;QAAR,KAAK,EAAE;8EAAgC;IAC/BA;QAAR,KAAK,EAAE;8EAA4B;IAC3BA;QAAR,KAAK,EAAE;oEAAkB;IACjBA;QAAR,KAAK,EAAE;kEAA2B;IAC1BA;QAAR,KAAK,EAAE;0EAA+B;IAR5B,+BAA+B;QAJ3C,SAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,8nDAAyD;SAC1D,CAAC;OACW,+BAA+B,CAS3C;IAAD,sCAAC;CATD;;;ICAA;KAKC;IAJUA;QAAR,KAAK,EAAE;gEAAc;IACbA;QAAR,KAAK,EAAE;6EAAuC;IACtCA;QAAR,KAAK,EAAE;4EAA2B;IAC1BA;QAAR,KAAK,EAAE;yEAAwB;IAJrB,8BAA8B;QAJ1C,SAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,w2EAAwD;SACzD,CAAC;OACW,8BAA8B,CAK1C;IAAD,qCAAC;CALD;;ACqBA,IAAM,oBAAoB,GAAY;IACpC;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,sBAAsB;KAClC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,0BAA0B;KACtC;CACF,CAAC;AAEF,IAAM,sBAAsB,GAAU;IACpC;QACE,OAAO,EAAE,WAAW,CAAC,MAAM;QAC3B,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,yBAAyB;QACpC,KAAK,EAAE,OAAO,CAAC,gBAAgB,CAAC;QAChC,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EAAE,CAAC,kBAAkB,CAAC;KAClC;CACF,CAAC;SAsCc,sBAAsB;AAOtC;IAAA;KAAmC;IAAtB,mBAAmB;QA3C/B,QAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sBAAsB;gBACtB,0BAA0B;gBAC1B,yBAAyB;gBACzB,iCAAiC;gBACjC,yBAAyB;gBACzB,+BAA+B;gBAC/B,8BAA8B;aAC/B;YACD,OAAO,EAAE,EAAE;YACX,OAAO,EAAE;gBACP,UAAU;gBACV,YAAY;gBACZ,gBAAgB;gBAChB,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC;gBAC3C,gBAAgB,CAAC,OAAO,EAAE;gBAC1B,aAAa;gBACb,mBAAmB;gBACnB,aAAa;gBACb,aAAa;gBACb,4BAA4B;aAC7B;YACD,eAAe,EAAE;gBACf,yBAAyB;gBACzB,iCAAiC;gBACjC,yBAAyB;aAC1B;YACD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,oBAAoB;oBAC7B,QAAQ,EAAE,8BAA8B;oBACxC,KAAK,EAAE,IAAI;iBACZ;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,QAAQ,IAAwB;oBAChC,KAAK,EAAE,IAAI;iBACZ;gBACD,oBAAoB;gBACpB,kBAAkB;aACnB;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAnC;;AC7FA;;GAEG;;;;"}