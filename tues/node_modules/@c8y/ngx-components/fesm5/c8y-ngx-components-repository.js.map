{"version":3,"file":"c8y-ngx-components-repository.js","sources":["ng://@c8y/ngx-components/repository/repository.model.ts","ng://@c8y/ngx-components/repository/repository.service.ts","ng://@c8y/ngx-components/repository/firmware/add-firmware-modal.component.ts","ng://@c8y/ngx-components/repository/firmware/add-firmware-patch-modal.component.ts","ng://@c8y/ngx-components/repository/firmware/firmware-list.component.ts","ng://@c8y/ngx-components/repository/firmware/firmware-details.component.ts","ng://@c8y/ngx-components/repository/software/add-software-modal.component.ts","ng://@c8y/ngx-components/repository/software/software-list.component.ts","ng://@c8y/ngx-components/repository/software/software-details.component.ts","ng://@c8y/ngx-components/repository/configuration/configuration-detail.component.ts","ng://@c8y/ngx-components/repository/configuration/configuration-list.component.ts","ng://@c8y/ngx-components/repository/repository-navigation-factory.ts","ng://@c8y/ngx-components/repository/select-modal/repository-select-modal.component.ts","ng://@c8y/ngx-components/repository/firmware-device-tab/firmware-device-tab.component.ts","ng://@c8y/ngx-components/repository/firmware-device-tab/firmware-device-tab.guard.ts","ng://@c8y/ngx-components/repository/software-device-tab/software-device-tab.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/software-device-tab.guard.ts","ng://@c8y/ngx-components/repository/software-device-tab/installed-software.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/device-software-list.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/device-software-changes.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.service.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/source-code-preview.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/save-to-repository.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/configuration-preview.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/configuration-filter.pipe.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.guard.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration-list.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/text-based-configuration.component.ts","ng://@c8y/ngx-components/repository/file-download/link-render-type.enum.ts","ng://@c8y/ngx-components/repository/file-download/file-download.component.ts","ng://@c8y/ngx-components/repository/repository.module.ts","ng://@c8y/ngx-components/repository/c8y-ngx-components-repository.ts"],"sourcesContent":["import { IManagedObject } from '@c8y/client';\n\nexport enum RepositoryType {\n  FIRMWARE = 'c8y_Firmware',\n  SOFTWARE = 'c8y_Software',\n  CONFIGURATION = 'c8y_ConfigurationDump'\n}\n\nexport const REPOSITORY_BINARY_TYPES = {\n  [RepositoryType.SOFTWARE]: 'c8y_SoftwareBinary',\n  [RepositoryType.FIRMWARE]: 'c8y_FirmwareBinary',\n  [RepositoryType.CONFIGURATION]: 'c8y_ConfigurationDumpBinary'\n};\n\nexport interface ModalModel {\n  selected?: { id?: string; name?: string; [key: string]: any };\n  version?: string;\n  dependency?: { c8y_Firmware: { version: string } };\n  patchVersion?: string;\n  description?: string;\n  deviceType?: string;\n  binary?: {\n    file?: File;\n    url?: string;\n  };\n}\n\nexport interface RepositoryCategory extends Partial<IManagedObject> {\n  type: string;\n  description?: string;\n  c8y_Filter?: {\n    type: string;\n  };\n}\n\nexport interface FirmwareBinary extends Partial<IManagedObject> {\n  type: 'c8y_FirmwareBinary';\n  c8y_Firmware: {\n    version: string;\n    url: string;\n  };\n}\n\nexport interface FirmwarePatchBinary extends FirmwareBinary {\n  c8y_Patch: {\n    dependency: string;\n  };\n}\n\nexport interface SoftwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Software: {\n    version: string;\n    url: string;\n  };\n}\n\nexport type RepositoryBinary = FirmwareBinary | SoftwareBinary | FirmwarePatchBinary;\n\nexport interface SelectedRepositoryBinary {\n  id: string;\n  name: string;\n  version: string;\n  url: string;\n  dependency?: string;\n  c8y_Patch?: boolean;\n}\n\nexport interface DeviceFirmware {\n  version: string;\n  url: string;\n  name: string;\n}\n\nexport interface DeviceSoftware {\n  name: string;\n  version?: string;\n  url: string;\n}\n\nexport interface DeviceSoftwareChange extends DeviceSoftware {\n  action: 'install' | 'delete';\n}\n\nexport interface ConfigurationSnapshot {\n  id?: string;\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  binaryType?: any;\n  deviceType?: string;\n  configurationType?: string;\n  description?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n  isLegacy?: boolean;\n}\n\nexport interface DeviceConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile',\n  CONFIG = 'c8y_Configuration',\n  SEND_CONFIG = 'c8y_SendConfiguration'\n}\n","import { Observable, of, from, throwError, merge } from 'rxjs';\nimport { map, switchMap, takeWhile, take, filter, withLatestFrom } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  isNil,\n  isUndefined,\n  assign,\n  set,\n  head,\n  get,\n  isString,\n  pick,\n  cloneDeep,\n  remove,\n  find,\n  forEach,\n  map as _map\n} from 'lodash-es';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport {\n  InventoryService,\n  InventoryBinaryService,\n  IResult,\n  IManagedObject,\n  IManagedObjectBinary,\n  IIdentified,\n  QueriesUtil,\n  IResultList,\n  IFetchResponse,\n  IOperation,\n  OperationService,\n  Realtime,\n  OperationStatus,\n  IEvent,\n  EventService,\n  EventBinaryService,\n  IdReference\n} from '@c8y/client';\nimport {\n  RepositoryCategory,\n  RepositoryBinary,\n  FirmwareBinary,\n  SoftwareBinary,\n  FirmwarePatchBinary,\n  ModalModel,\n  RepositoryType,\n  REPOSITORY_BINARY_TYPES,\n  DeviceFirmware,\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  SelectedRepositoryBinary,\n  ConfigurationSnapshot\n} from './repository.model';\n\n@Injectable()\nexport class RepositoryService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventory: InventoryService,\n    private inventoryBinary: InventoryBinaryService,\n    private operation: OperationService,\n    private alert: AlertService,\n    private event: EventService,\n    private realtime: Realtime,\n    private eventBinary: EventBinaryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  /**\n   * Lists repository entries of given type.\n   * @param type The type of repository entries to list.\n   * @param options Extra listing options.\n   */\n  listRepositoryEntries(\n    type: RepositoryType,\n    options?: {\n      /** Additional query. */\n      query?: any;\n      /** (deprecated - to be removed) Only include entries with matching partial names. */\n      partialName?: string;\n      /** Include entries with matching partial text in the specified properties. */\n      partialTextFilter?: { partialText: string; properties: string[] };\n      /** Exclude legacy entries. */\n      skipLegacy?: boolean;\n      /** Other request params. */\n      params?: any;\n    }\n  ) {\n    const defaultOrder = [{ name: 1 }];\n    const defaultFilters = { type };\n    const legacyFilters = { __has: `url` };\n    let filters = {};\n\n    let fullQuery = (options && options.query) || {};\n    fullQuery = this.queriesUtil.addOrderbys(fullQuery, defaultOrder, 'prepend');\n\n    fullQuery = this.queriesUtil.addAndFilter(fullQuery, defaultFilters);\n\n    if (options && options.partialTextFilter) {\n      const { partialText, properties } = options.partialTextFilter;\n      const orFilter = { __or: properties.map(property => ({ [property]: `*${partialText}*` })) };\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, orFilter);\n    }\n\n    if (options && options.partialName) {\n      // backwards compatibility if\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { name: `*${options.partialName}*` });\n    }\n\n    if (options && options.skipLegacy) {\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { __not: legacyFilters });\n    }\n\n    filters = {\n      query: this.queriesUtil.buildQuery(fullQuery),\n      pageSize: 50,\n      withTotalPages: true,\n      ...((options && options.params) || {})\n    };\n    return this.inventory.list(filters);\n  }\n\n  // TODO: merge with create()\n  async save(data: ModalModel, type: RepositoryType, mo: Partial<IManagedObject> = {}) {\n    switch (type) {\n      case RepositoryType.CONFIGURATION: {\n        Object.assign(mo, {\n          type: RepositoryType.CONFIGURATION,\n          configurationType: data.selected ? data.selected.configurationType : undefined,\n          name: data.version,\n          description: data.description,\n          deviceType: data.deviceType,\n          c8y_Global: {}\n        });\n        if (!data.deviceType && mo.id) {\n          mo.deviceType = null;\n        }\n        if (!data.selected && mo.id) {\n          mo.configurationType = null;\n        }\n        break;\n      }\n    }\n\n    const existingUrl = mo.url;\n    if (data.binary.url) {\n      mo.url = data.binary.url;\n    } else if (data.binary.file) {\n      const response = await this.inventoryBinary.create(data.binary.file, {\n        c8y_Global: {}\n      } as Partial<IManagedObject>);\n      mo.url = response.data.self;\n    }\n\n    if (mo.id) {\n      return this.updateEntry(mo, existingUrl);\n    }\n    return this.createEntry(mo);\n  }\n\n  async create(modal: ModalModel, type: RepositoryType) {\n    switch (type) {\n      case RepositoryType.FIRMWARE:\n      case RepositoryType.SOFTWARE:\n        return this.createFirmwareOrSoftware(modal, type);\n    }\n  }\n\n  async createFirmwareOrSoftware(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<RepositoryCategory> {\n    let binary: IManagedObjectBinary;\n    let binaryURL: string;\n    let repositoryEntry: RepositoryCategory;\n    let repositoryBinary: FirmwareBinary | SoftwareBinary;\n    const mos = [];\n    const {\n      selected: { id: selectedId },\n      binary: { file, url }\n    } = modal;\n    try {\n      if (file) {\n        ({ data: binary } = await this.saveBinary(file));\n        ({ self: binaryURL } = binary);\n        mos.push(binary);\n      } else {\n        binaryURL = url;\n      }\n\n      ({ data: repositoryEntry } = await this.createOrUpdateRepositoryEntry(modal, type));\n      if (isNil(selectedId)) {\n        mos.push(repositoryEntry);\n      }\n\n      ({ data: repositoryBinary } = await this.createRepositoryBinary(\n        modal,\n        binaryURL,\n        type,\n        repositoryEntry\n      ));\n      mos.push(repositoryBinary);\n\n      if (file) {\n        await this.linkBinary(repositoryBinary, binary);\n      }\n\n      return repositoryEntry;\n    } catch (error) {\n      this.cleanUp(mos);\n      this.errorMsg();\n\n      // Propagate error\n      throw error;\n    }\n  }\n\n  saveBinary(file: File): Promise<IResult<IManagedObjectBinary>> {\n    return this.inventoryBinary.create(file, { c8y_Global: {} } as Partial<IManagedObject>);\n  }\n\n  createOrUpdateRepositoryEntry(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<IResult<RepositoryCategory>> {\n    const {\n      selected: { id, name },\n      description,\n      deviceType\n    } = modal;\n\n    const mo = {\n      id,\n      name: id ? undefined : name,\n      description,\n      type: id ? undefined : type,\n      c8y_Global: {}\n    };\n\n    if (deviceType) {\n      set(mo, 'c8y_Filter.type', deviceType);\n    }\n\n    return id\n      ? (this.inventory.update(mo) as Promise<IResult<RepositoryCategory>>)\n      : (this.inventory.create(mo) as Promise<IResult<RepositoryCategory>>);\n  }\n\n  createRepositoryBinary(\n    modal: ModalModel,\n    binaryURL: string,\n    type: RepositoryType,\n    parent: RepositoryCategory\n  ): Promise<IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>> {\n    const mo = this.prepareRepositoryBinaryMO(modal, binaryURL, type);\n\n    return this.inventory.childAdditionsCreate(mo, parent) as Promise<\n      IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>\n    >;\n  }\n\n  prepareRepositoryBinaryMO(modal: ModalModel, binaryURL: string, type: RepositoryType) {\n    const { version, patchVersion, dependency } = modal;\n    const result = {\n      type: REPOSITORY_BINARY_TYPES[type],\n      [type]: {\n        url: binaryURL\n      },\n      c8y_Global: {}\n    };\n\n    if (dependency) {\n      set(result, [type, 'version'], patchVersion);\n      assign(result, {\n        c8y_Patch: {\n          dependency: dependency.c8y_Firmware.version\n        }\n      });\n    } else {\n      set(result, [type, 'version'], version);\n    }\n    return result;\n  }\n\n  async linkBinary(\n    repositoryBinary: FirmwareBinary | SoftwareBinary,\n    binary: IManagedObjectBinary\n  ) {\n    const { id: repositoryBinaryId } = repositoryBinary;\n    if (binary) {\n      const { id: binaryId } = binary;\n      return this.inventory.childAdditionsAdd(binaryId, repositoryBinaryId);\n    }\n  }\n\n  cleanUp(mosToDelete: IIdentified[]) {\n    mosToDelete.forEach(mo => {\n      const { c8y_IsBinary } = mo;\n      isUndefined(c8y_IsBinary) ? this.delete(mo) : this.inventoryBinary.delete(mo);\n    });\n  }\n\n  delete(entity: IIdentified): Promise<IResult<null>> {\n    return this.inventory.delete(entity, { forceCascade: true });\n  }\n\n  errorMsg() {\n    const msg = gettext('Failed to save');\n    this.alert.danger(msg);\n  }\n\n  getBaseVersionsCount$(entry: IManagedObject): Observable<number> {\n    if (this.isLegacyEntry(entry)) {\n      return of(1);\n    }\n    return from(this.listBaseVersions(entry, { pageSize: 1, withTotalPages: true })).pipe(\n      map(({ paging }) => paging.totalPages)\n    );\n  }\n\n  getBaseVersionFromMO(mo: RepositoryBinary): string {\n    return this.isPatch(mo) ? get(mo, 'c8y_Patch.dependency') : get(mo, 'c8y_Firmware.version');\n  }\n\n  isPatch(mo: RepositoryBinary): boolean {\n    return !!get(mo, 'c8y_Patch.dependency');\n  }\n\n  getPatchVersionsCount$(entry: IManagedObject, baseVersion: FirmwareBinary): Observable<number> {\n    if (this.isLegacyEntry(baseVersion)) {\n      return of(0);\n    }\n    return from(\n      this.listPatchVersions(entry, baseVersion, { pageSize: 1, withTotalPages: true })\n    ).pipe(map(({ paging }) => paging.totalPages));\n  }\n\n  isLegacyEntry(entry: Partial<IManagedObject>): boolean {\n    return Boolean(entry.url);\n  }\n\n  /**\n   * Lists all versions (base and patch ones) of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listAllVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const VERSION_FILTER_ORDER = {\n      __filter: {},\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, VERSION_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists base versions of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listBaseVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const NO_PATCH_FILTER_ORDER = {\n      __filter: {\n        __not: { __has: 'c8y_Patch' }\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, NO_PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listPatchVersions(entry: IManagedObject, baseVersion: FirmwareBinary | string, params = {}) {\n    const version = isString(baseVersion) ? baseVersion : get(baseVersion, 'c8y_Firmware.version');\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        'c8y_Patch.dependency': version\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry including the base version.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * In terms of legacy base version the entry gets transformed to fit the needed data model.\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listBaseVersionAndPatches(entry: IManagedObject, baseVersion: IManagedObject, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return Promise.resolve({\n        data: [\n          Object.assign(\n            {\n              c8y_Firmware: {\n                version: entry.version,\n                url: entry.url\n              }\n            },\n            entry\n          )\n        ]\n      });\n    }\n\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        __or: {\n          'c8y_Patch.dependency': baseVersion.c8y_Firmware.version,\n          'c8y_Firmware.version': baseVersion.c8y_Firmware.version\n        }\n      },\n      __orderby: [{ 'c8y_Patch.dependency': 1 }, { 'c8y_Firmware.version': 1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  listChildren(entry: Partial<IManagedObject>, filters = {}, params: any = {}) {\n    const childrenFilters = { __bygroupid: entry.id };\n    const query = this.queriesUtil.addAndFilter(filters, childrenFilters);\n    // FIXME: needed because of issue in forOf directive (...)\n    params.withTotalPages = true;\n    return this.inventory.listQuery(query, params);\n  }\n\n  /**\n   * Fetches all items from the list starting with the provided page.\n   * @param firstPage The first page of the list to fetch all items for.\n   */\n  async fetchAllItemsFromList(firstPage) {\n    let allItems;\n\n    if (!firstPage.then) {\n      allItems = [...firstPage];\n    } else {\n      let { paging, data: items } = await firstPage;\n      allItems = [...items];\n\n      while (paging && paging.nextPage) {\n        ({ paging, data: items } = await paging.next());\n        allItems = [...allItems, ...items];\n      }\n    }\n\n    return allItems;\n  }\n\n  /**\n   * Gets top level repository entry managed object for base or patch version.\n   * @param mo Base or patch version managed object with parents.\n   */\n  getRepositoryEntryMO$(mo: IManagedObject): Observable<IManagedObject | undefined> {\n    if (!mo) {\n      return of(undefined);\n    }\n    const [reference] = get(mo, 'additionParents.references');\n    const id = get(reference, 'managedObject.id');\n    return id\n      ? from(this.inventory.detail(id, { withChildren: false })).pipe(map(({ data }) => data))\n      : of(undefined);\n  }\n  /**\n   * Gets base or patch version managed object.\n   * @param deviceRepositoryFragment Device repository fragment.\n   * @param type Top level repository entry type.\n   * @param configuration Configuration object with options:\n   * - **skipLegacy** - `boolean` - Exclude legacy entries.\n   * - **filters** - `object` - Filter object.\n   *\n   * @deprecated as it doesn't support 'missing url' case\n   */\n  getRepositoryBinaryMoByVersion(\n    deviceRepositoryFragment: DeviceFirmware | DeviceSoftware,\n    type: RepositoryType,\n    { skipLegacy = false, filters = {} }: { skipLegacy?: boolean; filters?: object } = {}\n  ): Promise<IManagedObject> {\n    const { version, url, name } = deviceRepositoryFragment;\n    const repositoryBinaryType = REPOSITORY_BINARY_TYPES[type];\n    let query;\n    const newModelBaseVersionQuery = {\n      [`${type}.version`]: version,\n      [`${type}.url`]: url,\n      type: repositoryBinaryType\n    };\n    const legacyVersionQuery = { url, type, name };\n    filters = { withChildren: false, withParents: true, ...filters };\n\n    if (skipLegacy) {\n      query = {\n        __and: {\n          ...newModelBaseVersionQuery\n        }\n      };\n    } else {\n      query = {\n        __or: [{ __and: { ...newModelBaseVersionQuery } }, { __and: { ...legacyVersionQuery } }]\n      };\n    }\n\n    return this.inventory.listQuery(query, filters).then(({ data }) => head(data));\n  }\n\n  getBinaryName$(binaryUrl: string): Observable<string> {\n    if (!binaryUrl) {\n      return of('---');\n    }\n\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId) {\n      return of(binaryUrl);\n    }\n    return this.inventory.detail$(binaryId).pipe(map(mo => mo.name));\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find\n   * repository entries of specified type matching the type of provided device.\n   * @param repositoryType The type of repository entries which will be queried with the generated query.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   */\n  getDeviceTypeQuery(repositoryType: RepositoryType, device: IManagedObject): object {\n    let result = { type: repositoryType };\n    if (device.type) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [{ deviceType: device.type }, { __not: { __has: `deviceType` } }]\n        });\n      } else {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [\n            { 'c8y_Filter.type': device.type },\n            { 'c8y_Filter.type': '' },\n            { __not: { __has: `c8y_Filter.type` } }\n          ]\n        });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find configuration repository entries\n   * matching the type of provided device and specified configuration type.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   * @param configurationType Configuration type for which matching repository entries will be queried with the generated query.\n   */\n  getConfigurationTypeQuery(device: IManagedObject, configurationType: string): object {\n    const query = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION, device);\n    return this.queriesUtil.addAndFilter(query, {\n      __or: [\n        { configurationType },\n        { configurationType: '' },\n        { __not: { __has: `configurationType` } }\n      ]\n    });\n  }\n\n  /**\n   * Gets the list of software installed in the device in the uniform format.\n   * Supports c8y_SoftwareList and c8y_Software fragments.\n   * @param device The device whose software list should be returned.\n   */\n  getDeviceSoftwareList(device: IManagedObject): DeviceSoftware[] {\n    if (device.c8y_SoftwareList) {\n      return cloneDeep(device.c8y_SoftwareList);\n    }\n    if (device.c8y_Software) {\n      return _map(device.c8y_Software, (version, name) => ({ name, version }));\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a software update operation for given device and the list of changes, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param changes The list of software changes which should be applied.\n   */\n  async createSoftwareUpdateOperation(\n    device: IManagedObject,\n    changes: DeviceSoftwareChange[]\n  ): Promise<IOperation> {\n    const operation = this.getSoftwareUpdateOperation(device, changes);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a software update operation for given device and changes.\n   * Returned operation type depends on device's supported operations.\n   * Supports c8y_SoftwareUpdate, c8y_SoftwareList, and c8y_Software operations.\n   * @param device The device for which operation should be prepared.\n   * @param changes The list of software changes which should be applied.\n   */\n  getSoftwareUpdateOperation(device: IManagedObject, changes: DeviceSoftwareChange[]): IOperation {\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Apply software changes: ${changes\n        .map(\n          change =>\n            `${change.action} \"${change.name}\"${\n              change.version ? ` (version: ${change.version})` : ''\n            }`\n        )\n        .join(', ')}`\n    };\n    if (device.c8y_SupportedOperations.includes('c8y_SoftwareUpdate')) {\n      operation.c8y_SoftwareUpdate = cloneDeep(changes);\n    } else if (device.c8y_SupportedOperations.includes('c8y_SoftwareList')) {\n      operation.c8y_SoftwareList = cloneDeep(device.c8y_SoftwareList) || [];\n      changes.forEach(change => {\n        const deviceSoftware: DeviceSoftware = pick(change, ['name', 'version', 'url']);\n        if (change.action === 'delete') {\n          remove(operation.c8y_SoftwareList, deviceSoftware);\n        }\n        if (change.action === 'install') {\n          operation.c8y_SoftwareList.push(deviceSoftware);\n        }\n      });\n    } else if (device.c8y_SupportedOperations.includes('c8y_Software')) {\n      operation.c8y_Software = cloneDeep(device.c8y_Software) || {};\n      changes.forEach(change => {\n        if (change.action === 'delete') {\n          delete operation.c8y_Software[change.name];\n        }\n        if (change.action === 'install') {\n          operation.c8y_Software[change.name] = change.version;\n        }\n      });\n    }\n    return operation;\n  }\n\n  /**\n   * Extracts the list of device software changes from given operation in the context of given device.\n   * @param operation The operation from which the list should be extracted.\n   * @param device The target device of the operation.\n   */\n  getDeviceSoftwareChangesFromOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    if (operation.c8y_SoftwareUpdate) {\n      return cloneDeep(operation.c8y_SoftwareUpdate);\n    }\n    if (operation.c8y_SoftwareList) {\n      return this.getDeviceSoftwareChangesFromSoftwareListOperation(operation, device);\n    }\n    if (operation.c8y_Software) {\n      return this.getDeviceSoftwareChangesFromSoftwareOperation(operation, device);\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and the selected repository binary, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param selectedOption The selected repository binary option.\n   */\n  async createFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): Promise<IOperation> {\n    const operation = this.getFirmwareUpdateOperation(device, selectedOption);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and selected version.\n   * Supports c8y_Firmware operation.\n   * @param device The device for which operation should be prepared.\n   * @param selectedOption Selected firmware version.\n   */\n  getFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): IOperation {\n    delete selectedOption.id;\n\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Update firmware to: \"${selectedOption.name}\"${\n        selectedOption.version ? ` (version: ${selectedOption.version})` : ''\n      }`,\n      c8y_Firmware: { ...selectedOption }\n    };\n\n    return operation;\n  }\n\n  /**\n   * Prepares a configuration file upload operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param isLegacy  A legacy operation is created without a configurationType.\n   */\n  getUploadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Retrieve configuration snapshot from device ${device.name}`,\n        c8y_UploadConfigFile: {}\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Retrieve ${configurationType} configuration snapshot from device ${\n        device.name\n      }`,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Prepares a configuration file download operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param binaryUrl The url of a binary to be downloaded.\n   * @param isLegacy A legacy operation is created without a configurationType.\n   */\n  getDownloadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    configSnapshot: ConfigurationSnapshot,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Send configuration snapshot ${configSnapshot.name} to device ${device.name}`,\n        c8y_DownloadConfigFile: {\n          url: configSnapshot.binaryUrl,\n          c8y_ConfigurationDump: {\n            id: configSnapshot.id\n          }\n        }\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Send configuration snapshot ${\n        configSnapshot.name\n      } of configuration type ${configurationType} to device ${device.name}`,\n      c8y_DownloadConfigFile: {\n        url: configSnapshot.binaryUrl,\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Gets the last firmware update operation for given device.\n   * Looks for c8y_Firmware operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastFirmwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([{ ...filters, fragmentType: 'c8y_Firmware' }]);\n  }\n\n  /**\n   * Gets the last software update operation for given device.\n   * Looks for c8y_SoftwareUpdate, c8y_SoftwareList, or c8y_Software operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastSoftwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_SoftwareUpdate' },\n      { ...filters, fragmentType: 'c8y_SoftwareList' },\n      { ...filters, fragmentType: 'c8y_Software' }\n    ]);\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * If a query returns at least one operation, the first one will be returned.\n   * Otherwise the next query will be performed.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getFirstMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation = null;\n\n    for (const filters of filtersList) {\n      const operations = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        matchingOperation = operations[0];\n        break;\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Creates the operation and returns an observable to track its progress.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to create and track.\n   */\n  createObservedOperation(operation: IOperation): Observable<IOperation> {\n    return from(this.operation.create(operation)).pipe(\n      map(({ data }) => data),\n      take(1),\n      switchMap(createdOperation => this.observeOperation(createdOperation))\n    );\n  }\n\n  /**\n   * Returns an observable to track progress of given operation.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to be observed.\n   */\n  observeOperation(operation: IOperation): Observable<IOperation> {\n    const observedOperation$ = of(operation);\n    const operationUpdates$ = observedOperation$.pipe(\n      switchMap(observedOperation =>\n        this.realtime.observable(`/operations/${observedOperation.deviceId}`)\n      ),\n      map(({ data }) => data),\n      withLatestFrom(observedOperation$),\n      filter(([operationUpdate, observedOperation]) => operationUpdate.id === observedOperation.id),\n      switchMap(([operationUpdate]) => {\n        if (operationUpdate.status === OperationStatus.FAILED) {\n          return throwError(operationUpdate);\n        }\n        return of(operationUpdate);\n      }),\n      takeWhile(operationUpdate => operationUpdate.status !== OperationStatus.SUCCESSFUL, true)\n    );\n    return merge(observedOperation$, operationUpdates$);\n  }\n\n  /**\n   * Gets a single event with latest creationTime for the given device Id and event type.\n   * @param deviceId The device Id for which the events should be queried.\n   * @param type Event type.\n   */\n  async getLatestConfigurationEvent(\n    deviceId: string | number,\n    type: string\n  ): Promise<IEvent | undefined> {\n    const eventFilter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.event.list(eventFilter);\n    return data[0];\n  }\n\n  /**\n   * Gets a list of operations for the given device Id, and operation type.\n   * @param deviceId The device Id for which the operation should be queried.\n   * @param operationType Operation type fragment.\n   */\n  async getConfigFileOperationList(\n    deviceId: string | number,\n    operationType: string\n  ): Promise<IOperation[]> {\n    const operationFilter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    return (await this.operation.list(operationFilter)).data;\n  }\n\n  /**\n   * Gets latest uploaded configuration snapshot for the given device, and configuration type.\n   * @param device The device for which the configuration snapshot was uploaded.\n   * @param configurationType Selected configuration type.\n   */\n  async getConfigSnapshot(\n    device: IManagedObject,\n    configurationType: string\n  ): Promise<ConfigurationSnapshot | undefined> {\n    const event: IEvent = await this.getLatestConfigurationEvent(device.id, configurationType);\n    let configSnapshot: ConfigurationSnapshot;\n    if (event) {\n      configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: device.type,\n        configurationType\n      };\n      try {\n        configSnapshot.binary = await (await this.eventBinary.download(event)).text();\n        if (event.c8y_IsBinary) {\n          configSnapshot.binaryType = event.c8y_IsBinary.type;\n        }\n      } catch (ex) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return configSnapshot;\n  }\n\n  async getLegacyConfigSnapshot(deviceId) {\n    let configSnapshot: ConfigurationSnapshot;\n    let mo;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    const snapshotId = device.c8y_ConfigurationDump && device.c8y_ConfigurationDump.id;\n    if (!snapshotId) {\n      return;\n    }\n\n    try {\n      mo = (await this.inventory.detail(snapshotId)).data;\n    } catch (ex) {\n      // do nothing\n    }\n    if (mo) {\n      configSnapshot = {\n        time: mo.creationTime,\n        name: mo.name\n      };\n      configSnapshot.binary = await this.getBinaryText(mo.url, { allowExternal: false });\n    }\n    return configSnapshot;\n  }\n\n  /**\n   * Returns a binary object as text.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  async getBinaryText(\n    binaryUrl: string,\n    options: { allowExternal: boolean; noAlerts?: boolean }\n  ): Promise<string> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n\n    let res;\n    if (!binaryId && options.allowExternal) {\n      res = await this.getExternalBinaryResponse(binaryUrl, options);\n    } else {\n      res = await this.getInternalBinaryResponse(binaryId, options);\n    }\n    if (!res) {\n      return null;\n    }\n    return res.text();\n  }\n\n  /**\n   * Returns a binary object as File.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   */\n  async getBinaryFile(binaryUrl: string, options: { allowExternal: boolean }): Promise<File> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId && !options.allowExternal) {\n      return null;\n    }\n    // @TODO: note that it doesn't solve issue with external binary here, such url won't have binaryId, so we won't know the name or contentType to use in File constructor, let's add a @FIXME comment for now?\n    const { name, contentType } = (await this.inventory.detail(binaryId)).data;\n    const res = !!binaryId\n      ? await this.getInternalBinaryResponse(binaryId)\n      : await this.getExternalBinaryResponse(binaryUrl);\n    const arrayBuffer = await res.arrayBuffer();\n    return new File([arrayBuffer], name, { type: contentType });\n  }\n\n  /**\n   * Gets the last configuration update operation for given device.\n   * Looks for c8y_Configuration and c8y_SendConfiguration operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastConfigUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_Configuration' },\n      { ...filters, fragmentType: 'c8y_SendConfiguration' }\n    ]);\n  }\n\n  /**\n   * Prepares a configuration download operation for given device and its current configuration.\n   * Supports c8y_SendConfiguration operation.\n   * @param device The device for which operation should be prepared.\n   */\n  createTextBasedConfigurationReloadOperation(device: IManagedObject): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Requested current configuration'),\n      c8y_SendConfiguration: {}\n    };\n  }\n\n  /**\n   * Prepares a configuration update operation for the given device.\n   * Supports c8y_Configuration operation.\n   * @param device The device for which operation should be prepared.\n   * @param config The configuration which will update the existing one.\n   */\n  createTextBasedConfigurationUpdateOperation(device: IManagedObject, config: string): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Configuration update'),\n      c8y_Configuration: {\n        config\n      }\n    };\n  }\n\n  async getBinary(binaryId: IdReference): Promise<IFetchResponse> {\n    try {\n      return await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alert.danger(msg);\n    }\n  }\n\n  /**\n   * Gets all available snapshots from the repository for the given device.\n   * @param device The device for which the snapshots should be prepared.\n   * @param configurationType Selected configuration type.\n   */\n  async getSnapshotsFromRepository(device, configurationType) {\n    const searchQuery = this.getConfigurationTypeQuery(device, configurationType);\n    const res = await this.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: searchQuery,\n      params: { pageSize: 100 }\n    });\n    return res.data;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryId binary ID\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getInternalBinaryResponse(\n    binaryId: IdReference,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      res = await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getExternalBinaryResponse(\n    binaryUrl: string,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      const fetchRes = await fetch(binaryUrl);\n      if (fetchRes.status >= 400) {\n        throw res;\n      }\n      res = fetchRes;\n    } catch {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the external binary');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  private async createEntry(mo: Partial<IManagedObject>) {\n    const binaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    const newMo = await this.inventory.create(mo);\n    if (binaryId) {\n      await this.inventory.childAdditionsAdd(binaryId, newMo.data);\n    }\n    return newMo;\n  }\n\n  private async updateEntry(mo: Partial<IManagedObject>, url) {\n    const existingBinaryId = await this.inventoryBinary.getIdFromUrl(url);\n    const newBinaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    if (existingBinaryId && existingBinaryId !== newBinaryId) {\n      const id = this.inventoryBinary.getIdFromUrl(url);\n      await this.inventoryBinary.delete(id);\n    }\n    if (newBinaryId) {\n      await this.inventory.childAdditionsAdd(newBinaryId, mo);\n    }\n    return this.inventory.update(mo);\n  }\n\n  private getBaseVersionResultListForLegacyEntry(entry) {\n    return Promise.resolve({\n      res: {} as IFetchResponse,\n      data: [\n        {\n          ...entry,\n          [entry.type]: {\n            version: entry.version,\n            url: entry.url\n          }\n        }\n      ]\n    } as IResultList<IManagedObject>);\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareListOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_SoftwareList, deviceSoftware => {\n      const operationSoftware = find(operation.c8y_SoftwareList, { name: deviceSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...deviceSoftware,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_SoftwareList, operationSoftware => {\n      const deviceSoftware = find(device.c8y_SoftwareList, { name: operationSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...operationSoftware,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_Software, (deviceSoftwareVersion, deviceSoftwareName) => {\n      if (operation.c8y_Software[deviceSoftwareName] !== deviceSoftwareVersion) {\n        changes.push({\n          name: deviceSoftwareName,\n          version: deviceSoftwareVersion,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_Software, (operationSoftwareVersion, operationSoftwareName) => {\n      if (device.c8y_Software[operationSoftwareName] !== operationSoftwareVersion) {\n        changes.push({\n          name: operationSoftwareName,\n          version: operationSoftwareVersion,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-firmware-software-modal',\n  templateUrl: 'add-firmware-modal.component.html'\n})\nexport class AddFirmwareModalComponent {\n  @ViewChild('firmwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  firmwaresResult;\n  saving = false;\n  firmwarePreselected: boolean = false;\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadFirmwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n    }\n  }\n\n  loadFirmwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.firmwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getFirmwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.firmwaresResult = result;\n      });\n  }\n\n  getFirmwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onFirmwareSelect(firmware: IManagedObject) {\n    assign(this.model, {\n      selected: firmware,\n      description: firmware.description,\n      deviceType: get(firmware, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { isUndefined } from 'lodash-es';\nimport { BehaviorSubject, of, from, pipe, merge, Observable } from 'rxjs';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { NgForm } from '@angular/forms';\nimport {\n  debounceTime,\n  tap,\n  switchMap,\n  distinctUntilChanged,\n  shareReplay,\n  map\n} from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-firmware-patch-modal.component',\n  templateUrl: 'add-firmware-patch-modal.component.html'\n})\nexport class AddFirmwarePatchModalComponent {\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ViewChild('firmwarePatchForm', { static: false }) form: NgForm;\n\n  model: ModalModel = {\n    selected: undefined,\n    dependency: null,\n    patchVersion: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  firmwareInput$ = new BehaviorSubject<string>('');\n  firmwares$: Observable<IResultList<IManagedObject>> = this.firmwareInput$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    switchMap(searchStr =>\n      from(\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          partialName: searchStr,\n          skipLegacy: true\n        })\n      )\n    ),\n    shareReplay(1)\n  );\n  firmwareSelected$ = new BehaviorSubject<Partial<RepositoryCategory>>(null);\n  patchDependencyInput$ = new BehaviorSubject<string>('');\n\n  saving = false;\n  firmwarePreselected: boolean = false;\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmwareInput$.pipe(\n      tap(() => {\n        this.model.dependency = null;\n        if (this.form) {\n          this.form.form.get('patchDependency').reset();\n        }\n      }),\n      switchMap(() => of(null))\n    ),\n    this.firmwareSelected$\n  ).pipe(\n    switchMap(selectedFirmware =>\n      selectedFirmware ? this.repository.listBaseVersions(selectedFirmware) : of(null)\n    ),\n    shareReplay(1)\n  );\n  baseVersionsFilterPipe = pipe(\n    switchMap((data: []) =>\n      this.patchDependencyInput$.pipe(\n        map(partialVersion =>\n          data.filter((mo: any) => {\n            const version = mo.c8y_Firmware.version.toLowerCase();\n            return (\n              partialVersion.length === 0 || version.indexOf(partialVersion.toLowerCase()) > -1\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private modal: BsModalRef,\n    private repository: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n      this.firmwareSelected$.next(this.model.selected);\n    }\n  }\n\n  async save() {\n    this.saving = true;\n    this.repository\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware patch added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n  map,\n  pluck\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest, from } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-firmware-list',\n  templateUrl: 'firmware-list.component.html'\n})\nexport class FirmwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  firmwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getFirmwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  canAddFirmwarePatch$: Observable<boolean> = from(\n    this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { skipLegacy: true })\n  ).pipe(map(({ data }) => data.length > 0));\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getFirmwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = {partialText, properties};\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {partialTextFilter} );\n  }\n\n  addFirmware() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  addFirmwarePatch() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  editFirmware(firmware: IManagedObject) {\n    this.router.navigate([firmware.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteFirmware(firmware: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext(\n            'You are about to delete firmware \"{{ name }}\" with all its versions and patches.'\n          ),\n          { name: firmware.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(firmware);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(\n      firmware,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE)\n    );\n  }\n}\n","import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { Observable, Subject, merge, BehaviorSubject, combineLatest } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { RepositoryService } from './../repository.service';\nimport { IManagedObject } from '@c8y/client';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n  tap,\n  take,\n  distinctUntilKeyChanged,\n  shareReplay\n} from 'rxjs/operators';\nimport { InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property } from 'lodash-es';\nimport { FirmwareBinary } from '../repository.model';\n\n@Component({\n  selector: 'c8y-firmware-details',\n  templateUrl: './firmware-details.component.html'\n})\nexport class FirmwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateFirmware$: Subject<Partial<IManagedObject>> = new Subject();\n  firmwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n  patchVersionsUpdated$: Subject<void> = new Subject();\n\n  firmware$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id)),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.firmwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmware$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.patchVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.firmware$),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  canAddPatchVersions$: Observable<boolean> = combineLatest(\n    this.isLegacy$,\n    this.baseVersions$.pipe(map(({ data }) => data.length > 0))\n  ).pipe(map(([isLegacy, hasBaseVersions]) => !isLegacy && hasBaseVersions));\n\n  expanded: { [id: string]: boolean } = {};\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateFirmware$\n      .pipe(\n        withLatestFrom(this.firmware$),\n        switchMap(([firmwarePartial, firmware]) =>\n          this.inventoryService.update({\n            id: firmware.id,\n            ...firmwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(firmware => this.firmwareUpdated$.next(firmware)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.baseVersionsUpdated$,\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getPatchVersions$(baseVersion) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.listPatchVersions(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  addBaseVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware,\n              description: firmware.description\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  addPatchVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.patchVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware {{ version }} with all its patches.'),\n          { version: baseVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async deletePatchVersion(patchVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware patch');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware patch {{ version }}.'),\n          { version: patchVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(patchVersion);\n      this.alertService.success(gettext('Firmware patch deleted.'));\n      this.patchVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-software-software-modal',\n  templateUrl: 'add-software-modal.component.html'\n})\nexport class AddSoftwareModalComponent {\n  @ViewChild('softwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  softwaresResult;\n  saving = false;\n  softwarePreselected: boolean = false;\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadSoftwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.softwarePreselected = true;\n    }\n  }\n\n  loadSoftwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.softwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getSoftwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.softwaresResult = result;\n      });\n  }\n\n  getSoftwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.SOFTWARE)\n      .then(savedSoftware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedSoftware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Software added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onSoftwareSelect(software: IManagedObject) {\n    assign(this.model, {\n      selected: software,\n      description: software.description,\n      deviceType: get(software, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-software-list',\n  templateUrl: 'software-list.component.html'\n})\nexport class SoftwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  softwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getSoftwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getSoftwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = {partialText, properties};\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { partialTextFilter });\n  }\n\n  addSoftware() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));\n  }\n\n  editSoftware(software: IManagedObject) {\n    this.router.navigate([software.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteSoftware(software: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software \"{{ name }}\" with all its versions.'),\n          { name: software.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(software);\n      this.alertService.success(gettext('Software deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number | string> {\n    return this.softwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(software)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(software: IManagedObject): string {\n    return get(\n      software,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE));\n  }\n}\n","import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { Observable, Subject, merge, BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { RepositoryService } from '../repository.service';\nimport { IManagedObject } from '@c8y/client';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n  tap,\n  take,\n  distinctUntilKeyChanged,\n  shareReplay\n} from 'rxjs/operators';\nimport { InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\n\n@Component({\n  selector: 'c8y-software-details',\n  templateUrl: './software-details.component.html'\n})\nexport class SoftwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateSoftware$: Subject<Partial<IManagedObject>> = new Subject();\n  softwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n\n  software$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id)),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.softwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.software$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.software$),\n    switchMap(software => this.repositoryService.listBaseVersions(software)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.software$.pipe(\n    map(software => this.repositoryService.isLegacyEntry(software)),\n    shareReplay(1)\n  );\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateSoftware$\n      .pipe(\n        withLatestFrom(this.software$),\n        switchMap(([softwarePartial, software]) =>\n          this.inventoryService.update({\n            id: software.id,\n            ...softwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(software => this.softwareUpdated$.next(software)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  addBaseVersion() {\n    this.software$\n      .pipe(\n        take(1),\n        switchMap(software => {\n          const initialState = {\n            model: {\n              selected: software,\n              description: software.description\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software {{ version }}.'),\n          { version: baseVersion.c8y_Software.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Software deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { uniqBy, isUndefined } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-configuration-detail',\n  templateUrl: './configuration-detail.component.html'\n})\nexport class ConfigurationDetailComponent implements ModalModel {\n  @ViewChild('configurationForm', { static: true }) configurationForm: NgForm;\n  selected: { id: string; name: string };\n  version: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  saving = false;\n  uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  existingBinary: File;\n  submitButtonTitle: string;\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);\n    if (this.selected) {\n      this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';\n      this.existingBinary = this.binary.file;\n    }\n    this.setPipe('');\n    this.submitButtonTitle = this.mo.id\n      ? gettext('Update configuration')\n      : gettext('Add configuration');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  onFile(dropped: PickedFiles) {\n    this.configurationForm.form.markAsDirty();\n    if (!isUndefined(dropped.url)) {\n      this.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  async save() {\n    try {\n      this.saving = true;\n      const { selected, version, description, binary, deviceType } = this;\n      if (this.existingBinary === this.binary.file) {\n        binary.file = undefined;\n      }\n      await this.repositoryService.save(\n        { selected, version, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.saving = false;\n    }\n  }\n}\n","import { Component, OnInit, Pipe, ViewChild } from '@angular/core';\nimport {IManagedObject, InventoryBinaryService, InventoryService, IResultList} from '@c8y/client';\nimport {\n  AlertService,\n  FilterInputComponent,\n  gettext, memoize,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { property } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  @ViewChild(FilterInputComponent, { static: false }) filter: FilterInputComponent;\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe: Pipe;\n  filterTerm = '';\n  reloading: boolean = false;\n  data;\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private translateService: TranslateService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit() {\n    this.loadConfigurations();\n  }\n\n  async loadConfigurations() {\n    this.reloading = true;\n    this.configurations$ = of(\n      await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)\n    );\n    this.reloading = false;\n    this.reset();\n  }\n\n  async add() {\n    try {\n      await (this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationDetailComponent).result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    try {\n      const modal = this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: { id: configuration.id, configurationType: configuration.configurationType },\n          version: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { file: fileBinary, url: configuration.url }\n        } as ModalModel\n      }).content as ConfigurationDetailComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  isBinaryFile(configuration: IManagedObject) {\n    const id: string = this.inventoryBinaryService.getIdFromUrl(configuration.url);\n    return id ? true : false;\n  }\n\n  @memoize(property('id'))\n  getBinaryName(configuration: IManagedObject) {\n    return this.repositoryService.getBinaryName$(configuration.url);\n  }\n\n  async download(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    saveAs(fileBinary);\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      const title = gettext('Delete configuration snapshot');\n      const confirmationText = gettext(\n        'You are about to delete the configuration snapshot {{ name }}.'\n      );\n      const hint = gettext('This operation is irreversible.');\n      const proceed = gettext('Do you want to proceed?');\n      const body = [\n        this.translateService.instant(confirmationText, {\n          name: configuration.name\n        }),\n        this.translateService.instant(hint),\n        this.translateService.instant(proceed)\n      ].join(' ');\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.loadConfigurations();\n    } catch (ex) {\n      if (ex) {\n        this.alert.addServerFailure(ex);\n      }\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n    this.filterPipe = pipe(\n      map((data: []) => {\n        this.data =\n          filterTerm.trim().length === 0\n            ? data\n            : data.filter(\n                (mo: IManagedObject) =>\n                  this.filterContainString(mo.name, filterTerm) ||\n                  this.filterContainString(mo.configurationType, filterTerm) ||\n                  this.filterContainString(mo.deviceType, filterTerm)\n              );\n\n        return this.data;\n      })\n    );\n  }\n\n  shouldShowEmptyState() {\n    return !(this.data && this.data.length > 0);\n  }\n\n  reset() {\n    this.filter.filterTerm = '';\n    this.setPipe('');\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class RepositoryNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Firmware repository'),\n          path: 'firmware',\n          icon: 'c8y-firmware',\n          parent: gettext('Management'),\n          priority: 1000\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Software repository'),\n          path: 'software',\n          icon: 'c8y-tools',\n          parent: gettext('Management'),\n          priority: 900\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Configuration repository'),\n          path: 'configuration',\n          icon: 'gears',\n          parent: gettext('Management'),\n          priority: 800\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  gettext,\n  ISelectModalObject,\n  ISelectModalOption,\n  ModalLabels,\n  ModalSelectionMode\n} from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable, from, BehaviorSubject } from 'rxjs';\nimport { switchMap, map, mergeMap, shareReplay, tap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport {\n  RepositoryType,\n  RepositoryCategory,\n  RepositoryBinary,\n  SelectedRepositoryBinary\n} from '../repository.model';\n\n// MODAL STRUCTURE\n// - selectModalObject (repository entry (repositoryCategory) -> type c8y_Firmware/c8y_Software)\n//   -- ISelectModalOption (repository binary entry (repositoryBinary) => type c8y_FirmwareBinary/c8y_SoftwareBinary)\n//   -- ISelectModalOption...\n// - selectModalObject...\n\n/**\n * RepositorySelectModalComponent displays repository entries options and allows to select them.\n *\n * @example\n * ```\n * import { take } from 'rxjs/operators';\n * import { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from '@c8y/ngx-components/repository';\n *\n * const initialState = {\n *   repositoryType: RepositoryType.FIRMWARE,\n *   title: gettext('Install firmware'),\n *   subTitle: gettext('Available firmwares matching the device type'),\n *   icon: 'c8y-firmware',\n *   mode: ModalSelectionMode.SINGLE,\n *   labels: { ok: gettext('Install') },\n *   disableSelected: false\n * };\n *\n * const modal = this.bsModal.show(RepositorySelectModalComponent, {\n *   ignoreBackdropClick: true,\n *   initialState\n * });\n *\n * modal.content.load.next();\n * modal.content.resultEmitter.pipe(take(1)).subscribe((firmware) => {\n *   ...\n * })\n * ```\n */\n\n@Component({\n  selector: 'c8y-repository-select-modal',\n  templateUrl: './repository-select-modal.component.html'\n})\nexport class RepositorySelectModalComponent {\n  /**\n   * Optional\n   * Allows to provide custom data.\n   * @example\n   * ```\n   * import { from } from 'rxjs';\n   *\n   * const repositoryEntry = { name: 'ExampleEntry', type: 'c8y_Firmware' };\n   * const versions = [{ c8y_Firmware: { version: '1.0.0', url: 'http://example.com' } }];\n   *\n   * const initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};\n   * ```\n   */\n  repositoryEntriesWithVersions$: Observable<IManagedObject[]> = undefined;\n  /**\n   * Repository entry type.\n   */\n  repositoryType: RepositoryType.FIRMWARE | RepositoryType.SOFTWARE;\n  /**\n   * Optional\n   * Allows to use custom badges templates.\n   * @example\n   * ```\n   * import { gettext } from '@c8y/ngx-components';\n   *\n   * const badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n   * const initialState = { badgeTemplates };\n   * ```\n   */\n  badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n  /**\n   * Optional\n   * Allows to provide custom modal title.\n   */\n  title: string = gettext('Select repository entry');\n  /**\n   * Optional\n   * Allows to provide custom modal subtitle.\n   */\n  subTitle: string;\n  /**\n   * Loads the content of the modal.\n   * Must be invoked by the modal's caller.\n   */\n  load: Subject<void> = new Subject();\n  /**\n   * Optional\n   * Emits a search string currently entered in the filter input.\n   * Use it to filter the items if you use custom repositoryEntriesWithVersions$.\n   */\n  searchTerm: BehaviorSubject<string> = new BehaviorSubject('');\n  /**\n   * Optional\n   * Allows to provide device type query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  deviceTypeQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  searchQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.\n   */\n  labels: ModalLabels = { ok: gettext('Save') };\n  /**\n   * Optional\n   * Allows to hide the filter input field.\n   * By default, the filter input field is displayed.\n   */\n  showFilter: boolean = true;\n  /**\n   * Optional\n   * Allows to show a warning that the search criteria should be narrowed down.\n   * By default, this warning is hidden.\n   */\n  areMoreEntries: boolean = false;\n  /**\n   * Optional\n   * Allows to pass the array of items. Each item from this array will be marked as selected in the modal.\n   */\n  selected: SelectedRepositoryBinary[];\n  /**\n   * Emits the list of selected options.\n   */\n  resultEmitter: EventEmitter<SelectedRepositoryBinary[]> = new EventEmitter<\n    SelectedRepositoryBinary[]\n  >();\n  /**\n   * Optional\n   * Allows to change selection mode.\n   * Supported options:\n   *   * single: only single option can be selected.\n   *   * multiple: multiple options can be selected.\n   */\n  mode: ModalSelectionMode = ModalSelectionMode.SINGLE;\n  /**\n   * Optional\n   * Allows to use custom icon in the modal header.\n   */\n  icon: string;\n  /**\n   * Allows to block selection of the other versions from the same repository entry.\n   */\n  disableSelected: boolean = true;\n  modalEntries: Observable<ISelectModalObject[]> = this.load.pipe(\n    switchMap(() => this.repositoryEntriesWithVersions$),\n    mergeMap(mos => this.aggregate(mos)),\n    tap(items => {\n      this.areMoreEntries = items.length >= this.PAGE_SIZE ? true : false;\n    })\n  );\n  private PAGE_SIZE = 100;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  ngOnInit() {\n    if (!this.repositoryType) {\n      throw new Error('Repository type must be defined');\n    }\n\n    if (!this.repositoryEntriesWithVersions$) {\n      this.repositoryEntriesWithVersions$ = from(\n        this.repositoryService.listRepositoryEntries(this.repositoryType, {\n          query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n          params: { pageSize: this.PAGE_SIZE }\n        })\n      ).pipe(\n        map(({ data }) => data),\n        map(mos => this.getAndAssignRepositoryBinaries(mos)),\n        shareReplay(1)\n      );\n    }\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listAllVersions(mo);\n    });\n    return mos;\n  }\n\n  search(searchTerm: string) {\n    this.searchTerm.next(searchTerm);\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = { name: `*${searchTerm}*` };\n    }\n    this.load.next();\n  }\n\n  result(selectedItems: SelectedRepositoryBinary[]) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  async aggregate(mos: IManagedObject[]): Promise<ISelectModalObject[]> {\n    const repositoryType = this.repositoryType;\n    const selectedItems: SelectedRepositoryBinary[] = this.selected;\n\n    return Promise.all(\n      mos.map(async repositoryEntry => {\n        const options: ISelectModalOption[] = this.getSelectModalOptions(\n          await this.repositoryService.fetchAllItemsFromList(repositoryEntry.versions),\n          selectedItems,\n          repositoryEntry as RepositoryCategory,\n          repositoryType\n        );\n        const selectModalObject = this.getSelectModalObject(\n          repositoryEntry as RepositoryCategory,\n          options\n        );\n\n        return selectModalObject;\n      })\n    );\n  }\n\n  getSelectModalOptions(\n    versions: RepositoryBinary[],\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryType: RepositoryType\n  ): ISelectModalOption[] {\n    const selectModalOptions: ISelectModalOption[] = [];\n    versions.forEach(repositoryBinary => {\n      const isSelected: boolean = this.isBinaryRepositorySelected(\n        selectedItems,\n        repositoryEntry,\n        repositoryBinary,\n        repositoryType\n      );\n\n      const { version } = repositoryBinary[`${repositoryType}`];\n      const bodyValue =\n        version || `(${this.translateService.instant(gettext('not specified`version`'))})`;\n      const bodyClass = version ? '' : 'text-muted';\n      selectModalOptions.push({\n        body: [\n          {\n            value: bodyValue,\n            class: bodyClass\n          }\n        ],\n        obj: {\n          id: repositoryBinary.id,\n          name: repositoryEntry.name,\n          version,\n          ...(get(repositoryBinary, 'c8y_Patch.dependency') && {\n            dependency: get(repositoryBinary, 'c8y_Patch.dependency')\n          }),\n          ...(get(repositoryBinary, 'c8y_Patch') && { c8y_Patch: true }),\n          url: repositoryBinary[`${repositoryType}`].url\n        },\n        selected: isSelected\n      });\n    });\n    return selectModalOptions;\n  }\n\n  isBinaryRepositorySelected(\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryBinary: RepositoryBinary,\n    repositoryType: RepositoryType\n  ): boolean {\n    const isSelected = selectedItems\n      ? selectedItems.filter(\n          repositoryFragment =>\n            repositoryFragment.name === repositoryEntry.name &&\n            repositoryFragment.version === repositoryBinary[`${repositoryType}`].version\n        ).length > 0\n      : false;\n\n    return isSelected;\n  }\n\n  getSelectModalObject(\n    repositoryEntry: RepositoryCategory,\n    options: ISelectModalOption[]\n  ): ISelectModalObject {\n    const label =\n      options.length === 1\n        ? this.translateService.instant(this.badgeTemplates['=1'], { count: options.length })\n        : this.translateService.instant(this.badgeTemplates.other, { count: options.length });\n\n    const selectModalObject: ISelectModalObject = {\n      groupId: repositoryEntry.id,\n      body: [\n        { value: repositoryEntry.name, class: 'text-truncate' },\n        { value: repositoryEntry.description, class: 'text-truncate text-muted' }\n      ],\n      additionalInformation: { value: label, class: 'label label-info' },\n      options\n    };\n\n    return selectModalObject;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { assign, isEmpty } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, combineLatest, from, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { ModalSelectionMode, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IOperation, InventoryService, OperationStatus } from '@c8y/client';\n\nimport { RepositoryService } from '../repository.service';\nimport { DeviceFirmware, FirmwareBinary, RepositoryType } from '../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-device-tab',\n  templateUrl: 'firmware-device-tab.component.html'\n})\nexport class FirmwareDeviceTabComponent {\n  isEmpty = isEmpty;\n  reloading: boolean = false;\n  device$: BehaviorSubject<IManagedObject> = new BehaviorSubject(\n    this.route.parent.snapshot.data.contextData\n  );\n  deviceFirmwareFragment$: Observable<DeviceFirmware> = this.device$.pipe(\n    map(device => device.c8y_Firmware)\n  );\n  firmwareBinary$: Observable<IManagedObject> = this.deviceFirmwareFragment$.pipe(\n    filter(deviceFirmwareFragment => !isEmpty(deviceFirmwareFragment)),\n    switchMap(deviceFirmwareFragment =>\n      from(\n        this.repository.getRepositoryBinaryMoByVersion(\n          deviceFirmwareFragment,\n          RepositoryType.FIRMWARE\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n  repositoryEntry$: Observable<IManagedObject> = this.firmwareBinary$.pipe(\n    switchMap(mo => this.repository.getRepositoryEntryMO$(mo)),\n    shareReplay(1)\n  );\n  patches$: Observable<IManagedObject[]> = combineLatest(\n    this.firmwareBinary$,\n    this.repositoryEntry$\n  ).pipe(\n    switchMap(([firmwareBinary, repositoryEntry]) => {\n      if (repositoryEntry && firmwareBinary) {\n        const version: string = this.repository.getBaseVersionFromMO(\n          firmwareBinary as FirmwareBinary\n        );\n\n        return from(this.repository.listPatchVersions(repositoryEntry, version)).pipe(\n          map(({ data }) => data)\n        );\n      } else {\n        return of([]);\n      }\n    }),\n    shareReplay(1)\n  );\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    // TODO check route snapshot, why is not refreshing device.\n    // Scanario: missing deviceFirmwareFragment => install new version => switch tabs.\n    // Expected: device should be set.\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  installFirmware() {\n    const initialState = {\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getRepositoryEntriesWithVersions$(modal.content.searchTerm),\n      repositoryType: RepositoryType.FIRMWARE,\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n\n          if (initialState.repositoryEntriesWithVersionsFn$) {\n            modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n              modal\n            );\n          }\n\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedFirmware]) => {\n        this.handleOperation(selectedFirmware);\n      });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          query: this.repository.getDeviceTypeQuery(RepositoryType.FIRMWARE, this.device$.value),\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repository.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addPatch() {\n    const initialState = {\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersions$: this.getRepositoryEntryWithPatches$(),\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(selectedOption => {\n        this.handleOperation(selectedOption);\n      });\n  }\n\n  getRepositoryEntryWithPatches$() {\n    return combineLatest(this.repositoryEntry$, this.patches$).pipe(\n      map(([repositoryEntry, patches]) => {\n        return [{ ...repositoryEntry, versions: patches }];\n      })\n    );\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const deviceId = this.device$.value.id;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  private async handleOperation(selectedFirmware) {\n    const operation = await this.repository.createFirmwareUpdateOperation(\n      this.device$.value,\n      selectedFirmware\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const deviceId = this.device$.value.id;\n    const operation = await this.repository.getLastFirmwareUpdateOperation(deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { get, indexOf } from 'lodash-es';\n\nconst FIRMWARE_FRAGMENT = 'c8y_Firmware';\nconst SUPPORTED_OPERATIONS_FRAGMENT = 'c8y_SupportedOperations';\n\n@Injectable()\nexport class FirmwareDeviceTabGuard implements CanActivate {\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    const supportedOperations = get(contextData, SUPPORTED_OPERATIONS_FRAGMENT);\n    return !!supportedOperations\n      ? indexOf(supportedOperations, FIRMWARE_FRAGMENT) >= 0\n      : false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IManagedObject, InventoryService, OperationStatus, IOperation } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-software-device-tab',\n  templateUrl: 'software-device-tab.component.html'\n})\nexport class SoftwareDeviceTabComponent implements OnInit {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData.id;\n  device$ = new BehaviorSubject<IManagedObject>(this.route.snapshot.parent.data.contextData);\n  deviceTypeQuery$: Observable<object> = this.device$.pipe(\n    map(device => this.repository.getDeviceTypeQuery(RepositoryType.SOFTWARE, device))\n  );\n  list$: Observable<DeviceSoftware[]> = this.device$.pipe(\n    map(device => this.repository.getDeviceSoftwareList(device))\n  );\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n  reloading: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  addChanges(requestedChanges: DeviceSoftwareChange[]) {\n    let stagedChanges = [...this.changes$.value];\n    requestedChanges.forEach(requestedChange => {\n      const alreadyStaged = stagedChanges.some(stagedChange =>\n        this.areSameChanges(stagedChange, requestedChange));\n      if (!alreadyStaged) {\n        stagedChanges = [...stagedChanges, requestedChange];\n      }\n    });\n    this.changes$.next(stagedChanges);\n  }\n\n  dropChange(changeToBeDropped: DeviceSoftwareChange) {\n    let stagedChanges = [...this.changes$.value];\n    stagedChanges = stagedChanges.filter(stagedChange => !this.areSameChanges(stagedChange, changeToBeDropped));\n    this.changes$.next(stagedChanges);\n  }\n\n  areSameChanges(change1: DeviceSoftwareChange, change2: DeviceSoftwareChange) {\n    return change1.name === change2.name &&\n      change1.version === change2.version &&\n      change1.action === change2.action;\n  }\n\n  clearChanges() {\n    this.changes$.next([]);\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const device = (await this.inventory.detail(this.deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  async applyChanges() {\n    const operation = await this.repository.createSoftwareUpdateOperation(\n      this.device$.value,\n      this.changes$.value\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const operation = await this.repository.getLastSoftwareUpdateOperation(this.deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.displayChangesFromOperation(operation);\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.clearChanges();\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private displayChangesFromOperation(operation: IOperation) {\n    const changes = this.repository.getDeviceSoftwareChangesFromOperation(\n      operation,\n      this.device$.value\n    );\n    this.changes$.next(changes);\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable()\nexport class SoftwareDeviceTabGuard implements CanActivate {\n  private readonly operations = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.isAnyOperationSupported(route);\n  }\n\n  private isAnyOperationSupported(route: ActivatedRouteSnapshot) {\n    const device = route.data.contextData || route.parent.data.contextData;\n    const supportedOperations = (device && device.c8y_SupportedOperations) || [];\n    return this.operations.some(operation => supportedOperations.indexOf(operation) >= 0);\n  }\n}\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\nimport { from, of, BehaviorSubject } from 'rxjs';\nimport { shareReplay, map, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { IManagedObject, InventoryService, IOperation } from '@c8y/client';\nimport { gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from './../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-installed-software',\n  templateUrl: 'installed-software.component.html'\n})\nexport class InstalledSoftwareComponent {\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() deviceSoftwareChangesOperation: IOperation;\n  @Input() deviceSoftwareChangesInProgress: boolean;\n  @Input() deviceTypeQuery: object;\n  @Output() changes = new EventEmitter<DeviceSoftwareChange[]>();\n\n  constructor(\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {\n  }\n\n  installSoftware() {\n    this.displaySoftwareSelectModal({\n      title: gettext('Install software'),\n      labels: { ok: gettext('Install') },\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getInstallableSoftwareListWithVersions$(modal.content.searchTerm)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n    });\n  }\n\n  updateSoftware(softwareToRemove) {\n    this.displaySoftwareSelectModal({\n      title: gettext('Update software'),\n      labels: { ok: gettext('Update') },\n      showFilter: false,\n      repositoryEntriesWithVersions$: this.getSingleSoftwareWithVersions$(softwareToRemove)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n    });\n  }\n\n  removeSoftware(softwareToRemove) {\n    this.emitSoftwareRemoval([softwareToRemove]);\n  }\n\n  getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    const installedSoftwareNames = this.softwareList.map(s => s.name);\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          query: this.deviceTypeQuery,\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(softwareList => {\n        return softwareList.filter(software => {\n          return !installedSoftwareNames.includes(software.name);\n        });\n      }),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  getSingleSoftwareWithVersions$(software: DeviceSoftware) {\n    return from(\n      this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: { name: software.name }\n      })\n    ).pipe(\n      map(({ data }) => data),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  attachVersions(softwareList: IManagedObject[]) {\n    softwareList.forEach(software => {\n      software.versions = this.repository.listBaseVersions(software);\n    });\n    return softwareList;\n  }\n\n  displaySoftwareSelectModal(initialStateOverrides) {\n    const initialState = {\n      repositoryType: RepositoryType.SOFTWARE,\n      subTitle: gettext('Available softwares matching the device type'),\n      mode: ModalSelectionMode.MULTI,\n      icon: 'c8y-tools',\n      disableSelected: false,\n      selected: this.softwareList,\n      ...initialStateOverrides\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      class: 'modal-sm',\n      initialState\n    });\n\n    if (initialStateOverrides.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialStateOverrides.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    return modal.content.resultEmitter;\n  }\n\n  emitSoftwareInstall(items: DeviceSoftwareChange[]) {\n    this.changes.emit(items.map(item => {\n      return { ...item, action: 'install' };\n    }));\n  }\n\n  emitSoftwareRemoval(items: DeviceSoftwareChange[]) {\n    this.changes.emit(items.map(item => {\n      return { ...item, action: 'delete' };\n    }));\n  }\n}\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\nimport { filter } from 'lodash-es';\nimport { OperationStatus } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-list',\n  templateUrl: 'device-software-list.component.html'\n})\nexport class DeviceSoftwareListComponent {\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Output() update = new EventEmitter<DeviceSoftware>();\n  @Output() remove = new EventEmitter<DeviceSoftware>();\n  showUpdate: boolean;\n  showRemove: boolean;\n\n  ngAfterContentInit() {\n    this.showUpdate = this.update.observers.length > 0;\n    this.showRemove = this.remove.observers.length > 0;\n  }\n\n  isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean {\n    const relevantChanges = filter(this.deviceSoftwareChanges, software);\n    return relevantChanges.length > 0;\n  }\n}\n","import { Component, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-changes',\n  templateUrl: 'device-software-changes.component.html'\n})\nexport class DeviceSoftwareChangesComponent implements OnChanges {\n  @Input() changes: DeviceSoftwareChange[];\n  @Input() changesInProgress: boolean;\n  @Output() clear: EventEmitter<void> = new EventEmitter();\n  @Output() drop: EventEmitter<DeviceSoftwareChange> = new EventEmitter();\n  @Output() apply: EventEmitter<void> = new EventEmitter();\n\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  installations$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'install');\n    })\n  );\n\n  removals$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'delete');\n    })\n  );\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.changes) {\n      this.changes$.next(changes.changes.currentValue);\n    }\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  configurationsUpdated = new EventEmitter<any>();\n\n  updateConfigurations(repositorySnapsOnly?: boolean) {\n    this.configurationsUpdated.emit(repositorySnapsOnly);\n  }\n\n  hasAnySupportedOperation(\n    mo: IManagedObject,\n    operation: DeviceConfigurationOperation | DeviceConfigurationOperation[]\n  ) {\n    const supported = mo.c8y_SupportedOperations as [];\n    if (!supported) {\n      return false;\n    }\n    if (!Array.isArray(operation)) {\n      operation = [operation];\n    }\n    return supported.some(supportedOperation => operation.includes(supportedOperation));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  DeviceConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem,\n  RepositoryType,\n  DeviceConfigurationOperation\n} from '../repository.model';\nimport { gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit {\n  supportedConfigurations: SupportedConfigurationItem[] = [];\n  showBinaryBasedConfig = false;\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: DeviceConfigurationListEmptyState;\n  device: IManagedObject;\n  isLegacy: boolean;\n  showTextBasedConfig: boolean;\n  reloading: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private repositoryService: RepositoryService\n  ) {\n    this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {\n      this.updateSnapshots(repositorySnapsOnly);\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    if (this.device.c8y_SupportedConfigurations) {\n      this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n        name: item\n      }));\n    }\n\n    if (\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG\n      ])\n    ) {\n      this.supportedConfigurations.push({\n        name: gettext('Legacy configuration snapshot'),\n        isLegacy: true\n      });\n    }\n    if (this.supportedConfigurations.length > 0) {\n      this.showBinaryBasedConfig = true;\n    }\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n\n    this.showTextBasedConfig = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG, DeviceConfigurationOperation.SEND_CONFIG]\n    );\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = config.name;\n    this.isLegacy = config.isLegacy;\n    this.updateSnapshots();\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      id: config.id,\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      try {\n        const binary = await this.repositoryService.getBinaryFile(config.url, {\n          allowExternal: false\n        });\n        if (binary) {\n          this.repositorySnapshot.binary = await (binary as any).text();\n        }\n      } catch (ex) {\n        // do nothing\n      }\n    }\n  }\n\n  async updateSnapshots(repositorySnapsOnly?: boolean) {\n    this.reloading = false;\n    this.repositorySnapshot = undefined;\n    this.repositorySnapshots = await this.repositoryService.getSnapshotsFromRepository(\n      this.device,\n      this.configurationType\n    );\n    if (!repositorySnapsOnly) {\n      this.configSnapshot = this.isLegacy\n        ? await this.repositoryService.getLegacyConfigSnapshot(this.device)\n        : await this.repositoryService.getConfigSnapshot(this.device, this.configurationType);\n    }\n    this.reloading = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot, RepositoryType } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService\n  ) {}\n\n  async save() {\n    {\n      try {\n        const configSnapshotData = {\n          selected: {\n            configurationType: this.configSnapshot.configurationType\n          },\n          version: this.configSnapshot.name,\n          deviceType: this.configSnapshot.deviceType,\n          description: this.configSnapshot.description,\n          binary: {\n            file: new File([this.configSnapshot.binary], this.configSnapshot.name)\n          }\n        };\n        await this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);\n        this.alertService.success(gettext('Configuration saved.'));\n        this._save();\n      } catch (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from '../repository.model';\nimport {\n  IManagedObject,\n  IOperation,\n  OperationService,\n  OperationStatus,\n  Realtime,\n  UserService\n} from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AlertService, AppStateService } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() set configurationType(type: string) {\n    this._configurationType = type;\n    this.setOperation(type);\n  }\n  get configurationType(): string {\n    return this._configurationType;\n  }\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() isLegacy: boolean = false;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  canCallAction = true;\n  deviceConfigurationOperation = DeviceConfigurationOperation;\n  private _configurationType: string;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService,\n    private repositoryService: RepositoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setOperation(this._configurationType);\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .subscribe(({ data }) => {\n        this.updatePreview(data);\n      });\n    if (this.isLegacy) {\n      this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(\n        this.device,\n        this.operationToTrigger\n      );\n    }\n  }\n\n  async setOperation(configType): Promise<void> {\n    const operationList = await this.repositoryService.getConfigFileOperationList(\n      this.device.id,\n      this.operationToTrigger\n    );\n\n    const operation = this.isLegacy\n      ? operationList.find(op => op[this.operationToTrigger] && !op[this.operationToTrigger].type)\n      : operationList.find(op => op[this.operationToTrigger].type === configType);\n\n    this.operation =\n      operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createDeviceOperation() {\n    let operationCfg;\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.configSnapshot,\n        this.isLegacy\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getUploadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.isLegacy\n      );\n    }\n    try {\n      this.operation = (await this.operationService.create(operationCfg)).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updatePreview(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      (this.isLegacy ||\n        (operation[this.operationToTrigger].type &&\n          operation[this.operationToTrigger].type === this.configurationType))\n    ) {\n      this.operation = operation;\n      this.updateSnapshotsOnConfigUpload(operation);\n    }\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });\n    let fileName = this.configSnapshot.name;\n    switch (this.configSnapshot.binaryType) {\n      case 'text/csv':\n      case 'application/csv':\n        fileName = fileName.concat('.csv');\n        break;\n      case 'text/yaml':\n      case 'application/x-yaml':\n        fileName = fileName.concat('.yaml');\n        break;\n      case 'application/json':\n        fileName = fileName.concat('.json');\n        break;\n    }\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateConfigurations(true);\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.operationsSubscription) {\n      this.operationsSubscription.unsubscribe();\n    }\n  }\n\n  private async updateSnapshotsOnConfigUpload(operation) {\n    if (\n      operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&\n      operation.status === OperationStatus.SUCCESSFUL\n    ) {\n      this.deviceConfigurationService.updateConfigurations();\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from '../repository.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { DeviceConfigurationOperation } from '../repository.model';\n\n@Injectable()\nexport class DeviceConfigurationGuard implements CanActivate {\n  constructor(private deviceConfigurationService: DeviceConfigurationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return (\n      (contextData.c8y_SupportedConfigurations &&\n        contextData.c8y_SupportedConfigurations.length > 0) ||\n      this.deviceConfigurationService.hasAnySupportedOperation(contextData, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG,\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ])\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DeviceConfigurationListEmptyState, SupportedConfigurationItem } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './device-configuration-list.component.html'\n})\nexport class DeviceConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: DeviceConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService, IManagedObject, OperationStatus, IOperation } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-text-based-configuration',\n  templateUrl: './text-based-configuration.component.html'\n})\nexport class TextBasedConfigurationComponent implements OnInit {\n  device: IManagedObject;\n  latestOperation: IOperation;\n  showTextBasedConfigReload: boolean;\n  showTextBasedConfigSave: boolean;\n  reloadingConfig = false;\n  savingConfig = false;\n  config: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private inventoryService: InventoryService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    await this.loadOperation();\n    this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.SEND_CONFIG]\n    );\n    this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG]\n    );\n    if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {\n      this.config = this.device.c8y_Configuration.config;\n    }\n  }\n\n  async loadOperation() {\n    const operation = await this.repositoryService.getLastConfigUpdateOperation(this.device.id);\n    if (operation !== null) {\n      this.repositoryService.observeOperation(operation).subscribe(operationUpdate => {\n        this.latestOperation = operationUpdate;\n      });\n    }\n  }\n\n  async reloadConfiguration() {\n    this.reloadingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationReloadOperation(\n      this.device\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationReloadSuccess(operationUpdate),\n          operationUpdate => this.onOperationReloadError(operationUpdate),\n          () => this.onOperationReloadComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateConfiguration(config) {\n    this.savingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationUpdateOperation(\n      this.device,\n      config\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationUpdateSuccess(operationUpdate),\n          operationUpdate => this.onOperationUpdateError(operationUpdate),\n          () => this.onOperationUpdateComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOperationReloadSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be reloaded.'));\n    }\n  }\n\n  private onOperationReloadError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.reloadingConfig = false;\n  }\n\n  private async onOperationReloadComplete() {\n    await this.loadDevice();\n    this.config = this.device.c8y_Configuration.config;\n    this.reloadingConfig = false;\n  }\n\n  private onOperationUpdateSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be updated.'));\n    }\n  }\n\n  private onOperationUpdateError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.savingConfig = false;\n  }\n\n  private onOperationUpdateComplete() {\n    this.device.c8y_Configuration.config = this.config;\n    this.savingConfig = false;\n  }\n\n  private async loadDevice() {\n    this.device = (await this.inventoryService.detail(this.device.id, { withChildren: false })).data;\n  }\n}\n","export enum LinkRenderType {\n    DOWNLOAD,\n    LINK,\n    TEXTONLY\n}\n","import { Component, Input } from '@angular/core';\nimport { RepositoryService } from './../repository.service';\nimport { memoize } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { InventoryBinaryService } from '@c8y/client';\nimport { LinkRenderType } from './link-render-type.enum';\n\n@Component({\n  selector: 'c8y-file-download',\n  templateUrl: './file-download.component.html'\n})\nexport class FileDownloadComponent {\n  @Input() url: string;\n  linkRenderType = LinkRenderType;\n  constructor(\n    private repositoryService: RepositoryService,\n    private inventoryBinaryService: InventoryBinaryService\n  ) {}\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize()\n  determineBehavior(): LinkRenderType {\n    let result: LinkRenderType;\n    if (this.inventoryBinaryService.getIdFromUrl(this.url)) {\n      result = LinkRenderType.DOWNLOAD;\n    } else if (this.url.match(/\\/\\//g)) {\n      result = LinkRenderType.LINK;\n    } else {\n      result = LinkRenderType.TEXTONLY;\n    }\n    return result;\n  }\n\n  async downloadFile() {\n    const binary: File = await this.repositoryService.getBinaryFile(this.url, {\n      allowExternal: false\n    });\n    saveAs(binary);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  FormsModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ONCE_ROUTE,\n  Route,\n  ViewContext,\n  gettext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\nimport { RepositoryService } from './repository.service';\nimport { FirmwareListComponent } from './firmware/firmware-list.component';\nimport { FirmwareDetailsComponent } from './firmware/firmware-details.component';\nimport { AddFirmwareModalComponent } from './firmware/add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './firmware/add-firmware-patch-modal.component';\nimport { SoftwareListComponent } from './software/software-list.component';\nimport { SoftwareDetailsComponent } from './software/software-details.component';\nimport { AddSoftwareModalComponent } from './software/add-software-modal.component';\nimport { ConfigurationListComponent } from './configuration/configuration-list.component';\nimport { ConfigurationDetailComponent } from './configuration/configuration-detail.component';\nimport { RepositoryNavigationFactory } from './repository-navigation-factory';\nimport { FirmwareDeviceTabComponent } from './firmware-device-tab/firmware-device-tab.component';\nimport { FirmwareDeviceTabGuard } from './firmware-device-tab/firmware-device-tab.guard';\nimport { SoftwareDeviceTabComponent } from './software-device-tab/software-device-tab.component';\nimport { SoftwareDeviceTabGuard } from './software-device-tab/software-device-tab.guard';\nimport { InstalledSoftwareComponent } from './software-device-tab/installed-software.component';\nimport { RepositorySelectModalComponent } from './select-modal/repository-select-modal.component';\nimport { DeviceSoftwareListComponent } from './software-device-tab/device-software-list.component';\nimport { DeviceSoftwareChangesComponent } from './software-device-tab/device-software-changes.component';\nimport { DeviceConfigurationComponent } from './configuration-device-tab/device-configuration.component';\nimport { SourceCodePreviewComponent } from './configuration-device-tab/source-code-preview.component';\nimport { ConfigurationPreviewComponent } from './configuration-device-tab/configuration-preview.component';\nimport { ConfigurationFilterPipe } from './configuration-device-tab/configuration-filter.pipe';\nimport { SaveToRepositoryComponent } from './configuration-device-tab/save-to-repository.component';\nimport { DeviceConfigurationService } from './configuration-device-tab/device-configuration.service';\nimport { DeviceConfigurationGuard } from './configuration-device-tab/device-configuration.guard';\nimport { DeviceConfigurationListComponent } from './configuration-device-tab/device-configuration-list.component';\nimport { TextBasedConfigurationComponent } from './configuration-device-tab/text-based-configuration.component';\nimport { FileDownloadComponent } from './file-download/file-download.component';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    FormsModule,\n    SingleOperationDetailsModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    PopoverModule,\n    TabsModule.forRoot()\n  ],\n  exports: [],\n  declarations: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    InstalledSoftwareComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareListComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    DeviceConfigurationListComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent,\n    FileDownloadComponent\n  ],\n  entryComponents: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    DeviceSoftwareListComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent\n  ],\n  providers: [\n    RepositoryService,\n    DeviceConfigurationService,\n    FirmwareDeviceTabGuard,\n    SoftwareDeviceTabGuard,\n    DeviceConfigurationGuard,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: RepositoryNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: [\n        {\n          path: 'firmware',\n          component: FirmwareListComponent\n        },\n        {\n          path: 'firmware/:id',\n          component: FirmwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'firmware',\n          component: FirmwareDeviceTabComponent,\n          label: gettext('Firmware'),\n          icon: 'c8y-firmware',\n          priority: 500,\n          canActivate: [FirmwareDeviceTabGuard]\n        },\n        {\n          path: 'software',\n          component: SoftwareListComponent\n        },\n        {\n          path: 'software/:id',\n          component: SoftwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'software',\n          component: SoftwareDeviceTabComponent,\n          label: gettext('Software'),\n          icon: 'c8y-tools',\n          priority: 499,\n          canActivate: [SoftwareDeviceTabGuard]\n        },\n        {\n          path: 'configuration',\n          component: ConfigurationListComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'device-configuration',\n          component: DeviceConfigurationComponent,\n          label: gettext('Configuration'),\n          icon: 'gears',\n          priority: 600,\n          canActivate: [DeviceConfigurationGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class RepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileDownloadComponent as ɵa} from './file-download/file-download.component';"],"names":["_map","tslib_1.__values","tslib_1.__assign","tslib_1.__decorate","filter","saveAs"],"mappings":"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"}