import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { TenantUiService } from '@c8y/ngx-components';
var DefaultSubscriptionsGuard = /** @class */ (function () {
    function DefaultSubscriptionsGuard(tenantUiService) {
        this.tenantUiService = tenantUiService;
    }
    /**
     * Checks if default subscriptions feature should be active,
     * i.e. whether the current tenant is the management or an enterprise tenant.
     * **Note: the check is executed only once in the runtime.**
     *
     * @returns True, if the feature should be active.
     */
    DefaultSubscriptionsGuard.prototype.canActivate = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!(this.active === undefined)) return [3 /*break*/, 4];
                        _a = this;
                        return [4 /*yield*/, this.tenantUiService.isManagementTenant()];
                    case 1:
                        _b = (_c.sent());
                        if (_b) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.tenantUiService.isEnterpriseTenant()];
                    case 2:
                        _b = (_c.sent());
                        _c.label = 3;
                    case 3:
                        _a.active = _b;
                        _c.label = 4;
                    case 4: return [2 /*return*/, this.active];
                }
            });
        });
    };
    DefaultSubscriptionsGuard.ctorParameters = function () { return [
        { type: TenantUiService }
    ]; };
    DefaultSubscriptionsGuard = tslib_1.__decorate([
        Injectable()
    ], DefaultSubscriptionsGuard);
    return DefaultSubscriptionsGuard;
}());
export { DefaultSubscriptionsGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLmd1YXJkLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZWZhdWx0LXN1YnNjcmlwdGlvbnMvIiwic291cmNlcyI6WyJkZWZhdWx0LXN1YnNjcmlwdGlvbnMuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3REO0lBR0UsbUNBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtJQUFHLENBQUM7SUFFeEQ7Ozs7OztPQU1HO0lBQ0csK0NBQVcsR0FBakI7Ozs7Ozs2QkFDTSxDQUFBLElBQUksQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFBLEVBQXpCLHdCQUF5Qjt3QkFDM0IsS0FBQSxJQUFJLENBQUE7d0JBQ0QscUJBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsRUFBRSxFQUFBOzt3QkFBaEQsS0FBQSxDQUFDLFNBQStDLENBQUMsQ0FBQTtnQ0FBakQsd0JBQWlEO3dCQUNoRCxxQkFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLGtCQUFrQixFQUFFLEVBQUE7O3dCQUFoRCxLQUFBLENBQUMsU0FBK0MsQ0FBQyxDQUFBOzs7d0JBRm5ELEdBQUssTUFBTSxLQUV3QyxDQUFDOzs0QkFFdEQsc0JBQU8sSUFBSSxDQUFDLE1BQU0sRUFBQzs7OztLQUNwQjs7Z0JBaEJvQyxlQUFlOztJQUh6Qyx5QkFBeUI7UUFEckMsVUFBVSxFQUFFO09BQ0EseUJBQXlCLENBb0JyQztJQUFELGdDQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FwQlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuQWN0aXZhdGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVGVuYW50VWlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBwcml2YXRlIGFjdGl2ZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRlbmFudFVpU2VydmljZTogVGVuYW50VWlTZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgZGVmYXVsdCBzdWJzY3JpcHRpb25zIGZlYXR1cmUgc2hvdWxkIGJlIGFjdGl2ZSxcbiAgICogaS5lLiB3aGV0aGVyIHRoZSBjdXJyZW50IHRlbmFudCBpcyB0aGUgbWFuYWdlbWVudCBvciBhbiBlbnRlcnByaXNlIHRlbmFudC5cbiAgICogKipOb3RlOiB0aGUgY2hlY2sgaXMgZXhlY3V0ZWQgb25seSBvbmNlIGluIHRoZSBydW50aW1lLioqXG4gICAqXG4gICAqIEByZXR1cm5zIFRydWUsIGlmIHRoZSBmZWF0dXJlIHNob3VsZCBiZSBhY3RpdmUuXG4gICAqL1xuICBhc3luYyBjYW5BY3RpdmF0ZSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBpZiAodGhpcy5hY3RpdmUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5hY3RpdmUgPVxuICAgICAgICAoYXdhaXQgdGhpcy50ZW5hbnRVaVNlcnZpY2UuaXNNYW5hZ2VtZW50VGVuYW50KCkpIHx8XG4gICAgICAgIChhd2FpdCB0aGlzLnRlbmFudFVpU2VydmljZS5pc0VudGVycHJpc2VUZW5hbnQoKSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmFjdGl2ZTtcbiAgfVxufVxuIl19