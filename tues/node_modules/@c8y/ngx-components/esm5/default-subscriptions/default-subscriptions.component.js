import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FormArray, FormBuilder, FormGroup } from '@angular/forms';
import { AlertService, gettext } from '@c8y/ngx-components';
import { DefaultSubscriptionsService } from './default-subscriptions.service';
/**
 * The component shows the main view for managing default subscriptions configuration.
 */
var DefaultSubscriptionsComponent = /** @class */ (function () {
    function DefaultSubscriptionsComponent(fb, defaultSubscriptionsService, alertService) {
        this.fb = fb;
        this.defaultSubscriptionsService = defaultSubscriptionsService;
        this.alertService = alertService;
    }
    /** Initializes the loading of the form and the current settings. */
    DefaultSubscriptionsComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.loading = true;
                        return [4 /*yield*/, this.initForm()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.loadDefaultSubscriptions()];
                    case 2:
                        _a.sent();
                        this.loading = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    /** Loads the list of apps, builds the form and hooks value change events for override switches. */
    DefaultSubscriptionsComponent.prototype.initForm = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var apps, appRows;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.form = this.fb.group({
                            overrideOnCreationSubscriptions: [''],
                            overrideOnUpgradeSubscriptions: [''],
                            appRows: this.fb.array([])
                        });
                        return [4 /*yield*/, this.defaultSubscriptionsService.getSubscribableTenantApps()];
                    case 1:
                        apps = _a.sent();
                        appRows = this.form.controls.appRows;
                        apps.forEach(function (app) {
                            appRows.push(_this.fb.group({
                                app: [app],
                                subscribedOnCreation: [''],
                                subscribedOnUpgrade: ['']
                            }));
                        });
                        this.form
                            .get('overrideOnCreationSubscriptions')
                            .valueChanges.subscribe(function (value) { return _this.onOverrideOnCreationSubscriptionsChange(value); });
                        this.form
                            .get('overrideOnUpgradeSubscriptions')
                            .valueChanges.subscribe(function (value) { return _this.onOverrideOnUpgradeSubscriptionsChange(value); });
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Checks if given application row should be displayed.
     * The row is displayed when any of its checkboxes is selected or any of the lists is being overridden.
     */
    DefaultSubscriptionsComponent.prototype.shouldShowAppRow = function (appRowRawValue) {
        var subscribedOnCreation = appRowRawValue.subscribedOnCreation, subscribedOnUpgrade = appRowRawValue.subscribedOnUpgrade;
        var _a = this.form.value, overrideOnCreationSubscriptions = _a.overrideOnCreationSubscriptions, overrideOnUpgradeSubscriptions = _a.overrideOnUpgradeSubscriptions;
        return (subscribedOnCreation ||
            subscribedOnUpgrade ||
            overrideOnCreationSubscriptions ||
            overrideOnUpgradeSubscriptions);
    };
    /** Checks if there are no application rows to be displayed. */
    DefaultSubscriptionsComponent.prototype.isEmptyView = function () {
        var _this = this;
        return !this.form
            .getRawValue()
            .appRows.some(function (appRowRawValue) { return _this.shouldShowAppRow(appRowRawValue); });
    };
    /**
     * Checks if given application is subscribed (present in the given list of applications).
     * @param app Application object to check.
     * @param subscribedApps The list of application objects to check against.
     * @returns True, if the application is present in the list.
     */
    DefaultSubscriptionsComponent.prototype.isSubscribed = function (app, subscribedApps) {
        return subscribedApps && subscribedApps.some(function (subscribedApp) { return subscribedApp.name === app.name; });
    };
    /** Saves the current value of form object to backend. */
    DefaultSubscriptionsComponent.prototype.save = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var defaultSubscriptions, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        defaultSubscriptions = this.getDefaultSubscriptionsForSave();
                        return [4 /*yield*/, this.defaultSubscriptionsService.saveDefaultSubscriptionsToCurrentTenant(defaultSubscriptions)];
                    case 1:
                        _a.sent();
                        this.alertService.success(gettext('Saved.'));
                        return [3 /*break*/, 3];
                    case 2:
                        ex_1 = _a.sent();
                        this.alertService.addServerFailure(ex_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    DefaultSubscriptionsComponent.prototype.onOverrideOnCreationSubscriptionsChange = function (overrideOnCreationSubscriptions) {
        var appRowsControls = this.form.controls.appRows.controls;
        if (overrideOnCreationSubscriptions) {
            this.enableSubscribeOnCreationCheckboxes();
            return;
        }
        this.disableSubscribeOnCreationCheckboxes();
        this.restoreSubscribeOnCreationFromParent();
    };
    DefaultSubscriptionsComponent.prototype.enableSubscribeOnCreationCheckboxes = function () {
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.get('subscribedOnCreation').enable({ emitEvent: false });
        });
    };
    DefaultSubscriptionsComponent.prototype.disableSubscribeOnCreationCheckboxes = function () {
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.get('subscribedOnCreation').disable({ emitEvent: false });
        });
    };
    DefaultSubscriptionsComponent.prototype.restoreSubscribeOnCreationFromParent = function () {
        var _this = this;
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.patchValue({
                subscribedOnCreation: _this.isSubscribed(appRowControl.value.app, _this.parentDefaultSubscriptions.onCreationSubscriptions)
            });
        });
    };
    DefaultSubscriptionsComponent.prototype.onOverrideOnUpgradeSubscriptionsChange = function (overrideOnUpgradeSubscriptions) {
        var appRowsControls = this.form.controls.appRows.controls;
        if (overrideOnUpgradeSubscriptions) {
            this.enableSubscribeOnUpgradeCheckboxes();
            return;
        }
        this.disableSubscribeOnUpgradeCheckboxes();
        this.restoreSubscribeOnUpgradeFromParent();
    };
    DefaultSubscriptionsComponent.prototype.enableSubscribeOnUpgradeCheckboxes = function () {
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.get('subscribedOnUpgrade').enable({ emitEvent: false });
        });
    };
    DefaultSubscriptionsComponent.prototype.disableSubscribeOnUpgradeCheckboxes = function () {
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.get('subscribedOnUpgrade').disable({ emitEvent: false });
        });
    };
    DefaultSubscriptionsComponent.prototype.restoreSubscribeOnUpgradeFromParent = function () {
        var _this = this;
        var appRowsControls = this.form.controls.appRows.controls;
        appRowsControls.forEach(function (appRowControl) {
            appRowControl.patchValue({
                subscribedOnUpgrade: _this.isSubscribed(appRowControl.value.app, _this.parentDefaultSubscriptions.onUpgradeSubscriptions)
            });
        });
    };
    DefaultSubscriptionsComponent.prototype.loadDefaultSubscriptions = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, overrideOnCreationSubscriptions, overrideOnUpgradeSubscriptions, onCreationSubscriptions, onUpgradeSubscriptions;
            var _this = this;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.defaultSubscriptionsService.getDefaultSubscriptionsEvaluatedFromParentTenant()];
                    case 1:
                        _a.parentDefaultSubscriptions = _d.sent();
                        _b = this;
                        return [4 /*yield*/, this.defaultSubscriptionsService.getDefaultSubscriptionsFromCurrentTenant()];
                    case 2:
                        _b.currentDefaultSubscriptions = _d.sent();
                        _c = this.currentDefaultSubscriptions, overrideOnCreationSubscriptions = _c.overrideOnCreationSubscriptions, overrideOnUpgradeSubscriptions = _c.overrideOnUpgradeSubscriptions;
                        onCreationSubscriptions = overrideOnCreationSubscriptions
                            ? this.currentDefaultSubscriptions.onCreationSubscriptions
                            : this.parentDefaultSubscriptions.onCreationSubscriptions;
                        onUpgradeSubscriptions = overrideOnUpgradeSubscriptions
                            ? this.currentDefaultSubscriptions.onUpgradeSubscriptions
                            : this.parentDefaultSubscriptions.onUpgradeSubscriptions;
                        this.form.patchValue({
                            overrideOnCreationSubscriptions: overrideOnCreationSubscriptions,
                            overrideOnUpgradeSubscriptions: overrideOnUpgradeSubscriptions
                        });
                        this.form.controls.appRows.controls.forEach(function (appRowControl) {
                            appRowControl.patchValue({
                                subscribedOnCreation: _this.isSubscribed(appRowControl.value.app, onCreationSubscriptions),
                                subscribedOnUpgrade: _this.isSubscribed(appRowControl.value.app, onUpgradeSubscriptions)
                            });
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    DefaultSubscriptionsComponent.prototype.getDefaultSubscriptionsForSave = function () {
        var value = this.form.value;
        return {
            overrideOnCreationSubscriptions: value.overrideOnCreationSubscriptions,
            onCreationSubscriptions: value.overrideOnCreationSubscriptions
                ? value.appRows.filter(function (app) { return app.subscribedOnCreation; }).map(function (app) { return app.app; })
                : null,
            overrideOnUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions,
            onUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions
                ? value.appRows.filter(function (app) { return app.subscribedOnUpgrade; }).map(function (app) { return app.app; })
                : null
        };
    };
    DefaultSubscriptionsComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: DefaultSubscriptionsService },
        { type: AlertService }
    ]; };
    DefaultSubscriptionsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-default-subscriptions',
            template: "<c8y-title>{{ 'Default subscriptions' | translate }}</c8y-title>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  <div class=\"card card--fullpage\">\n    <div class=\"card-header separator\">\n      <h4 class=\"card-title\" translate>Default subscriptions</h4>\n    </div>\n    <div class=\"inner-scroll\">\n      <div class=\"card--grid grid__col--2-8-2--md grid__col--3-6-3\">\n        <div class=\"card-block large-padding bg-gray-white sticky-top separator-bottom p-b-0\">\n          <p><strong translate>Applications subscribed to a tenant on creation</strong></p>\n          <div class=\"text-center\">\n            <label class=\"c8y-switch\">\n              <input type=\"checkbox\" formControlName=\"overrideOnCreationSubscriptions\" />\n              <span></span> {{ 'Override inherited' | translate }}\n            </label>\n          </div>\n        </div>\n        <div class=\"card-block bg-white sticky-top separator-bottom\">\n          <p><b translate>Applications</b></p>\n          <p translate>\n            Configure default subscriptions in the platform, both for tenant creation\n            and for platform upgrade. To display a full list of available applications, override\n            inherited settings.\n          </p>\n        </div>\n        <div class=\"card-block large-padding bg-gray-white sticky-top separator-bottom p-b-0\">\n          <p><strong translate>Applications subscribed to a tenant on platform upgrade</strong></p>\n          <div class=\"text-center\">\n            <label class=\"c8y-switch\">\n              <input type=\"checkbox\" formControlName=\"overrideOnUpgradeSubscriptions\" />\n              <span></span> {{ 'Override inherited' | translate }}\n            </label>\n          </div>\n        </div>\n        <div class=\"card-block bg-gray-white\" *ngIf=\"loading\"></div>\n        <div class=\"card-block bg-white\" *ngIf=\"loading\">\n          <div class=\"p-r-48 p-b-24 d-inline-block\" style=\"position:relative;\">\n            <div class=\"spinner\">\n              <div class=\"rect1\"></div>\n              <div class=\"rect2\"></div>\n              <div class=\"rect3\"></div>\n              <div class=\"rect4\"></div>\n              <div class=\"rect5\"></div>\n            </div>\n          </div>\n          <span translate>Loading application subscriptions\u2026</span>\n        </div>\n        <div class=\"card-block bg-gray-white\" *ngIf=\"loading\"></div>\n        <ng-container formArrayName=\"appRows\" class=\"d-contents\">\n          <div class=\"bg-gray-white\" *ngIf=\"!loading && isEmptyView()\"></div>\n          <div class=\"card-block bg-white\" *ngIf=\"!loading && isEmptyView()\">\n            <div class=\"c8y-empty-state\">\n              <h1 class=\"c8y-icon c8y-icon-c8y-data c8y-icon-duocolor\"></h1>\n              <h3 translate>No application subscriptions yet.</h3>\n              <p translate>\n                Select \"Override inherited\" to define the list of subscribed applications.\n              </p>\n            </div>\n          </div>\n          <div class=\"bg-gray-white\" *ngIf=\"!loading && isEmptyView()\"></div>\n\n          <div\n            *ngFor=\"let appRowControl of form.get('appRows')['controls']; let i = index\"\n            class=\"d-contents\"\n          >\n            <ng-container\n              *ngIf=\"shouldShowAppRow(appRowControl.getRawValue())\"\n              formArrayName=\"{{ i }}\"\n              class=\"d-contents\"\n            >\n              <div class=\"c8y-list__item d-flex d-col bg-gray-white text-center\">\n                <div class=\"flex-item-middle\">\n                  <label\n                    class=\"c8y-checkbox d-inline-block\"\n                    [ngClass]=\"{ disabled: appRowControl.controls.subscribedOnCreation.disabled }\"\n                  >\n                    <input type=\"checkbox\" formControlName=\"subscribedOnCreation\" />\n                    <span></span>\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"c8y-list__item bg-white\">\n                <div class=\"c8y-list__item__block\">\n                  <div class=\"c8y-list__item__appicon\">\n                    <c8y-app-icon\n                      [app]=\"appRowControl.value.app\"\n                      [name]=\"appRowControl.value.app.name\"\n                      [contextPath]=\"appRowControl.value.app.contextPath\"\n                    ></c8y-app-icon>\n                  </div>\n                  <div class=\"c8y-list__item__body\">\n                    <div class=\"content-flex-50\">\n                      <div class=\"col-6\">\n                        <p\n                          class=\"text-truncate\"\n                          title=\"{{ appRowControl.value.app | humanizeAppName | async }}\"\n                        >\n                          {{ appRowControl.value.app | humanizeAppName | async }}\n                        </p>\n                        <small class=\"text-muted\">{{ appRowControl.value.app.contextPath }}</small>\n                      </div>\n                      <div class=\"col-6\">\n                        <p>\n                          <span class=\"text-label-small m-r-4\" translate>Tenant ID</span> \n                          {{ appRowControl.value.app.owner.tenant.id }}\n                        </p>\n                        <!-- TODO: uncomment when company name is available\n                          <p>\n                          <span class=\"text-label-small m-r-4\" translate>Company</span>\n                          <small class=\"text-muted\">company name</small>\n                        </p> -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"c8y-list__item d-flex d-col bg-gray-white text-center\">\n                <div class=\"flex-item-middle\">\n                  <label\n                    class=\"c8y-checkbox d-inline-block\"\n                    [ngClass]=\"{ disabled: appRowControl.controls.subscribedOnUpgrade.disabled }\"\n                  >\n                    <input type=\"checkbox\" formControlName=\"subscribedOnUpgrade\" />\n                    <span></span>\n                  </label>\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"card-footer separator\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        [disabled]=\"form.invalid || form.pristine\"\n        title=\"{{ 'Save default subscriptions' | translate }}\"\n      >\n        {{ 'Save' | translate }}\n      </button>\n    </div>\n  </div>\n</form>\n"
        })
    ], DefaultSubscriptionsComponent);
    return DefaultSubscriptionsComponent;
}());
export { DefaultSubscriptionsComponent };
//# sourceMappingURL=data:application/json;base64,