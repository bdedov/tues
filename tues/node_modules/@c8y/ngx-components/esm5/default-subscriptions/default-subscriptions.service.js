import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { isUndefined, sortBy } from 'lodash-es';
import { debounceTime, take } from 'rxjs/operators';
import { IApplication, ApplicationType, ApplicationService, ISystemOption, TenantService, TenantOptionsService } from '@c8y/client';
import { HumanizeAppNamePipe } from '@c8y/ngx-components';
import { DefaultSubscriptionsContext as DefaultSubscriptionsContextTenant } from './default-subscriptions.model';
var DefaultSubscriptionsService = /** @class */ (function () {
    function DefaultSubscriptionsService(applicationService, tenantService, tenantOptionsService, humanizeAppNamePipe) {
        this.applicationService = applicationService;
        this.tenantService = tenantService;
        this.tenantOptionsService = tenantOptionsService;
        this.humanizeAppNamePipe = humanizeAppNamePipe;
    }
    /**
     * Gets the list of applications which can be used in default subscriptions, i.e.:
     * - current tenant's all own applications,
     * - inherited applications, which do not have the same names as current tenant's own apps.
     * The list is sorted alphabetically by humanized app name and contains up to 2000 items.
     * @returns The list of applications, which can be used in default subscriptions.
     */
    DefaultSubscriptionsService.prototype.getSubscribableTenantApps = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var currentTenant, allApps, ownApps, inheritedApps, filteredApps, filteredAppsWithHumanizedNames, sortedAppsWithHumanizedNames, sortedApps;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.tenantService.current()];
                    case 1:
                        currentTenant = (_a.sent()).data;
                        return [4 /*yield*/, this.applicationService.listByTenant(null, { pageSize: 2000 })];
                    case 2:
                        allApps = (_a.sent()).data;
                        ownApps = allApps.filter(function (app) { return app.owner.tenant.id === currentTenant.name; });
                        inheritedApps = allApps.filter(function (app) { return app.owner.tenant.id !== currentTenant.name; });
                        filteredApps = tslib_1.__spread(ownApps);
                        inheritedApps.forEach(function (inheritedApp) {
                            if (!filteredApps.some(function (filteredApp) { return filteredApp.name === inheritedApp.name; })) {
                                filteredApps.push(inheritedApp);
                            }
                        });
                        return [4 /*yield*/, Promise.all(filteredApps.map(function (app) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var humanizedName;
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, this.humanizeAppNamePipe
                                                .transform(app.name)
                                                .pipe(debounceTime(250), take(1))
                                                .toPromise()];
                                        case 1:
                                            humanizedName = _a.sent();
                                            return [2 /*return*/, { app: app, humanizedName: humanizedName }];
                                    }
                                });
                            }); }))];
                    case 3:
                        filteredAppsWithHumanizedNames = _a.sent();
                        sortedAppsWithHumanizedNames = sortBy(filteredAppsWithHumanizedNames, ['humanizedName']);
                        sortedApps = sortedAppsWithHumanizedNames.map(function (_a) {
                            var app = _a.app;
                            return app;
                        });
                        return [2 /*return*/, sortedApps];
                }
            });
        });
    };
    /**
     * Gets the default subscriptions configuration inherited from parent tenant.
     * @returns The default subscriptions object with settings from parent tenant.
     */
    DefaultSubscriptionsService.prototype.getDefaultSubscriptionsEvaluatedFromParentTenant = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.PARENT_TENANT)];
            });
        });
    };
    /**
     * Gets the default subscriptions configuration from the current tenant.
     * @returns The default subscriptions object with settings from the current tenant.
     */
    DefaultSubscriptionsService.prototype.getDefaultSubscriptionsFromCurrentTenant = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.CURRENT_TENANT)];
            });
        });
    };
    /**
     * Saves given default subscriptions configuration to the current tenant
     * (either sets, updates, or deletes corresponding tenant options).
     * @param defaultSubscriptions The default subscriptions configuration to be saved.
     */
    DefaultSubscriptionsService.prototype.saveDefaultSubscriptionsToCurrentTenant = function (defaultSubscriptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.saveOnCreationSubscriptions(defaultSubscriptions)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.saveOnUpgradeSubscriptions(defaultSubscriptions)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Gets default subscriptions in the context of current or parent tenant.
     * @param contextTenant Tells whether to use current or parent tenant as context.
     */
    DefaultSubscriptionsService.prototype.getDefaultSubscriptions = function (contextTenant) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var tenantOptionsParams, overridable, _a, onCreationApps, onCreationMicroservices, onUpgradeAppsEnabled, onUpgradeApps, onUpgradeMicroservicesEnabled, onUpgradeMicroservices, onCreationSubscriptions, onUpgradeAppsDefault, onUpgradeMicroservicesDefault, onUpgradeSubscriptions, defaultSubscriptions;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        switch (contextTenant) {
                            case DefaultSubscriptionsContextTenant.CURRENT_TENANT:
                                tenantOptionsParams = { evaluate: 'current' };
                                overridable = true;
                                break;
                            case DefaultSubscriptionsContextTenant.PARENT_TENANT:
                                tenantOptionsParams = { evaluate: 'inherited' };
                                overridable = false;
                                break;
                        }
                        return [4 /*yield*/, this.getTenantOptions(tenantOptionsParams)];
                    case 1:
                        _a = _b.sent(), onCreationApps = _a.onCreationApps, onCreationMicroservices = _a.onCreationMicroservices, onUpgradeAppsEnabled = _a.onUpgradeAppsEnabled, onUpgradeApps = _a.onUpgradeApps, onUpgradeMicroservicesEnabled = _a.onUpgradeMicroservicesEnabled, onUpgradeMicroservices = _a.onUpgradeMicroservices;
                        onCreationSubscriptions = this.namesToPartialApps({
                            appsNamesStr: onCreationApps,
                            microservicesNamesStr: onCreationMicroservices
                        });
                        onUpgradeAppsDefault = overridable ? null : onCreationApps;
                        onUpgradeMicroservicesDefault = overridable ? null : onCreationMicroservices;
                        onUpgradeSubscriptions = this.namesToPartialApps({
                            appsNamesStr: onUpgradeAppsEnabled ? onUpgradeApps : onUpgradeAppsDefault,
                            microservicesNamesStr: onUpgradeMicroservicesEnabled
                                ? onUpgradeMicroservices
                                : onUpgradeMicroservicesDefault
                        });
                        defaultSubscriptions = {
                            onCreationSubscriptions: onCreationSubscriptions,
                            onUpgradeSubscriptions: onUpgradeSubscriptions
                        };
                        if (overridable) {
                            defaultSubscriptions.overrideOnCreationSubscriptions =
                                onCreationApps !== null || onCreationMicroservices !== null;
                            defaultSubscriptions.overrideOnUpgradeSubscriptions =
                                onUpgradeAppsEnabled || onUpgradeMicroservicesEnabled;
                        }
                        return [2 /*return*/, defaultSubscriptions];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.getTenantOptions = function (params) {
        if (params === void 0) { params = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = {};
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'default.tenant.applications'
                            }, null, params)];
                    case 1:
                        _a.onCreationApps = _b.sent();
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'default.tenant.microservices'
                            }, null, params)];
                    case 2:
                        _a.onCreationMicroservices = _b.sent();
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.applications.enabled'
                            }, false, params)];
                    case 3:
                        _a.onUpgradeAppsEnabled = _b.sent();
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.applications'
                            }, null, params)];
                    case 4:
                        _a.onUpgradeApps = _b.sent();
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices.enabled'
                            }, false, params)];
                    case 5:
                        _a.onUpgradeMicroservicesEnabled = _b.sent();
                        return [4 /*yield*/, this.getTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices'
                            }, null, params)];
                    case 6: return [2 /*return*/, (_a.onUpgradeMicroservices = _b.sent(),
                            _a)];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.saveOnCreationSubscriptions = function (defaultSubscriptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!defaultSubscriptions.overrideOnCreationSubscriptions) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'default.tenant.applications',
                                value: this.partialAppsListToAppsNames(defaultSubscriptions.onCreationSubscriptions)
                            })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'default.tenant.microservices',
                                value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onCreationSubscriptions)
                            })];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, this.unsetTenantOption({
                            category: 'configuration',
                            key: 'default.tenant.applications'
                        })];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.unsetTenantOption({
                                category: 'configuration',
                                key: 'default.tenant.microservices'
                            })];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.saveOnUpgradeSubscriptions = function (defaultSubscriptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!defaultSubscriptions.overrideOnUpgradeSubscriptions) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.applications.enabled',
                                value: 'true'
                            })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices.enabled',
                                value: 'true'
                            })];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.applications',
                                value: this.partialAppsListToAppsNames(defaultSubscriptions.onUpgradeSubscriptions)
                            })];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.setTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices',
                                value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onUpgradeSubscriptions)
                            })];
                    case 4:
                        _a.sent();
                        return [3 /*break*/, 10];
                    case 5: return [4 /*yield*/, this.unsetTenantOption({
                            category: 'configuration',
                            key: 'on-update.tenant.applications.enabled'
                        })];
                    case 6:
                        _a.sent();
                        return [4 /*yield*/, this.unsetTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices.enabled'
                            })];
                    case 7:
                        _a.sent();
                        return [4 /*yield*/, this.unsetTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.applications'
                            })];
                    case 8:
                        _a.sent();
                        return [4 /*yield*/, this.unsetTenantOption({
                                category: 'configuration',
                                key: 'on-update.tenant.microservices'
                            })];
                    case 9:
                        _a.sent();
                        _a.label = 10;
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.getTenantOption = function (option, defaultValue, params) {
        if (defaultValue === void 0) { defaultValue = null; }
        if (params === void 0) { params = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var value, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.tenantOptionsService.detail(option, params)];
                    case 1:
                        value = (_a.sent()).data.value;
                        value = JSON.parse(value);
                        return [3 /*break*/, 3];
                    case 2:
                        ex_1 = _a.sent();
                        value = !isUndefined(value) ? value : defaultValue;
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/, value];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.setTenantOption = function (option) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.tenantOptionsService.update(option)];
            });
        });
    };
    DefaultSubscriptionsService.prototype.unsetTenantOption = function (option) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.tenantOptionsService.delete(option)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        ex_2 = _a.sent();
                        if (!ex_2 || !ex_2.res || ex_2.res.status !== 404) {
                            throw ex_2;
                        }
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    DefaultSubscriptionsService.prototype.namesToPartialApps = function (_a) {
        var appsNamesStr = _a.appsNamesStr, microservicesNamesStr = _a.microservicesNamesStr;
        if (appsNamesStr === null && microservicesNamesStr === null) {
            return null;
        }
        return tslib_1.__spread((appsNamesStr || '')
            .split(',')
            .filter(function (name) { return name.length; })
            .map(function (name) { return ({ name: name.trim() }); }), (microservicesNamesStr || '')
            .split(',')
            .filter(function (name) { return name.length; })
            .map(function (name) { return ({
            name: name.trim(),
            type: ApplicationType.MICROSERVICE
        }); }));
    };
    DefaultSubscriptionsService.prototype.partialAppsListToAppsNames = function (apps) {
        return apps
            .filter(function (app) { return app.type !== ApplicationType.MICROSERVICE; })
            .map(function (app) { return app.name; })
            .join(',');
    };
    DefaultSubscriptionsService.prototype.partialAppsToMicroservicesNames = function (apps) {
        return apps
            .filter(function (app) { return app.type === ApplicationType.MICROSERVICE; })
            .map(function (app) { return app.name; })
            .join(',');
    };
    DefaultSubscriptionsService.ctorParameters = function () { return [
        { type: ApplicationService },
        { type: TenantService },
        { type: TenantOptionsService },
        { type: HumanizeAppNamePipe }
    ]; };
    DefaultSubscriptionsService = tslib_1.__decorate([
        Injectable()
    ], DefaultSubscriptionsService);
    return DefaultSubscriptionsService;
}());
export { DefaultSubscriptionsService };
//# sourceMappingURL=data:application/json;base64,