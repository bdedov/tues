import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE } from '@c8y/ngx-components';
import { DefaultSubscriptionsComponent } from './default-subscriptions.component';
import { DefaultSubscriptionsService } from './default-subscriptions.service';
import { DefaultSubscriptionsGuard } from './default-subscriptions.guard';
import { DefaultSubscriptionsNavigationFactory } from './default-subscriptions-navigation.factory';
var ɵ0 = [
    {
        path: 'default-subscriptions',
        component: DefaultSubscriptionsComponent,
        canActivate: [DefaultSubscriptionsGuard]
    }
];
var DefaultSubscriptionsModule = /** @class */ (function () {
    function DefaultSubscriptionsModule() {
    }
    DefaultSubscriptionsModule = tslib_1.__decorate([
        NgModule({
            imports: [CoreModule, ReactiveFormsModule],
            declarations: [DefaultSubscriptionsComponent],
            entryComponents: [DefaultSubscriptionsComponent],
            exports: [DefaultSubscriptionsComponent],
            providers: [
                DefaultSubscriptionsService,
                DefaultSubscriptionsGuard,
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useClass: DefaultSubscriptionsNavigationFactory,
                    multi: true
                },
                {
                    provide: HOOK_ONCE_ROUTE,
                    useValue: ɵ0,
                    multi: true
                }
            ]
        })
    ], DefaultSubscriptionsModule);
    return DefaultSubscriptionsModule;
}());
export { DefaultSubscriptionsModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGVmYXVsdC1zdWJzY3JpcHRpb25zLyIsInNvdXJjZXMiOlsiZGVmYXVsdC1zdWJzY3JpcHRpb25zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsVUFBVSxFQUFFLG9CQUFvQixFQUFFLGVBQWUsRUFBUyxNQUFNLHFCQUFxQixDQUFDO0FBRS9GLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO1NBaUJuRjtJQUNSO1FBQ0UsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixTQUFTLEVBQUUsNkJBQTZCO1FBQ3hDLFdBQVcsRUFBRSxDQUFDLHlCQUF5QixDQUFDO0tBQ3pDO0NBQ1M7QUFLbEI7SUFBQTtJQUF5QyxDQUFDO0lBQTdCLDBCQUEwQjtRQTFCdEMsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLG1CQUFtQixDQUFDO1lBQzFDLFlBQVksRUFBRSxDQUFDLDZCQUE2QixDQUFDO1lBQzdDLGVBQWUsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1lBQ2hELE9BQU8sRUFBRSxDQUFDLDZCQUE2QixDQUFDO1lBQ3hDLFNBQVMsRUFBRTtnQkFDVCwyQkFBMkI7Z0JBQzNCLHlCQUF5QjtnQkFDekI7b0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjtvQkFDN0IsUUFBUSxFQUFFLHFDQUFxQztvQkFDL0MsS0FBSyxFQUFFLElBQUk7aUJBQ1o7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLGVBQWU7b0JBQ3hCLFFBQVEsSUFNSTtvQkFDWixLQUFLLEVBQUUsSUFBSTtpQkFDWjthQUNGO1NBQ0YsQ0FBQztPQUNXLDBCQUEwQixDQUFHO0lBQUQsaUNBQUM7Q0FBQSxBQUExQyxJQUEwQztTQUE3QiwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIEhPT0tfTkFWSUdBVE9SX05PREVTLCBIT09LX09OQ0VfUk9VVEUsIFJvdXRlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IERlZmF1bHRTdWJzY3JpcHRpb25zQ29tcG9uZW50IH0gZnJvbSAnLi9kZWZhdWx0LXN1YnNjcmlwdGlvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IERlZmF1bHRTdWJzY3JpcHRpb25zU2VydmljZSB9IGZyb20gJy4vZGVmYXVsdC1zdWJzY3JpcHRpb25zLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZCB9IGZyb20gJy4vZGVmYXVsdC1zdWJzY3JpcHRpb25zLmd1YXJkJztcbmltcG9ydCB7IERlZmF1bHRTdWJzY3JpcHRpb25zTmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy1uYXZpZ2F0aW9uLmZhY3RvcnknO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW0RlZmF1bHRTdWJzY3JpcHRpb25zQ29tcG9uZW50XSxcbiAgZW50cnlDb21wb25lbnRzOiBbRGVmYXVsdFN1YnNjcmlwdGlvbnNDb21wb25lbnRdLFxuICBleHBvcnRzOiBbRGVmYXVsdFN1YnNjcmlwdGlvbnNDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICBEZWZhdWx0U3Vic2NyaXB0aW9uc1NlcnZpY2UsXG4gICAgRGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZCxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBEZWZhdWx0U3Vic2NyaXB0aW9uc05hdmlnYXRpb25GYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfT05DRV9ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiAnZGVmYXVsdC1zdWJzY3JpcHRpb25zJyxcbiAgICAgICAgICBjb21wb25lbnQ6IERlZmF1bHRTdWJzY3JpcHRpb25zQ29tcG9uZW50LFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbRGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZF1cbiAgICAgICAgfVxuICAgICAgXSBhcyBSb3V0ZVtdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGVmYXVsdFN1YnNjcmlwdGlvbnNNb2R1bGUge31cbiJdfQ==