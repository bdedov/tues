import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { HOOK_NAVIGATOR_NODES, ModalModule, ModalService, DeviceStatusComponent, DeviceStatusModule } from '@c8y/ngx-components';
import { ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';
import { AssetNodeFactory } from './asset-node.factory';
import { AssetNodeService } from './asset-node.service';
import { DeviceGroupService } from './group.service';
var AssetsNavigatorModule = /** @class */ (function () {
    function AssetsNavigatorModule() {
    }
    AssetsNavigatorModule_1 = AssetsNavigatorModule;
    AssetsNavigatorModule.config = function (config) {
        return {
            ngModule: AssetsNavigatorModule_1,
            providers: [
                {
                    provide: ASSET_NAVIGATOR_CONFIG, useValue: config
                }
            ],
        };
    };
    var AssetsNavigatorModule_1;
    AssetsNavigatorModule = AssetsNavigatorModule_1 = tslib_1.__decorate([
        NgModule({
            declarations: [],
            imports: [
                ModalModule,
                DeviceStatusModule
            ],
            providers: [
                ModalService,
                AssetNodeService,
                DeviceGroupService,
                {
                    provide: HOOK_NAVIGATOR_NODES, useClass: AssetNodeFactory, multi: true
                }
            ],
            entryComponents: [DeviceStatusComponent]
        })
    ], AssetsNavigatorModule);
    return AssetsNavigatorModule;
}());
export { AssetsNavigatorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzLW5hdmlnYXRvci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2Fzc2V0cy1uYXZpZ2F0b3IvIiwic291cmNlcyI6WyJhc3NldHMtbmF2aWdhdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUscUJBQXFCLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNoSSxPQUFPLEVBQUUsc0JBQXNCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQWtCckQ7SUFBQTtJQVlBLENBQUM7OEJBWlkscUJBQXFCO0lBQ3pCLDRCQUFNLEdBQWIsVUFBYyxNQUE0QjtRQUN4QyxPQUFPO1lBQ0wsUUFBUSxFQUFFLHVCQUFxQjtZQUMvQixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxNQUFNO2lCQUNsRDthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7O0lBVlUscUJBQXFCO1FBaEJqQyxRQUFRLENBQUM7WUFDUixZQUFZLEVBQUUsRUFBRTtZQUNoQixPQUFPLEVBQUU7Z0JBQ1AsV0FBVztnQkFDWCxrQkFBa0I7YUFDbkI7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsWUFBWTtnQkFDWixnQkFBZ0I7Z0JBQ2hCLGtCQUFrQjtnQkFDbEI7b0JBQ0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxLQUFLLEVBQUUsSUFBSTtpQkFDdkU7YUFDRjtZQUNELGVBQWUsRUFBRSxDQUFDLHFCQUFxQixDQUFDO1NBQ3pDLENBQUM7T0FDVyxxQkFBcUIsQ0FZakM7SUFBRCw0QkFBQztDQUFBLEFBWkQsSUFZQztTQVpZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIT09LX05BVklHQVRPUl9OT0RFUywgTW9kYWxNb2R1bGUsIE1vZGFsU2VydmljZSwgRGV2aWNlU3RhdHVzQ29tcG9uZW50LCBEZXZpY2VTdGF0dXNNb2R1bGV9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQVNTRVRfTkFWSUdBVE9SX0NPTkZJR30gZnJvbSAnLi9hc3NldC1ub2RlLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBBc3NldE5vZGVGYWN0b3J5IH0gZnJvbSAnLi9hc3NldC1ub2RlLmZhY3RvcnknO1xuaW1wb3J0IHsgQXNzZXROb2RlU2VydmljZSB9IGZyb20gJy4vYXNzZXQtbm9kZS5zZXJ2aWNlJztcbmltcG9ydCB7IEFzc2V0TmF2aWdhdG9yQ29uZmlnIH0gZnJvbSAnLi9hc3NldC1ub2RlLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBEZXZpY2VHcm91cFNlcnZpY2UgfSBmcm9tICcuL2dyb3VwLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgTW9kYWxNb2R1bGUsXG4gICAgRGV2aWNlU3RhdHVzTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIE1vZGFsU2VydmljZSxcbiAgICBBc3NldE5vZGVTZXJ2aWNlLFxuICAgIERldmljZUdyb3VwU2VydmljZSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUywgdXNlQ2xhc3M6IEFzc2V0Tm9kZUZhY3RvcnksIG11bHRpOiB0cnVlXG4gICAgfVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZXZpY2VTdGF0dXNDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEFzc2V0c05hdmlnYXRvck1vZHVsZSB7XG4gIHN0YXRpYyBjb25maWcoY29uZmlnOiBBc3NldE5hdmlnYXRvckNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQXNzZXRzTmF2aWdhdG9yTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBU1NFVF9OQVZJR0FUT1JfQ09ORklHLCB1c2VWYWx1ZTogY29uZmlnXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgfTtcbiAgfVxuXG59XG4iXX0=