import * as tslib_1 from "tslib";
import { AssetNode } from '../asset-node';
var GroupNode = /** @class */ (function (_super) {
    tslib_1.__extends(GroupNode, _super);
    // FIXME: Currently hasChildren returns true if it is a group,
    //        Issue is, that we disable the children in the API
    //        getGroupItems service call due to performance. This leads
    //        to that the dropdown chevron is shown always. Issue is,
    //        that even if we return the chevrons, we have no way to determine
    //        if the childAssets contain groups or other assets (like dashboards).
    // get hasChildren() {
    //  return this.root || this.service.groups.isGroup(this.mo) && (this.mo as IManagedObject).childAssets.references.length > 0;
    // }
    /**
     * Creates a new node which shows only groups.
     *
     * @param service The service to use.
     * @param config  The default configuration of the node.
     */
    function GroupNode(service, config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, service, config) || this;
        _this.service = service;
        return _this;
    }
    return GroupNode;
}(AssetNode));
export { GroupNode };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvYXNzZXRzLW5hdmlnYXRvci8iLCJzb3VyY2VzIjpbImFzc2V0LXNlbGVjdG9yL2dyb3VwLW5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUM7SUFBK0IscUNBQVM7SUFDdEMsOERBQThEO0lBQzlELDJEQUEyRDtJQUMzRCxtRUFBbUU7SUFDbkUsaUVBQWlFO0lBQ2pFLDBFQUEwRTtJQUMxRSw4RUFBOEU7SUFDOUUsc0JBQXNCO0lBQ3RCLDhIQUE4SDtJQUM5SCxJQUFJO0lBRUo7Ozs7O09BS0c7SUFDSCxtQkFBc0IsT0FBeUIsRUFBRSxNQUFXO1FBQVgsdUJBQUEsRUFBQSxXQUFXO1FBQTVELFlBQ0Usa0JBQU0sT0FBTyxFQUFFLE1BQU0sQ0FBQyxTQUN2QjtRQUZxQixhQUFPLEdBQVAsT0FBTyxDQUFrQjs7SUFFL0MsQ0FBQztJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQXBCRCxDQUErQixTQUFTLEdBb0J2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyb3VwTm9kZVNlcnZpY2UgfSBmcm9tICcuL2dyb3VwLW5vZGUuc2VydmljZSc7XG5pbXBvcnQgeyBBc3NldE5vZGUgfSBmcm9tICcuLi9hc3NldC1ub2RlJztcblxuZXhwb3J0IGNsYXNzIEdyb3VwTm9kZSBleHRlbmRzIEFzc2V0Tm9kZSB7XG4gIC8vIEZJWE1FOiBDdXJyZW50bHkgaGFzQ2hpbGRyZW4gcmV0dXJucyB0cnVlIGlmIGl0IGlzIGEgZ3JvdXAsXG4gIC8vICAgICAgICBJc3N1ZSBpcywgdGhhdCB3ZSBkaXNhYmxlIHRoZSBjaGlsZHJlbiBpbiB0aGUgQVBJXG4gIC8vICAgICAgICBnZXRHcm91cEl0ZW1zIHNlcnZpY2UgY2FsbCBkdWUgdG8gcGVyZm9ybWFuY2UuIFRoaXMgbGVhZHNcbiAgLy8gICAgICAgIHRvIHRoYXQgdGhlIGRyb3Bkb3duIGNoZXZyb24gaXMgc2hvd24gYWx3YXlzLiBJc3N1ZSBpcyxcbiAgLy8gICAgICAgIHRoYXQgZXZlbiBpZiB3ZSByZXR1cm4gdGhlIGNoZXZyb25zLCB3ZSBoYXZlIG5vIHdheSB0byBkZXRlcm1pbmVcbiAgLy8gICAgICAgIGlmIHRoZSBjaGlsZEFzc2V0cyBjb250YWluIGdyb3VwcyBvciBvdGhlciBhc3NldHMgKGxpa2UgZGFzaGJvYXJkcykuXG4gIC8vIGdldCBoYXNDaGlsZHJlbigpIHtcbiAgLy8gIHJldHVybiB0aGlzLnJvb3QgfHwgdGhpcy5zZXJ2aWNlLmdyb3Vwcy5pc0dyb3VwKHRoaXMubW8pICYmICh0aGlzLm1vIGFzIElNYW5hZ2VkT2JqZWN0KS5jaGlsZEFzc2V0cy5yZWZlcmVuY2VzLmxlbmd0aCA+IDA7XG4gIC8vIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBub2RlIHdoaWNoIHNob3dzIG9ubHkgZ3JvdXBzLlxuICAgKlxuICAgKiBAcGFyYW0gc2VydmljZSBUaGUgc2VydmljZSB0byB1c2UuXG4gICAqIEBwYXJhbSBjb25maWcgIFRoZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gb2YgdGhlIG5vZGUuXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2VydmljZTogR3JvdXBOb2RlU2VydmljZSwgY29uZmlnID0ge30pIHtcbiAgICBzdXBlcihzZXJ2aWNlLCBjb25maWcpO1xuICB9XG59XG4iXX0=