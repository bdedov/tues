import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Action, ActionFactory, gettext, ViewContext, Permissions } from '@c8y/ngx-components';
import { ActivatedRoute, Router } from '@angular/router';
import { ContextDashboardService } from './context-dashboard.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { DashboardDetailComponent } from './dashboard-detail.component';
var DashboardActionsFactory = /** @class */ (function () {
    function DashboardActionsFactory(router, contextDashboardService, bsModal, permissions) {
        this.router = router;
        this.contextDashboardService = contextDashboardService;
        this.bsModal = bsModal;
        this.permissions = permissions;
    }
    DashboardActionsFactory.prototype.get = function (activatedRoute) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var context, canEditDashboard;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        context = !activatedRoute.parent || activatedRoute.snapshot.data.context
                            ? activatedRoute.snapshot.data
                            : activatedRoute.parent.snapshot.data;
                        return [4 /*yield*/, this.isEnabled(context)];
                    case 1:
                        canEditDashboard = _a.sent();
                        return [2 /*return*/, [
                                {
                                    label: gettext('Add dashboard'),
                                    priority: 2500,
                                    action: function () { return _this.addDashboard(context); },
                                    disabled: !canEditDashboard
                                }
                            ]];
                }
            });
        });
    };
    DashboardActionsFactory.prototype.addDashboard = function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var initialState, modal, dashboardCfg, dashboardMO, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (context.context === ViewContext.Device) {
                            initialState = {
                                deviceType: context.contextData.type
                            };
                        }
                        modal = this.bsModal.show(DashboardDetailComponent, {
                            class: 'modal-lg',
                            initialState: initialState,
                            ignoreBackdropClick: true
                        }).content;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        return [4 /*yield*/, modal.result];
                    case 2:
                        dashboardCfg = _a.sent();
                        return [4 /*yield*/, this.contextDashboardService.create(dashboardCfg, context)];
                    case 3:
                        dashboardMO = _a.sent();
                        return [4 /*yield*/, this.contextDashboardService.navigateToDashboard(dashboardMO)];
                    case 4:
                        _a.sent();
                        modal.close();
                        return [3 /*break*/, 6];
                    case 5:
                        ex_1 = _a.sent();
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    DashboardActionsFactory.prototype.isEnabled = function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(context.contextData && context.contextData.id)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.permissions.canEdit(['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE'], context.contextData)];
                    case 1: return [2 /*return*/, ((_a.sent()) && [ViewContext.Device, ViewContext.Group].includes(context.context))];
                    case 2: return [2 /*return*/, (this.permissions.hasAnyRole(['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE']) &&
                            [ViewContext.Device, ViewContext.Group].includes(context.context))];
                }
            });
        });
    };
    DashboardActionsFactory.ctorParameters = function () { return [
        { type: Router },
        { type: ContextDashboardService },
        { type: BsModalService },
        { type: Permissions }
    ]; };
    DashboardActionsFactory = tslib_1.__decorate([
        Injectable()
    ], DashboardActionsFactory);
    return DashboardActionsFactory;
}());
export { DashboardActionsFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLWFjdGlvbnMuZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvY29udGV4dC1kYXNoYm9hcmQvIiwic291cmNlcyI6WyJkYXNoYm9hcmQtYWN0aW9ucy5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFJeEU7SUFDRSxpQ0FDVSxNQUFjLEVBQ2QsdUJBQWdELEVBQ2hELE9BQXVCLEVBQ3ZCLFdBQXdCO1FBSHhCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO1FBQ2hELFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBQ3ZCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0lBQy9CLENBQUM7SUFFRSxxQ0FBRyxHQUFULFVBQVUsY0FBOEI7Ozs7Ozs7d0JBQ2hDLE9BQU8sR0FDWCxDQUFDLGNBQWMsQ0FBQyxNQUFNLElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTzs0QkFDNUQsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsSUFBSTs0QkFDOUIsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQzt3QkFDakIscUJBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBQTs7d0JBQWhELGdCQUFnQixHQUFHLFNBQTZCO3dCQUN0RCxzQkFBTztnQ0FDTDtvQ0FDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLGVBQWUsQ0FBQztvQ0FDL0IsUUFBUSxFQUFFLElBQUk7b0NBQ2QsTUFBTSxFQUFFLGNBQU0sT0FBQSxLQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUExQixDQUEwQjtvQ0FDeEMsUUFBUSxFQUFFLENBQUMsZ0JBQWdCO2lDQUM1Qjs2QkFDRixFQUFDOzs7O0tBQ0g7SUFFSyw4Q0FBWSxHQUFsQixVQUFtQixPQUFPOzs7Ozs7d0JBR3hCLElBQUksT0FBTyxDQUFDLE9BQU8sS0FBSyxXQUFXLENBQUMsTUFBTSxFQUFFOzRCQUMxQyxZQUFZLEdBQUc7Z0NBQ2IsVUFBVSxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTs2QkFDckMsQ0FBQzt5QkFDSDt3QkFFSyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLEVBQUU7NEJBQ3hELEtBQUssRUFBRSxVQUFVOzRCQUNqQixZQUFZLGNBQUE7NEJBQ1osbUJBQW1CLEVBQUUsSUFBSTt5QkFDMUIsQ0FBQyxDQUFDLE9BQW1DLENBQUM7Ozs7d0JBRWhCLHFCQUFNLEtBQUssQ0FBQyxNQUFNLEVBQUE7O3dCQUFqQyxZQUFZLEdBQUcsU0FBa0I7d0JBQ1kscUJBQU0sSUFBSSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FDMUYsWUFBWSxFQUNaLE9BQU8sQ0FDUixFQUFBOzt3QkFISyxXQUFXLEdBQWtDLFNBR2xEO3dCQUNELHFCQUFNLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsRUFBQTs7d0JBQW5FLFNBQW1FLENBQUM7d0JBQ3BFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7Ozs7Ozs7O0tBSWpCO0lBRWEsMkNBQVMsR0FBdkIsVUFBd0IsT0FBTzs7Ozs7NkJBQ3pCLENBQUEsT0FBTyxDQUFDLFdBQVcsSUFBSSxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQSxFQUE3Qyx3QkFBNkM7d0JBRTVDLHFCQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUM3QixDQUFDLHNCQUFzQixFQUFFLHVCQUF1QixDQUFDLEVBQ2pELE9BQU8sQ0FBQyxXQUFXLENBQ3BCLEVBQUE7NEJBSkgsc0JBQU8sQ0FDTCxDQUFDLFNBR0EsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FDeEUsRUFBQzs0QkFFSixzQkFBTyxDQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsc0JBQXNCLEVBQUUsdUJBQXVCLENBQUMsQ0FBQzs0QkFDOUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUNsRSxFQUFDOzs7O0tBQ0g7O2dCQTlEaUIsTUFBTTtnQkFDVyx1QkFBdUI7Z0JBQ3ZDLGNBQWM7Z0JBQ1YsV0FBVzs7SUFMdkIsdUJBQXVCO1FBRG5DLFVBQVUsRUFBRTtPQUNBLHVCQUF1QixDQWlFbkM7SUFBRCw4QkFBQztDQUFBLEFBakVELElBaUVDO1NBakVZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGlvbiwgQWN0aW9uRmFjdG9yeSwgZ2V0dGV4dCwgVmlld0NvbnRleHQsIFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IENvbnRleHREYXNoYm9hcmRTZXJ2aWNlIH0gZnJvbSAnLi9jb250ZXh0LWRhc2hib2FyZC5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBEYXNoYm9hcmREZXRhaWxDb21wb25lbnQgfSBmcm9tICcuL2Rhc2hib2FyZC1kZXRhaWwuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnRleHREYXNoYm9hcmRNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnLi9jb250ZXh0LWRhc2hib2FyZC5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRBY3Rpb25zRmFjdG9yeSBpbXBsZW1lbnRzIEFjdGlvbkZhY3Rvcnkge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgY29udGV4dERhc2hib2FyZFNlcnZpY2U6IENvbnRleHREYXNoYm9hcmRTZXJ2aWNlLFxuICAgIHByaXZhdGUgYnNNb2RhbDogQnNNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBwZXJtaXNzaW9uczogUGVybWlzc2lvbnNcbiAgKSB7fVxuXG4gIGFzeW5jIGdldChhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpOiBQcm9taXNlPEFjdGlvbltdPiB7XG4gICAgY29uc3QgY29udGV4dCA9XG4gICAgICAhYWN0aXZhdGVkUm91dGUucGFyZW50IHx8IGFjdGl2YXRlZFJvdXRlLnNuYXBzaG90LmRhdGEuY29udGV4dFxuICAgICAgICA/IGFjdGl2YXRlZFJvdXRlLnNuYXBzaG90LmRhdGFcbiAgICAgICAgOiBhY3RpdmF0ZWRSb3V0ZS5wYXJlbnQuc25hcHNob3QuZGF0YTtcbiAgICBjb25zdCBjYW5FZGl0RGFzaGJvYXJkID0gYXdhaXQgdGhpcy5pc0VuYWJsZWQoY29udGV4dCk7XG4gICAgcmV0dXJuIFtcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ0FkZCBkYXNoYm9hcmQnKSxcbiAgICAgICAgcHJpb3JpdHk6IDI1MDAsXG4gICAgICAgIGFjdGlvbjogKCkgPT4gdGhpcy5hZGREYXNoYm9hcmQoY29udGV4dCksXG4gICAgICAgIGRpc2FibGVkOiAhY2FuRWRpdERhc2hib2FyZFxuICAgICAgfVxuICAgIF07XG4gIH1cblxuICBhc3luYyBhZGREYXNoYm9hcmQoY29udGV4dCkge1xuICAgIGxldCBpbml0aWFsU3RhdGU6IHsgZGV2aWNlVHlwZTogc3RyaW5nIH07XG5cbiAgICBpZiAoY29udGV4dC5jb250ZXh0ID09PSBWaWV3Q29udGV4dC5EZXZpY2UpIHtcbiAgICAgIGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgICAgZGV2aWNlVHlwZTogY29udGV4dC5jb250ZXh0RGF0YS50eXBlXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IG1vZGFsID0gdGhpcy5ic01vZGFsLnNob3coRGFzaGJvYXJkRGV0YWlsQ29tcG9uZW50LCB7XG4gICAgICBjbGFzczogJ21vZGFsLWxnJyxcbiAgICAgIGluaXRpYWxTdGF0ZSxcbiAgICAgIGlnbm9yZUJhY2tkcm9wQ2xpY2s6IHRydWVcbiAgICB9KS5jb250ZW50IGFzIERhc2hib2FyZERldGFpbENvbXBvbmVudDtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGFzaGJvYXJkQ2ZnID0gYXdhaXQgbW9kYWwucmVzdWx0O1xuICAgICAgY29uc3QgZGFzaGJvYXJkTU86IENvbnRleHREYXNoYm9hcmRNYW5hZ2VkT2JqZWN0ID0gYXdhaXQgdGhpcy5jb250ZXh0RGFzaGJvYXJkU2VydmljZS5jcmVhdGUoXG4gICAgICAgIGRhc2hib2FyZENmZyxcbiAgICAgICAgY29udGV4dFxuICAgICAgKTtcbiAgICAgIGF3YWl0IHRoaXMuY29udGV4dERhc2hib2FyZFNlcnZpY2UubmF2aWdhdGVUb0Rhc2hib2FyZChkYXNoYm9hcmRNTyk7XG4gICAgICBtb2RhbC5jbG9zZSgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAvLyBpbnRlbmRlZCBlbXB0eXNcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGlzRW5hYmxlZChjb250ZXh0KSB7XG4gICAgaWYgKGNvbnRleHQuY29udGV4dERhdGEgJiYgY29udGV4dC5jb250ZXh0RGF0YS5pZCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKGF3YWl0IHRoaXMucGVybWlzc2lvbnMuY2FuRWRpdChcbiAgICAgICAgICBbJ1JPTEVfSU5WRU5UT1JZX0FETUlOJywgJ1JPTEVfSU5WRU5UT1JZX0NSRUFURSddLFxuICAgICAgICAgIGNvbnRleHQuY29udGV4dERhdGFcbiAgICAgICAgKSkgJiYgW1ZpZXdDb250ZXh0LkRldmljZSwgVmlld0NvbnRleHQuR3JvdXBdLmluY2x1ZGVzKGNvbnRleHQuY29udGV4dClcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICB0aGlzLnBlcm1pc3Npb25zLmhhc0FueVJvbGUoWydST0xFX0lOVkVOVE9SWV9BRE1JTicsICdST0xFX0lOVkVOVE9SWV9DUkVBVEUnXSkgJiZcbiAgICAgIFtWaWV3Q29udGV4dC5EZXZpY2UsIFZpZXdDb250ZXh0Lkdyb3VwXS5pbmNsdWRlcyhjb250ZXh0LmNvbnRleHQpXG4gICAgKTtcbiAgfVxufVxuIl19