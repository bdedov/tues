import * as tslib_1 from "tslib";
import { Injectable, Inject } from '@angular/core';
import { sortBy, cloneDeep } from 'lodash-es';
import { DynamicComponentService, DynamicComponentDefinition } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { CONTEXT_DASHBOARD_CONFIG } from './context-dashboard.model';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@ngx-translate/core";
import * as i3 from "./context-dashboard.model";
var WidgetService = /** @class */ (function () {
    function WidgetService(dynamicComponentService, translateService, moduleConfig) {
        this.dynamicComponentService = dynamicComponentService;
        this.translateService = translateService;
        this.moduleConfig = moduleConfig;
    }
    WidgetService.prototype.getWidgetDefinition = function (componentId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.dynamicComponentService.getById$(componentId).toPromise()];
            });
        });
    };
    WidgetService.prototype.getWidgetDefinitions = function () {
        var _this = this;
        var translatedComponents = Array.from(this.dynamicComponentService.state).map(function (cmp) { return (tslib_1.__assign({}, cmp, { label: _this.translateService.instant(cmp.label) })); });
        return cloneDeep(sortBy(translatedComponents, 'label').filter(this.moduleConfig.widgetFilter));
    };
    WidgetService.ctorParameters = function () { return [
        { type: DynamicComponentService },
        { type: TranslateService },
        { type: undefined, decorators: [{ type: Inject, args: [CONTEXT_DASHBOARD_CONFIG,] }] }
    ]; };
    WidgetService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function WidgetService_Factory() { return new WidgetService(i0.ɵɵinject(i1.DynamicComponentService), i0.ɵɵinject(i2.TranslateService), i0.ɵɵinject(i3.CONTEXT_DASHBOARD_CONFIG)); }, token: WidgetService, providedIn: "root" });
    WidgetService = tslib_1.__decorate([
        Injectable({
            providedIn: 'root'
        }),
        tslib_1.__param(2, Inject(CONTEXT_DASHBOARD_CONFIG))
    ], WidgetService);
    return WidgetService;
}());
export { WidgetService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2NvbnRleHQtZGFzaGJvYXJkLyIsInNvdXJjZXMiOlsid2lkZ2V0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzlDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBMEIsd0JBQXdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7QUFLN0Y7SUFDRSx1QkFDVSx1QkFBZ0QsRUFDaEQsZ0JBQWtDLEVBQ0QsWUFBb0M7UUFGckUsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtRQUNoRCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ0QsaUJBQVksR0FBWixZQUFZLENBQXdCO0lBQzVFLENBQUM7SUFFRSwyQ0FBbUIsR0FBekIsVUFBMEIsV0FBVzs7O2dCQUNuQyxzQkFBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFDOzs7S0FDdkU7SUFFRCw0Q0FBb0IsR0FBcEI7UUFBQSxpQkFPQztRQU5DLElBQU0sb0JBQW9CLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsc0JBQ2xGLEdBQUcsSUFDTixLQUFLLEVBQUUsS0FBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQy9DLEVBSHFGLENBR3JGLENBQUMsQ0FBQztRQUVKLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7O2dCQWhCa0MsdUJBQXVCO2dCQUM5QixnQkFBZ0I7Z0RBQ3pDLE1BQU0sU0FBQyx3QkFBd0I7OztJQUp2QixhQUFhO1FBSHpCLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1NBQ25CLENBQUM7UUFLRyxtQkFBQSxNQUFNLENBQUMsd0JBQXdCLENBQUMsQ0FBQTtPQUp4QixhQUFhLENBbUJ6Qjt3QkE1QkQ7Q0E0QkMsQUFuQkQsSUFtQkM7U0FuQlksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc29ydEJ5LCBjbG9uZURlZXAgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgRHluYW1pY0NvbXBvbmVudFNlcnZpY2UsIER5bmFtaWNDb21wb25lbnREZWZpbml0aW9uIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBDb250ZXh0RGFzaGJvYXJkQ29uZmlnLCBDT05URVhUX0RBU0hCT0FSRF9DT05GSUcgfSBmcm9tICcuL2NvbnRleHQtZGFzaGJvYXJkLm1vZGVsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgV2lkZ2V0U2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZHluYW1pY0NvbXBvbmVudFNlcnZpY2U6IER5bmFtaWNDb21wb25lbnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBASW5qZWN0KENPTlRFWFRfREFTSEJPQVJEX0NPTkZJRykgcHVibGljIG1vZHVsZUNvbmZpZzogQ29udGV4dERhc2hib2FyZENvbmZpZ1xuICApIHt9XG5cbiAgYXN5bmMgZ2V0V2lkZ2V0RGVmaW5pdGlvbihjb21wb25lbnRJZCk6IFByb21pc2U8RHluYW1pY0NvbXBvbmVudERlZmluaXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5keW5hbWljQ29tcG9uZW50U2VydmljZS5nZXRCeUlkJChjb21wb25lbnRJZCkudG9Qcm9taXNlKCk7XG4gIH1cblxuICBnZXRXaWRnZXREZWZpbml0aW9ucygpIHtcbiAgICBjb25zdCB0cmFuc2xhdGVkQ29tcG9uZW50cyA9IEFycmF5LmZyb20odGhpcy5keW5hbWljQ29tcG9uZW50U2VydmljZS5zdGF0ZSkubWFwKGNtcCA9PiAoe1xuICAgICAgLi4uY21wLFxuICAgICAgbGFiZWw6IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGNtcC5sYWJlbClcbiAgICB9KSk7XG5cbiAgICByZXR1cm4gY2xvbmVEZWVwKHNvcnRCeSh0cmFuc2xhdGVkQ29tcG9uZW50cywgJ2xhYmVsJykuZmlsdGVyKHRoaXMubW9kdWxlQ29uZmlnLndpZGdldEZpbHRlcikpO1xuICB9XG59XG4iXX0=