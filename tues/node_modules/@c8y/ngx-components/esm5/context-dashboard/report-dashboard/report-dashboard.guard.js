import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ContextDashboardType } from '../context-dashboard.model';
import { ContextDashboardService } from '../context-dashboard.service';
import { tap } from 'rxjs/operators';
import { from, of } from 'rxjs';
var ReportDashboardGuard = /** @class */ (function () {
    function ReportDashboardGuard(contextDashboardService) {
        this.contextDashboardService = contextDashboardService;
    }
    ReportDashboardGuard.prototype.canActivate = function (route) {
        var _this = this;
        var reportId = route.data.contextData && route.data.contextData.id;
        return from(this.contextDashboardService.activateDashboards(route, [ContextDashboardType.Named])).pipe(tap(function (res) {
            return Array.isArray(res) && res.length === 0
                ? _this.createDashboardIfNotExist(reportId)
                : of(true);
        }));
    };
    ReportDashboardGuard.prototype.createDashboardIfNotExist = function (reportId) {
        var dashboardCfg = {};
        return this.contextDashboardService.create(dashboardCfg, "report_" + reportId).then(function () { return true; });
    };
    ReportDashboardGuard.ctorParameters = function () { return [
        { type: ContextDashboardService }
    ]; };
    ReportDashboardGuard = tslib_1.__decorate([
        Injectable()
    ], ReportDashboardGuard);
    return ReportDashboardGuard;
}());
export { ReportDashboardGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0LWRhc2hib2FyZC5ndWFyZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvY29udGV4dC1kYXNoYm9hcmQvIiwic291cmNlcyI6WyJyZXBvcnQtZGFzaGJvYXJkL3JlcG9ydC1kYXNoYm9hcmQuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR2hDO0lBQ0UsOEJBQW9CLHVCQUFnRDtRQUFoRCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO0lBQUcsQ0FBQztJQUV4RSwwQ0FBVyxHQUFYLFVBQVksS0FBNkI7UUFBekMsaUJBV0M7UUFWQyxJQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUM7UUFDckUsT0FBTyxJQUFJLENBQ1QsSUFBSSxDQUFDLHVCQUF1QixDQUFDLGtCQUFrQixDQUFDLEtBQUssRUFBRSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQ3JGLENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxVQUFBLEdBQUc7WUFDTCxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDO2dCQUMzQyxDQUFDLENBQUMsS0FBSSxDQUFDLHlCQUF5QixDQUFDLFFBQVEsQ0FBQztnQkFDMUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsd0RBQXlCLEdBQXpCLFVBQTBCLFFBQVE7UUFDaEMsSUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsWUFBVSxRQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUMsQ0FBQztJQUNsRyxDQUFDOztnQkFsQjRDLHVCQUF1Qjs7SUFEekQsb0JBQW9CO1FBRGhDLFVBQVUsRUFBRTtPQUNBLG9CQUFvQixDQW9CaEM7SUFBRCwyQkFBQztDQUFBLEFBcEJELElBb0JDO1NBcEJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29udGV4dERhc2hib2FyZFR5cGUgfSBmcm9tICcuLi9jb250ZXh0LWRhc2hib2FyZC5tb2RlbCc7XG5pbXBvcnQgeyBDb250ZXh0RGFzaGJvYXJkU2VydmljZSB9IGZyb20gJy4uL2NvbnRleHQtZGFzaGJvYXJkLnNlcnZpY2UnO1xuaW1wb3J0IHsgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgZnJvbSwgb2YgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJlcG9ydERhc2hib2FyZEd1YXJkIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb250ZXh0RGFzaGJvYXJkU2VydmljZTogQ29udGV4dERhc2hib2FyZFNlcnZpY2UpIHt9XG5cbiAgY2FuQWN0aXZhdGUocm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QpIHtcbiAgICBjb25zdCByZXBvcnRJZCA9IHJvdXRlLmRhdGEuY29udGV4dERhdGEgJiYgcm91dGUuZGF0YS5jb250ZXh0RGF0YS5pZDtcbiAgICByZXR1cm4gZnJvbShcbiAgICAgIHRoaXMuY29udGV4dERhc2hib2FyZFNlcnZpY2UuYWN0aXZhdGVEYXNoYm9hcmRzKHJvdXRlLCBbQ29udGV4dERhc2hib2FyZFR5cGUuTmFtZWRdKVxuICAgICkucGlwZShcbiAgICAgIHRhcChyZXMgPT4ge1xuICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShyZXMpICYmIHJlcy5sZW5ndGggPT09IDBcbiAgICAgICAgICA/IHRoaXMuY3JlYXRlRGFzaGJvYXJkSWZOb3RFeGlzdChyZXBvcnRJZClcbiAgICAgICAgICA6IG9mKHRydWUpO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgY3JlYXRlRGFzaGJvYXJkSWZOb3RFeGlzdChyZXBvcnRJZCkge1xuICAgIGNvbnN0IGRhc2hib2FyZENmZyA9IHt9O1xuICAgIHJldHVybiB0aGlzLmNvbnRleHREYXNoYm9hcmRTZXJ2aWNlLmNyZWF0ZShkYXNoYm9hcmRDZmcsIGByZXBvcnRfJHtyZXBvcnRJZH1gKS50aGVuKCgpID0+IHRydWUpO1xuICB9XG59XG4iXX0=