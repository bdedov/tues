import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { cloneDeep } from 'lodash-es';
import { FilteringFormRendererContext } from '@c8y/ngx-components';
var GroupFilteringFormRendererComponent = /** @class */ (function () {
    function GroupFilteringFormRendererComponent(context) {
        this.context = context;
        this.preselected = [];
    }
    GroupFilteringFormRendererComponent.prototype.ngOnInit = function () {
        var column = this.context.property;
        this.model = cloneDeep(column.externalFilterQuery || {});
        this.preselected = this.model.selectedNodes || [];
    };
    GroupFilteringFormRendererComponent.prototype.applyFilter = function () {
        this.context.applyFilter({
            externalFilterQuery: this.model
        });
    };
    GroupFilteringFormRendererComponent.prototype.resetFilter = function () {
        this.context.resetFilter();
    };
    GroupFilteringFormRendererComponent.prototype.selectionChanged = function (nodes) {
        this.model.selectedNodes = nodes;
    };
    GroupFilteringFormRendererComponent.ctorParameters = function () { return [
        { type: FilteringFormRendererContext }
    ]; };
    GroupFilteringFormRendererComponent = tslib_1.__decorate([
        Component({
            template: "<c8y-asset-selector\n  [selected]=\"preselected\"\n  (onChange)=\"selectionChanged($event)\"\n></c8y-asset-selector>\n\n<div class=\"data-grid__dropdown__footer d-flex separator-top\">\n  <button\n    class=\"btn btn-default btn-sm m-r-8 flex-grow\"\n    (click)=\"resetFilter()\"\n    title=\"{{ 'Reset' | translate }}\"\n    translate\n  >\n    Reset\n  </button>\n\n  <button\n    class=\"btn btn-primary btn-sm flex-grow\"\n    (click)=\"applyFilter()\"\n    title=\"{{ 'Apply' | translate }}\"\n    translate\n  >\n    Apply\n  </button>\n</div>\n"
        })
    ], GroupFilteringFormRendererComponent);
    return GroupFilteringFormRendererComponent;
}());
export { GroupFilteringFormRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuZmlsdGVyaW5nLWZvcm0tcmVuZGVyZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZC8iLCJzb3VyY2VzIjpbImNvbHVtbnMvZ3JvdXAuZmlsdGVyaW5nLWZvcm0tcmVuZGVyZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFNbkU7SUFJRSw2Q0FBbUIsT0FBcUM7UUFBckMsWUFBTyxHQUFQLE9BQU8sQ0FBOEI7UUFGeEQsZ0JBQVcsR0FBYSxFQUFFLENBQUM7SUFFZ0MsQ0FBQztJQUU1RCxzREFBUSxHQUFSO1FBQ0UsSUFBTSxNQUFNLEdBQXFCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxJQUFJLEVBQUUsQ0FBQztJQUNwRCxDQUFDO0lBRUQseURBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3ZCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxLQUFLO1NBQ2hDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCx5REFBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRUQsOERBQWdCLEdBQWhCLFVBQWlCLEtBQUs7UUFDcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7O2dCQXBCMkIsNEJBQTRCOztJQUo3QyxtQ0FBbUM7UUFIL0MsU0FBUyxDQUFDO1lBQ1Qsb2pCQUE2RDtTQUM5RCxDQUFDO09BQ1csbUNBQW1DLENBeUIvQztJQUFELDBDQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0F6QlksbUNBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNsb25lRGVlcCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkQ29sdW1uIH0gZnJvbSAnLi4vZGV2aWNlLWdyaWQubW9kZWxzJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9ncm91cC5maWx0ZXJpbmctZm9ybS1yZW5kZXJlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgR3JvdXBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBtb2RlbDogYW55O1xuICBwcmVzZWxlY3RlZDogc3RyaW5nW10gPSBbXTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dDogRmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29udGV4dCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBjb25zdCBjb2x1bW46IERldmljZUdyaWRDb2x1bW4gPSB0aGlzLmNvbnRleHQucHJvcGVydHk7XG4gICAgdGhpcy5tb2RlbCA9IGNsb25lRGVlcChjb2x1bW4uZXh0ZXJuYWxGaWx0ZXJRdWVyeSB8fCB7fSk7XG4gICAgdGhpcy5wcmVzZWxlY3RlZCA9IHRoaXMubW9kZWwuc2VsZWN0ZWROb2RlcyB8fCBbXTtcbiAgfVxuXG4gIGFwcGx5RmlsdGVyKCkge1xuICAgIHRoaXMuY29udGV4dC5hcHBseUZpbHRlcih7XG4gICAgICBleHRlcm5hbEZpbHRlclF1ZXJ5OiB0aGlzLm1vZGVsXG4gICAgfSk7XG4gIH1cblxuICByZXNldEZpbHRlcigpIHtcbiAgICB0aGlzLmNvbnRleHQucmVzZXRGaWx0ZXIoKTtcbiAgfVxuXG4gIHNlbGVjdGlvbkNoYW5nZWQobm9kZXMpIHtcbiAgICB0aGlzLm1vZGVsLnNlbGVjdGVkTm9kZXMgPSBub2RlcztcbiAgfVxufVxuIl19