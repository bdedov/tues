import * as tslib_1 from "tslib";
import { Component, forwardRef, Inject } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { DeviceGridService } from '../device-grid.service';
var NameCellRendererComponent = /** @class */ (function () {
    function NameCellRendererComponent(context, deviceGridService) {
        this.context = context;
        this.deviceGridService = deviceGridService;
    }
    NameCellRendererComponent.ctorParameters = function () { return [
        { type: CellRendererContext },
        { type: DeviceGridService, decorators: [{ type: Inject, args: [forwardRef(function () { return DeviceGridService; }),] }] }
    ]; };
    NameCellRendererComponent = tslib_1.__decorate([
        Component({
            template: "\n    <a\n      [href]=\"deviceGridService.getDeviceHref(context.item)\"\n      title=\"{{ deviceGridService.getProperName(context.item) }}\"\n      class=\"interact\"\n    >\n      {{ deviceGridService.getProperName(context.item) }}\n    </a>\n  "
        }),
        tslib_1.__param(1, Inject(forwardRef(function () { return DeviceGridService; })))
    ], NameCellRendererComponent);
    return NameCellRendererComponent;
}());
export { NameCellRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQvIiwic291cmNlcyI6WyJjb2x1bW5zL25hbWUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQWEzRDtJQUNFLG1DQUNTLE9BQTRCLEVBQ2lCLGlCQUFvQztRQURqRixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUNpQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0lBQ3ZGLENBQUM7O2dCQUZjLG1CQUFtQjtnQkFDb0MsaUJBQWlCLHVCQUF2RixNQUFNLFNBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxpQkFBaUIsRUFBakIsQ0FBaUIsQ0FBQzs7SUFIbEMseUJBQXlCO1FBWHJDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx5UEFRVDtTQUNGLENBQUM7UUFJRyxtQkFBQSxNQUFNLENBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxpQkFBaUIsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLENBQUE7T0FIbkMseUJBQXlCLENBS3JDO0lBQUQsZ0NBQUM7Q0FBQSxBQUxELElBS0M7U0FMWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGZvcndhcmRSZWYsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2VsbFJlbmRlcmVyQ29udGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZFNlcnZpY2UgfSBmcm9tICcuLi9kZXZpY2UtZ3JpZC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGFcbiAgICAgIFtocmVmXT1cImRldmljZUdyaWRTZXJ2aWNlLmdldERldmljZUhyZWYoY29udGV4dC5pdGVtKVwiXG4gICAgICB0aXRsZT1cInt7IGRldmljZUdyaWRTZXJ2aWNlLmdldFByb3Blck5hbWUoY29udGV4dC5pdGVtKSB9fVwiXG4gICAgICBjbGFzcz1cImludGVyYWN0XCJcbiAgICA+XG4gICAgICB7eyBkZXZpY2VHcmlkU2VydmljZS5nZXRQcm9wZXJOYW1lKGNvbnRleHQuaXRlbSkgfX1cbiAgICA8L2E+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgTmFtZUNlbGxSZW5kZXJlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0LFxuICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEZXZpY2VHcmlkU2VydmljZSkpIHB1YmxpYyBkZXZpY2VHcmlkU2VydmljZTogRGV2aWNlR3JpZFNlcnZpY2VcbiAgKSB7fVxufVxuIl19