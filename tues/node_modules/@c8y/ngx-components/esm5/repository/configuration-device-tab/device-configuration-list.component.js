import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
var DeviceConfigurationListComponent = /** @class */ (function () {
    function DeviceConfigurationListComponent() {
        this.configSelected = new EventEmitter();
        this.filterTerm = '';
    }
    DeviceConfigurationListComponent.prototype.showConfigurationTypePreview = function (config) {
        this.selectedConfig = config;
        this.configSelected.emit(config);
    };
    DeviceConfigurationListComponent.prototype.updatePipe = function (filterTerm) {
        this.filterTerm = filterTerm;
    };
    tslib_1.__decorate([
        Input()
    ], DeviceConfigurationListComponent.prototype, "items", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceConfigurationListComponent.prototype, "itemIcon", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceConfigurationListComponent.prototype, "emptyState", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceConfigurationListComponent.prototype, "isFilterEnabled", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceConfigurationListComponent.prototype, "configSelected", void 0);
    DeviceConfigurationListComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-configuration-list',
            template: "<div class=\"p-l-16 m-b-8\" style=\"margin-top: -16px;\" *ngIf=\"isFilterEnabled\">\n  <c8y-filter [icon]=\"'search'\" (onSearch)=\"updatePipe($event)\"></c8y-filter>\n</div>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state text-left\" *ngIf=\"items?.length === 0\">\n  <h1 [c8yIcon]=\"emptyState.icon\"></h1>\n  <p>\n    <strong>{{ emptyState.title | translate }}</strong\n    ><br />\n    <small>{{ emptyState.text | translate }}</small>\n  </p>\n</div>\n\n<!-- CONFIGURATIONS AVAILABLE -->\n<div class=\"c8y-nav-stacked\">\n  <div\n    class=\"c8y-stacked-item flex-row\"\n    [class.active]=\"config === selectedConfig\"\n    *ngFor=\"let config of items | configurationFilterPipe: filterTerm\"\n    (click)=\"showConfigurationTypePreview(config)\"\n  >\n    <div class=\"list-item-icon\">\n      <i [c8yIcon]=\"itemIcon\"></i>\n    </div>\n    <div class=\"list-item-body text-truncate\">\n      <div class=\"d-flex\">\n        <span class=\"text-truncate\" title=\"{{ config.name }}\">{{ config.name }}</span>\n        <span class=\"text-label-small flex-item-right flex-item-middle\">{{ config.deviceType }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- for Carlos: config.configurationType to differentiate whether a config matches configuration type. -->\n"
        })
    ], DeviceConfigurationListComponent);
    return DeviceConfigurationListComponent;
}());
export { DeviceConfigurationListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWNvbmZpZ3VyYXRpb24tbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvIiwic291cmNlcyI6WyJjb25maWd1cmF0aW9uLWRldmljZS10YWIvZGV2aWNlLWNvbmZpZ3VyYXRpb24tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPdkU7SUFKQTtRQVNZLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUV0RCxlQUFVLEdBQVcsRUFBRSxDQUFDO0lBVTFCLENBQUM7SUFSQyx1RUFBNEIsR0FBNUIsVUFBNkIsTUFBTTtRQUNqQyxJQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQztRQUM3QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQscURBQVUsR0FBVixVQUFXLFVBQWtCO1FBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFmUTtRQUFSLEtBQUssRUFBRTttRUFBcUM7SUFDcEM7UUFBUixLQUFLLEVBQUU7c0VBQWtCO0lBQ2pCO1FBQVIsS0FBSyxFQUFFO3dFQUErQztJQUM5QztRQUFSLEtBQUssRUFBRTs2RUFBMEI7SUFDeEI7UUFBVCxNQUFNLEVBQUU7NEVBQTZDO0lBTDNDLGdDQUFnQztRQUo1QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsK0JBQStCO1lBQ3pDLCt3Q0FBeUQ7U0FDMUQsQ0FBQztPQUNXLGdDQUFnQyxDQWlCNUM7SUFBRCx1Q0FBQztDQUFBLEFBakJELElBaUJDO1NBakJZLGdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWd1cmF0aW9uTGlzdEVtcHR5U3RhdGUsIFN1cHBvcnRlZENvbmZpZ3VyYXRpb25JdGVtIH0gZnJvbSAnLi4vcmVwb3NpdG9yeS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1kZXZpY2UtY29uZmlndXJhdGlvbi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RldmljZS1jb25maWd1cmF0aW9uLWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERldmljZUNvbmZpZ3VyYXRpb25MaXN0Q29tcG9uZW50IHtcbiAgQElucHV0KCkgaXRlbXM6IFN1cHBvcnRlZENvbmZpZ3VyYXRpb25JdGVtW107XG4gIEBJbnB1dCgpIGl0ZW1JY29uOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVtcHR5U3RhdGU6IERldmljZUNvbmZpZ3VyYXRpb25MaXN0RW1wdHlTdGF0ZTtcbiAgQElucHV0KCkgaXNGaWx0ZXJFbmFibGVkOiBib29sZWFuO1xuICBAT3V0cHV0KCkgY29uZmlnU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgc2VsZWN0ZWRDb25maWc7XG4gIGZpbHRlclRlcm06IHN0cmluZyA9ICcnO1xuXG4gIHNob3dDb25maWd1cmF0aW9uVHlwZVByZXZpZXcoY29uZmlnKTogdm9pZCB7XG4gICAgdGhpcy5zZWxlY3RlZENvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLmNvbmZpZ1NlbGVjdGVkLmVtaXQoY29uZmlnKTtcbiAgfVxuXG4gIHVwZGF0ZVBpcGUoZmlsdGVyVGVybTogc3RyaW5nKSB7XG4gICAgdGhpcy5maWx0ZXJUZXJtID0gZmlsdGVyVGVybTtcbiAgfVxufVxuIl19