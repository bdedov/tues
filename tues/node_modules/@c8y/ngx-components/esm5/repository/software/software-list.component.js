import * as tslib_1 from "tslib";
import { Router, ActivatedRoute } from '@angular/router';
import { Component } from '@angular/core';
import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';
import { TranslateService } from '@ngx-translate/core';
import { distinctUntilChanged, tap, debounceTime, switchMap, shareReplay, } from 'rxjs/operators';
import { BehaviorSubject, combineLatest } from 'rxjs';
import { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';
import { RepositoryService } from '../repository.service';
import { RepositoryType } from '../repository.model';
import { AddSoftwareModalComponent } from './add-software-modal.component';
import { property, get } from 'lodash-es';
var SoftwareListComponent = /** @class */ (function () {
    function SoftwareListComponent(repositoryService, modalService, bsModalService, translateService, alertService, router, activatedRoute) {
        var _this = this;
        this.repositoryService = repositoryService;
        this.modalService = modalService;
        this.bsModalService = bsModalService;
        this.translateService = translateService;
        this.alertService = alertService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.textFilter$ = new BehaviorSubject('');
        this.reload$ = new BehaviorSubject(null);
        this.reloading = false;
        this.softwares$ = combineLatest(this.textFilter$.pipe(debounceTime(400), distinctUntilChanged()), this.reload$).pipe(tap(function () {
            _this.reloading = true;
        }), switchMap(function (_a) {
            var _b = tslib_1.__read(_a, 1), text = _b[0];
            return _this.getSoftwares(text);
        }), tap(function () {
            _this.reloading = false;
        }), shareReplay(1));
        this.isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);
        this.DEVICE_TYPE_NOT_AVAILABLE = gettext('No device type available');
    }
    SoftwareListComponent.prototype.getSoftwares = function (partialText) {
        var properties = ['name', 'description', 'c8y_Filter.type'];
        var partialTextFilter = { partialText: partialText, properties: properties };
        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { partialTextFilter: partialTextFilter });
    };
    SoftwareListComponent.prototype.addSoftware = function () {
        var _this = this;
        var config = { class: 'modal-sm', ignoreBackdropClick: true };
        var modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);
        modalRef.content.saved.subscribe(function (savedSoftware) { return _this.editSoftware(savedSoftware); });
    };
    SoftwareListComponent.prototype.editSoftware = function (software) {
        this.router.navigate([software.id], { relativeTo: this.activatedRoute });
    };
    SoftwareListComponent.prototype.deleteSoftware = function (software) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, body, labels, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        title = gettext('Delete software');
                        body = "\n        " + this.translateService.instant(gettext('You are about to delete software "{{ name }}" with all its versions.'), { name: software.name }) + "\n        " + this.translateService.instant(gettext('This operation is irreversible.')) + "\n        " + this.translateService.instant(gettext('Do you want to proceed?')) + "\n      ";
                        labels = {
                            ok: gettext('Delete')
                        };
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.repositoryService.delete(software)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Software deleted.'));
                        this.reload$.next();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        // only if not cancel from modal
                        if (ex_1) {
                            this.alertService.addServerFailure(ex_1);
                        }
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    SoftwareListComponent.prototype.getBaseVersionsCount$ = function (software) {
        var _this = this;
        return this.softwares$.pipe(switchMap(function () { return _this.repositoryService.getBaseVersionsCount$(software); }), shareReplay(1));
    };
    SoftwareListComponent.prototype.getDeviceTypeTitle = function (software) {
        return get(software, 'c8y_Filter.type', this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE));
    };
    SoftwareListComponent.ctorParameters = function () { return [
        { type: RepositoryService },
        { type: ModalService },
        { type: BsModalService },
        { type: TranslateService },
        { type: AlertService },
        { type: Router },
        { type: ActivatedRoute }
    ]; };
    tslib_1.__decorate([
        memoize(property('id'))
    ], SoftwareListComponent.prototype, "getBaseVersionsCount$", null);
    SoftwareListComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-software-list',
            template: "<c8y-title>\n  {{ 'Software repository' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form\">\n  <div class=\"input-group input-group-search\">\n    <input\n      class=\"form-control\"\n      type=\"search\"\n      title=\"{{ 'Filter software\u2026' | translate }}\"\n      placeholder=\"{{ 'Filter software\u2026' | translate }}\"\n      [ngModel]=\"textFilter$ | async\"\n      (ngModelChange)=\"textFilter$.next($event)\"\n    />\n    <span class=\"input-group-addon\">\n      <i c8yIcon=\"search\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n      <i\n        class=\"text-muted\"\n        c8yIcon=\"times\"\n        *ngIf=\"(textFilter$ | async).length > 0\"\n        (click)=\"textFilter$.next('')\"\n      ></i>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Add software' | translate }}\" (click)=\"addSoftware()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add software' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"reload$.next()\">\n    <i [ngClass]=\"{ 'fa-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<!-- empty state-->\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"(softwares$ | async)?.data.length === 0 && (textFilter$ | async)?.length === 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"c8y-tools\"></h1>\n  <h3 translate>\n    No software to display.\n  </h3>\n  <p translate>\n    Add a new software by clicking below.\n  </p>\n  <p>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add software' | translate }}\"\n      (click)=\"addSoftware()\"\n      translate\n    >\n      Add software\n    </button>\n  </p>\n</div>\n\n<!-- no results empty state -->\n<div\n  class=\"c8y-empty-state\"\n  *ngIf=\"(softwares$ | async)?.data.length === 0 && (textFilter$ | async)?.length > 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"search\"></h1>\n  <h3 translate>\n    No results to display.\n  </h3>\n  <p translate>\n    Refine your search terms or check your spelling.\n  </p>\n</div>\n\n<!-- apply the class 'dd-low' when the list contains less than 10 records-->\n<c8y-list-group\n  class=\"m-b-24\"\n  *ngIf=\"(softwares$ | async)?.data.length > 0\"\n  [ngClass]=\"{ 'dd-low': (softwares$ | async)?.data.length < 10 }\"\n>\n  <c8y-li class=\"page-sticky-header c8y-list__item--empty-actions hidden-xs\">\n    <c8y-li-icon><i class=\"fa\"></i></c8y-li-icon>\n    <c8y-li-body class=\"content-flex-60\">\n      <div class=\"col-3\">\n        {{ 'Software' | translate }}\n      </div>\n      <div class=\"col-4\">\n        {{ 'Description' | translate }}\n      </div>\n      <div class=\"col-3\">\n        {{ 'Device type' | translate }}\n      </div>\n      <div class=\"col-2\">\n        {{ 'Versions' | translate }}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-li *c8yFor=\"let software of softwares$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-tools\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-60\">\n      <button class=\"btn-clean col-3\" (click)=\"editSoftware(software)\">\n        <span class=\"text-truncate\" title=\"{{ software.name }}\">\n          {{ software.name }}\n        </span>\n      </button>\n\n      <div class=\"col-4\">\n        <p class=\"text-truncate\" title=\"{{ software.description }}\">\n          <span class=\"text-label-small m-r-4 visible-xs-inline\">\n            {{ 'Description' | translate }}\n          </span>\n          <span *ngIf=\"software.description; else emptyDescription\">\n            {{ software.description }}\n          </span>\n        </p>\n        <ng-template #emptyDescription>\n          <small class=\"text-muted\">\n            <em>{{ 'No description' | translate }}</em>\n          </small>\n        </ng-template>\n      </div>\n\n      <div class=\"col-3\">\n        <div\n          class=\"text-truncate\"\n          title=\"{{ 'Device type' | translate }}: {{ software.c8y_Filter?.type || '-' }}\"\n        >\n          <span class=\"text-label-small m-r-8 visible-xs-inline\" translate>\n            Device type\n          </span>\n          <span *ngIf=\"software.c8y_Filter?.type; else emptyText\">\n            {{ software.c8y_Filter?.type }}\n          </span>\n          <ng-template #emptyText>\n            <small class=\"text-muted\">\n              <em>{{ 'Undefined' | translate }}</em>\n            </small>\n          </ng-template>\n        </div>\n      </div>\n\n      <div class=\"col-2\">\n        <span class=\"label label-warning flex-item-right-sm\" *ngIf=\"isLegacy(software)\">\n          <span translate>\n            Legacy\n          </span>\n        </span>\n        <span *ngIf=\"!isLegacy(software)\">\n          <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n            <span class=\"label label-info flex-item-right-sm\">\n              <i class=\"fa-spin\" c8yIcon=\"circle-o-notch\"></i>\n            </span>\n          </span>\n          <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n            <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default flex-item-right-sm\">\n                  <span translate>\n                    No versions\n                  </span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info flex-item-right-sm\">\n                  <span translate>\n                    1 version\n                  </span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info flex-item-right-sm\">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ count: getBaseVersionsCount$(software) | async }\"\n                  >\n                    {{ count }} versions\n                  </span>\n                </span>\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-action (click)=\"editSoftware(software)\" icon=\"pencil\">\n      {{ 'Edit' | translate }}\n    </c8y-li-action>\n    <c8y-li-action (click)=\"deleteSoftware(software)\" icon=\"trash\">\n      {{ 'Delete' | translate }}\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n"
        })
    ], SoftwareListComponent);
    return SoftwareListComponent;
}());
export { SoftwareListComponent };
//# sourceMappingURL=data:application/json;base64,