import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
var RepositoryNavigationFactory = /** @class */ (function () {
    function RepositoryNavigationFactory() {
        this.navs = [];
    }
    RepositoryNavigationFactory.prototype.get = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                if (this.navs.length === 0) {
                    this.navs.push(new NavigatorNode({
                        label: gettext('Firmware repository'),
                        path: 'firmware',
                        icon: 'c8y-firmware',
                        parent: gettext('Management'),
                        priority: 1000
                    }));
                    this.navs.push(new NavigatorNode({
                        label: gettext('Software repository'),
                        path: 'software',
                        icon: 'c8y-tools',
                        parent: gettext('Management'),
                        priority: 900
                    }));
                    this.navs.push(new NavigatorNode({
                        label: gettext('Configuration repository'),
                        path: 'configuration',
                        icon: 'gears',
                        parent: gettext('Management'),
                        priority: 800
                    }));
                }
                return [2 /*return*/, this.navs];
            });
        });
    };
    RepositoryNavigationFactory = tslib_1.__decorate([
        Injectable()
    ], RepositoryNavigationFactory);
    return RepositoryNavigationFactory;
}());
export { RepositoryNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS1uYXZpZ2F0aW9uLWZhY3RvcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvIiwic291cmNlcyI6WyJyZXBvc2l0b3J5LW5hdmlnYXRpb24tZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUduRjtJQURBO1FBRUUsU0FBSSxHQUFvQixFQUFFLENBQUM7SUFrQzdCLENBQUM7SUFoQ08seUNBQUcsR0FBVDs7O2dCQUNFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO29CQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDWixJQUFJLGFBQWEsQ0FBQzt3QkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQzt3QkFDckMsSUFBSSxFQUFFLFVBQVU7d0JBQ2hCLElBQUksRUFBRSxjQUFjO3dCQUNwQixNQUFNLEVBQUUsT0FBTyxDQUFDLFlBQVksQ0FBQzt3QkFDN0IsUUFBUSxFQUFFLElBQUk7cUJBQ2YsQ0FBQyxDQUNILENBQUM7b0JBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1osSUFBSSxhQUFhLENBQUM7d0JBQ2hCLEtBQUssRUFBRSxPQUFPLENBQUMscUJBQXFCLENBQUM7d0JBQ3JDLElBQUksRUFBRSxVQUFVO3dCQUNoQixJQUFJLEVBQUUsV0FBVzt3QkFDakIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7d0JBQzdCLFFBQVEsRUFBRSxHQUFHO3FCQUNkLENBQUMsQ0FDSCxDQUFDO29CQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUNaLElBQUksYUFBYSxDQUFDO3dCQUNoQixLQUFLLEVBQUUsT0FBTyxDQUFDLDBCQUEwQixDQUFDO3dCQUMxQyxJQUFJLEVBQUUsZUFBZTt3QkFDckIsSUFBSSxFQUFFLE9BQU87d0JBQ2IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7d0JBQzdCLFFBQVEsRUFBRSxHQUFHO3FCQUNkLENBQUMsQ0FDSCxDQUFDO2lCQUNIO2dCQUNELHNCQUFPLElBQUksQ0FBQyxJQUFJLEVBQUM7OztLQUNsQjtJQWxDVSwyQkFBMkI7UUFEdkMsVUFBVSxFQUFFO09BQ0EsMkJBQTJCLENBbUN2QztJQUFELGtDQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0FuQ1ksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJlcG9zaXRvcnlOYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgbmF2czogTmF2aWdhdG9yTm9kZVtdID0gW107XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIGlmICh0aGlzLm5hdnMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdGaXJtd2FyZSByZXBvc2l0b3J5JyksXG4gICAgICAgICAgcGF0aDogJ2Zpcm13YXJlJyxcbiAgICAgICAgICBpY29uOiAnYzh5LWZpcm13YXJlJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ01hbmFnZW1lbnQnKSxcbiAgICAgICAgICBwcmlvcml0eTogMTAwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICAgIHRoaXMubmF2cy5wdXNoKFxuICAgICAgICBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1NvZnR3YXJlIHJlcG9zaXRvcnknKSxcbiAgICAgICAgICBwYXRoOiAnc29mdHdhcmUnLFxuICAgICAgICAgIGljb246ICdjOHktdG9vbHMnLFxuICAgICAgICAgIHBhcmVudDogZ2V0dGV4dCgnTWFuYWdlbWVudCcpLFxuICAgICAgICAgIHByaW9yaXR5OiA5MDBcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdDb25maWd1cmF0aW9uIHJlcG9zaXRvcnknKSxcbiAgICAgICAgICBwYXRoOiAnY29uZmlndXJhdGlvbicsXG4gICAgICAgICAgaWNvbjogJ2dlYXJzJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ01hbmFnZW1lbnQnKSxcbiAgICAgICAgICBwcmlvcml0eTogODAwXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5uYXZzO1xuICB9XG59XG4iXX0=