import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { ActionType } from './export-schedules.interface';
import { CronService } from './cron.service';
import { cloneDeep } from 'lodash-es';
import { gettext } from '@c8y/ngx-components';
import { ReportsService } from './reports.service';
var ScheduleModalComponent = /** @class */ (function () {
    function ScheduleModalComponent(reportsService, modalRef, cronService) {
        this.reportsService = reportsService;
        this.modalRef = modalRef;
        this.cronService = cronService;
        this.emitter = new EventEmitter();
        this.ActionType = ActionType;
        this.multiEmailPattern = /^([a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\.[a-z0-9-]+)*,?)*$/i;
        this.singleEmailPattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/;
        this.cronExpression = '* * * * *';
        this.validCron = false;
        this.emitterPayload = {
            success: false,
            message: '',
            schedule: { timestamp: undefined, emailConfig: undefined, cronConfig: undefined }
        };
        this.placeholdersInfo = gettext('Available placeholders: {tenant-domain}, {host}, {binaryId}. Whole link to downloadable file is: {tenant-domain}/inventory/binaries/{binaryId}.');
    }
    ScheduleModalComponent.prototype.ngOnInit = function () {
        this.oldSchedule = cloneDeep(this.schedule);
        this.populateEmailFieldsFromSchedule(this.schedule);
        this.cronExpression = this.cronService.generateCron(this.schedule.cronConfig);
        this.validCron = this.cronService.validateModels(this.cronService.getBase(this.schedule.cronConfig), this.schedule.cronConfig);
    };
    ScheduleModalComponent.prototype.populateEmailFieldsFromSchedule = function (schedule) {
        if (schedule.emailConfig.to && schedule.emailConfig.to.length) {
            this.emailTo = schedule.emailConfig.to.toString();
        }
        if (schedule.emailConfig.cc && schedule.emailConfig.cc.length) {
            this.emailCc = schedule.emailConfig.cc.toString();
        }
        if (schedule.emailConfig.bcc && schedule.emailConfig.bcc.length) {
            this.emailBcc = schedule.emailConfig.bcc.toString();
        }
        if (schedule.emailConfig.replyTo) {
            this.emailReplyTo = schedule.emailConfig.replyTo;
        }
        if (schedule.emailConfig.subject) {
            this.emailSubject = schedule.emailConfig.subject;
        }
        if (schedule.emailConfig.text) {
            this.emailText = schedule.emailConfig.text;
        }
    };
    ScheduleModalComponent.prototype.save = function () {
        this.populateScheduleFromCronExpression();
        this.populateScheduleFromEmailFields();
        if (this.actionType === ActionType.CREATE || this.actionType === ActionType.DUPLICATE) {
            var date = new Date();
            var timestamp = date.getTime();
            this.schedule.timestamp = timestamp;
        }
        this.emitterPayload.success = true;
        this.emitterPayload.schedule = this.schedule;
        this.modalRef.hide();
        // signal to the parent component to update list
        this.emitter.emit(this.emitterPayload);
    };
    ScheduleModalComponent.prototype.cancel = function () {
        this.modalRef.hide();
    };
    ScheduleModalComponent.prototype.getCron = function (cron) {
        this.validCron = cron.valid;
        if (cron.valid) {
            this.cronExpression = cron.cron;
        }
    };
    ScheduleModalComponent.prototype.populateScheduleFromCronExpression = function () {
        this.schedule.cronConfig = this.cronService.generateCronConfig(this.cronExpression);
    };
    ScheduleModalComponent.prototype.convertStringOfEmailsToArray = function (stringOfEmails) {
        var arr = [];
        if (stringOfEmails) {
            var parts = stringOfEmails.split(',');
            parts.forEach(function (item) {
                if (item) {
                    arr.push(item);
                }
            });
        }
        return arr;
    };
    ScheduleModalComponent.prototype.populateScheduleFromEmailFields = function () {
        this.schedule.emailConfig.to = this.emailTo
            ? this.convertStringOfEmailsToArray(this.emailTo)
            : null;
        this.schedule.emailConfig.cc = this.emailCc
            ? this.convertStringOfEmailsToArray(this.emailCc)
            : null;
        this.schedule.emailConfig.bcc = this.emailBcc
            ? this.convertStringOfEmailsToArray(this.emailBcc)
            : null;
        this.schedule.emailConfig.replyTo = this.emailReplyTo;
        this.schedule.emailConfig.subject = this.emailSubject;
        this.schedule.emailConfig.text = this.emailText;
    };
    ScheduleModalComponent.ctorParameters = function () { return [
        { type: ReportsService },
        { type: BsModalRef },
        { type: CronService }
    ]; };
    tslib_1.__decorate([
        Output()
    ], ScheduleModalComponent.prototype, "emitter", void 0);
    ScheduleModalComponent = tslib_1.__decorate([
        Component({
            selector: 'schedule-modal',
            template: "<div class=\"modal-header text-center bg-primary\">\n  <header class=\"text-white\">\n    <div style=\"font-size: 62px;\">\n      <span c8yIcon=\"c8y-report\"></span>\n    </div>\n    <h4 class=\"text-uppercase\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" translate>New export schedule</span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" translate>Edit export schedule</span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" translate>Duplicate export schedule</span>\n    </h4>\n  </header>\n</div>\n\n<div class=\"modal-body\">\n  <p class=\"lead text-center p-t-24 m-b-0\" translate>On schedule send export via email</p>\n</div>\n<div class=\"modal-inner-scroll smart-rule-control\">\n  <form #scheduleForm=\"ngForm\" class=\"edit-smart-rule-details\">\n    <div class=\"list-group\">\n      <div class=\"list-group-item bg-gray-white\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light m-r-8\">1</span>\n          <strong translate>Frequency</strong>\n        </div>\n        <div class=\"p-t-16\">\n          <div class=\"form-group\">\n            <cron [cronIn]=\"cronExpression\" (emitter)=\"getCron($event)\" name=\"cron\"></cron>\n          </div>\n        </div>\n      </div>\n      <div class=\"list-group-item\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light m-r-8\">2</span>\n          <div class=\"d-inline-block\">\n            <strong translate>Send email</strong>\n            <p class=\"help-block text-muted small p-absolute\">\n              <i class=\"text-info m-r-4 text-14\" c8yIcon=\"info-circle\"></i>\n              <span translate>Enter one or more valid email addresses, separated with a comma.</span>\n            </p>\n          </div>\n        </div>\n        <div class=\"p-t-24\">\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Send to</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"to\"\n                [(ngModel)]=\"emailTo\"\n                placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                required\n                [pattern]=\"multiEmailPattern\"\n              />\n              <c8y-messages>\n                <c8y-message\n                  name=\"pattern\"\n                  [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                ></c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>CC</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"cc\"\n                placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                [(ngModel)]=\"emailCc\"\n                [pattern]=\"multiEmailPattern\"\n              />\n              <c8y-messages>\n                <c8y-message\n                  name=\"pattern\"\n                  [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                ></c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>BCC</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"bcc\"\n                placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                [(ngModel)]=\"emailBcc\"\n                [pattern]=\"multiEmailPattern\"\n              />\n              <c8y-messages>\n                <c8y-message\n                  name=\"pattern\"\n                  [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                ></c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Reply to (single email address)</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"replyTo\"\n                placeholder=\"{{ 'e.g. joe.doe@example.com (single email address)`LOCALIZE`' | translate }}\"\n                [(ngModel)]=\"emailReplyTo\"\n                [pattern]=\"singleEmailPattern\"\n              />\n              <c8y-messages>\n                <c8y-message\n                  name=\"pattern\"\n                  [text]=\"reportsService.ERROR_MESSAGES.pattern_singleEmail\"\n                ></c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Subject</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"subject\"\n                [(ngModel)]=\"emailSubject\"\n                placeholder=\"{{ 'e.g. Daily report' | translate }}\"\n                required\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Message</label>\n            <c8y-form-group>\n              <textarea\n                class=\"form-control\"\n                name=\"text\"\n                [(ngModel)]=\"emailText\"\n                placeholder=\"{{ 'Message' | translate }}\"\n                rows=\"4\"\n                required\n              ></textarea>\n              <p class=\"help-block text-muted\">\n                {{ placeholdersInfo | translate }}\n              </p>\n            </c8y-form-group>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\" (click)=\"cancel()\" title=\"{{ 'Cancel' | translate }}\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [disabled]=\"!validCron || !scheduleForm.form.valid\"\n  >\n    <span>\n      <span *ngIf=\"actionType === ActionType.CREATE\" title=\"{{ 'Create' | translate }}\">\n        {{ 'Create' | translate }}\n      </span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" title=\"{{ 'Save' | translate }}\">\n        {{ 'Save' | translate }}\n      </span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" title=\"{{ 'Duplicate' | translate }}\">\n        {{ 'Duplicate' | translate }}\n      </span>\n    </span>\n  </button>\n</div>\n"
        })
    ], ScheduleModalComponent);
    return ScheduleModalComponent;
}());
export { ScheduleModalComponent };
//# sourceMappingURL=data:application/json;base64,