import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
var TrustedCertificatesNavigationFactory = /** @class */ (function () {
    function TrustedCertificatesNavigationFactory() {
        this.navs = [];
    }
    TrustedCertificatesNavigationFactory.prototype.get = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                if (this.navs.length === 0) {
                    this.navs.push(new NavigatorNode({
                        label: gettext('Trusted certificates'),
                        icon: 'certificate',
                        path: '/trusted-certificates',
                        parent: gettext('Management'),
                        priority: 100
                    }));
                }
                return [2 /*return*/, this.navs];
            });
        });
    };
    TrustedCertificatesNavigationFactory = tslib_1.__decorate([
        Injectable()
    ], TrustedCertificatesNavigationFactory);
    return TrustedCertificatesNavigationFactory;
}());
export { TrustedCertificatesNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMtbmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy90cnVzdGVkLWNlcnRpZmljYXRlcy8iLCJzb3VyY2VzIjpbInRydXN0ZWQtY2VydGlmaWNhdGVzLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUduRjtJQURBO1FBRUUsU0FBSSxHQUFvQixFQUFFLENBQUM7SUFnQjdCLENBQUM7SUFkTyxrREFBRyxHQUFUOzs7Z0JBQ0UsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7b0JBQzFCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUNaLElBQUksYUFBYSxDQUFDO3dCQUNoQixLQUFLLEVBQUUsT0FBTyxDQUFDLHNCQUFzQixDQUFDO3dCQUN0QyxJQUFJLEVBQUUsYUFBYTt3QkFDbkIsSUFBSSxFQUFFLHVCQUF1Qjt3QkFDN0IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7d0JBQzdCLFFBQVEsRUFBRSxHQUFHO3FCQUNkLENBQUMsQ0FDSCxDQUFDO2lCQUNIO2dCQUNELHNCQUFPLElBQUksQ0FBQyxJQUFJLEVBQUM7OztLQUNsQjtJQWhCVSxvQ0FBb0M7UUFEaEQsVUFBVSxFQUFFO09BQ0Esb0NBQW9DLENBaUJoRDtJQUFELDJDQUFDO0NBQUEsQUFqQkQsSUFpQkM7U0FqQlksb0NBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRydXN0ZWRDZXJ0aWZpY2F0ZXNOYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgbmF2czogTmF2aWdhdG9yTm9kZVtdID0gW107XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIGlmICh0aGlzLm5hdnMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdUcnVzdGVkIGNlcnRpZmljYXRlcycpLFxuICAgICAgICAgIGljb246ICdjZXJ0aWZpY2F0ZScsXG4gICAgICAgICAgcGF0aDogJy90cnVzdGVkLWNlcnRpZmljYXRlcycsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdNYW5hZ2VtZW50JyksXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19