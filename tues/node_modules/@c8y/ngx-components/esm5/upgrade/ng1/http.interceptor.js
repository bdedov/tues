function c8yNg1HttpInterceptor($q, c8yLoadingIndicator, c8yApiService) {
    'ngInject';
    function request(config) {
        var url = config.url, method = config.method;
        c8yApiService.onStart({ url: url, method: method, options: config });
        return config;
    }
    function requestError(rejection) {
        finishRequest(rejection);
        return $q.reject(rejection);
    }
    function response(res) {
        finishRequest(res);
        return res;
    }
    function responseError(rejection) {
        finishRequest(rejection);
        c8yLoadingIndicator.responseError(rejection);
        return $q.reject(rejection);
    }
    function finishRequest(res) {
        var _a = res.config, url = _a.url, method = _a.method;
        c8yApiService.onFinish({
            url: url,
            method: method,
            response: res,
            options: res.config
        });
    }
    return {
        request: request,
        requestError: requestError,
        response: response,
        responseError: responseError
    };
}
export { c8yNg1HttpInterceptor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvdXBncmFkZS8iLCJzb3VyY2VzIjpbIm5nMS9odHRwLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMscUJBQXFCLENBQzVCLEVBQUUsRUFDRixtQkFBbUIsRUFDbkIsYUFBYTtJQUViLFVBQVUsQ0FBQztJQUVYLFNBQVMsT0FBTyxDQUFDLE1BQU07UUFDYixJQUFBLGdCQUFHLEVBQUUsc0JBQU0sQ0FBWTtRQUMvQixhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxLQUFBLEVBQUUsTUFBTSxRQUFBLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDeEQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELFNBQVMsWUFBWSxDQUFDLFNBQVM7UUFDN0IsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsU0FBUyxRQUFRLENBQUMsR0FBRztRQUNuQixhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRUQsU0FBUyxhQUFhLENBQUMsU0FBUztRQUM5QixhQUFhLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDekIsbUJBQW1CLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzdDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsU0FBUyxhQUFhLENBQUMsR0FBRztRQUNsQixJQUFBLGVBQTRCLEVBQTFCLFlBQUcsRUFBRSxrQkFBcUIsQ0FBQztRQUNuQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQ3JCLEdBQUcsS0FBQTtZQUNILE1BQU0sUUFBQTtZQUNOLFFBQVEsRUFBRSxHQUFHO1lBQ2IsT0FBTyxFQUFFLEdBQUcsQ0FBQyxNQUFNO1NBQ3BCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxTQUFBO1FBQ1AsWUFBWSxjQUFBO1FBQ1osUUFBUSxVQUFBO1FBQ1IsYUFBYSxlQUFBO0tBQ2QsQ0FBQztBQUNKLENBQUM7QUFFRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGM4eU5nMUh0dHBJbnRlcmNlcHRvcihcclxuICAkcSxcclxuICBjOHlMb2FkaW5nSW5kaWNhdG9yLFxyXG4gIGM4eUFwaVNlcnZpY2VcclxuKSB7XHJcbiAgJ25nSW5qZWN0JztcclxuXHJcbiAgZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcclxuICAgIGNvbnN0IHsgdXJsLCBtZXRob2QgfSA9IGNvbmZpZztcclxuICAgIGM4eUFwaVNlcnZpY2Uub25TdGFydCh7IHVybCwgbWV0aG9kLCBvcHRpb25zOiBjb25maWcgfSk7XHJcbiAgICByZXR1cm4gY29uZmlnO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVxdWVzdEVycm9yKHJlamVjdGlvbikge1xyXG4gICAgZmluaXNoUmVxdWVzdChyZWplY3Rpb24pO1xyXG4gICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVzcG9uc2UocmVzKSB7XHJcbiAgICBmaW5pc2hSZXF1ZXN0KHJlcyk7XHJcbiAgICByZXR1cm4gcmVzO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVzcG9uc2VFcnJvcihyZWplY3Rpb24pIHtcclxuICAgIGZpbmlzaFJlcXVlc3QocmVqZWN0aW9uKTtcclxuICAgIGM4eUxvYWRpbmdJbmRpY2F0b3IucmVzcG9uc2VFcnJvcihyZWplY3Rpb24pO1xyXG4gICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZmluaXNoUmVxdWVzdChyZXMpIHtcclxuICAgIGNvbnN0IHsgdXJsLCBtZXRob2QgfSA9IHJlcy5jb25maWc7XHJcbiAgICBjOHlBcGlTZXJ2aWNlLm9uRmluaXNoKHtcclxuICAgICAgdXJsLFxyXG4gICAgICBtZXRob2QsXHJcbiAgICAgIHJlc3BvbnNlOiByZXMsXHJcbiAgICAgIG9wdGlvbnM6IHJlcy5jb25maWdcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHJlcXVlc3QsXHJcbiAgICByZXF1ZXN0RXJyb3IsXHJcbiAgICByZXNwb25zZSxcclxuICAgIHJlc3BvbnNlRXJyb3JcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgeyBjOHlOZzFIdHRwSW50ZXJjZXB0b3IgfTtcclxuIl19