import * as tslib_1 from "tslib";
import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
var PasteActionComponent = /** @class */ (function () {
    function PasteActionComponent(vcRef, dashboardBridgeService) {
        this.vcRef = vcRef;
        this.dashboardBridgeService = dashboardBridgeService;
        this.dashboardName = '';
    }
    PasteActionComponent.prototype.ngOnInit = function () {
        this.vcRef.createEmbeddedView(this.templatePaste);
        this.dashboardName = this.dashboardBridgeService.dashboardClipboard.c8y_Dashboard.name;
    };
    PasteActionComponent.prototype.pasteDashboard = function () {
        this.dashboardBridgeService.pasteDashboard();
    };
    PasteActionComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: DashboardBridgeService }
    ]; };
    tslib_1.__decorate([
        ViewChild('templatePaste', { read: TemplateRef, static: true })
    ], PasteActionComponent.prototype, "templatePaste", void 0);
    PasteActionComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-paste-action-legacy',
            template: "\n    <ng-template #templatePaste>\n      <li>\n        <button title=\"{{'Paste dashboard' | translate}}\" (click)=\"pasteDashboard()\">\n          <i class=\"fa fw fa-clipboard\"></i>&nbsp;<span translate>Paste dashboard</span>&nbsp;<span\n            >\"{{ dashboardName }}\"</span\n          >\n        </button>\n      </li>\n    </ng-template>\n  "
        })
    ], PasteActionComponent);
    return PasteActionComponent;
}());
export { PasteActionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzdGUtYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvdXBncmFkZS8iLCJzb3VyY2VzIjpbImRhc2hib2FyZC9wYXN0ZS1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBZ0JwRTtJQUlFLDhCQUNVLEtBQXVCLEVBQ3ZCLHNCQUE4QztRQUQ5QyxVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2QiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBSnhELGtCQUFhLEdBQUcsRUFBRSxDQUFDO0lBS2hCLENBQUM7SUFFSix1Q0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsa0JBQWtCLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztJQUN6RixDQUFDO0lBRUQsNkNBQWMsR0FBZDtRQUNFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMvQyxDQUFDOztnQkFYZ0IsZ0JBQWdCO2dCQUNDLHNCQUFzQjs7SUFMUztRQUFoRSxTQUFTLENBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7K0RBQWU7SUFEcEUsb0JBQW9CO1FBZGhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx5QkFBeUI7WUFDbkMsUUFBUSxFQUFFLG1XQVVUO1NBQ0YsQ0FBQztPQUNXLG9CQUFvQixDQWlCaEM7SUFBRCwyQkFBQztDQUFBLEFBakJELElBaUJDO1NBakJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXNoYm9hcmQtYnJpZGdlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktcGFzdGUtYWN0aW9uLWxlZ2FjeScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZVBhc3RlPlxuICAgICAgPGxpPlxuICAgICAgICA8YnV0dG9uIHRpdGxlPVwie3snUGFzdGUgZGFzaGJvYXJkJyB8IHRyYW5zbGF0ZX19XCIgKGNsaWNrKT1cInBhc3RlRGFzaGJvYXJkKClcIj5cbiAgICAgICAgICA8aSBjbGFzcz1cImZhIGZ3IGZhLWNsaXBib2FyZFwiPjwvaT4mbmJzcDs8c3BhbiB0cmFuc2xhdGU+UGFzdGUgZGFzaGJvYXJkPC9zcGFuPiZuYnNwOzxzcGFuXG4gICAgICAgICAgICA+XCJ7eyBkYXNoYm9hcmROYW1lIH19XCI8L3NwYW5cbiAgICAgICAgICA+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9saT5cbiAgICA8L25nLXRlbXBsYXRlPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFBhc3RlQWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgndGVtcGxhdGVQYXN0ZScsIHsgcmVhZDogVGVtcGxhdGVSZWYsIHN0YXRpYzogdHJ1ZSB9KSB0ZW1wbGF0ZVBhc3RlO1xuICBkYXNoYm9hcmROYW1lID0gJyc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB2Y1JlZjogVmlld0NvbnRhaW5lclJlZixcbiAgICBwcml2YXRlIGRhc2hib2FyZEJyaWRnZVNlcnZpY2U6IERhc2hib2FyZEJyaWRnZVNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMudmNSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVQYXN0ZSk7XG4gICAgdGhpcy5kYXNoYm9hcmROYW1lID0gdGhpcy5kYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlLmRhc2hib2FyZENsaXBib2FyZC5jOHlfRGFzaGJvYXJkLm5hbWU7XG4gIH1cblxuICBwYXN0ZURhc2hib2FyZCgpIHtcbiAgICB0aGlzLmRhc2hib2FyZEJyaWRnZVNlcnZpY2UucGFzdGVEYXNoYm9hcmQoKTtcbiAgfVxufVxuIl19