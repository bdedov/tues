import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { FetchClient, IFetchOptions, IFetchResponse } from '@c8y/client';
var ImpactConnectivityService = /** @class */ (function () {
    function ImpactConnectivityService(client) {
        this.client = client;
        this.microserviceUrl = '/service/impact/connectivity';
        this.header = { 'Content-Type': 'application/json' };
    }
    ImpactConnectivityService.prototype.getOptions = function () {
        var options = {
            method: 'GET',
            headers: this.header
        };
        return this.client.fetch("" + this.microserviceUrl, options);
    };
    ImpactConnectivityService.prototype.updateOptions = function (impactOptions) {
        var options = {
            method: 'POST',
            headers: this.header,
            body: JSON.stringify(impactOptions)
        };
        return this.client.fetch("" + this.microserviceUrl, options);
    };
    ImpactConnectivityService.prototype.deleteOptions = function () {
        var options = {
            method: 'DELETE',
            headers: this.header
        };
        return this.client.fetch("" + this.microserviceUrl, options);
    };
    ImpactConnectivityService.ctorParameters = function () { return [
        { type: FetchClient }
    ]; };
    ImpactConnectivityService = tslib_1.__decorate([
        Injectable()
    ], ImpactConnectivityService);
    return ImpactConnectivityService;
}());
export { ImpactConnectivityService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LWNvbm5lY3Rpdml0eS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9jb25uZWN0aXZpdHkvIiwic291cmNlcyI6WyJpbXBhY3QvaW1wYWN0LWNvbm5lY3Rpdml0eS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUl6RTtJQUlFLG1DQUFvQixNQUFtQjtRQUFuQixXQUFNLEdBQU4sTUFBTSxDQUFhO1FBSHRCLG9CQUFlLEdBQVcsOEJBQThCLENBQUM7UUFDekQsV0FBTSxHQUFRLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLENBQUM7SUFFNUIsQ0FBQztJQUUzQyw4Q0FBVSxHQUFWO1FBQ0UsSUFBTSxPQUFPLEdBQWtCO1lBQzdCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3JCLENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUcsSUFBSSxDQUFDLGVBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGlEQUFhLEdBQWIsVUFBYyxhQUE0QjtRQUN4QyxJQUFNLE9BQU8sR0FBa0I7WUFDN0IsTUFBTSxFQUFFLE1BQU07WUFDZCxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDcEIsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDO1NBQ3BDLENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUcsSUFBSSxDQUFDLGVBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGlEQUFhLEdBQWI7UUFDRSxJQUFNLE9BQU8sR0FBa0I7WUFDN0IsTUFBTSxFQUFFLFFBQVE7WUFDaEIsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3JCLENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUcsSUFBSSxDQUFDLGVBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQzs7Z0JBekIyQixXQUFXOztJQUo1Qix5QkFBeUI7UUFEckMsVUFBVSxFQUFFO09BQ0EseUJBQXlCLENBOEJyQztJQUFELGdDQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0E5QlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmV0Y2hDbGllbnQsIElGZXRjaE9wdGlvbnMsIElGZXRjaFJlc3BvbnNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgSW1wYWN0T3B0aW9ucyB9IGZyb20gJy4vaW1wYWN0Lm1vZGVsJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IG1pY3Jvc2VydmljZVVybDogc3RyaW5nID0gJy9zZXJ2aWNlL2ltcGFjdC9jb25uZWN0aXZpdHknO1xuICBwcml2YXRlIHJlYWRvbmx5IGhlYWRlcjogYW55ID0geyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH07XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjbGllbnQ6IEZldGNoQ2xpZW50KSB7fVxuXG4gIGdldE9wdGlvbnMoKTogUHJvbWlzZTxJRmV0Y2hSZXNwb25zZT4ge1xuICAgIGNvbnN0IG9wdGlvbnM6IElGZXRjaE9wdGlvbnMgPSB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5mZXRjaChgJHt0aGlzLm1pY3Jvc2VydmljZVVybH1gLCBvcHRpb25zKTtcbiAgfVxuXG4gIHVwZGF0ZU9wdGlvbnMoaW1wYWN0T3B0aW9uczogSW1wYWN0T3B0aW9ucyk6IFByb21pc2U8SUZldGNoUmVzcG9uc2U+IHtcbiAgICBjb25zdCBvcHRpb25zOiBJRmV0Y2hPcHRpb25zID0ge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGltcGFjdE9wdGlvbnMpXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZmV0Y2goYCR7dGhpcy5taWNyb3NlcnZpY2VVcmx9YCwgb3B0aW9ucyk7XG4gIH1cblxuICBkZWxldGVPcHRpb25zKCk6IFByb21pc2U8SUZldGNoUmVzcG9uc2U+IHtcbiAgICBjb25zdCBvcHRpb25zOiBJRmV0Y2hPcHRpb25zID0ge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZmV0Y2goYCR7dGhpcy5taWNyb3NlcnZpY2VVcmx9YCwgb3B0aW9ucyk7XG4gIH1cbn1cbiJdfQ==