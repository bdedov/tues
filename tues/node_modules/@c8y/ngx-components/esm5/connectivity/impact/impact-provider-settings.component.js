import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { TenantConnectionStatus } from './impact.model';
var ImpactProviderSettingsComponent = /** @class */ (function () {
    function ImpactProviderSettingsComponent(impactService, formBuilder, modal, alert) {
        this.impactService = impactService;
        this.formBuilder = formBuilder;
        this.modal = modal;
        this.alert = alert;
        this.isEdit = false;
        this.credentialsExist = false;
    }
    ImpactProviderSettingsComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.initForm();
                        return [4 /*yield*/, this.impactService.getOptions()];
                    case 1:
                        response = _b.sent();
                        _a = this;
                        return [4 /*yield*/, response.json()];
                    case 2:
                        _a.connectionStatus = _b.sent();
                        if (this.connectionStatus && this.connectionStatus.options) {
                            this.formGroup.patchValue(tslib_1.__assign({}, this.connectionStatus.options));
                            this.credentialsExist = true;
                        }
                        else {
                            this.isEdit = true;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    ImpactProviderSettingsComponent.prototype.replaceCredentials = function () {
        this.isEdit = true;
    };
    ImpactProviderSettingsComponent.prototype.saveCredentials = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var updated, response, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.formGroup.valid) return [3 /*break*/, 5];
                        this.connectionStatus.status = TenantConnectionStatus.CONNECTING_IN_PROGRESS;
                        return [4 /*yield*/, this.safelyUpdateCredentials(this.formGroup.value)];
                    case 1:
                        updated = _b.sent();
                        if (!updated) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.impactService.getOptions()];
                    case 2:
                        response = _b.sent();
                        _a = this;
                        return [4 /*yield*/, response.json()];
                    case 3:
                        _a.connectionStatus = _b.sent();
                        if (this.connectionStatus.status === TenantConnectionStatus.CONNECTED_SUCCESSFULLY) {
                            this.isEdit = false;
                        }
                        this.alert.success(gettext('Credentials saved.'));
                        return [3 /*break*/, 5];
                    case 4:
                        this.connectionStatus.status = TenantConnectionStatus.UNKNOWN;
                        _b.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    ImpactProviderSettingsComponent.prototype.deleteCredentials = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.modal.confirm(gettext('Delete credentials'), gettext('You are about to delete your IMPACT credentials. Deleting credentials will break connection to IMPACT instance. Do you want to proceed?'), Status.DANGER, { ok: gettext('Delete'), cancel: gettext('Cancel') })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.safelyDeleteCredentials()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ImpactProviderSettingsComponent.prototype.initForm = function () {
        this.formGroup = this.formBuilder.group({
            baseUrl: [],
            user: ['', Validators.required],
            password: ['', Validators.required],
            groupName: [],
            initializeDevices: [false]
        });
    };
    ImpactProviderSettingsComponent.prototype.resetForm = function () {
        this.formGroup.reset();
    };
    ImpactProviderSettingsComponent.prototype.safelyUpdateCredentials = function (options) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, data, _a, ex_2;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 7, , 8]);
                        return [4 /*yield*/, this.impactService.updateOptions(options)];
                    case 1:
                        res = _b.sent();
                        if (!(res && res.status !== 200)) return [3 /*break*/, 5];
                        if (!res.json) return [3 /*break*/, 3];
                        return [4 /*yield*/, res.json()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _a = undefined;
                        _b.label = 4;
                    case 4:
                        data = _a;
                        this.alert.addServerFailure({ data: data, res: res });
                        return [2 /*return*/, Promise.resolve(false)];
                    case 5: return [2 /*return*/, Promise.resolve(true)];
                    case 6: return [3 /*break*/, 8];
                    case 7:
                        ex_2 = _b.sent();
                        this.alert.addServerFailure(ex_2);
                        return [2 /*return*/, Promise.resolve(false)];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    ImpactProviderSettingsComponent.prototype.safelyDeleteCredentials = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, data, _a, ex_3;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 7, , 8]);
                        return [4 /*yield*/, this.impactService.deleteOptions()];
                    case 1:
                        res = _b.sent();
                        if (!(res && res.status !== 200)) return [3 /*break*/, 5];
                        if (!res.json) return [3 /*break*/, 3];
                        return [4 /*yield*/, res.json()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _a = undefined;
                        _b.label = 4;
                    case 4:
                        data = _a;
                        this.alert.addServerFailure({ data: data, res: res });
                        return [3 /*break*/, 6];
                    case 5:
                        this.credentialsExist = false;
                        this.resetForm();
                        this.connectionStatus = null;
                        this.alert.success(gettext('Credentials deleted.'));
                        _b.label = 6;
                    case 6: return [3 /*break*/, 8];
                    case 7:
                        ex_3 = _b.sent();
                        this.alert.addServerFailure(ex_3);
                        return [3 /*break*/, 8];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    ImpactProviderSettingsComponent.ctorParameters = function () { return [
        { type: ImpactConnectivityService },
        { type: FormBuilder },
        { type: ModalService },
        { type: AlertService }
    ]; };
    ImpactProviderSettingsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-impact-provider-settings',
            template: "<div class=\"row\">\n  <div class=\"col-xs-12 col-md-8\">\n    <form class=\"card card--fullpage\"\n      [formGroup]=\"formGroup\"\n      novalidate\n    >\n      <div class=\"card-header separator\">\n        <h4 class=\"card-title\" translate>Credentials</h4>\n      </div>\n      <div class=\"inner-scroll\">\n        <div class=\"card-block\" *ngIf=\"isEdit\">\n          <c8y-form-group>\n            <label for=\"baseUrl\" translate>\n              Base URL\n            </label>\n            <input\n              id=\"baseUrl\"\n              name=\"baseUrl\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. https://impact.example.com' | translate }}\"\n              autocomplete=\"off\"\n              formControlName=\"baseUrl\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"user\" translate>\n              User\n            </label>\n            <input\n              id=\"user\"\n              name=\"user\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"user\"\n            />\n            <c8y-messages>\n              <c8y-message *ngIf=\"formGroup?.controls?.user?.errors?.required\" translate>\n                This field is required.\n              </c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"password\" translate>\n              Password\n            </label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. my_password' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"password\"\n            />\n            <c8y-messages>\n              <c8y-message *ngIf=\"formGroup?.controls?.password?.errors?.required\" translate>\n                This field is required.\n              </c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"groupName\" translate>\n              IMPACT group name prefix\n            </label>\n            <input\n              id=\"groupName\"\n              name=\"groupName\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. Europe.Nokia`LOCALIZE`' | translate }}\"\n              formControlName=\"groupName\"\n            />\n          </c8y-form-group>\n        </div>\n        <div class=\"card-block bg-gray-white\">\n          <div class=\"d-flex\">\n            <c8y-status-display\n              [status]=\"connectionStatus?.status\"\n              [baseUrl]=\"connectionStatus?.options?.baseUrl\"\n            ></c8y-status-display>\n\n            <div class=\"d-flex flex-item-middle flex-item-right\">\n              <label class=\"c8y-switch\">\n                <input type=\"checkbox\" formControlName=\"initializeDevices\" />\n                <span></span> {{ 'Refresh devices' | translate }}\n              </label>\n              <a\n                container=\"body\"\n                class=\"btn-clean m-l-4 flex-item-middle\"\n                popover=\"{{ 'Refresh device resources as part of connecting' | translate }}\"\n                placement=\"right\"\n                outsideClick=\"false\"\n              >\n                <i c8yIcon=\"question-circle-o text-primary\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-block\" *ngIf=\"credentialsExist && !isEdit\">\n          <p forceHtmlTranslate>\n            Credentials already provided.<br />\n            Click \"Replace credentials\" below to overwrite them.\n          </p>\n        </div>\n      </div>\n      <div class=\"card-footer separator\">\n        <button class=\"btn btn-default\"\n          title=\"{{ 'Replace credentials' | translate }}\"\n          type=\"submit\"\n          *ngIf=\"!isEdit\"\n          (click)=\"replaceCredentials()\"\n        >\n          {{ 'Replace credentials' | translate }}\n        </button>\n        <button class=\"btn btn-danger\"\n          title=\"{{ 'Delete credentials' | translate }}\"\n          type=\"button\"\n          *ngIf=\"credentialsExist && isEdit\"\n          (click)=\"deleteCredentials()\"\n        >\n          {{ 'Delete credentials' | translate }}\n        </button>\n        <button class=\"btn btn-primary\"\n          title=\"{{ 'Save credentials & connect' | translate }}\"\n          type=\"button\"\n          *ngIf=\"isEdit\"\n          [disabled]=\"formGroup.invalid\"\n          (click)=\"saveCredentials()\"\n        >\n          {{ 'Save credentials & connect' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
        })
    ], ImpactProviderSettingsComponent);
    return ImpactProviderSettingsComponent;
}());
export { ImpactProviderSettingsComponent };
//# sourceMappingURL=data:application/json;base64,