import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ApplicationService } from '@c8y/client';
import { Permissions } from '@c8y/ngx-components';
var SmsGatewayGuard = /** @class */ (function () {
    function SmsGatewayGuard(permissions, applicationService) {
        this.permissions = permissions;
        this.applicationService = applicationService;
    }
    SmsGatewayGuard_1 = SmsGatewayGuard;
    SmsGatewayGuard.prototype.canActivate = function (route, state) {
        var _this = this;
        if (this.showSMSProvider === undefined) {
            var hasRole = Promise.resolve(this.permissions.hasRole('ROLE_SMS_READ'));
            this.showSMSProvider = hasRole.then(function (hasPermissions) {
                return hasPermissions &&
                    _this.applicationService
                        .isAvailable(SmsGatewayGuard_1.applicationName)
                        .then(function (result) { return result && result.data; });
            });
        }
        return this.showSMSProvider;
    };
    var SmsGatewayGuard_1;
    SmsGatewayGuard.applicationName = 'sms-gateway';
    SmsGatewayGuard.ctorParameters = function () { return [
        { type: Permissions },
        { type: ApplicationService }
    ]; };
    SmsGatewayGuard = SmsGatewayGuard_1 = tslib_1.__decorate([
        Injectable()
    ], SmsGatewayGuard);
    return SmsGatewayGuard;
}());
export { SmsGatewayGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkuZ3VhcmQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3Ntcy1nYXRld2F5LyIsInNvdXJjZXMiOlsic21zLWdhdGV3YXkuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUdsRDtJQUlFLHlCQUFvQixXQUF3QixFQUFVLGtCQUFzQztRQUF4RSxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUFVLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFBRyxDQUFDO3dCQUpyRixlQUFlO0lBTTFCLHFDQUFXLEdBQVgsVUFBWSxLQUE2QixFQUFFLEtBQTBCO1FBQXJFLGlCQWNDO1FBYkMsSUFBSSxJQUFJLENBQUMsZUFBZSxLQUFLLFNBQVMsRUFBRTtZQUN0QyxJQUFNLE9BQU8sR0FBcUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBRTdGLElBQUksQ0FBQyxlQUFlLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FDakMsVUFBQyxjQUF1QjtnQkFDdEIsT0FBQSxjQUFjO29CQUNkLEtBQUksQ0FBQyxrQkFBa0I7eUJBQ3BCLFdBQVcsQ0FBQyxpQkFBZSxDQUFDLGVBQWUsQ0FBQzt5QkFDNUMsSUFBSSxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQXJCLENBQXFCLENBQUM7WUFIeEMsQ0FHd0MsQ0FDM0MsQ0FBQztTQUNIO1FBRUQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7O0lBbkJ1QiwrQkFBZSxHQUFHLGFBQWEsQ0FBQzs7Z0JBR3ZCLFdBQVc7Z0JBQThCLGtCQUFrQjs7SUFKakYsZUFBZTtRQUQzQixVQUFVLEVBQUU7T0FDQSxlQUFlLENBcUIzQjtJQUFELHNCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIENhbkFjdGl2YXRlLCBSb3V0ZXJTdGF0ZVNuYXBzaG90IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTbXNHYXRld2F5R3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IGFwcGxpY2F0aW9uTmFtZSA9ICdzbXMtZ2F0ZXdheSc7XG4gIHByaXZhdGUgc2hvd1NNU1Byb3ZpZGVyOiBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25zLCBwcml2YXRlIGFwcGxpY2F0aW9uU2VydmljZTogQXBwbGljYXRpb25TZXJ2aWNlKSB7fVxuXG4gIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLnNob3dTTVNQcm92aWRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBoYXNSb2xlOiBQcm9taXNlPGJvb2xlYW4+ID0gUHJvbWlzZS5yZXNvbHZlKHRoaXMucGVybWlzc2lvbnMuaGFzUm9sZSgnUk9MRV9TTVNfUkVBRCcpKTtcblxuICAgICAgdGhpcy5zaG93U01TUHJvdmlkZXIgPSBoYXNSb2xlLnRoZW4oXG4gICAgICAgIChoYXNQZXJtaXNzaW9uczogYm9vbGVhbikgPT5cbiAgICAgICAgICBoYXNQZXJtaXNzaW9ucyAmJlxuICAgICAgICAgIHRoaXMuYXBwbGljYXRpb25TZXJ2aWNlXG4gICAgICAgICAgICAuaXNBdmFpbGFibGUoU21zR2F0ZXdheUd1YXJkLmFwcGxpY2F0aW9uTmFtZSlcbiAgICAgICAgICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQgJiYgcmVzdWx0LmRhdGEpXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnNob3dTTVNQcm92aWRlcjtcbiAgfVxufVxuIl19