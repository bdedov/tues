import * as tslib_1 from "tslib";
import { Component, EventEmitter, Output } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
var DatePickerComponent = /** @class */ (function () {
    function DatePickerComponent() {
        this.onDateSelected = new EventEmitter();
    }
    DatePickerComponent.prototype.ngOnInit = function () {
        this.fgDatePicker = new FormGroup({
            dateFrom: new FormControl(),
            dateTo: new FormControl()
        });
    };
    DatePickerComponent.prototype.filter = function () {
        this.onDateSelected.emit(this.fgDatePicker.value);
    };
    DatePickerComponent.prototype.clearFilter = function () {
        this.fgDatePicker.setValue({
            dateFrom: null,
            dateTo: null
        });
        this.onDateSelected.emit(null);
    };
    tslib_1.__decorate([
        Output()
    ], DatePickerComponent.prototype, "onDateSelected", void 0);
    DatePickerComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-date-picker',
            template: "<form [formGroup]=\"fgDatePicker\">\n  <c8y-form-group class=\"datepicker\">\n    <input\n      formControlName=\"dateFrom\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Date from' | translate }}\"\n      bsDatepicker\n      [bsConfig]=\"{ customTodayClass: 'today' }\"\n    />\n  </c8y-form-group>\n  <c8y-form-group class=\"datepicker\">\n    <input\n      formControlName=\"dateTo\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Date to' | translate }}\"\n      bsDatepicker\n      [bsConfig]=\"{ customTodayClass: 'today' }\"\n    />\n  </c8y-form-group>\n  <button\n    *ngIf=\"fgDatePicker.get('dateFrom').value || fgDatePicker.get('dateTo').value\"\n    title=\"{{ 'Apply selection' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-link\"\n    (click)=\"filter()\"\n  >\n    <i c8y-icon=\"filter\"></i>\n    {{ 'Apply`selection`' | translate }}\n  </button>\n  <button\n    *ngIf=\"fgDatePicker.get('dateFrom').value || fgDatePicker.get('dateTo').value\"\n    title=\"{{ 'Clear selection' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-link\"\n    (click)=\"clearFilter()\"\n  >\n    <i c8y-icon=\"times\"></i>\n    {{ 'Clear`selection`' | translate }}\n  </button>\n</form>\n"
        })
    ], DatePickerComponent);
    return DatePickerComponent;
}());
export { DatePickerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU94RDtJQUpBO1FBS1ksbUJBQWMsR0FBOEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQXNCM0UsQ0FBQztJQWxCQyxzQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLFNBQVMsQ0FBQztZQUNoQyxRQUFRLEVBQUUsSUFBSSxXQUFXLEVBQUU7WUFDM0IsTUFBTSxFQUFFLElBQUksV0FBVyxFQUFFO1NBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxvQ0FBTSxHQUFOO1FBQ0UsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQseUNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQ3pCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsTUFBTSxFQUFFLElBQUk7U0FDYixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBckJTO1FBQVQsTUFBTSxFQUFFOytEQUFnRTtJQUQ5RCxtQkFBbUI7UUFKL0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixvdENBQTJDO1NBQzVDLENBQUM7T0FDVyxtQkFBbUIsQ0F1Qi9CO0lBQUQsMEJBQUM7Q0FBQSxBQXZCRCxJQXVCQztTQXZCWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBQaWNrZWREYXRlcyB9IGZyb20gJy4vZGF0ZS1waWNrZXIubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGF0ZS1waWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0ZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgb25EYXRlU2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxQaWNrZWREYXRlcz4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZmdEYXRlUGlja2VyOiBGb3JtR3JvdXA7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5mZ0RhdGVQaWNrZXIgPSBuZXcgRm9ybUdyb3VwKHtcbiAgICAgIGRhdGVGcm9tOiBuZXcgRm9ybUNvbnRyb2woKSxcbiAgICAgIGRhdGVUbzogbmV3IEZvcm1Db250cm9sKClcbiAgICB9KTtcbiAgfVxuXG4gIGZpbHRlcigpIHtcbiAgICB0aGlzLm9uRGF0ZVNlbGVjdGVkLmVtaXQodGhpcy5mZ0RhdGVQaWNrZXIudmFsdWUpO1xuICB9XG5cbiAgY2xlYXJGaWx0ZXIoKSB7XG4gICAgdGhpcy5mZ0RhdGVQaWNrZXIuc2V0VmFsdWUoe1xuICAgICAgZGF0ZUZyb206IG51bGwsXG4gICAgICBkYXRlVG86IG51bGxcbiAgICB9KTtcbiAgICB0aGlzLm9uRGF0ZVNlbGVjdGVkLmVtaXQobnVsbCk7XG4gIH1cbn1cbiJdfQ==