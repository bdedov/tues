import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ApplicationService, TenantService, IApplication } from '@c8y/client';
/** The helper UI service for tenant related methods built upon client services. */
var TenantUiService = /** @class */ (function () {
    function TenantUiService(tenantService, applicationService) {
        this.tenantService = tenantService;
        this.applicationService = applicationService;
    }
    /**
     * Checks whether current tenant is the management tenant.
     * @returns True if current tenant is the management tenant.
     */
    TenantUiService.prototype.isManagementTenant = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var currentTenant;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.tenantService.current()];
                    case 1:
                        currentTenant = (_a.sent()).data;
                        return [2 /*return*/, currentTenant.name === 'management'];
                }
            });
        });
    };
    /**
     * Checks whether current tenant is an enterprise tenant.
     * An enterprise tenant is a tenant which has subscribed:
     * - `branding` microservice or `feature-branding` feature app,
     * - `sslmanagement` microservice,
     * - `feature-user-hierarchy` feature app,
     * - `feature-broker` feature app.
     *
     * See https://cumulocity.com/guides/users-guide/enterprise-edition/ for details about such tenants.
     *
     * @returns True, if current tenant is an enterprise tenant.
     */
    TenantUiService.prototype.isEnterpriseTenant = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var hasBranding, _a, hasSslManagement, hasUserHierarchy, hasDataBroker;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.hasApp({ name: 'branding' })];
                    case 1:
                        _a = (_b.sent());
                        if (_a) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.hasApp({ name: 'feature-branding' })];
                    case 2:
                        _a = (_b.sent());
                        _b.label = 3;
                    case 3:
                        hasBranding = _a;
                        return [4 /*yield*/, this.hasApp({ name: 'sslmanagement' })];
                    case 4:
                        hasSslManagement = _b.sent();
                        return [4 /*yield*/, this.hasApp({ name: 'feature-user-hierarchy' })];
                    case 5:
                        hasUserHierarchy = _b.sent();
                        return [4 /*yield*/, this.hasApp({ name: 'feature-broker' })];
                    case 6:
                        hasDataBroker = _b.sent();
                        return [2 /*return*/, hasBranding && hasSslManagement && hasUserHierarchy && hasDataBroker];
                }
            });
        });
    };
    TenantUiService.prototype.hasApp = function (app) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.applicationService.isAvailable(app)];
                    case 1: return [2 /*return*/, (_a.sent()).data];
                }
            });
        });
    };
    TenantUiService.ctorParameters = function () { return [
        { type: TenantService },
        { type: ApplicationService }
    ]; };
    TenantUiService = tslib_1.__decorate([
        Injectable()
    ], TenantUiService);
    return TenantUiService;
}());
export { TenantUiService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuYW50LXVpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9jb21tb24vdGVuYW50LXVpLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFOUUsbUZBQW1GO0FBRW5GO0lBQ0UseUJBQ1UsYUFBNEIsRUFDNUIsa0JBQXNDO1FBRHRDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFDN0MsQ0FBQztJQUVKOzs7T0FHRztJQUNHLDRDQUFrQixHQUF4Qjs7Ozs7NEJBQ3lCLHFCQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLEVBQUE7O3dCQUFuRCxhQUFhLEdBQUcsQ0FBQyxTQUFrQyxDQUFDLENBQUMsSUFBSTt3QkFDL0Qsc0JBQU8sYUFBYSxDQUFDLElBQUksS0FBSyxZQUFZLEVBQUM7Ozs7S0FDNUM7SUFFRDs7Ozs7Ozs7Ozs7T0FXRztJQUNHLDRDQUFrQixHQUF4Qjs7Ozs7NEJBRUsscUJBQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFBOzt3QkFBeEMsS0FBQSxDQUFDLFNBQXVDLENBQUMsQ0FBQTtnQ0FBekMsd0JBQXlDO3dCQUN4QyxxQkFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLENBQUMsRUFBQTs7d0JBQWhELEtBQUEsQ0FBQyxTQUErQyxDQUFDLENBQUE7Ozt3QkFGN0MsV0FBVyxLQUVrQzt3QkFDMUIscUJBQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQyxFQUFBOzt3QkFBL0QsZ0JBQWdCLEdBQUcsU0FBNEM7d0JBQzVDLHFCQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQyxFQUFBOzt3QkFBeEUsZ0JBQWdCLEdBQUcsU0FBcUQ7d0JBQ3hELHFCQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFBOzt3QkFBN0QsYUFBYSxHQUFHLFNBQTZDO3dCQUVuRSxzQkFBTyxXQUFXLElBQUksZ0JBQWdCLElBQUksZ0JBQWdCLElBQUksYUFBYSxFQUFDOzs7O0tBQzdFO0lBRWEsZ0NBQU0sR0FBcEIsVUFBcUIsR0FBMEI7Ozs7NEJBQ3JDLHFCQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUE7NEJBQXRELHNCQUFPLENBQUMsU0FBOEMsQ0FBQyxDQUFDLElBQUksRUFBQzs7OztLQUM5RDs7Z0JBdEN3QixhQUFhO2dCQUNSLGtCQUFrQjs7SUFIckMsZUFBZTtRQUQzQixVQUFVLEVBQUU7T0FDQSxlQUFlLENBeUMzQjtJQUFELHNCQUFDO0NBQUEsQUF6Q0QsSUF5Q0M7U0F6Q1ksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSwgVGVuYW50U2VydmljZSwgSUFwcGxpY2F0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuXG4vKiogVGhlIGhlbHBlciBVSSBzZXJ2aWNlIGZvciB0ZW5hbnQgcmVsYXRlZCBtZXRob2RzIGJ1aWx0IHVwb24gY2xpZW50IHNlcnZpY2VzLiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRlbmFudFVpU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGVuYW50U2VydmljZTogVGVuYW50U2VydmljZSxcbiAgICBwcml2YXRlIGFwcGxpY2F0aW9uU2VydmljZTogQXBwbGljYXRpb25TZXJ2aWNlXG4gICkge31cblxuICAvKipcbiAgICogQ2hlY2tzIHdoZXRoZXIgY3VycmVudCB0ZW5hbnQgaXMgdGhlIG1hbmFnZW1lbnQgdGVuYW50LlxuICAgKiBAcmV0dXJucyBUcnVlIGlmIGN1cnJlbnQgdGVuYW50IGlzIHRoZSBtYW5hZ2VtZW50IHRlbmFudC5cbiAgICovXG4gIGFzeW5jIGlzTWFuYWdlbWVudFRlbmFudCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBjb25zdCBjdXJyZW50VGVuYW50ID0gKGF3YWl0IHRoaXMudGVuYW50U2VydmljZS5jdXJyZW50KCkpLmRhdGE7XG4gICAgcmV0dXJuIGN1cnJlbnRUZW5hbnQubmFtZSA9PT0gJ21hbmFnZW1lbnQnO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyB3aGV0aGVyIGN1cnJlbnQgdGVuYW50IGlzIGFuIGVudGVycHJpc2UgdGVuYW50LlxuICAgKiBBbiBlbnRlcnByaXNlIHRlbmFudCBpcyBhIHRlbmFudCB3aGljaCBoYXMgc3Vic2NyaWJlZDpcbiAgICogLSBgYnJhbmRpbmdgIG1pY3Jvc2VydmljZSBvciBgZmVhdHVyZS1icmFuZGluZ2AgZmVhdHVyZSBhcHAsXG4gICAqIC0gYHNzbG1hbmFnZW1lbnRgIG1pY3Jvc2VydmljZSxcbiAgICogLSBgZmVhdHVyZS11c2VyLWhpZXJhcmNoeWAgZmVhdHVyZSBhcHAsXG4gICAqIC0gYGZlYXR1cmUtYnJva2VyYCBmZWF0dXJlIGFwcC5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vY3VtdWxvY2l0eS5jb20vZ3VpZGVzL3VzZXJzLWd1aWRlL2VudGVycHJpc2UtZWRpdGlvbi8gZm9yIGRldGFpbHMgYWJvdXQgc3VjaCB0ZW5hbnRzLlxuICAgKlxuICAgKiBAcmV0dXJucyBUcnVlLCBpZiBjdXJyZW50IHRlbmFudCBpcyBhbiBlbnRlcnByaXNlIHRlbmFudC5cbiAgICovXG4gIGFzeW5jIGlzRW50ZXJwcmlzZVRlbmFudCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBjb25zdCBoYXNCcmFuZGluZyA9XG4gICAgICAoYXdhaXQgdGhpcy5oYXNBcHAoeyBuYW1lOiAnYnJhbmRpbmcnIH0pKSB8fFxuICAgICAgKGF3YWl0IHRoaXMuaGFzQXBwKHsgbmFtZTogJ2ZlYXR1cmUtYnJhbmRpbmcnIH0pKTtcbiAgICBjb25zdCBoYXNTc2xNYW5hZ2VtZW50ID0gYXdhaXQgdGhpcy5oYXNBcHAoeyBuYW1lOiAnc3NsbWFuYWdlbWVudCcgfSk7XG4gICAgY29uc3QgaGFzVXNlckhpZXJhcmNoeSA9IGF3YWl0IHRoaXMuaGFzQXBwKHsgbmFtZTogJ2ZlYXR1cmUtdXNlci1oaWVyYXJjaHknIH0pO1xuICAgIGNvbnN0IGhhc0RhdGFCcm9rZXIgPSBhd2FpdCB0aGlzLmhhc0FwcCh7IG5hbWU6ICdmZWF0dXJlLWJyb2tlcicgfSk7XG5cbiAgICByZXR1cm4gaGFzQnJhbmRpbmcgJiYgaGFzU3NsTWFuYWdlbWVudCAmJiBoYXNVc2VySGllcmFyY2h5ICYmIGhhc0RhdGFCcm9rZXI7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGhhc0FwcChhcHA6IFBhcnRpYWw8SUFwcGxpY2F0aW9uPik6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybiAoYXdhaXQgdGhpcy5hcHBsaWNhdGlvblNlcnZpY2UuaXNBdmFpbGFibGUoYXBwKSkuZGF0YTtcbiAgfVxufVxuIl19