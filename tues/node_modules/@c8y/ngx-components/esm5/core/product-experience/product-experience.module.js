import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { combineLatest } from 'rxjs';
import { filter } from 'rxjs/operators';
import { CookieBannerService } from '../bootstrap/cookie-banner/cookie-banner.service';
import { AppStateService } from '../common/ui-state.service';
import { GainsightService } from './gainsight.service';
import { ProductExperienceDirective } from './product-experience.directive';
/**
 * This module enables an tenant to activate the product experience
 * software [Gainsight](https://www.gainsight.com/product-experience/) to help
 * and track user actions. Gainsight is only activated, if the tenant custom
 * property `gainsightEnabled` is set to true.
 */
var ProductExperienceModule = /** @class */ (function () {
    function ProductExperienceModule(appState, gainsightService, cookieBannerService) {
        var _this = this;
        this.appState = appState;
        this.gainsightService = gainsightService;
        this.cookieBannerService = cookieBannerService;
        combineLatest([
            this.appState.currentTenant.pipe(filter(Boolean)),
            this.cookieBannerService.isCookieBannerShowed$
        ]).subscribe(function (_a) {
            var _b = tslib_1.__read(_a, 2), currentTenant = _b[0], isCookieBannerShowed = _b[1];
            if (isCookieBannerShowed) {
                return;
            }
            var customProperties = currentTenant.customProperties, name = currentTenant.name;
            if (_this.gainsightService.shouldLoadGainsightTag(customProperties)) {
                _this.gainsightService.loadTag(name);
            }
        });
    }
    ProductExperienceModule.ctorParameters = function () { return [
        { type: AppStateService },
        { type: GainsightService },
        { type: CookieBannerService }
    ]; };
    ProductExperienceModule = tslib_1.__decorate([
        NgModule({
            declarations: [ProductExperienceDirective],
            exports: [ProductExperienceDirective],
            providers: [GainsightService]
        })
    ], ProductExperienceModule);
    return ProductExperienceModule;
}());
export { ProductExperienceModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1leHBlcmllbmNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL3Byb2R1Y3QtZXhwZXJpZW5jZS9wcm9kdWN0LWV4cGVyaWVuY2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDckMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM1RTs7Ozs7R0FLRztBQU1IO0lBQ0UsaUNBQ1UsUUFBeUIsRUFDekIsZ0JBQWtDLEVBQ2xDLG1CQUF3QztRQUhsRCxpQkFrQkM7UUFqQlMsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBRWhELGFBQWEsQ0FBQztZQUNaLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQWlCLE9BQU8sQ0FBQyxDQUFDO1lBQ2pFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxxQkFBcUI7U0FDL0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFDLEVBQXFDO2dCQUFyQywwQkFBcUMsRUFBcEMscUJBQWEsRUFBRSw0QkFBb0I7WUFDaEQsSUFBSSxvQkFBb0IsRUFBRTtnQkFDeEIsT0FBTzthQUNSO1lBQ08sSUFBQSxpREFBZ0IsRUFBRSx5QkFBSSxDQUFtQjtZQUVqRCxJQUFJLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxzQkFBc0IsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO2dCQUNsRSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3JDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOztnQkFqQm1CLGVBQWU7Z0JBQ1AsZ0JBQWdCO2dCQUNiLG1CQUFtQjs7SUFKdkMsdUJBQXVCO1FBTG5DLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLDBCQUEwQixDQUFDO1lBQzFDLE9BQU8sRUFBRSxDQUFDLDBCQUEwQixDQUFDO1lBQ3JDLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO1NBQzlCLENBQUM7T0FDVyx1QkFBdUIsQ0FvQm5DO0lBQUQsOEJBQUM7Q0FBQSxBQXBCRCxJQW9CQztTQXBCWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUN1cnJlbnRUZW5hbnQgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBjb21iaW5lTGF0ZXN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDb29raWVCYW5uZXJTZXJ2aWNlIH0gZnJvbSAnLi4vYm9vdHN0cmFwL2Nvb2tpZS1iYW5uZXIvY29va2llLWJhbm5lci5zZXJ2aWNlJztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi91aS1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IEdhaW5zaWdodFNlcnZpY2UgfSBmcm9tICcuL2dhaW5zaWdodC5zZXJ2aWNlJztcbmltcG9ydCB7IFByb2R1Y3RFeHBlcmllbmNlRGlyZWN0aXZlIH0gZnJvbSAnLi9wcm9kdWN0LWV4cGVyaWVuY2UuZGlyZWN0aXZlJztcbi8qKlxuICogVGhpcyBtb2R1bGUgZW5hYmxlcyBhbiB0ZW5hbnQgdG8gYWN0aXZhdGUgdGhlIHByb2R1Y3QgZXhwZXJpZW5jZVxuICogc29mdHdhcmUgW0dhaW5zaWdodF0oaHR0cHM6Ly93d3cuZ2FpbnNpZ2h0LmNvbS9wcm9kdWN0LWV4cGVyaWVuY2UvKSB0byBoZWxwXG4gKiBhbmQgdHJhY2sgdXNlciBhY3Rpb25zLiBHYWluc2lnaHQgaXMgb25seSBhY3RpdmF0ZWQsIGlmIHRoZSB0ZW5hbnQgY3VzdG9tXG4gKiBwcm9wZXJ0eSBgZ2FpbnNpZ2h0RW5hYmxlZGAgaXMgc2V0IHRvIHRydWUuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1Byb2R1Y3RFeHBlcmllbmNlRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW1Byb2R1Y3RFeHBlcmllbmNlRGlyZWN0aXZlXSxcbiAgcHJvdmlkZXJzOiBbR2FpbnNpZ2h0U2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgUHJvZHVjdEV4cGVyaWVuY2VNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFwcFN0YXRlOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBnYWluc2lnaHRTZXJ2aWNlOiBHYWluc2lnaHRTZXJ2aWNlLFxuICAgIHByaXZhdGUgY29va2llQmFubmVyU2VydmljZTogQ29va2llQmFubmVyU2VydmljZVxuICApIHtcbiAgICBjb21iaW5lTGF0ZXN0KFtcbiAgICAgIHRoaXMuYXBwU3RhdGUuY3VycmVudFRlbmFudC5waXBlKGZpbHRlcjxJQ3VycmVudFRlbmFudD4oQm9vbGVhbikpLFxuICAgICAgdGhpcy5jb29raWVCYW5uZXJTZXJ2aWNlLmlzQ29va2llQmFubmVyU2hvd2VkJFxuICAgIF0pLnN1YnNjcmliZSgoW2N1cnJlbnRUZW5hbnQsIGlzQ29va2llQmFubmVyU2hvd2VkXSkgPT4ge1xuICAgICAgaWYgKGlzQ29va2llQmFubmVyU2hvd2VkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHsgY3VzdG9tUHJvcGVydGllcywgbmFtZSB9ID0gY3VycmVudFRlbmFudDtcblxuICAgICAgaWYgKHRoaXMuZ2FpbnNpZ2h0U2VydmljZS5zaG91bGRMb2FkR2FpbnNpZ2h0VGFnKGN1c3RvbVByb3BlcnRpZXMpKSB7XG4gICAgICAgIHRoaXMuZ2FpbnNpZ2h0U2VydmljZS5sb2FkVGFnKG5hbWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=