import * as tslib_1 from "tslib";
// tslint:disable-next-line:max-line-length
import { Component, ComponentFactoryResolver, Input, QueryList, ViewChild, ViewChildren, ViewContainerRef, Output, EventEmitter, OnDestroy, HostListener } from '@angular/core';
import { RouterLinkActive } from '@angular/router';
import { NavigatorIconComponent } from './navigator-icon.component';
import { NavigatorService } from './navigator.service';
import { PopoverConfirmComponent } from '../modal/popover-confirm.component';
var NavigatorNodeComponent = /** @class */ (function () {
    function NavigatorNodeComponent(componentFactoryResolver, navigator) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.navigator = navigator;
        this.nodeClick = new EventEmitter();
    }
    NavigatorNodeComponent_1 = NavigatorNodeComponent;
    NavigatorNodeComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.childrenNodes.forEach(function (n) { return n.parentNode = _this; });
        this.viewInitTimeout = setTimeout(function () {
            _this.updateIcon();
            _this.openOnFirstUrl();
            _this.expandParentIfActive();
            _this.node.confirm = _this.confirm;
        });
    };
    NavigatorNodeComponent.prototype.openOnFirstUrl = function () {
        if (this.navigator.openOnFirstUrl(this.node) && !this.node.open) {
            this.expandCollapse(true);
        }
    };
    Object.defineProperty(NavigatorNodeComponent.prototype, "expandTitle", {
        get: function () {
            return !this.node.open ? 'Expand' : 'Collapse';
        },
        enumerable: true,
        configurable: true
    });
    NavigatorNodeComponent.prototype.click = function (from, $event) {
        var _a;
        if (from === void 0) { from = 'link'; }
        var open;
        if (from === 'expander') {
            if ($event) {
                $event.stopPropagation();
                $event.preventDefault();
            }
            open = !this.node.open;
        }
        else {
            open = this.routerLinkActive && this.routerLinkActive.isActive ? true : !this.node.open;
        }
        if (open !== this.node.open) {
            this.expandCollapse(open, false, (_a = {}, _a[from] = true, _a.$event = $event, _a));
        }
        this.nodeClick.emit(from);
    };
    NavigatorNodeComponent.prototype.expandCollapse = function (open, recursive, forNode) {
        if (forNode === void 0) { forNode = {}; }
        this.node.open = open;
        // Also close children
        if (recursive) {
            this.childrenNodes.forEach(function (n) { return n.expandCollapse(open, recursive); });
        }
        forNode.open = open;
        this.node.click(forNode);
    };
    NavigatorNodeComponent.prototype.ngOnDestroy = function () {
        clearTimeout(this.viewInitTimeout);
        this.node.destroy();
    };
    NavigatorNodeComponent.prototype.expandParentIfActive = function () {
        if (this.routerLinkActive && this.routerLinkActive.isActive && this.parentNode) {
            this.parentNode.expandCollapse(true);
        }
    };
    NavigatorNodeComponent.prototype.updateIcon = function () {
        if (this.node.iconTemplate) {
            this.updateIconTemplate();
        }
        else {
            this.updateIconComponent();
        }
    };
    NavigatorNodeComponent.prototype.updateIconComponent = function () {
        var componentType = NavigatorIconComponent;
        if (this.node && this.node.iconComponent) {
            componentType = this.node.iconComponent;
        }
        this.iconSlot.clear();
        var iconComponentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);
        var componentRef = this.iconSlot.createComponent(iconComponentFactory);
        componentRef.instance.node = this.node;
    };
    NavigatorNodeComponent.prototype.updateIconTemplate = function () {
        this.iconSlot.clear();
        this.iconSlot.createEmbeddedView(this.node.iconTemplate);
    };
    var NavigatorNodeComponent_1;
    NavigatorNodeComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: NavigatorService }
    ]; };
    tslib_1.__decorate([
        ViewChild('icon', { read: ViewContainerRef, static: false })
    ], NavigatorNodeComponent.prototype, "iconSlot", void 0);
    tslib_1.__decorate([
        Input()
    ], NavigatorNodeComponent.prototype, "node", void 0);
    tslib_1.__decorate([
        Input()
    ], NavigatorNodeComponent.prototype, "isRoot", void 0);
    tslib_1.__decorate([
        ViewChild(RouterLinkActive, { static: false })
    ], NavigatorNodeComponent.prototype, "routerLinkActive", void 0);
    tslib_1.__decorate([
        ViewChildren(NavigatorNodeComponent_1)
    ], NavigatorNodeComponent.prototype, "childrenNodes", void 0);
    tslib_1.__decorate([
        Output()
    ], NavigatorNodeComponent.prototype, "nodeClick", void 0);
    tslib_1.__decorate([
        ViewChild(PopoverConfirmComponent, { static: false })
    ], NavigatorNodeComponent.prototype, "confirm", void 0);
    NavigatorNodeComponent = NavigatorNodeComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'c8y-navigator-node-display',
            template: "<div\n  class=\"slot\"\n  [hidden]=\"node.hidden\"\n  (dragstart)=\"node.dragStart($event)\"\n  (dragend)=\"node.dragEnd($event)\"\n  (drop)=\"node.drop($event)\"\n  [draggable]=\"node.draggable\"\n  [ngClass]=\"{ dragged: node.dragged }\"\n>\n  <ng-container>\n    <a\n      class=\"link\"\n      draggable=\"false\"\n      (dragover)=\"node.canDrop && $event.preventDefault()\"\n      (dragenter)=\"node.canDrop && node.dragEnter($event)\"\n      (dragleave)=\"node.canDrop && node.dragLeave($event)\"\n      title=\"{{node.label | translate}}\"\n      [attr.id]=\"isRoot ? node.id : undefined\"\n      [routerLink]=\"node.canNavigate ? node.path : undefined\"\n      [routerLinkActive]=\"node.canNavigate ? 'active' : ''\"\n      [routerLinkActiveOptions]=\"{exact:node.routerLinkExact}\"\n      (click)=\"click(node.canNavigate ? 'link' : 'expander', $event)\"\n      [ngClass]=\"{'root-link':isRoot, open: node.open, parent: node.hasChildren, 'dragged-hover': node.draggedHover && !node.dragged}\"\n    >\n      <ng-container *ngTemplateOutlet=\"inner\"></ng-container>\n    </a>\n  </ng-container>\n\n  <div\n    class=\"children panel-expand expand\"\n    *ngIf=\"node.children.length\"\n    [collapse]=\"!node.open\"\n    [isAnimated]=\"true\"\n  >\n    <c8y-navigator-node-display\n      *ngFor=\"let childNode of node.children\"\n      [node]=\"childNode\"\n      (nodeClick)=\"nodeClick.emit($event)\"\n    >\n    </c8y-navigator-node-display>\n  </div>\n</div>\n\n<ng-template #inner>\n  <!-- loader -->\n  <i\n    class=\"fa-spin loadingIndicator\"\n    [c8yIcon]=\"'circle-o-notch'\"\n    *ngIf=\"node.loading && !isRoot\"\n  >\n  </i>\n\n  <!-- icon -->\n  <div (click)=\"click('icon', $event)\">\n    <ng-container #icon></ng-container>\n  </div>\n\n  <!--title  -->\n  <span>{{node.label | translate}}</span>\n\n  <i\n    class=\"expander\"\n    [c8yIcon]=\"'chevron-down'\"\n    *ngIf=\"node.hasChildren\"\n    (click)=\"click('expander', $event)\"\n    title=\"{{expandTitle}}\"\n  >\n  </i>\n\n  <c8y-popover-confirm\n    outsideClick=\"true\"\n    containerClass=\"navigator-popover\"\n  ></c8y-popover-confirm>\n</ng-template>\n"
        })
    ], NavigatorNodeComponent);
    return NavigatorNodeComponent;
}());
export { NavigatorNodeComponent };
//# sourceMappingURL=data:application/json;base64,