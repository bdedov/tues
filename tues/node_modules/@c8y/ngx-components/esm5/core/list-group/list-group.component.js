import * as tslib_1 from "tslib";
import { Component, HostBinding, ContentChild } from '@angular/core';
import { ListItemTimelineComponent } from './list-item-timeline.component';
/**
 * List groups are flexible and powerful components for displaying
 * both simple lists of elements and complex ones with custom content.
 *
 * @example
 * ```html
 * <c8y-list-group>
 *   <c8y-li>
 *     Plain <strong>Text</strong>
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-icon [icon]="'rocket'"></c8y-li-icon>
 *     Icon
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-radio></c8y-li-radio>
 *     Radio
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-checkbox></c8y-li-checkbox>
 *     Checkbox
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-footer>
 *       Footer
 *     </c8y-li-footer>
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-action icon="rocket">
 *       Launch
 *     </c8y-li-action>
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-collapse>
 *       Collapsed content
 *     </c8y-li-collapse>
 *   </c8y-li>
 * </c8y-list-group>
 * ```
 */
var ListGroupComponent = /** @class */ (function () {
    function ListGroupComponent() {
        /**
         * @ignore
         */
        this.timeline = false;
    }
    /**
     * @ignore
     */
    ListGroupComponent.prototype.ngAfterContentChecked = function () {
        this.timeline = !!this.timelineComponent;
    };
    tslib_1.__decorate([
        HostBinding('class.c8y-list--timeline')
    ], ListGroupComponent.prototype, "timeline", void 0);
    tslib_1.__decorate([
        ContentChild(ListItemTimelineComponent, { static: false })
    ], ListGroupComponent.prototype, "timelineComponent", void 0);
    ListGroupComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-list-group',
            template: "<ng-content></ng-content>\n\n",
            host: {
                class: 'c8y-list__group'
            }
        })
    ], ListGroupComponent);
    return ListGroupComponent;
}());
export { ListGroupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9saXN0LWdyb3VwL2xpc3QtZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFM0U7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTBDRztBQVFIO0lBUEE7UUFRRTs7V0FFRztRQUVILGFBQVEsR0FBWSxLQUFLLENBQUM7SUEyQjVCLENBQUM7SUFOQzs7T0FFRztJQUNILGtEQUFxQixHQUFyQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUMzQyxDQUFDO0lBMUJEO1FBREMsV0FBVyxDQUFDLDBCQUEwQixDQUFDO3dEQUNkO0lBbUIxQjtRQURDLFlBQVksQ0FBQyx5QkFBeUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztpRUFDZDtJQXhCbEMsa0JBQWtCO1FBUDlCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIseUNBQTBDO1lBQzFDLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsaUJBQWlCO2FBQ3pCO1NBQ0YsQ0FBQztPQUNXLGtCQUFrQixDQWdDOUI7SUFBRCx5QkFBQztDQUFBLEFBaENELElBZ0NDO1NBaENZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIENvbnRlbnRDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTGlzdEl0ZW1UaW1lbGluZUNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1pdGVtLXRpbWVsaW5lLmNvbXBvbmVudCc7XG5cbi8qKlxuICogTGlzdCBncm91cHMgYXJlIGZsZXhpYmxlIGFuZCBwb3dlcmZ1bCBjb21wb25lbnRzIGZvciBkaXNwbGF5aW5nXG4gKiBib3RoIHNpbXBsZSBsaXN0cyBvZiBlbGVtZW50cyBhbmQgY29tcGxleCBvbmVzIHdpdGggY3VzdG9tIGNvbnRlbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxjOHktbGlzdC1ncm91cD5cbiAqICAgPGM4eS1saT5cbiAqICAgICBQbGFpbiA8c3Ryb25nPlRleHQ8L3N0cm9uZz5cbiAqICAgPC9jOHktbGk+XG4gKiAgIDxjOHktbGk+XG4gKiAgICAgPGM4eS1saS1pY29uIFtpY29uXT1cIidyb2NrZXQnXCI+PC9jOHktbGktaWNvbj5cbiAqICAgICBJY29uXG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIDxjOHktbGktcmFkaW8+PC9jOHktbGktcmFkaW8+XG4gKiAgICAgUmFkaW9cbiAqICAgPC9jOHktbGk+XG4gKiAgIDxjOHktbGk+XG4gKiAgICAgPGM4eS1saS1jaGVja2JveD48L2M4eS1saS1jaGVja2JveD5cbiAqICAgICBDaGVja2JveFxuICogICA8L2M4eS1saT5cbiAqICAgPGM4eS1saT5cbiAqICAgICBDb250ZW50XG4gKiAgICAgPGM4eS1saS1mb290ZXI+XG4gKiAgICAgICBGb290ZXJcbiAqICAgICA8L2M4eS1saS1mb290ZXI+XG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIENvbnRlbnRcbiAqICAgICA8Yzh5LWxpLWFjdGlvbiBpY29uPVwicm9ja2V0XCI+XG4gKiAgICAgICBMYXVuY2hcbiAqICAgICA8L2M4eS1saS1hY3Rpb24+XG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIENvbnRlbnRcbiAqICAgICA8Yzh5LWxpLWNvbGxhcHNlPlxuICogICAgICAgQ29sbGFwc2VkIGNvbnRlbnRcbiAqICAgICA8L2M4eS1saS1jb2xsYXBzZT5cbiAqICAgPC9jOHktbGk+XG4gKiA8L2M4eS1saXN0LWdyb3VwPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1saXN0LWdyb3VwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpc3QtZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdjOHktbGlzdF9fZ3JvdXAnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlzdEdyb3VwQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYzh5LWxpc3QtLXRpbWVsaW5lJylcbiAgdGltZWxpbmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogRGlzcGxheXMgdGhlIGN1cnJlbnQgbGlzdCBhcyBhIHRpbWVsaW5lLiBCZXN0IHVzZWRcbiAgICogd2l0aCBjb250ZW50IHByb2plY3Rpb24uXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGh0bWxcbiAgICogPGM4eS1saXN0LWdyb3VwPlxuICAgKiAgIDxjOHktbGktdGltZWxpbmU+XG4gICAqICAgICAyNC5BcHJpbCAyMDIwXG4gICAqICAgICA8Yzh5LWxpPlxuICAgKiAgICAgICBIZWxsb1xuICAgKiAgICAgPC9jOHktbGk+XG4gICAqICAgPC9jOHktbGktdGltZWxpbmU+XG4gICAqIDwvYzh5LWxpc3QtZ3JvdXA+XG4gICAqIGBgYFxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChMaXN0SXRlbVRpbWVsaW5lQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgdGltZWxpbmVDb21wb25lbnQ6IExpc3RJdGVtVGltZWxpbmVDb21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkIHtcbiAgICB0aGlzLnRpbWVsaW5lID0gISF0aGlzLnRpbWVsaW5lQ29tcG9uZW50O1xuICB9XG59XG4iXX0=