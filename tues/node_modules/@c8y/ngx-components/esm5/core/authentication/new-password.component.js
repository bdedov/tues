import * as tslib_1 from "tslib";
import { Component, EventEmitter, Output } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import { LoginService } from '../login/login.service';
var NewPasswordComponent = /** @class */ (function () {
    function NewPasswordComponent(loginService) {
        this.loginService = loginService;
        this.password = new EventEmitter();
        this.model = {};
        this.changePassword = false;
        this.passwordEnforced = false;
    }
    NewPasswordComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadPasswordStrengthSettings();
        this.loginService.getGreenMinLength().then(function (value) {
            _this.minlength = value;
        });
    };
    NewPasswordComponent.prototype.newPasswordChanged = function () {
        this.password.emit({
            password: this.model.newPassword,
            passwordStrength: this.model.strength
        });
    };
    NewPasswordComponent.prototype.loadPasswordStrengthSettings = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.loginService.getPasswordStrengthEnforced({ refresh: true })];
                    case 1:
                        _a.passwordEnforced = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NewPasswordComponent.prototype.showPasswordStrength = function () {
        return this.model.newPassword && this.model.newPassword.length >= this.minlength;
    };
    NewPasswordComponent.prototype.toggleChangePassword = function () {
        this.changePassword = !this.changePassword;
        if (!this.changePassword) {
            this.password.emit({});
            this.model = {};
        }
    };
    NewPasswordComponent.ctorParameters = function () { return [
        { type: LoginService }
    ]; };
    tslib_1.__decorate([
        Output()
    ], NewPasswordComponent.prototype, "password", void 0);
    NewPasswordComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-new-password',
            template: "<div class=\"form-group\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"toggleChangePassword()\">\n    <ng-container *ngIf=\"!changePassword\">\n      {{ 'Change password' | translate }}\n    </ng-container>\n    <ng-container *ngIf=\"changePassword\">\n      {{ 'Cancel password change' | translate }}\n    </ng-container>\n  </button>\n</div>\n\n<div *ngIf=\"changePassword\" class=\"row content-flex-50\">\n  <div class=\"col-7\">\n    <c8y-form-group>\n      <label for=\"newPassword\" translate>Password</label>\n      <input\n        id=\"newPassword\"\n        name=\"newPassword\"\n        type=\"password\"\n        #newPassword=\"ngModel\"\n        class=\"form-control\"\n        [(ngModel)]=\"model.newPassword\"\n        (change)=\"newPasswordChanged()\"\n        (input)=\"newPasswordConfirm.control.updateValueAndValidity()\"\n        required\n        c8yDefaultValidation=\"password\"\n        autocomplete=\"new-password\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label for=\"newConfirmPassword\" translate>Confirm password</label>\n      <input\n        id=\"newConfirmPassword\"\n        name=\"newPasswordConfirm\"\n        type=\"password\"\n        #newPasswordConfirm=\"ngModel\"\n        class=\"form-control\"\n        [(ngModel)]=\"model.newPasswordConfirm\"\n        required\n        passwordConfirm=\"newPassword\"\n        autocomplete=\"new-password\"\n      />\n    </c8y-form-group>\n  </div>\n  <div class=\"col-5\">\n    <c8y-password-strength\n      [password]=\"model.newPassword\"\n      (strength)=\"model.strength = $event\"\n    ></c8y-password-strength>\n\n    <c8y-password-check-list\n      class=\"m-t-32\"\n      [password]=\"model.newPassword\"\n      [hidden]=\"!passwordEnforced\"\n    ></c8y-password-check-list>\n  </div>\n</div>\n",
            viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]
        })
    ], NewPasswordComponent);
    return NewPasswordComponent;
}());
export { NewPasswordComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2F1dGhlbnRpY2F0aW9uL25ldy1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBT3REO0lBT0UsOEJBQ1UsWUFBMEI7UUFBMUIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFQMUIsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFvQixDQUFDO1FBQzFELFVBQUssR0FBUSxFQUFFLENBQUM7UUFDaEIsbUJBQWMsR0FBWSxLQUFLLENBQUM7UUFDaEMscUJBQWdCLEdBQVksS0FBSyxDQUFDO0lBTWxDLENBQUM7SUFFRCx1Q0FBUSxHQUFSO1FBQUEsaUJBS0M7UUFKQyxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztRQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLGlCQUFpQixFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUEsS0FBSztZQUM5QyxLQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN6QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxpREFBa0IsR0FBbEI7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztZQUNqQixRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXO1lBQ2hDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUTtTQUN0QyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUssMkRBQTRCLEdBQWxDOzs7Ozs7d0JBQ0UsS0FBQSxJQUFJLENBQUE7d0JBQW9CLHFCQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBQTs7d0JBQTlGLEdBQUssZ0JBQWdCLEdBQUcsU0FBc0UsQ0FBQzs7Ozs7S0FDaEc7SUFFRCxtREFBb0IsR0FBcEI7UUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ25GLENBQUM7SUFFRCxtREFBb0IsR0FBcEI7UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztTQUNqQjtJQUNILENBQUM7O2dCQWhDdUIsWUFBWTs7SUFQMUI7UUFBVCxNQUFNLEVBQUU7MERBQWlEO0lBRC9DLG9CQUFvQjtRQUxoQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLDZ5REFBNEM7WUFDNUMsYUFBYSxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDO1NBQ3BFLENBQUM7T0FDVyxvQkFBb0IsQ0F5Q2hDO0lBQUQsMkJBQUM7Q0FBQSxBQXpDRCxJQXlDQztTQXpDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5ld1Bhc3N3b3JkIH0gZnJvbSAnLi9wYXNzd29yZC5tb2RlbCc7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuLi9sb2dpbi9sb2dpbi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LW5ldy1wYXNzd29yZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9uZXctcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIE5ld1Bhc3N3b3JkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQE91dHB1dCgpIHBhc3N3b3JkID0gbmV3IEV2ZW50RW1pdHRlcjxOZXdQYXNzd29yZCB8IHt9PigpO1xuICBtb2RlbDogYW55ID0ge307XG4gIGNoYW5nZVBhc3N3b3JkOiBib29sZWFuID0gZmFsc2U7XG4gIHBhc3N3b3JkRW5mb3JjZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgbWlubGVuZ3RoOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZVxuICApIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubG9hZFBhc3N3b3JkU3RyZW5ndGhTZXR0aW5ncygpO1xuICAgIHRoaXMubG9naW5TZXJ2aWNlLmdldEdyZWVuTWluTGVuZ3RoKCkudGhlbih2YWx1ZSA9PiB7XG4gICAgICB0aGlzLm1pbmxlbmd0aCA9IHZhbHVlO1xuICAgIH0pO1xuICB9XG5cbiAgbmV3UGFzc3dvcmRDaGFuZ2VkKCkge1xuICAgIHRoaXMucGFzc3dvcmQuZW1pdCh7XG4gICAgICBwYXNzd29yZDogdGhpcy5tb2RlbC5uZXdQYXNzd29yZCxcbiAgICAgIHBhc3N3b3JkU3RyZW5ndGg6IHRoaXMubW9kZWwuc3RyZW5ndGhcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRQYXNzd29yZFN0cmVuZ3RoU2V0dGluZ3MoKSB7XG4gICAgdGhpcy5wYXNzd29yZEVuZm9yY2VkID0gYXdhaXQgdGhpcy5sb2dpblNlcnZpY2UuZ2V0UGFzc3dvcmRTdHJlbmd0aEVuZm9yY2VkKHsgcmVmcmVzaDogdHJ1ZSB9KTtcbiAgfVxuXG4gIHNob3dQYXNzd29yZFN0cmVuZ3RoKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLm5ld1Bhc3N3b3JkICYmIHRoaXMubW9kZWwubmV3UGFzc3dvcmQubGVuZ3RoID49IHRoaXMubWlubGVuZ3RoO1xuICB9XG5cbiAgdG9nZ2xlQ2hhbmdlUGFzc3dvcmQoKSB7XG4gICAgdGhpcy5jaGFuZ2VQYXNzd29yZCA9ICF0aGlzLmNoYW5nZVBhc3N3b3JkO1xuICAgIGlmICghdGhpcy5jaGFuZ2VQYXNzd29yZCkge1xuICAgICAgdGhpcy5wYXNzd29yZC5lbWl0KHt9KTtcbiAgICAgIHRoaXMubW9kZWwgPSB7fTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==