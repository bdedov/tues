import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ITotp, UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { gettext } from '../i18n';
var TotpSetupComponent = /** @class */ (function () {
    function TotpSetupComponent(user, alert) {
        this.user = user;
        this.alert = alert;
    }
    Object.defineProperty(TotpSetupComponent.prototype, "qrCodeImage", {
        get: function () {
            return this.totpSecret ? this.totpSecret.secretQrUrl : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TotpSetupComponent.prototype, "secret", {
        get: function () {
            return this.totpSecret ? this.totpSecret.rawSecret : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TotpSetupComponent.prototype, "qrData", {
        get: function () {
            // TODO: waiting for BE:, now we need extract it from secretQrUrl
            // https://cumulocity.atlassian.net/browse/MTM-36387
            // return this.totpSecret ? this.totpSecret.qrData : '';
            var otpAuth = this.qrCodeImage.split('chl=')[1];
            if (!otpAuth) {
                this.alert.danger(gettext('Failed to generate a QR code.'));
                return '';
            }
            return decodeURIComponent(otpAuth);
        },
        enumerable: true,
        configurable: true
    });
    TotpSetupComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.user.generateTotpSecret()];
                    case 1:
                        data = (_a.sent()).data;
                        this.totpSecret = data;
                        return [3 /*break*/, 3];
                    case 2:
                        ex_1 = _a.sent();
                        this.alert.addServerFailure(ex_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    TotpSetupComponent.ctorParameters = function () { return [
        { type: UserService },
        { type: AlertService }
    ]; };
    TotpSetupComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-totp-setup',
            template: "<div class=\"text-center\">\n  <p\n    class=\"lead bottom-m-md\"\n    translate\n  >\n    Scan this QR code with your smartphone using the Google Authenticator app.\n  </p>\n\n\n  <qrcode\n    *ngIf=\"totpSecret\"\n    [width]=\"300\"\n    [qrdata]=\"qrData\"\n    [cssClass]=\"'bottom-m-md'\"\n    [errorCorrectionLevel]=\"'M'\"\n  ></qrcode>\n  <p class=\"text-center text-muted\">\n    {{secret}}\n  </p>\n</div>\n"
        })
    ], TotpSetupComponent);
    return TotpSetupComponent;
}());
export { TotpSetupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90cC1zZXR1cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9hdXRoZW50aWNhdGlvbi90b3RwLXNldHVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFNBQVMsQ0FBQztBQU1sQztJQXVCRSw0QkFBb0IsSUFBaUIsRUFBVSxLQUFtQjtRQUE5QyxTQUFJLEdBQUosSUFBSSxDQUFhO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBYztJQUFHLENBQUM7SUFwQnRFLHNCQUFJLDJDQUFXO2FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDNUQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxzQ0FBTTthQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzFELENBQUM7OztPQUFBO0lBRUQsc0JBQUksc0NBQU07YUFBVjtZQUNFLGlFQUFpRTtZQUNqRSxvREFBb0Q7WUFDcEQsd0RBQXdEO1lBQ3hELElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xELElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLCtCQUErQixDQUFDLENBQUMsQ0FBQztnQkFDNUQsT0FBTyxFQUFFLENBQUM7YUFDWDtZQUNELE9BQU8sa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFJSyxxQ0FBUSxHQUFkOzs7Ozs7O3dCQUVxQixxQkFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLEVBQUE7O3dCQUE3QyxJQUFJLEdBQUssQ0FBQSxTQUFvQyxDQUFBLEtBQXpDO3dCQUNaLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDOzs7O3dCQUV2QixJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLElBQUUsQ0FBQyxDQUFDOzs7Ozs7S0FFbkM7O2dCQVR5QixXQUFXO2dCQUFpQixZQUFZOztJQXZCdkQsa0JBQWtCO1FBSjlCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsOGFBQTBDO1NBQzNDLENBQUM7T0FDVyxrQkFBa0IsQ0FpQzlCO0lBQUQseUJBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQWpDWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSVRvdHAsIFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS10b3RwLXNldHVwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvdHAtc2V0dXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRvdHBTZXR1cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHRvdHBTZWNyZXQ6IElUb3RwO1xuXG4gIGdldCBxckNvZGVJbWFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy50b3RwU2VjcmV0ID8gdGhpcy50b3RwU2VjcmV0LnNlY3JldFFyVXJsIDogJyc7XG4gIH1cblxuICBnZXQgc2VjcmV0KCkge1xuICAgIHJldHVybiB0aGlzLnRvdHBTZWNyZXQgPyB0aGlzLnRvdHBTZWNyZXQucmF3U2VjcmV0IDogJyc7XG4gIH1cblxuICBnZXQgcXJEYXRhKCkge1xuICAgIC8vIFRPRE86IHdhaXRpbmcgZm9yIEJFOiwgbm93IHdlIG5lZWQgZXh0cmFjdCBpdCBmcm9tIHNlY3JldFFyVXJsXG4gICAgLy8gaHR0cHM6Ly9jdW11bG9jaXR5LmF0bGFzc2lhbi5uZXQvYnJvd3NlL01UTS0zNjM4N1xuICAgIC8vIHJldHVybiB0aGlzLnRvdHBTZWNyZXQgPyB0aGlzLnRvdHBTZWNyZXQucXJEYXRhIDogJyc7XG4gICAgY29uc3Qgb3RwQXV0aCA9IHRoaXMucXJDb2RlSW1hZ2Uuc3BsaXQoJ2NobD0nKVsxXTtcbiAgICBpZiAoIW90cEF1dGgpIHtcbiAgICAgIHRoaXMuYWxlcnQuZGFuZ2VyKGdldHRleHQoJ0ZhaWxlZCB0byBnZW5lcmF0ZSBhIFFSIGNvZGUuJykpO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KG90cEF1dGgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB1c2VyOiBVc2VyU2VydmljZSwgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMudXNlci5nZW5lcmF0ZVRvdHBTZWNyZXQoKTtcbiAgICAgIHRoaXMudG90cFNlY3JldCA9IGRhdGE7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRoaXMuYWxlcnQuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfVxuICB9XG59XG4iXX0=