import * as tslib_1 from "tslib";
import { Component, Output, Input, EventEmitter } from '@angular/core';
import { LoginService } from './login.service';
import { PasswordService } from '../authentication/password.service';
import { IResetPassword, ICredentials, UserService } from '@c8y/client';
import { OptionsService } from '../common/options.service';
import { AlertService } from '../alert/alert.service';
import { LoginViews } from './login.model';
var ChangePasswordComponent = /** @class */ (function () {
    function ChangePasswordComponent(loginService, users, passwordStrengthCheckerService, options, alert) {
        this.loginService = loginService;
        this.users = users;
        this.passwordStrengthCheckerService = passwordStrengthCheckerService;
        this.options = options;
        this.alert = alert;
        this.onChangeView = new EventEmitter();
        this.passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]{8,32}$/;
        this.isLoading = false;
        this.model = {
            tenantId: '',
            email: '',
            newPassword: '',
            newPasswordConfirm: ''
        };
        this.emailReadOnly = false;
        this.passwordStrengthEnforced = false;
        this.TOKEN_PARAM = 'token';
        this.EMAIL_PARAM = 'email';
    }
    ChangePasswordComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.model.tenantId = this.loginService.getTenant();
                        this.model.email = this.options.get(this.EMAIL_PARAM, '');
                        this.emailReadOnly = !!this.model.email;
                        _a = this;
                        return [4 /*yield*/, this.loginService.getPasswordStrengthEnforced()];
                    case 1:
                        _a.passwordStrengthEnforced = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ChangePasswordComponent.prototype.changePassword = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var passwordStrengthColor, resetPassword, res, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        passwordStrengthColor = this.passwordStrengthCheckerService.getStrengthColor(this.model.newPassword);
                        resetPassword = {
                            token: this.credentials.token,
                            email: this.model.email,
                            newPassword: this.model.newPassword,
                            passwordStrength: passwordStrengthColor.passwordStrength
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, 4, 5]);
                        this.isLoading = true;
                        return [4 /*yield*/, this.users.resetPassword(resetPassword, this.model.tenantId)];
                    case 2:
                        res = (_a.sent()).res;
                        if (res.status === 200) {
                            this.loginService.addSuccessMessage('password_changed');
                            this.credentials.token = undefined;
                            this.options.set(this.TOKEN_PARAM, undefined);
                            this.onChangeView.emit({ view: LoginViews.Credentials });
                        }
                        return [3 /*break*/, 5];
                    case 3:
                        e_1 = _a.sent();
                        this.alert.addServerFailure(e_1);
                        return [3 /*break*/, 5];
                    case 4:
                        this.loginService.reset();
                        this.isLoading = false;
                        return [7 /*endfinally*/];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    ChangePasswordComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: UserService },
        { type: PasswordService },
        { type: OptionsService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], ChangePasswordComponent.prototype, "credentials", void 0);
    tslib_1.__decorate([
        Output()
    ], ChangePasswordComponent.prototype, "onChangeView", void 0);
    ChangePasswordComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-change-password',
            template: "<form\n  role=\"form\"\n  class=\"loginForm\"\n  (ngSubmit)=\"changePassword()\"\n  #changePasswordForm=\"ngForm\"\n  novalidate\n>\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenantId\"\n      #tenantId=\"ngModel\"\n      type=\"text\"\n      name=\"tenantId\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Tenant ID' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Email address</label>\n    <input\n      [(ngModel)]=\"model.email\"\n      #email=\"ngModel\"\n      type=\"text\"\n      name=\"email\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Email address' | translate }}\"\n      email\n      required\n      [readonly]=\"emailReadOnly\"\n    />\n  </c8y-form-group>\n\n  <div class=\"row content-flex-50\">\n    <div class=\"col-7\">\n      <c8y-form-group>\n        <label translate>New password</label>\n        <input\n          [(ngModel)]=\"model.newPassword\"\n          #newPassword=\"ngModel\"\n          type=\"password\"\n          name=\"newPassword\"\n          class=\"form-control\"\n          placeholder=\"{{ 'New password' | translate }}\"\n          [pattern]=\"passwordPattern\"\n          autocomplete=\"new-password\"\n          [passwordStrengthEnforced]='passwordStrengthEnforced'\n          required\n        />\n        <c8y-messages>\n          <c8y-message\n            name=\"pattern\"\n            [text]=\"loginService.ERROR_MESSAGES.pattern_newPassword\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label translate>Confirm password</label>\n        <input\n          [(ngModel)]=\"model.newPasswordConfirm\"\n          #newPasswordConfirm=\"ngModel\"\n          type=\"password\"\n          name=\"newPasswordConfirm\"\n          class=\"form-control\"\n          placeholder=\"{{ 'Confirm password' | translate }}\"\n          passwordConfirm=\"newPassword\"\n          autocomplete=\"new-password\"\n          required\n        />\n        <c8y-messages>\n          <c8y-message\n            name=\"passwordConfirm\"\n            [text]=\"loginService.ERROR_MESSAGES.passwordConfirm\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n    <div class=\"col-5\">\n      <c8y-password-strength\n        [password]=\"model.newPassword\"\n        [hidden]=\"!model.newPassword\"\n      ></c8y-password-strength>\n      <c8y-password-check-list\n        class=\"m-t-32\"\n        [password]=\"model.newPassword\"\n        [hidden]=\"!model.newPassword || !passwordStrengthEnforced\"\n      ></c8y-password-check-list>\n    </div>\n  </div>\n\n  <button\n    title=\"{{ 'Set password' | translate }}\"\n    [disabled]=\"!changePasswordForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Set password\n  </button>\n</form>\n"
        })
    ], ChangePasswordComponent);
    return ChangePasswordComponent;
}());
export { ChangePasswordComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2xvZ2luL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTzNDO0lBa0JFLGlDQUNTLFlBQTBCLEVBQ3pCLEtBQWtCLEVBQ2xCLDhCQUErQyxFQUMvQyxPQUF1QixFQUN2QixLQUFtQjtRQUpwQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUN6QixVQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ2xCLG1DQUE4QixHQUE5Qiw4QkFBOEIsQ0FBaUI7UUFDL0MsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFDdkIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQXJCbkIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTVDLG9CQUFlLEdBQUcsd0RBQXdELENBQUM7UUFDM0UsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixVQUFLLEdBQUc7WUFDTixRQUFRLEVBQUUsRUFBRTtZQUNaLEtBQUssRUFBRSxFQUFFO1lBQ1QsV0FBVyxFQUFFLEVBQUU7WUFDZixrQkFBa0IsRUFBRSxFQUFFO1NBQ3ZCLENBQUM7UUFDRixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0Qiw2QkFBd0IsR0FBRyxLQUFLLENBQUM7UUFFekIsZ0JBQVcsR0FBRyxPQUFPLENBQUM7UUFDdEIsZ0JBQVcsR0FBRyxPQUFPLENBQUM7SUFRMUIsQ0FBQztJQUVDLDBDQUFRLEdBQWQ7Ozs7Ozt3QkFDRSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDO3dCQUNwRCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUMxRCxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQzt3QkFDeEMsS0FBQSxJQUFJLENBQUE7d0JBQTRCLHFCQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsMkJBQTJCLEVBQUUsRUFBQTs7d0JBQXJGLEdBQUssd0JBQXdCLEdBQUcsU0FBcUQsQ0FBQzs7Ozs7S0FDdkY7SUFFSyxnREFBYyxHQUFwQjs7Ozs7O3dCQUNRLHFCQUFxQixHQUFRLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxnQkFBZ0IsQ0FDckYsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQ3ZCLENBQUM7d0JBQ0ksYUFBYSxHQUFtQjs0QkFDcEMsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSzs0QkFDN0IsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSzs0QkFDdkIsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVzs0QkFDbkMsZ0JBQWdCLEVBQUUscUJBQXFCLENBQUMsZ0JBQWdCO3lCQUN6RCxDQUFDOzs7O3dCQUVBLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO3dCQUNOLHFCQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFBOzt3QkFBMUUsR0FBRyxHQUFLLENBQUEsU0FBa0UsQ0FBQSxJQUF2RTt3QkFDWCxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFOzRCQUN0QixJQUFJLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixDQUFDLENBQUM7NEJBQ3hELElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQzs0QkFDbkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQzs0QkFDOUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7eUJBQzFEOzs7O3dCQUVELElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsR0FBQyxDQUFDLENBQUM7Ozt3QkFFL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQzt3QkFDMUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Ozs7OztLQUUxQjs7Z0JBdkNzQixZQUFZO2dCQUNsQixXQUFXO2dCQUNjLGVBQWU7Z0JBQ3RDLGNBQWM7Z0JBQ2hCLFlBQVk7O0lBdEJwQjtRQUFSLEtBQUssRUFBRTtnRUFBMkI7SUFDekI7UUFBVCxNQUFNLEVBQUU7aUVBQW1DO0lBRmpDLHVCQUF1QjtRQUxuQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUscUJBQXFCO1lBQy9CLG1uR0FBK0M7U0FFaEQsQ0FBQztPQUNXLHVCQUF1QixDQTJEbkM7SUFBRCw4QkFBQztDQUFBLEFBM0RELElBMkRDO1NBM0RZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPdXRwdXQsIElucHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4vbG9naW4uc2VydmljZSc7XG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuLi9hdXRoZW50aWNhdGlvbi9wYXNzd29yZC5zZXJ2aWNlJztcbmltcG9ydCB7IElSZXNldFBhc3N3b3JkLCBJQ3JlZGVudGlhbHMsIFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgT3B0aW9uc1NlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vb3B0aW9ucy5zZXJ2aWNlJztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9naW5WaWV3cyB9IGZyb20gJy4vbG9naW4ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY2hhbmdlLXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBjcmVkZW50aWFsczogSUNyZWRlbnRpYWxzO1xuICBAT3V0cHV0KCkgb25DaGFuZ2VWaWV3ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHBhc3N3b3JkUGF0dGVybiA9IC9eW2EtekEtWjAtOWB+IUAjJCVeJiooKV98K1xcLT0/OzonXCIsLjw+e31bXFxdXFxcXC9dezgsMzJ9JC87XG4gIGlzTG9hZGluZyA9IGZhbHNlO1xuICBtb2RlbCA9IHtcbiAgICB0ZW5hbnRJZDogJycsXG4gICAgZW1haWw6ICcnLFxuICAgIG5ld1Bhc3N3b3JkOiAnJyxcbiAgICBuZXdQYXNzd29yZENvbmZpcm06ICcnXG4gIH07XG4gIGVtYWlsUmVhZE9ubHkgPSBmYWxzZTtcbiAgcGFzc3dvcmRTdHJlbmd0aEVuZm9yY2VkID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBUT0tFTl9QQVJBTSA9ICd0b2tlbic7XG4gIHByaXZhdGUgRU1BSUxfUEFSQU0gPSAnZW1haWwnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSxcbiAgICBwcml2YXRlIHVzZXJzOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIHBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZTogUGFzc3dvcmRTZXJ2aWNlLFxuICAgIHByaXZhdGUgb3B0aW9uczogT3B0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlXG4gICkgeyB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5tb2RlbC50ZW5hbnRJZCA9IHRoaXMubG9naW5TZXJ2aWNlLmdldFRlbmFudCgpO1xuICAgIHRoaXMubW9kZWwuZW1haWwgPSB0aGlzLm9wdGlvbnMuZ2V0KHRoaXMuRU1BSUxfUEFSQU0sICcnKTtcbiAgICB0aGlzLmVtYWlsUmVhZE9ubHkgPSAhIXRoaXMubW9kZWwuZW1haWw7XG4gICAgdGhpcy5wYXNzd29yZFN0cmVuZ3RoRW5mb3JjZWQgPSBhd2FpdCB0aGlzLmxvZ2luU2VydmljZS5nZXRQYXNzd29yZFN0cmVuZ3RoRW5mb3JjZWQoKTtcbiAgfVxuXG4gIGFzeW5jIGNoYW5nZVBhc3N3b3JkKCkge1xuICAgIGNvbnN0IHBhc3N3b3JkU3RyZW5ndGhDb2xvcjogYW55ID0gdGhpcy5wYXNzd29yZFN0cmVuZ3RoQ2hlY2tlclNlcnZpY2UuZ2V0U3RyZW5ndGhDb2xvcihcbiAgICAgIHRoaXMubW9kZWwubmV3UGFzc3dvcmRcbiAgICApO1xuICAgIGNvbnN0IHJlc2V0UGFzc3dvcmQ6IElSZXNldFBhc3N3b3JkID0ge1xuICAgICAgdG9rZW46IHRoaXMuY3JlZGVudGlhbHMudG9rZW4sXG4gICAgICBlbWFpbDogdGhpcy5tb2RlbC5lbWFpbCxcbiAgICAgIG5ld1Bhc3N3b3JkOiB0aGlzLm1vZGVsLm5ld1Bhc3N3b3JkLFxuICAgICAgcGFzc3dvcmRTdHJlbmd0aDogcGFzc3dvcmRTdHJlbmd0aENvbG9yLnBhc3N3b3JkU3RyZW5ndGhcbiAgICB9O1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICBjb25zdCB7IHJlcyB9ID0gYXdhaXQgdGhpcy51c2Vycy5yZXNldFBhc3N3b3JkKHJlc2V0UGFzc3dvcmQsIHRoaXMubW9kZWwudGVuYW50SWQpO1xuICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICB0aGlzLmxvZ2luU2VydmljZS5hZGRTdWNjZXNzTWVzc2FnZSgncGFzc3dvcmRfY2hhbmdlZCcpO1xuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzLnRva2VuID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLm9wdGlvbnMuc2V0KHRoaXMuVE9LRU5fUEFSQU0sIHVuZGVmaW5lZCk7XG4gICAgICAgIHRoaXMub25DaGFuZ2VWaWV3LmVtaXQoeyB2aWV3OiBMb2dpblZpZXdzLkNyZWRlbnRpYWxzIH0pO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuYWxlcnQuYWRkU2VydmVyRmFpbHVyZShlKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5sb2dpblNlcnZpY2UucmVzZXQoKTtcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=