import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { find, keys, get, assign, isEmpty } from 'lodash-es';
import { OptionsService } from '../../common/options.service';
var AppIconComponent = /** @class */ (function () {
    function AppIconComponent(options) {
        this.options = options;
        this.name = '';
        this.model = {
            appIcon: '',
            showIcon: true,
            iconClass: ['c8y-icon'],
            appNameAbbr: '',
            iconStyle: {}
        };
        this.c8yAppIconsList = {
            analyticsbuilder: 'analytics-builder',
            'analytics-builder': 'analytics-builder',
            cockpit: 'cockpit',
            devicemanagement: 'device-management',
            administration: 'administration',
            apamaepl: 'apama-epl'
        };
        this.white = false;
        this.defaultIconStyle = {
            'background-repeat': 'no-repeat',
            'background-size': 'contain',
            height: '36px',
            width: '36px'
        };
    }
    AppIconComponent.prototype.ngOnChanges = function (changes) {
        this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();
        var iconUrl = this.iconUrlFromAppDefinition();
        if (iconUrl) {
            this.model.iconStyle = assign(this.defaultIconStyle, {
                'background-image': iconUrl
            });
        }
        this.model.showIcon = !!this.model.appIcon || !isEmpty(this.model.iconStyle);
        this.model.iconClass = [
            'c8y-icon',
            this.model.appIcon,
            this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'
        ].filter(function (c) { return !!c; });
        this.model.appNameAbbr = this.name.substr(0, 2);
    };
    AppIconComponent.prototype.findStaticIcon = function () {
        var contextPath = this.contextPath || this.name;
        var appContextPathNormalized = find(keys(this.c8yAppIconsList), function (cp) {
            return contextPath.indexOf(cp) > -1;
        });
        var appIcon = this.c8yAppIconsList[appContextPathNormalized];
        return appIcon ? "c8y-icon-" + appIcon : undefined;
    };
    AppIconComponent.prototype.iconFromAppDefinition = function () {
        var app = this.app || this.options;
        var iconClassProperty = ['icon', 'class'];
        var iconClass = get(app, iconClassProperty) || get(app, tslib_1.__spread(['manifest'], iconClassProperty));
        return iconClass;
    };
    AppIconComponent.prototype.iconUrlFromAppDefinition = function () {
        var app = this.app || this.options;
        var iconUrlProperty = ['icon', 'url'];
        var iconUrl = get(app, iconUrlProperty) || get(app, tslib_1.__spread(['manifest'], iconUrlProperty));
        return iconUrl;
    };
    AppIconComponent.ctorParameters = function () { return [
        { type: OptionsService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], AppIconComponent.prototype, "contextPath", void 0);
    tslib_1.__decorate([
        Input()
    ], AppIconComponent.prototype, "name", void 0);
    tslib_1.__decorate([
        Input()
    ], AppIconComponent.prototype, "app", void 0);
    AppIconComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-app-icon',
            template: "<i *ngIf=\"model.showIcon\" [ngClass]=\"model.iconClass\" [ngStyle]=\"model.iconStyle\"></i>\n<span *ngIf=\"!model.showIcon\" class=\"app-noicon\"> {{model.appNameAbbr}}</span>\n",
            host: { class: 'c8y-app-icon' }
        })
    ], AppIconComponent);
    return AppIconComponent;
}());
export { AppIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvaGVhZGVyL2FwcGxpY2F0aW9uL2FwcC1pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQU85RDtJQStCRSwwQkFBb0IsT0FBdUI7UUFBdkIsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUE3QmxDLFNBQUksR0FBVyxFQUFFLENBQUM7UUFHM0IsVUFBSyxHQUFHO1lBQ04sT0FBTyxFQUFFLEVBQUU7WUFDWCxRQUFRLEVBQUUsSUFBSTtZQUNkLFNBQVMsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUN2QixXQUFXLEVBQUUsRUFBRTtZQUNmLFNBQVMsRUFBRSxFQUFFO1NBQ2QsQ0FBQztRQUVNLG9CQUFlLEdBQUc7WUFDeEIsZ0JBQWdCLEVBQUUsbUJBQW1CO1lBQ3JDLG1CQUFtQixFQUFFLG1CQUFtQjtZQUN4QyxPQUFPLEVBQUUsU0FBUztZQUNsQixnQkFBZ0IsRUFBRSxtQkFBbUI7WUFDckMsY0FBYyxFQUFFLGdCQUFnQjtZQUNoQyxRQUFRLEVBQUUsV0FBVztTQUN0QixDQUFDO1FBRU0sVUFBSyxHQUFZLEtBQUssQ0FBQztRQUV2QixxQkFBZ0IsR0FBRztZQUN6QixtQkFBbUIsRUFBRSxXQUFXO1lBQ2hDLGlCQUFpQixFQUFFLFNBQVM7WUFDNUIsTUFBTSxFQUFFLE1BQU07WUFDZCxLQUFLLEVBQUUsTUFBTTtTQUNkLENBQUM7SUFFNEMsQ0FBQztJQUUvQyxzQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixFQUFFLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzNFLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO1FBQ2hELElBQUksT0FBTyxFQUFFO1lBQ1gsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtnQkFDbkQsa0JBQWtCLEVBQUUsT0FBTzthQUM1QixDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHO1lBQ3JCLFVBQVU7WUFDVixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU87WUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLG1CQUFtQjtTQUNwRCxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUgsQ0FBRyxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTyx5Q0FBYyxHQUF0QjtRQUNFLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQztRQUNsRCxJQUFNLHdCQUF3QixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFLFVBQUEsRUFBRTtZQUNsRSxPQUFPLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDL0QsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDLGNBQVksT0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDckQsQ0FBQztJQUVPLGdEQUFxQixHQUE3QjtRQUNFLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUNyQyxJQUFNLGlCQUFpQixHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzVDLElBQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxvQkFBRyxVQUFVLEdBQUssaUJBQWlCLEVBQUUsQ0FBQztRQUM5RixPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRU8sbURBQXdCLEdBQWhDO1FBQ0UsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3JDLElBQU0sZUFBZSxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLElBQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsZUFBZSxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsb0JBQUcsVUFBVSxHQUFLLGVBQWUsRUFBRSxDQUFDO1FBQ3hGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7O2dCQXhDNEIsY0FBYzs7SUE5QmxDO1FBQVIsS0FBSyxFQUFFO3lEQUFxQjtJQUNwQjtRQUFSLEtBQUssRUFBRTtrREFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7aURBQVU7SUFIUCxnQkFBZ0I7UUFMNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGNBQWM7WUFDeEIsOExBQXdDO1lBQ3hDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUU7U0FDaEMsQ0FBQztPQUNXLGdCQUFnQixDQXdFNUI7SUFBRCx1QkFBQztDQUFBLEFBeEVELElBd0VDO1NBeEVZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZmluZCwga2V5cywgZ2V0LCBhc3NpZ24sIGlzRW1wdHkgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgT3B0aW9uc1NlcnZpY2UgfSBmcm9tICcuLi8uLi9jb21tb24vb3B0aW9ucy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFwcC1pY29uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FwcC1pY29uLmNvbXBvbmVudC5odG1sJyxcbiAgaG9zdDogeyBjbGFzczogJ2M4eS1hcHAtaWNvbicgfVxufSlcbmV4cG9ydCBjbGFzcyBBcHBJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY29udGV4dFBhdGg6IHN0cmluZztcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nID0gJyc7XG4gIEBJbnB1dCgpIGFwcDogYW55O1xuXG4gIG1vZGVsID0ge1xuICAgIGFwcEljb246ICcnLFxuICAgIHNob3dJY29uOiB0cnVlLFxuICAgIGljb25DbGFzczogWydjOHktaWNvbiddLFxuICAgIGFwcE5hbWVBYmJyOiAnJyxcbiAgICBpY29uU3R5bGU6IHt9XG4gIH07XG5cbiAgcHJpdmF0ZSBjOHlBcHBJY29uc0xpc3QgPSB7XG4gICAgYW5hbHl0aWNzYnVpbGRlcjogJ2FuYWx5dGljcy1idWlsZGVyJyxcbiAgICAnYW5hbHl0aWNzLWJ1aWxkZXInOiAnYW5hbHl0aWNzLWJ1aWxkZXInLFxuICAgIGNvY2twaXQ6ICdjb2NrcGl0JyxcbiAgICBkZXZpY2VtYW5hZ2VtZW50OiAnZGV2aWNlLW1hbmFnZW1lbnQnLFxuICAgIGFkbWluaXN0cmF0aW9uOiAnYWRtaW5pc3RyYXRpb24nLFxuICAgIGFwYW1hZXBsOiAnYXBhbWEtZXBsJ1xuICB9O1xuXG4gIHByaXZhdGUgd2hpdGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBwcml2YXRlIGRlZmF1bHRJY29uU3R5bGUgPSB7XG4gICAgJ2JhY2tncm91bmQtcmVwZWF0JzogJ25vLXJlcGVhdCcsXG4gICAgJ2JhY2tncm91bmQtc2l6ZSc6ICdjb250YWluJyxcbiAgICBoZWlnaHQ6ICczNnB4JyxcbiAgICB3aWR0aDogJzM2cHgnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zOiBPcHRpb25zU2VydmljZSkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgdGhpcy5tb2RlbC5hcHBJY29uID0gdGhpcy5pY29uRnJvbUFwcERlZmluaXRpb24oKSB8fCB0aGlzLmZpbmRTdGF0aWNJY29uKCk7XG4gICAgY29uc3QgaWNvblVybCA9IHRoaXMuaWNvblVybEZyb21BcHBEZWZpbml0aW9uKCk7XG4gICAgaWYgKGljb25VcmwpIHtcbiAgICAgIHRoaXMubW9kZWwuaWNvblN0eWxlID0gYXNzaWduKHRoaXMuZGVmYXVsdEljb25TdHlsZSwge1xuICAgICAgICAnYmFja2dyb3VuZC1pbWFnZSc6IGljb25VcmxcbiAgICAgIH0pO1xuICAgIH1cbiAgICB0aGlzLm1vZGVsLnNob3dJY29uID0gISF0aGlzLm1vZGVsLmFwcEljb24gfHwgIWlzRW1wdHkodGhpcy5tb2RlbC5pY29uU3R5bGUpO1xuICAgIHRoaXMubW9kZWwuaWNvbkNsYXNzID0gW1xuICAgICAgJ2M4eS1pY29uJyxcbiAgICAgIHRoaXMubW9kZWwuYXBwSWNvbixcbiAgICAgIHRoaXMud2hpdGUgPyAnYzh5LWljb24td2hpdGUnIDogJ2M4eS1pY29uLWR1b2NvbG9yJ1xuICAgIF0uZmlsdGVyKGMgPT4gISFjKTtcbiAgICB0aGlzLm1vZGVsLmFwcE5hbWVBYmJyID0gdGhpcy5uYW1lLnN1YnN0cigwLCAyKTtcbiAgfVxuXG4gIHByaXZhdGUgZmluZFN0YXRpY0ljb24oKSB7XG4gICAgY29uc3QgY29udGV4dFBhdGggPSB0aGlzLmNvbnRleHRQYXRoIHx8IHRoaXMubmFtZTtcbiAgICBjb25zdCBhcHBDb250ZXh0UGF0aE5vcm1hbGl6ZWQgPSBmaW5kKGtleXModGhpcy5jOHlBcHBJY29uc0xpc3QpLCBjcCA9PiB7XG4gICAgICByZXR1cm4gY29udGV4dFBhdGguaW5kZXhPZihjcCkgPiAtMTtcbiAgICB9KTtcbiAgICBjb25zdCBhcHBJY29uID0gdGhpcy5jOHlBcHBJY29uc0xpc3RbYXBwQ29udGV4dFBhdGhOb3JtYWxpemVkXTtcbiAgICByZXR1cm4gYXBwSWNvbiA/IGBjOHktaWNvbi0ke2FwcEljb259YCA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHByaXZhdGUgaWNvbkZyb21BcHBEZWZpbml0aW9uKCkge1xuICAgIGNvbnN0IGFwcCA9IHRoaXMuYXBwIHx8IHRoaXMub3B0aW9ucztcbiAgICBjb25zdCBpY29uQ2xhc3NQcm9wZXJ0eSA9IFsnaWNvbicsICdjbGFzcyddO1xuICAgIGNvbnN0IGljb25DbGFzcyA9IGdldChhcHAsIGljb25DbGFzc1Byb3BlcnR5KSB8fCBnZXQoYXBwLCBbJ21hbmlmZXN0JywgLi4uaWNvbkNsYXNzUHJvcGVydHldKTtcbiAgICByZXR1cm4gaWNvbkNsYXNzO1xuICB9XG5cbiAgcHJpdmF0ZSBpY29uVXJsRnJvbUFwcERlZmluaXRpb24oKSB7XG4gICAgY29uc3QgYXBwID0gdGhpcy5hcHAgfHwgdGhpcy5vcHRpb25zO1xuICAgIGNvbnN0IGljb25VcmxQcm9wZXJ0eSA9IFsnaWNvbicsICd1cmwnXTtcbiAgICBjb25zdCBpY29uVXJsID0gZ2V0KGFwcCwgaWNvblVybFByb3BlcnR5KSB8fCBnZXQoYXBwLCBbJ21hbmlmZXN0JywgLi4uaWNvblVybFByb3BlcnR5XSk7XG4gICAgcmV0dXJuIGljb25Vcmw7XG4gIH1cbn1cbiJdfQ==