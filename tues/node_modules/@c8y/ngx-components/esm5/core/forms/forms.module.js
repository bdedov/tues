import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { PhoneValidationDirective } from './phone-validation.directive';
import { DefaultValidationDirective } from './default-validation.directive';
import { MinValidationDirective } from './min-validation.directive';
import { MaxValidationDirective } from './max-validation.directive';
import { CommonModule } from '../common/common.module';
import { FormsModule as NgFormsModule } from '@angular/forms';
import { FormGroupComponent } from './form-group.component';
import { MessageDirective } from './message.directive';
import { MessagesComponent } from './messages.component';
import { InputGroupListComponent } from './input-group-list.component';
import { InputGroupListContainerDirective } from './input-group-list-container.directive';
import { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';
import { TextAreaRowHeightDirective } from './text-area-row-height.directive';
import { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';
import { IpRangeInputListComponent } from './ip-range-input-list.component';
import { FilterInputComponent } from './filter-input.component';
/**
 * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.
 * @exports PhoneValidationDirective Allows to validate international phone numbers.
 * @exports NewsletterDirective Allows to subscribe to the newsletter.
 * @exports DefaultValidationDirective Allows to validate some predefined patterns.
 * @exports MessageDirective A directive that allows to define messages.
 * @exports MessagesComponent Allows to display error messages.
 */
var FormsModule = /** @class */ (function () {
    function FormsModule() {
    }
    FormsModule = tslib_1.__decorate([
        NgModule({
            imports: [CommonModule, NgFormsModule],
            exports: [
                PhoneValidationDirective,
                DefaultValidationDirective,
                MinValidationDirective,
                MaxValidationDirective,
                NgFormsModule,
                FormGroupComponent,
                MessageDirective,
                MessagesComponent,
                InputGroupListComponent,
                InputGroupListContainerDirective,
                JsonValidationPrettifierDirective,
                TextAreaRowHeightDirective,
                RequiredInputPlaceholderDirective,
                IpRangeInputListComponent,
                FilterInputComponent
            ],
            declarations: [
                PhoneValidationDirective,
                DefaultValidationDirective,
                MinValidationDirective,
                MaxValidationDirective,
                FormGroupComponent,
                MessageDirective,
                MessagesComponent,
                InputGroupListComponent,
                InputGroupListContainerDirective,
                JsonValidationPrettifierDirective,
                TextAreaRowHeightDirective,
                RequiredInputPlaceholderDirective,
                IpRangeInputListComponent,
                FilterInputComponent
            ]
        })
    ], FormsModule);
    return FormsModule;
}());
export { FormsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZm9ybXMvZm9ybXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxJQUFJLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRWhFOzs7Ozs7O0dBT0c7QUFxQ0g7SUFBQTtJQUEwQixDQUFDO0lBQWQsV0FBVztRQXBDdkIsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGFBQWEsQ0FBQztZQUN0QyxPQUFPLEVBQUU7Z0JBQ1Asd0JBQXdCO2dCQUN4QiwwQkFBMEI7Z0JBQzFCLHNCQUFzQjtnQkFDdEIsc0JBQXNCO2dCQUN0QixhQUFhO2dCQUNiLGtCQUFrQjtnQkFDbEIsZ0JBQWdCO2dCQUNoQixpQkFBaUI7Z0JBQ2pCLHVCQUF1QjtnQkFDdkIsZ0NBQWdDO2dCQUNoQyxpQ0FBaUM7Z0JBQ2pDLDBCQUEwQjtnQkFDMUIsaUNBQWlDO2dCQUNqQyx5QkFBeUI7Z0JBQ3pCLG9CQUFvQjthQUNyQjtZQUNELFlBQVksRUFBRTtnQkFDWix3QkFBd0I7Z0JBQ3hCLDBCQUEwQjtnQkFDMUIsc0JBQXNCO2dCQUN0QixzQkFBc0I7Z0JBQ3RCLGtCQUFrQjtnQkFDbEIsZ0JBQWdCO2dCQUNoQixpQkFBaUI7Z0JBQ2pCLHVCQUF1QjtnQkFDdkIsZ0NBQWdDO2dCQUNoQyxpQ0FBaUM7Z0JBQ2pDLDBCQUEwQjtnQkFDMUIsaUNBQWlDO2dCQUNqQyx5QkFBeUI7Z0JBQ3pCLG9CQUFvQjthQUNyQjtTQUNGLENBQUM7T0FDVyxXQUFXLENBQUc7SUFBRCxrQkFBQztDQUFBLEFBQTNCLElBQTJCO1NBQWQsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQaG9uZVZhbGlkYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL3Bob25lLXZhbGlkYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IERlZmF1bHRWYWxpZGF0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9kZWZhdWx0LXZhbGlkYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IE1pblZhbGlkYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL21pbi12YWxpZGF0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNYXhWYWxpZGF0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9tYXgtdmFsaWRhdGlvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgYXMgTmdGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEZvcm1Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vZm9ybS1ncm91cC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWVzc2FnZURpcmVjdGl2ZSB9IGZyb20gJy4vbWVzc2FnZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWVzc2FnZXNDb21wb25lbnQgfSBmcm9tICcuL21lc3NhZ2VzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dEdyb3VwTGlzdENvbXBvbmVudCB9IGZyb20gJy4vaW5wdXQtZ3JvdXAtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRHcm91cExpc3RDb250YWluZXJEaXJlY3RpdmUgfSBmcm9tICcuL2lucHV0LWdyb3VwLWxpc3QtY29udGFpbmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBKc29uVmFsaWRhdGlvblByZXR0aWZpZXJEaXJlY3RpdmUgfSBmcm9tICcuL2pzb24tdmFsaWRhdGlvbi1wcmV0dGlmaWVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUZXh0QXJlYVJvd0hlaWdodERpcmVjdGl2ZSB9IGZyb20gJy4vdGV4dC1hcmVhLXJvdy1oZWlnaHQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFJlcXVpcmVkSW5wdXRQbGFjZWhvbGRlckRpcmVjdGl2ZSB9IGZyb20gJy4vcmVxdWlyZWQtaW5wdXQtcGxhY2Vob2xkZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQgfSBmcm9tICcuL2lwLXJhbmdlLWlucHV0LWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IEZpbHRlcklucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9maWx0ZXItaW5wdXQuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZXhwb3J0cyBGb3JtR3JvdXBDb21wb25lbnQgQSBjb21wb25lbnQgdGhhdCBhbGxvd3MgdG8gZ3JvdXAgYW4gaW5wdXQgYW5kIGNhbiBkaXNwbGF5IHdhcm5pbmdzIGFuZCBlcnJvcnMuXG4gKiBAZXhwb3J0cyBQaG9uZVZhbGlkYXRpb25EaXJlY3RpdmUgQWxsb3dzIHRvIHZhbGlkYXRlIGludGVybmF0aW9uYWwgcGhvbmUgbnVtYmVycy5cbiAqIEBleHBvcnRzIE5ld3NsZXR0ZXJEaXJlY3RpdmUgQWxsb3dzIHRvIHN1YnNjcmliZSB0byB0aGUgbmV3c2xldHRlci5cbiAqIEBleHBvcnRzIERlZmF1bHRWYWxpZGF0aW9uRGlyZWN0aXZlIEFsbG93cyB0byB2YWxpZGF0ZSBzb21lIHByZWRlZmluZWQgcGF0dGVybnMuXG4gKiBAZXhwb3J0cyBNZXNzYWdlRGlyZWN0aXZlIEEgZGlyZWN0aXZlIHRoYXQgYWxsb3dzIHRvIGRlZmluZSBtZXNzYWdlcy5cbiAqIEBleHBvcnRzIE1lc3NhZ2VzQ29tcG9uZW50IEFsbG93cyB0byBkaXNwbGF5IGVycm9yIG1lc3NhZ2VzLlxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBOZ0Zvcm1zTW9kdWxlXSxcbiAgZXhwb3J0czogW1xuICAgIFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBEZWZhdWx0VmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBNaW5WYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIE1heFZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgTmdGb3Jtc01vZHVsZSxcbiAgICBGb3JtR3JvdXBDb21wb25lbnQsXG4gICAgTWVzc2FnZURpcmVjdGl2ZSxcbiAgICBNZXNzYWdlc0NvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICBKc29uVmFsaWRhdGlvblByZXR0aWZpZXJEaXJlY3RpdmUsXG4gICAgVGV4dEFyZWFSb3dIZWlnaHREaXJlY3RpdmUsXG4gICAgUmVxdWlyZWRJbnB1dFBsYWNlaG9sZGVyRGlyZWN0aXZlLFxuICAgIElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQsXG4gICAgRmlsdGVySW5wdXRDb21wb25lbnRcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUGhvbmVWYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIERlZmF1bHRWYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIE1pblZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgTWF4VmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBGb3JtR3JvdXBDb21wb25lbnQsXG4gICAgTWVzc2FnZURpcmVjdGl2ZSxcbiAgICBNZXNzYWdlc0NvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICBKc29uVmFsaWRhdGlvblByZXR0aWZpZXJEaXJlY3RpdmUsXG4gICAgVGV4dEFyZWFSb3dIZWlnaHREaXJlY3RpdmUsXG4gICAgUmVxdWlyZWRJbnB1dFBsYWNlaG9sZGVyRGlyZWN0aXZlLFxuICAgIElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQsXG4gICAgRmlsdGVySW5wdXRDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBGb3Jtc01vZHVsZSB7fVxuIl19