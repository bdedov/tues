import * as tslib_1 from "tslib";
import { NG_VALIDATORS } from '@angular/forms';
import { Directive, Input } from '@angular/core';
import { isUndefined } from 'lodash-es';
var MinValidationDirective = /** @class */ (function () {
    function MinValidationDirective() {
        this.min = '';
    }
    MinValidationDirective_1 = MinValidationDirective;
    MinValidationDirective.prototype.validate = function (control) {
        var parsedMin = parseInt(this.min, 10);
        if (isUndefined(control.value) || !this.min) {
            return null;
        }
        var valid = true;
        valid = (control.value !== null) ? !(control.value < parsedMin) : true;
        return valid ? null : { min: { value: parsedMin } };
    };
    var MinValidationDirective_1;
    tslib_1.__decorate([
        Input()
    ], MinValidationDirective.prototype, "min", void 0);
    MinValidationDirective = MinValidationDirective_1 = tslib_1.__decorate([
        Directive({
            selector: '[min]',
            providers: [{ provide: NG_VALIDATORS, useExisting: MinValidationDirective_1, multi: true }]
        })
    ], MinValidationDirective);
    return MinValidationDirective;
}());
export { MinValidationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWluLXZhbGlkYXRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZm9ybXMvbWluLXZhbGlkYXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQW1CLGFBQWEsRUFBYSxNQUFNLGdCQUFnQixDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTdELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFNeEM7SUFKQTtRQUtXLFFBQUcsR0FBVyxFQUFFLENBQUM7SUFZNUIsQ0FBQzsrQkFiWSxzQkFBc0I7SUFHakMseUNBQVEsR0FBUixVQUFTLE9BQXdCO1FBQy9CLElBQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDM0MsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixLQUFLLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3ZFLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUM7SUFDckQsQ0FBQzs7SUFYUTtRQUFSLEtBQUssRUFBRTt1REFBa0I7SUFEZixzQkFBc0I7UUFKbEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLE9BQU87WUFDakIsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSx3QkFBc0IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUM7U0FDeEYsQ0FBQztPQUNXLHNCQUFzQixDQWFsQztJQUFELDZCQUFDO0NBQUEsQUFiRCxJQWFDO1NBYlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBOR19WQUxJREFUT1JTLCBWYWxpZGF0b3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzVW5kZWZpbmVkIH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW21pbl0nLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogTkdfVkFMSURBVE9SUywgdXNlRXhpc3Rpbmc6IE1pblZhbGlkYXRpb25EaXJlY3RpdmUsIG11bHRpOiB0cnVlfV1cbn0pXG5leHBvcnQgY2xhc3MgTWluVmFsaWRhdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciB7XG4gIEBJbnB1dCgpIG1pbjogc3RyaW5nID0gJyc7XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKToge1trZXk6IHN0cmluZ106IGFueX0gfCBudWxsIHtcbiAgICBjb25zdCBwYXJzZWRNaW4gPSBwYXJzZUludCh0aGlzLm1pbiwgMTApO1xuICAgIGlmIChpc1VuZGVmaW5lZChjb250cm9sLnZhbHVlKSB8fCAhdGhpcy5taW4pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGxldCB2YWxpZCA9IHRydWU7XG4gICAgdmFsaWQgPSAoY29udHJvbC52YWx1ZSAhPT0gbnVsbCkgPyAhKGNvbnRyb2wudmFsdWUgPCBwYXJzZWRNaW4pIDogdHJ1ZTtcbiAgICByZXR1cm4gdmFsaWQgPyBudWxsIDoge21pbjogeyB2YWx1ZTogcGFyc2VkTWluIH0gfTtcbiAgfVxufVxuIl19