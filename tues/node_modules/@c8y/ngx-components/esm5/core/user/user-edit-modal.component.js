import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { BasicAuth, FetchClient, ICredentials, IUser, UserService } from '@c8y/client';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { AlertService } from '../alert/alert.service';
import { AppStateService } from '../common/ui-state.service';
import { UserPreferencesService } from '../common/user-preferences/user-preferences.service';
import { gettext } from '../i18n/gettext';
import { TranslateService } from '../i18n/translate.service';
import { take } from 'rxjs/operators';
var UserEditModalComponent = /** @class */ (function () {
    function UserEditModalComponent(modal, user, ui, auth, client, alert, translate, userPreferences, modalService) {
        var _this = this;
        this.modal = modal;
        this.user = user;
        this.ui = ui;
        this.auth = auth;
        this.client = client;
        this.alert = alert;
        this.translate = translate;
        this.userPreferences = userPreferences;
        this.modalService = modalService;
        this.loading = false;
        this.lang = this.ui.state.lang;
        this.modalService.onHide.pipe(take(1)).subscribe(function (reason) {
            if (reason !== null && _this.changedLang !== undefined) {
                _this.translate.switchToLanguage(_this.lang);
            }
        });
    }
    UserEditModalComponent.prototype.ngOnInit = function () {
        this.updateUserInAppState();
    };
    UserEditModalComponent.prototype.onDismiss = function () {
        if (this.changedLang !== undefined) {
            this.translate.switchToLanguage(this.lang);
        }
        this.modal.hide();
    };
    UserEditModalComponent.prototype.onLanguage = function (lang) {
        this.changedLang = lang;
        this.translate.switchToLanguage(this.changedLang);
    };
    UserEditModalComponent.prototype.updateAndClose = function (user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.loading = true;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 6, 7, 8]);
                        return [4 /*yield*/, this.user.updateCurrent(user)];
                    case 2:
                        _a.sent();
                        if (user.password) {
                            this.updateCredentials(user.password);
                        }
                        return [4 /*yield*/, this.updateUserInAppState()];
                    case 3:
                        _a.sent();
                        if (!(this.changedLang && this.changedLang !== this.lang)) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.persistLanguage(this.changedLang)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        this.modal.hide();
                        this.alert.success(gettext('User saved.'));
                        return [3 /*break*/, 8];
                    case 6:
                        e_1 = _a.sent();
                        this.alert.addServerFailure(e_1);
                        return [3 /*break*/, 8];
                    case 7:
                        this.loading = false;
                        return [7 /*endfinally*/];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    UserEditModalComponent.prototype.persistLanguage = function (lang) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.translate.saveInLocalStorage(lang);
                this.userPreferences.set('language', lang);
                return [2 /*return*/];
            });
        });
    };
    UserEditModalComponent.prototype.updateUserInAppState = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var currentUserResult;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.user.current()];
                    case 1:
                        currentUserResult = _a.sent();
                        this.ui.currentUser.next(currentUserResult.data);
                        return [2 /*return*/];
                }
            });
        });
    };
    UserEditModalComponent.prototype.updateCredentials = function (password) {
        var newCredentials = {
            password: password,
            user: this.ui.currentUser.value.id,
            tenant: this.client.tenant
        };
        this.auth.updateCredentials(newCredentials);
    };
    UserEditModalComponent.ctorParameters = function () { return [
        { type: BsModalRef },
        { type: UserService },
        { type: AppStateService },
        { type: BasicAuth },
        { type: FetchClient },
        { type: AlertService },
        { type: TranslateService },
        { type: UserPreferencesService },
        { type: BsModalService }
    ]; };
    UserEditModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-user-edit-modal',
            template: "<c8y-modal\n  [customFooter]=\"true\"\n  [title]=\"'Edit user' | translate\"\n  (onDismiss)=\"onDismiss()\"\n>\n  <c8y-user-edit\n    [lang]=\"lang\"\n    [user]=\"ui.currentUser | async\"\n    [loading]=\"loading\"\n    (onLanguage)=\"onLanguage($event)\"\n    (onUser)=\"updateAndClose($event)\"\n    (onCancel)=\"onDismiss()\"\n  >\n  </c8y-user-edit>\n</c8y-modal>"
        })
    ], UserEditModalComponent);
    return UserEditModalComponent;
}());
export { UserEditModalComponent };
//# sourceMappingURL=data:application/json;base64,