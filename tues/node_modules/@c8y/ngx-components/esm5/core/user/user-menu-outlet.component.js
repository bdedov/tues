import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { TenantService, UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { AppStateService } from '../common/ui-state.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { LoginService } from '../login/login.service';
import { ModalService } from '../modal/modal.service';
import { OptionsService } from '../common/options.service';
import { Status } from '../common/status.model';
import { TranslateService } from '@ngx-translate/core';
import { UserEditModalComponent } from './user-edit-modal.component';
import { gettext } from '../i18n/gettext';
import { sortBy } from 'lodash-es';
var UserMenuOutletComponent = /** @class */ (function () {
    function UserMenuOutletComponent(ui, bsModalService, modalService, loginService, translateService, tenantService, alertService, user, optionsService) {
        this.ui = ui;
        this.bsModalService = bsModalService;
        this.modalService = modalService;
        this.loginService = loginService;
        this.translateService = translateService;
        this.tenantService = tenantService;
        this.alertService = alertService;
        this.user = user;
        this.optionsService = optionsService;
    }
    UserMenuOutletComponent.prototype.copyIt = function (text) {
        var handler = {
            handleEvent: function (e) {
                e.clipboardData.setData('text/plain', text);
                e.preventDefault();
            }
        };
        document.addEventListener('copy', handler);
        var copied;
        try {
            copied = document.execCommand('copy');
        }
        catch (e) {
            copied = false;
        }
        if (copied) {
            this.alertService.addByText('success', gettext('Copied to clipboard.'));
        }
        else {
            this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));
        }
        document.removeEventListener('copy', handler);
    };
    UserMenuOutletComponent.prototype.editUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.bsModalService.show(UserEditModalComponent);
                return [2 /*return*/];
            });
        });
    };
    UserMenuOutletComponent.prototype.logout = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loginService.logout()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UserMenuOutletComponent.prototype.activateSupportAccess = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, companyName, textWithCompany, textWithoutCompany, finalQuestion, body, labels, successMsg, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        title = gettext('Activate support user access');
                        companyName = this.optionsService.get('companyName', 'Cumulocity');
                        textWithCompany = gettext(
                        // tslint:disable-next-line:max-line-length
                        'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.');
                        textWithoutCompany = gettext(
                        // tslint:disable-next-line:max-line-length
                        'You are about to allow a support user to access your tenant to help you with your issue.');
                        finalQuestion = gettext('Do you want to proceed?');
                        body = [
                            this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                                companyName: companyName
                            }),
                            this.translateService.instant(finalQuestion)
                        ].join(' ');
                        labels = {
                            ok: gettext('Activate access'),
                            cancel: gettext('Cancel')
                        };
                        successMsg = gettext('Support user access activated.');
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.tenantService.enableSupportUser()];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.refreshCurrentUser()];
                    case 4:
                        _a.sent();
                        this.alertService.success(successMsg);
                        return [3 /*break*/, 6];
                    case 5:
                        ex_1 = _a.sent();
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    UserMenuOutletComponent.prototype.deactivateSupportAccess = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, companyName, textWithCompany, textWithoutCompany, currentUser, isTenantAdmin, tenantAdminNote, finalQuestion, body, labels, successMsg, ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        title = gettext('Deactivate support user access');
                        companyName = this.optionsService.get('companyName', 'Cumulocity');
                        textWithCompany = gettext(
                        // tslint:disable-next-line:max-line-length
                        'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.');
                        textWithoutCompany = gettext(
                        // tslint:disable-next-line:max-line-length
                        'You are about to block a support user from accessing your tenant to help you with your issue.');
                        return [4 /*yield*/, this.user.current()];
                    case 1:
                        currentUser = (_a.sent()).data;
                        return [4 /*yield*/, this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN')];
                    case 2:
                        isTenantAdmin = _a.sent();
                        tenantAdminNote = gettext(
                        // tslint:disable-next-line:max-line-length
                        'Deactivating support access as tenant admin will disable all other support requests on your tenant.');
                        finalQuestion = gettext('Do you want to proceed?');
                        body = [
                            this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                                companyName: companyName
                            }),
                            isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',
                            this.translateService.instant(finalQuestion)
                        ]
                            .filter(Boolean)
                            .join(' ');
                        labels = {
                            ok: gettext('Deactivate access'),
                            cancel: gettext('Cancel')
                        };
                        successMsg = gettext('Support user access deactivated.');
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 7, , 8]);
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.tenantService.disableSupportUser()];
                    case 5:
                        _a.sent();
                        return [4 /*yield*/, this.refreshCurrentUser()];
                    case 6:
                        _a.sent();
                        this.alertService.success(successMsg);
                        return [3 /*break*/, 8];
                    case 7:
                        ex_2 = _a.sent();
                        return [3 /*break*/, 8];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    UserMenuOutletComponent.prototype.getSortedItems = function () {
        return sortBy(Array.from(this.items), this.byPriority);
    };
    UserMenuOutletComponent.prototype.refreshCurrentUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var currentUserResult;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.user.current()];
                    case 1:
                        currentUserResult = _a.sent();
                        this.ui.currentUser.next(currentUserResult.data);
                        return [2 /*return*/];
                }
            });
        });
    };
    UserMenuOutletComponent.prototype.byPriority = function (item) {
        return -item.priority;
    };
    UserMenuOutletComponent.ctorParameters = function () { return [
        { type: AppStateService },
        { type: BsModalService },
        { type: ModalService },
        { type: LoginService },
        { type: TranslateService },
        { type: TenantService },
        { type: AlertService },
        { type: UserService },
        { type: OptionsService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], UserMenuOutletComponent.prototype, "items", void 0);
    UserMenuOutletComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-user-menu-outlet',
            template: "<div\n  dropdown\n  class=\"dropdown\"\n>\n  <button\n    class=\"main-header-button c8y-dropdown dropdown-toggle\"\n    dropdownToggle\n    style=\"white-space: nowrap\"\n  >\n    <span\n      class=\"hidden-xs text-truncate right-m\"\n      style=\"vertical-align: text-bottom; max-width: 104px; display: inline-block\"\n      title=\"{{ui.currentUser | async | shortenUserName}}\"\n    >\n      {{ui.currentUser | async | shortenUserName}}\n    </span>\n    <i\n      [c8yIcon]=\"'c8y-user'\"\n      class=\"fa-2x\"\n    ></i>\n  </button>\n  <ul\n    *dropdownMenu\n    class=\"dropdown-menu dropdown-menu-right\"\n    style=\"max-width: 240px;\"\n  >\n    <ng-container *ngFor=\"let item of getSortedItems()\">\n      <ng-container *ngIf=\"item.template\">\n        <ng-container *c8yOutlet=\"item.template\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!item.template\">\n        <li (click)=\"item.click()\">\n          <a style=\"cursor: pointer\" [attr.href]=\"item.link\" [attr.target]=\"item.target\">\n            <i [c8yIcon]=\"item.icon\"></i>\n            {{item.label | translate}}\n          </a>\n        </li>\n      </ng-container>\n    </ng-container>\n    <li\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n      role=\"separator\"\n      class=\"divider\"\n    ></li>\n    <li\n      class=\"dropdown-header bg-gray-white\"\n      style=\"white-space: normal; margin-top: -1px;\"\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n    >\n      <div class=\"flex-row\">\n        <i\n          [c8yIcon]=\"'info-circle'\"\n          class=\"text-info flex-item-v-start\"\n          style=\"margin: 1px 6px 0 -3px; font-size: 14px;\"\n        ></i>\n        <span class=\"text-muted text-truncate\">\n          {{'Tenant ID' | translate}}: <strong>\n            <span class=\"text-primary\" (click)=\"$event.stopPropagation(); copyIt(ui.currentTenant.value.name)\"\n              style=\"cursor: pointer\">\n              {{ui.currentTenant.value.name}}&nbsp;<i [c8yIcon]=\"'clipboard'\"></i></span>\n            </strong><br>\n          {{'Backend' | translate}}: <strong>{{(ui.state$ | async).versions.backend}}</strong><br>\n          {{'UI' | translate }}: <strong>{{ui.uiVersion}}</strong>\n        </span>\n      </div>\n    </li>\n  </ul>\n</div>\n\n<!-- the default items -->\n<c8y-user-menu-item\n  [icon]=\"'user'\"\n  [label]=\"'User settings' | translate\"\n  [priority]=\"20\"\n  (click)=\"editUser()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  [icon]=\"'sign-out'\"\n  [label]=\"'Logout' | translate\"\n  (click)=\"logout()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"!(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'phone'\"\n  [label]=\"'Activate support' | translate\"\n  (click)=\"activateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'phone'\"\n  [label]=\"'Deactivate support' | translate\"\n  (click)=\"deactivateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.state$ | async).supportUrl\"\n  [icon]=\"'question-circle'\"\n  [link]=\"(ui.state$ | async).supportUrl\"\n  [target]=\"'_blank'\"\n  [label]=\"'Request support' | translate\"\n></c8y-user-menu-item>\n"
        })
    ], UserMenuOutletComponent);
    return UserMenuOutletComponent;
}());
export { UserMenuOutletComponent };
//# sourceMappingURL=data:application/json;base64,