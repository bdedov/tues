import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BulkOperationsService, C8Y_BULK_TYPE_FRAGMENTS } from '@c8y/ngx-components/operations/bulk-operations-service';
import { omit } from 'lodash-es';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
var SingleOperationItemComponent = /** @class */ (function () {
    function SingleOperationItemComponent(bulkOperationsService, alertService) {
        this.bulkOperationsService = bulkOperationsService;
        this.alertService = alertService;
        this.device = {};
        this.showIfTextTruncated = false;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
        this.singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.readOnly = false;
    }
    SingleOperationItemComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.iconClass = this.getIconClass();
                        _a = this;
                        return [4 /*yield*/, this.getDeviceMO(this.operation.deviceId)];
                    case 1:
                        _a.device = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.ngAfterViewInit = function () {
        this.isTextTruncated();
    };
    SingleOperationItemComponent.prototype.retrySingleOperation = function (singleOperation) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationToCreate, er_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        operationToCreate = omit(singleOperation, [
                            'id',
                            'self',
                            'status',
                            'failureReason',
                            'creationTime',
                            'delivery'
                        ]);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.bulkOperationsService.createSingleOperation(operationToCreate)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Operation created.'));
                        return [3 /*break*/, 4];
                    case 3:
                        er_1 = _a.sent();
                        this.alertService.addServerFailure(er_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.getIconClass = function () {
        var _this = this;
        return this.singleOperationsStatusProperties.find(function (operationProperties) { return operationProperties.label.toUpperCase() === _this.operation.status; }).iconClass;
    };
    SingleOperationItemComponent.prototype.getDeviceMO = function (deviceId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var inventoryMO;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.bulkOperationsService.getManagedObject(deviceId)];
                    case 1:
                        inventoryMO = _a.sent();
                        if (inventoryMO) {
                            return [2 /*return*/, inventoryMO.data];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.isTextTruncated = function () {
        if (this.operation.failureReason) {
            var el = this.failureReasonRef.nativeElement;
            this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;
        }
    };
    SingleOperationItemComponent.ctorParameters = function () { return [
        { type: BulkOperationsService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], SingleOperationItemComponent.prototype, "operation", void 0);
    tslib_1.__decorate([
        Input()
    ], SingleOperationItemComponent.prototype, "readOnly", void 0);
    tslib_1.__decorate([
        ViewChild('failureReason', { static: true })
    ], SingleOperationItemComponent.prototype, "failureReasonRef", void 0);
    SingleOperationItemComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-single-operation-item',
            template: "<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{'content-flex-80': !readOnly, 'content-flex-50': readOnly}\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 v-fit-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i><span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"
        })
    ], SingleOperationItemComponent);
    return SingleOperationItemComponent;
}());
export { SingleOperationItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGstb3BlcmF0aW9ucy1saXN0L3NpbmdsZS1vcGVyYXRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzVELE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsdUJBQXVCLEVBQ3hCLE1BQU0sd0RBQXdELENBQUM7QUFDaEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQU1wRztJQVlFLHNDQUNVLHFCQUE0QyxFQUM1QyxZQUEwQjtRQUQxQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBYnBDLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFDWix3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIsK0JBQTBCLEdBQUcsc0JBQXNCLENBQUM7UUFDcEQscUNBQWdDLEdBQUcsMkJBQTJCLENBQUM7UUFLL0QsYUFBUSxHQUFZLEtBQUssQ0FBQztJQU12QixDQUFDO0lBRUUsK0NBQVEsR0FBZDs7Ozs7O3dCQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO3dCQUNyQyxLQUFBLElBQUksQ0FBQTt3QkFBVSxxQkFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUE7O3dCQUE3RCxHQUFLLE1BQU0sR0FBRyxTQUErQyxDQUFDOzs7OztLQUMvRDtJQUVELHNEQUFlLEdBQWY7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVLLDJEQUFvQixHQUExQixVQUEyQixlQUFlOzs7Ozs7d0JBQ2xDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUU7NEJBQzlDLElBQUk7NEJBQ0osTUFBTTs0QkFDTixRQUFROzRCQUNSLGVBQWU7NEJBQ2YsY0FBYzs0QkFDZCxVQUFVO3lCQUNYLENBQUMsQ0FBQzs7Ozt3QkFHRCxxQkFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsRUFBQTs7d0JBQXpFLFNBQXlFLENBQUM7d0JBQzFFLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7Ozs7d0JBRXpELElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsSUFBRSxDQUFDLENBQUM7Ozs7OztLQUUxQztJQUVELG1EQUFZLEdBQVo7UUFBQSxpQkFJQztRQUhDLE9BQU8sSUFBSSxDQUFDLGdDQUFnQyxDQUFDLElBQUksQ0FDL0MsVUFBQSxtQkFBbUIsSUFBSSxPQUFBLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxLQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBakUsQ0FBaUUsQ0FDekYsQ0FBQyxTQUFTLENBQUM7SUFDZCxDQUFDO0lBRWEsa0RBQVcsR0FBekIsVUFBMEIsUUFBUTs7Ozs7NEJBQ1oscUJBQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFBOzt3QkFBekUsV0FBVyxHQUFHLFNBQTJEO3dCQUMvRSxJQUFJLFdBQVcsRUFBRTs0QkFDZixzQkFBTyxXQUFXLENBQUMsSUFBSSxFQUFDO3lCQUN6Qjs7Ozs7S0FDRjtJQUVPLHNEQUFlLEdBQXZCO1FBQ0UsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRTtZQUNoQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDO1lBQy9DLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxFQUFFLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQzNFO0lBQ0gsQ0FBQzs7Z0JBakRnQyxxQkFBcUI7Z0JBQzlCLFlBQVk7O0lBUHBDO1FBREMsS0FBSyxFQUFFO21FQUNjO0lBRXRCO1FBREMsS0FBSyxFQUFFO2tFQUNrQjtJQUNvQjtRQUE3QyxTQUFTLENBQUMsZUFBZSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDOzBFQUE4QjtJQVZoRSw0QkFBNEI7UUFKeEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDJCQUEyQjtZQUNyQyx1c0RBQXFEO1NBQ3RELENBQUM7T0FDVyw0QkFBNEIsQ0ErRHhDO0lBQUQsbUNBQUM7Q0FBQSxBQS9ERCxJQStEQztTQS9EWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7XG4gIEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgQzhZX0JVTEtfVFlQRV9GUkFHTUVOVFNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IG9taXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgU0lOR0xFX09QX1NUQVRVU19OQU1FUywgU0lOR0xFX09QX1NUQVRVU19QUk9QRVJUSUVTIH0gZnJvbSAnLi9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2luZ2xlLW9wZXJhdGlvbi1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpbmdsZS1vcGVyYXRpb24taXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uSXRlbUNvbXBvbmVudCB7XG4gIGRldmljZSA9IHt9O1xuICBzaG93SWZUZXh0VHJ1bmNhdGVkID0gZmFsc2U7XG4gIHNpbmdsZU9wZXJhdGlvblN0YXR1c05hbWVzID0gU0lOR0xFX09QX1NUQVRVU19OQU1FUztcbiAgc2luZ2xlT3BlcmF0aW9uc1N0YXR1c1Byb3BlcnRpZXMgPSBTSU5HTEVfT1BfU1RBVFVTX1BST1BFUlRJRVM7XG4gIGljb25DbGFzczogc3RyaW5nO1xuICBASW5wdXQoKVxuICBvcGVyYXRpb246IElPcGVyYXRpb247XG4gIEBJbnB1dCgpXG4gIHJlYWRPbmx5OiBib29sZWFuID0gZmFsc2U7XG4gIEBWaWV3Q2hpbGQoJ2ZhaWx1cmVSZWFzb24nLCB7IHN0YXRpYzogdHJ1ZSB9KSBmYWlsdXJlUmVhc29uUmVmOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvbnNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pY29uQ2xhc3MgPSB0aGlzLmdldEljb25DbGFzcygpO1xuICAgIHRoaXMuZGV2aWNlID0gYXdhaXQgdGhpcy5nZXREZXZpY2VNTyh0aGlzLm9wZXJhdGlvbi5kZXZpY2VJZCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5pc1RleHRUcnVuY2F0ZWQoKTtcbiAgfVxuXG4gIGFzeW5jIHJldHJ5U2luZ2xlT3BlcmF0aW9uKHNpbmdsZU9wZXJhdGlvbikge1xuICAgIGNvbnN0IG9wZXJhdGlvblRvQ3JlYXRlID0gb21pdChzaW5nbGVPcGVyYXRpb24sIFtcbiAgICAgICdpZCcsXG4gICAgICAnc2VsZicsXG4gICAgICAnc3RhdHVzJyxcbiAgICAgICdmYWlsdXJlUmVhc29uJyxcbiAgICAgICdjcmVhdGlvblRpbWUnLFxuICAgICAgJ2RlbGl2ZXJ5J1xuICAgIF0pO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmNyZWF0ZVNpbmdsZU9wZXJhdGlvbihvcGVyYXRpb25Ub0NyZWF0ZSk7XG4gICAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKGdldHRleHQoJ09wZXJhdGlvbiBjcmVhdGVkLicpKTtcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShlcik7XG4gICAgfVxuICB9XG5cbiAgZ2V0SWNvbkNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZU9wZXJhdGlvbnNTdGF0dXNQcm9wZXJ0aWVzLmZpbmQoXG4gICAgICBvcGVyYXRpb25Qcm9wZXJ0aWVzID0+IG9wZXJhdGlvblByb3BlcnRpZXMubGFiZWwudG9VcHBlckNhc2UoKSA9PT0gdGhpcy5vcGVyYXRpb24uc3RhdHVzXG4gICAgKS5pY29uQ2xhc3M7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGdldERldmljZU1PKGRldmljZUlkKSB7XG4gICAgY29uc3QgaW52ZW50b3J5TU8gPSBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRNYW5hZ2VkT2JqZWN0KGRldmljZUlkKTtcbiAgICBpZiAoaW52ZW50b3J5TU8pIHtcbiAgICAgIHJldHVybiBpbnZlbnRvcnlNTy5kYXRhO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaXNUZXh0VHJ1bmNhdGVkKCkge1xuICAgIGlmICh0aGlzLm9wZXJhdGlvbi5mYWlsdXJlUmVhc29uKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuZmFpbHVyZVJlYXNvblJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgdGhpcy5zaG93SWZUZXh0VHJ1bmNhdGVkID0gZWwub2Zmc2V0V2lkdGggPCBlbC5zY3JvbGxXaWR0aCA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==