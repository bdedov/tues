import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext } from '@c8y/ngx-components';
var TabsFactory = /** @class */ (function () {
    function TabsFactory(router) {
        this.router = router;
    }
    TabsFactory.prototype.get = function () {
        var tabs = [];
        if (this.router.url.match(/devicecontrol/g)) {
            tabs.push({
                path: 'devicecontrol/single',
                label: gettext('Single operations'),
                icon: 'c8y-icon c8y-icon-device-control',
                priority: 1100,
                orientation: 'horizontal'
            });
            tabs.push({
                path: 'devicecontrol/bulk',
                label: gettext('Bulk operations'),
                icon: 'c8y-icon c8y-icon-energy',
                priority: 1050,
                orientation: 'horizontal'
            });
        }
        return tabs;
    };
    TabsFactory.ctorParameters = function () { return [
        { type: Router }
    ]; };
    TabsFactory = tslib_1.__decorate([
        Injectable()
    ], TabsFactory);
    return TabsFactory;
}());
export { TabsFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiZmFjdG9yaWVzL3RhYnMuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLE9BQU8sRUFBbUIsTUFBTSxxQkFBcUIsQ0FBQztBQUcvRDtJQUNFLHFCQUFtQixNQUFjO1FBQWQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUFHLENBQUM7SUFDckMseUJBQUcsR0FBSDtRQUNFLElBQU0sSUFBSSxHQUFVLEVBQUUsQ0FBQztRQUN2QixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQzNDLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQ1IsSUFBSSxFQUFFLHNCQUFzQjtnQkFDNUIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztnQkFDbkMsSUFBSSxFQUFFLGtDQUFrQztnQkFDeEMsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsV0FBVyxFQUFFLFlBQVk7YUFDbkIsQ0FBQyxDQUFDO1lBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFDUixJQUFJLEVBQUUsb0JBQW9CO2dCQUMxQixLQUFLLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDO2dCQUNqQyxJQUFJLEVBQUUsMEJBQTBCO2dCQUNoQyxRQUFRLEVBQUUsSUFBSTtnQkFDZCxXQUFXLEVBQUUsWUFBWTthQUNuQixDQUFDLENBQUM7U0FDWDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBckIwQixNQUFNOztJQUR0QixXQUFXO1FBRHZCLFVBQVUsRUFBRTtPQUNBLFdBQVcsQ0F1QnZCO0lBQUQsa0JBQUM7Q0FBQSxBQXZCRCxJQXVCQztTQXZCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBnZXR0ZXh0LCBUYWIsIFRhYkZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRhYnNGYWN0b3J5IGltcGxlbWVudHMgVGFiRmFjdG9yeSB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHJvdXRlcjogUm91dGVyKSB7fVxyXG4gIGdldCgpIHtcclxuICAgIGNvbnN0IHRhYnM6IFRhYltdID0gW107XHJcbiAgICBpZiAodGhpcy5yb3V0ZXIudXJsLm1hdGNoKC9kZXZpY2Vjb250cm9sL2cpKSB7XHJcbiAgICAgIHRhYnMucHVzaCh7XHJcbiAgICAgICAgcGF0aDogJ2RldmljZWNvbnRyb2wvc2luZ2xlJyxcclxuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnU2luZ2xlIG9wZXJhdGlvbnMnKSxcclxuICAgICAgICBpY29uOiAnYzh5LWljb24gYzh5LWljb24tZGV2aWNlLWNvbnRyb2wnLFxyXG4gICAgICAgIHByaW9yaXR5OiAxMTAwLFxyXG4gICAgICAgIG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCdcclxuICAgICAgfSBhcyBUYWIpO1xyXG4gICAgICB0YWJzLnB1c2goe1xyXG4gICAgICAgIHBhdGg6ICdkZXZpY2Vjb250cm9sL2J1bGsnLFxyXG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdCdWxrIG9wZXJhdGlvbnMnKSxcclxuICAgICAgICBpY29uOiAnYzh5LWljb24gYzh5LWljb24tZW5lcmd5JyxcclxuICAgICAgICBwcmlvcml0eTogMTA1MCxcclxuICAgICAgICBvcmllbnRhdGlvbjogJ2hvcml6b250YWwnXHJcbiAgICAgIH0gYXMgVGFiKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGFicztcclxuICB9XHJcbn1cclxuIl19