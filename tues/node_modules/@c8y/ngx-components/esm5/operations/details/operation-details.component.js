import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { gettext } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
var OperationDetailsComponent = /** @class */ (function () {
    function OperationDetailsComponent(formBuilder) {
        var _a;
        this.formBuilder = formBuilder;
        this.titlePlaceholder = gettext('e.g. Reset factory settings');
        this.descriptionPlaceholder = gettext('e.g. Reset factory settings of all devices of model XYZ');
        this.placeholders = (_a = {},
            _a[BulkOperationType.SOFTWARE] = {
                title: gettext('e.g. Cloud connectivity software'),
                description: gettext('e.g. Cloud connectivity software applied to devices with type c8y_Linux')
            },
            _a[BulkOperationType.FIRMWARE] = {
                title: gettext('e.g. Firmware for hardware revision b'),
                description: gettext('e.g. Firmware for hardware revision b applied to devices with type c8y_Linux')
            },
            _a[BulkOperationType.CONFIGURATION] = {
                title: gettext('e.g. Host configuration c8y_Linux'),
                description: gettext('e.g. Host configuration applied to devices with type c8y_Linux')
            },
            _a[BulkOperationType.DEVICE_PROFILE] = {
                title: gettext('e.g. Device profile for c8y_Linux devices'),
                description: gettext('e.g. Device profile applied to devices with type c8y_Linux')
            },
            _a);
    }
    Object.defineProperty(OperationDetailsComponent.prototype, "bulkOperationType", {
        set: function (bulkOperationType) {
            this.titlePlaceholder = get(this.placeholders[bulkOperationType], 'title');
            this.descriptionPlaceholder = get(this.placeholders[bulkOperationType], 'description');
        },
        enumerable: true,
        configurable: true
    });
    OperationDetailsComponent.prototype.ngOnInit = function () {
        var config = {
            description: ['', Validators.required],
            note: [''],
            schedule: []
        };
        this.fgOperationDescription = this.formBuilder.group(config);
    };
    OperationDetailsComponent.ctorParameters = function () { return [
        { type: FormBuilder }
    ]; };
    tslib_1.__decorate([
        Input()
    ], OperationDetailsComponent.prototype, "bulkOperationType", null);
    OperationDetailsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-operation-details',
            template: "<div [formGroup]=\"fgOperationDescription\">\n  <c8y-form-group>\n    <label translate>Title</label>\n    <input\n      formControlName=\"description\"\n      class=\"form-control\"\n      [placeholder]=\"titlePlaceholder | translate\"\n      required\n    />\n    <c8y-messages *ngIf=\"fgOperationDescription?.controls?.description?.errors\">\n      <c8y-message *ngIf=\"fgOperationDescription.controls.description.errors.required\" translate>\n        This field is required.\n      </c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n  <c8y-form-group>\n    <label translate>Description</label>\n    <textarea\n      formControlName=\"note\"\n      class=\"form-control\"\n      [placeholder]=\"descriptionPlaceholder | translate\"\n      rows=\"3\"\n    ></textarea>\n  </c8y-form-group>\n  <c8y-operation-scheduler formControlName=\"schedule\"></c8y-operation-scheduler>\n</div>\n"
        })
    ], OperationDetailsComponent);
    return OperationDetailsComponent;
}());
export { OperationDetailsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLWRldGFpbHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiZGV0YWlscy9vcGVyYXRpb24tZGV0YWlscy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BFLE9BQU8sRUFBbUIsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNoQyxPQUFPLEVBQ0wsaUJBQWlCLEVBRWxCLE1BQU0sd0RBQXdELENBQUM7QUFNaEU7SUFvQ0UsbUNBQW9CLFdBQXdCOztRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQTdCNUMscUJBQWdCLEdBQVcsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFDbEUsMkJBQXNCLEdBQVcsT0FBTyxDQUN0Qyx5REFBeUQsQ0FDMUQsQ0FBQztRQUdNLGlCQUFZO1lBQ2xCLEdBQUMsaUJBQWlCLENBQUMsUUFBUSxJQUFHO2dCQUM1QixLQUFLLEVBQUUsT0FBTyxDQUFDLGtDQUFrQyxDQUFDO2dCQUNsRCxXQUFXLEVBQUUsT0FBTyxDQUNsQix5RUFBeUUsQ0FDMUU7YUFDRjtZQUNELEdBQUMsaUJBQWlCLENBQUMsUUFBUSxJQUFHO2dCQUM1QixLQUFLLEVBQUUsT0FBTyxDQUFDLHVDQUF1QyxDQUFDO2dCQUN2RCxXQUFXLEVBQUUsT0FBTyxDQUNsQiw4RUFBOEUsQ0FDL0U7YUFDRjtZQUNELEdBQUMsaUJBQWlCLENBQUMsYUFBYSxJQUFHO2dCQUNqQyxLQUFLLEVBQUUsT0FBTyxDQUFDLG1DQUFtQyxDQUFDO2dCQUNuRCxXQUFXLEVBQUUsT0FBTyxDQUFDLGdFQUFnRSxDQUFDO2FBQ3ZGO1lBQ0QsR0FBQyxpQkFBaUIsQ0FBQyxjQUFjLElBQUc7Z0JBQ2xDLEtBQUssRUFBRSxPQUFPLENBQUMsMkNBQTJDLENBQUM7Z0JBQzNELFdBQVcsRUFBRSxPQUFPLENBQUMsNERBQTRELENBQUM7YUFDbkY7Z0JBQ0Q7SUFFNkMsQ0FBQztJQWxDaEQsc0JBQUksd0RBQWlCO2FBQXJCLFVBQXNCLGlCQUFvQztZQUN4RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUMzRSxJQUFJLENBQUMsc0JBQXNCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN6RixDQUFDOzs7T0FBQTtJQWlDRCw0Q0FBUSxHQUFSO1FBQ0UsSUFBTSxNQUFNLEdBQXNDO1lBQ2hELFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDO1lBQ3RDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNWLFFBQVEsRUFBRSxFQUFFO1NBQ2IsQ0FBQztRQUVGLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvRCxDQUFDOztnQkFWZ0MsV0FBVzs7SUFsQzVDO1FBREMsS0FBSyxFQUFFO3NFQUlQO0lBTFUseUJBQXlCO1FBSnJDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsdTRCQUErQztTQUNoRCxDQUFDO09BQ1cseUJBQXlCLENBK0NyQztJQUFELGdDQUFDO0NBQUEsQUEvQ0QsSUErQ0M7U0EvQ1kseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRm9ybUdyb3VwQ29uZmlnLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHtcbiAgQnVsa09wZXJhdGlvblR5cGUsXG4gIE9wZXJhdGlvbkRldGFpbHNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LW9wZXJhdGlvbi1kZXRhaWxzJyxcbiAgdGVtcGxhdGVVcmw6ICdvcGVyYXRpb24tZGV0YWlscy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uRGV0YWlsc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIHNldCBidWxrT3BlcmF0aW9uVHlwZShidWxrT3BlcmF0aW9uVHlwZTogQnVsa09wZXJhdGlvblR5cGUpIHtcbiAgICB0aGlzLnRpdGxlUGxhY2Vob2xkZXIgPSBnZXQodGhpcy5wbGFjZWhvbGRlcnNbYnVsa09wZXJhdGlvblR5cGVdLCAndGl0bGUnKTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uUGxhY2Vob2xkZXIgPSBnZXQodGhpcy5wbGFjZWhvbGRlcnNbYnVsa09wZXJhdGlvblR5cGVdLCAnZGVzY3JpcHRpb24nKTtcbiAgfVxuXG4gIHRpdGxlUGxhY2Vob2xkZXI6IHN0cmluZyA9IGdldHRleHQoJ2UuZy4gUmVzZXQgZmFjdG9yeSBzZXR0aW5ncycpO1xuICBkZXNjcmlwdGlvblBsYWNlaG9sZGVyOiBzdHJpbmcgPSBnZXR0ZXh0KFxuICAgICdlLmcuIFJlc2V0IGZhY3Rvcnkgc2V0dGluZ3Mgb2YgYWxsIGRldmljZXMgb2YgbW9kZWwgWFlaJ1xuICApO1xuICBmZ09wZXJhdGlvbkRlc2NyaXB0aW9uOiBGb3JtR3JvdXA7XG5cbiAgcHJpdmF0ZSBwbGFjZWhvbGRlcnM6IHsgW2tleSBpbiBCdWxrT3BlcmF0aW9uVHlwZV06IHsgdGl0bGU6IHN0cmluZzsgZGVzY3JpcHRpb246IHN0cmluZyB9IH0gPSB7XG4gICAgW0J1bGtPcGVyYXRpb25UeXBlLlNPRlRXQVJFXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gQ2xvdWQgY29ubmVjdGl2aXR5IHNvZnR3YXJlJyksXG4gICAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dChcbiAgICAgICAgJ2UuZy4gQ2xvdWQgY29ubmVjdGl2aXR5IHNvZnR3YXJlIGFwcGxpZWQgdG8gZGV2aWNlcyB3aXRoIHR5cGUgYzh5X0xpbnV4J1xuICAgICAgKVxuICAgIH0sXG4gICAgW0J1bGtPcGVyYXRpb25UeXBlLkZJUk1XQVJFXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gRmlybXdhcmUgZm9yIGhhcmR3YXJlIHJldmlzaW9uIGInKSxcbiAgICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KFxuICAgICAgICAnZS5nLiBGaXJtd2FyZSBmb3IgaGFyZHdhcmUgcmV2aXNpb24gYiBhcHBsaWVkIHRvIGRldmljZXMgd2l0aCB0eXBlIGM4eV9MaW51eCdcbiAgICAgIClcbiAgICB9LFxuICAgIFtCdWxrT3BlcmF0aW9uVHlwZS5DT05GSUdVUkFUSU9OXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gSG9zdCBjb25maWd1cmF0aW9uIGM4eV9MaW51eCcpLFxuICAgICAgZGVzY3JpcHRpb246IGdldHRleHQoJ2UuZy4gSG9zdCBjb25maWd1cmF0aW9uIGFwcGxpZWQgdG8gZGV2aWNlcyB3aXRoIHR5cGUgYzh5X0xpbnV4JylcbiAgICB9LFxuICAgIFtCdWxrT3BlcmF0aW9uVHlwZS5ERVZJQ0VfUFJPRklMRV06IHtcbiAgICAgIHRpdGxlOiBnZXR0ZXh0KCdlLmcuIERldmljZSBwcm9maWxlIGZvciBjOHlfTGludXggZGV2aWNlcycpLFxuICAgICAgZGVzY3JpcHRpb246IGdldHRleHQoJ2UuZy4gRGV2aWNlIHByb2ZpbGUgYXBwbGllZCB0byBkZXZpY2VzIHdpdGggdHlwZSBjOHlfTGludXgnKVxuICAgIH1cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcikge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBjb25maWc6IEZvcm1Hcm91cENvbmZpZzxPcGVyYXRpb25EZXRhaWxzPiA9IHtcbiAgICAgIGRlc2NyaXB0aW9uOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuICAgICAgbm90ZTogWycnXSxcbiAgICAgIHNjaGVkdWxlOiBbXVxuICAgIH07XG5cbiAgICB0aGlzLmZnT3BlcmF0aW9uRGVzY3JpcHRpb24gPSB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKGNvbmZpZyk7XG4gIH1cbn1cbiJdfQ==