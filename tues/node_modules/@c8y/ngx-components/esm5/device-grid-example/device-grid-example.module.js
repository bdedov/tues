import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule, CommonModule, HOOK_NAVIGATOR_NODES } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { DeviceGridExampleNavigationFactory } from './device-grid-example-navigation.factory';
import { DeviceGridExampleGuard } from './device-grid-example-guard';
import { DeviceGridExampleComponent } from './device-grid-example.component';
var routes = [
    {
        path: 'grids/device-grid',
        component: DeviceGridExampleComponent,
        canActivate: [DeviceGridExampleGuard]
    }
];
var DeviceGridExampleModule = /** @class */ (function () {
    function DeviceGridExampleModule() {
    }
    DeviceGridExampleModule = tslib_1.__decorate([
        NgModule({
            imports: [
                CoreModule,
                CommonModule,
                DeviceGridModule,
                RouterModule.forRoot(routes, { useHash: true })
            ],
            declarations: [DeviceGridExampleComponent],
            entryComponents: [DeviceGridExampleComponent],
            exports: [],
            providers: [
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useClass: DeviceGridExampleNavigationFactory,
                    multi: true
                },
                DeviceGridExampleGuard
            ]
        })
    ], DeviceGridExampleModule);
    return DeviceGridExampleModule;
}());
export { DeviceGridExampleModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWdyaWQtZXhhbXBsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2RldmljZS1ncmlkLWV4YW1wbGUvIiwic291cmNlcyI6WyJkZXZpY2UtZ3JpZC1leGFtcGxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQVMsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUVuRSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUM5RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUU3RSxJQUFNLE1BQU0sR0FBWTtJQUN0QjtRQUNFLElBQUksRUFBRSxtQkFBbUI7UUFDekIsU0FBUyxFQUFFLDBCQUEwQjtRQUNyQyxXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztLQUN0QztDQUNGLENBQUM7QUFxQkY7SUFBQTtJQUFzQyxDQUFDO0lBQTFCLHVCQUF1QjtRQW5CbkMsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFO2dCQUNQLFVBQVU7Z0JBQ1YsWUFBWTtnQkFDWixnQkFBZ0I7Z0JBQ2hCLFlBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDO2FBQ2hEO1lBQ0QsWUFBWSxFQUFFLENBQUMsMEJBQTBCLENBQUM7WUFDMUMsZUFBZSxFQUFFLENBQUMsMEJBQTBCLENBQUM7WUFDN0MsT0FBTyxFQUFFLEVBQUU7WUFDWCxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjtvQkFDN0IsUUFBUSxFQUFFLGtDQUFrQztvQkFDNUMsS0FBSyxFQUFFLElBQUk7aUJBQ1o7Z0JBQ0Qsc0JBQXNCO2FBQ3ZCO1NBQ0YsQ0FBQztPQUNXLHVCQUF1QixDQUFHO0lBQUQsOEJBQUM7Q0FBQSxBQUF2QyxJQUF1QztTQUExQix1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGUsIFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBDb21tb25Nb2R1bGUsIEhPT0tfTkFWSUdBVE9SX05PREVTIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZCc7XG5cbmltcG9ydCB7IERldmljZUdyaWRFeGFtcGxlTmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL2RldmljZS1ncmlkLWV4YW1wbGUtbmF2aWdhdGlvbi5mYWN0b3J5JztcbmltcG9ydCB7IERldmljZUdyaWRFeGFtcGxlR3VhcmQgfSBmcm9tICcuL2RldmljZS1ncmlkLWV4YW1wbGUtZ3VhcmQnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZEV4YW1wbGVDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1ncmlkLWV4YW1wbGUuY29tcG9uZW50JztcblxuY29uc3Qgcm91dGVzOiBSb3V0ZVtdID0gW1xuICB7XG4gICAgcGF0aDogJ2dyaWRzL2RldmljZS1ncmlkJyxcbiAgICBjb21wb25lbnQ6IERldmljZUdyaWRFeGFtcGxlQ29tcG9uZW50LFxuICAgIGNhbkFjdGl2YXRlOiBbRGV2aWNlR3JpZEV4YW1wbGVHdWFyZF1cbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvcmVNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIERldmljZUdyaWRNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzLCB7IHVzZUhhc2g6IHRydWUgfSlcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbRGV2aWNlR3JpZEV4YW1wbGVDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZXZpY2VHcmlkRXhhbXBsZUNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBEZXZpY2VHcmlkRXhhbXBsZU5hdmlnYXRpb25GYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIERldmljZUdyaWRFeGFtcGxlR3VhcmRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VHcmlkRXhhbXBsZU1vZHVsZSB7fVxuIl19