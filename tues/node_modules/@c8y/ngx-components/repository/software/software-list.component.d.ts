import { Router, ActivatedRoute } from '@angular/router';
import { BsModalService } from 'ngx-bootstrap/modal';
import { TranslateService } from '@ngx-translate/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { IResultList, IManagedObject } from '@c8y/client';
import { ModalService, AlertService } from '@c8y/ngx-components';
import { RepositoryService } from '../repository.service';
export declare class SoftwareListComponent {
    private repositoryService;
    private modalService;
    private bsModalService;
    private translateService;
    private alertService;
    private router;
    private activatedRoute;
    textFilter$: BehaviorSubject<string>;
    reload$: BehaviorSubject<void>;
    reloading: boolean;
    softwares$: Observable<IResultList<IManagedObject>>;
    isLegacy: any;
    readonly DEVICE_TYPE_NOT_AVAILABLE: string;
    constructor(repositoryService: RepositoryService, modalService: ModalService, bsModalService: BsModalService, translateService: TranslateService, alertService: AlertService, router: Router, activatedRoute: ActivatedRoute);
    getSoftwares(partialText?: string): Promise<IResultList<IManagedObject>>;
    addSoftware(): void;
    editSoftware(software: IManagedObject): void;
    deleteSoftware(software: IManagedObject): Promise<void>;
    getBaseVersionsCount$(software: IManagedObject): Observable<number | string>;
    getDeviceTypeTitle(software: IManagedObject): string;
}
