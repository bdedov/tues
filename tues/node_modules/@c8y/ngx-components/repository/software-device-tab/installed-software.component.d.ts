import { EventEmitter } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BsModalService } from 'ngx-bootstrap/modal';
import { IManagedObject, InventoryService, IOperation } from '@c8y/client';
import { RepositoryService } from '../repository.service';
import { DeviceSoftware, DeviceSoftwareChange } from './../repository.model';
export declare class InstalledSoftwareComponent {
    private repository;
    private inventory;
    private bsModal;
    softwareList: DeviceSoftware[];
    deviceSoftwareChanges: DeviceSoftwareChange[];
    deviceSoftwareChangesOperation: IOperation;
    deviceSoftwareChangesInProgress: boolean;
    deviceTypeQuery: object;
    changes: EventEmitter<DeviceSoftwareChange[]>;
    constructor(repository: RepositoryService, inventory: InventoryService, bsModal: BsModalService);
    installSoftware(): void;
    updateSoftware(softwareToRemove: any): void;
    removeSoftware(softwareToRemove: any): void;
    getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>): import("rxjs").Observable<IManagedObject[]>;
    getSingleSoftwareWithVersions$(software: DeviceSoftware): import("rxjs").Observable<IManagedObject[]>;
    attachVersions(softwareList: IManagedObject[]): IManagedObject[];
    displaySoftwareSelectModal(initialStateOverrides: any): any;
    emitSoftwareInstall(items: DeviceSoftwareChange[]): void;
    emitSoftwareRemoval(items: DeviceSoftwareChange[]): void;
}
