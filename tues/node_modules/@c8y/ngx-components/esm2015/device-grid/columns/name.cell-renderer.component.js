import * as tslib_1 from "tslib";
import { Component, forwardRef, Inject } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { DeviceGridService } from '../device-grid.service';
let NameCellRendererComponent = class NameCellRendererComponent {
    constructor(context, deviceGridService) {
        this.context = context;
        this.deviceGridService = deviceGridService;
    }
};
NameCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext },
    { type: DeviceGridService, decorators: [{ type: Inject, args: [forwardRef(() => DeviceGridService),] }] }
];
NameCellRendererComponent = tslib_1.__decorate([
    Component({
        template: `
    <a
      [href]="deviceGridService.getDeviceHref(context.item)"
      title="{{ deviceGridService.getProperName(context.item) }}"
      class="interact"
    >
      {{ deviceGridService.getProperName(context.item) }}
    </a>
  `
    }),
    tslib_1.__param(1, Inject(forwardRef(() => DeviceGridService)))
], NameCellRendererComponent);
export { NameCellRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQvIiwic291cmNlcyI6WyJjb2x1bW5zL25hbWUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQWEzRCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUF5QjtJQUNwQyxZQUNTLE9BQTRCLEVBQ2lCLGlCQUFvQztRQURqRixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUNpQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0lBQ3ZGLENBQUM7Q0FDTCxDQUFBOztZQUhtQixtQkFBbUI7WUFDb0MsaUJBQWlCLHVCQUF2RixNQUFNLFNBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDOztBQUhsQyx5QkFBeUI7SUFYckMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO0tBQ0YsQ0FBQztJQUlHLG1CQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFBO0dBSG5DLHlCQUF5QixDQUtyQztTQUxZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkU2VydmljZSB9IGZyb20gJy4uL2RldmljZS1ncmlkLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICA8YVxuICAgICAgW2hyZWZdPVwiZGV2aWNlR3JpZFNlcnZpY2UuZ2V0RGV2aWNlSHJlZihjb250ZXh0Lml0ZW0pXCJcbiAgICAgIHRpdGxlPVwie3sgZGV2aWNlR3JpZFNlcnZpY2UuZ2V0UHJvcGVyTmFtZShjb250ZXh0Lml0ZW0pIH19XCJcbiAgICAgIGNsYXNzPVwiaW50ZXJhY3RcIlxuICAgID5cbiAgICAgIHt7IGRldmljZUdyaWRTZXJ2aWNlLmdldFByb3Blck5hbWUoY29udGV4dC5pdGVtKSB9fVxuICAgIDwvYT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBOYW1lQ2VsbFJlbmRlcmVyQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNvbnRleHQ6IENlbGxSZW5kZXJlckNvbnRleHQsXG4gICAgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IERldmljZUdyaWRTZXJ2aWNlKSkgcHVibGljIGRldmljZUdyaWRTZXJ2aWNlOiBEZXZpY2VHcmlkU2VydmljZVxuICApIHt9XG59XG4iXX0=