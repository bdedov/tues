import * as tslib_1 from "tslib";
import { Component, forwardRef, Inject } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { DeviceGridService } from '../device-grid.service';
let SerialNumberCellRendererComponent = class SerialNumberCellRendererComponent {
    constructor(context, deviceGridService) {
        this.context = context;
        this.deviceGridService = deviceGridService;
    }
};
SerialNumberCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext },
    { type: DeviceGridService, decorators: [{ type: Inject, args: [forwardRef(() => DeviceGridService),] }] }
];
SerialNumberCellRendererComponent = tslib_1.__decorate([
    Component({
        template: `
    {{ deviceGridService.getSerialNumber(context.item) }}
  `
    }),
    tslib_1.__param(1, Inject(forwardRef(() => DeviceGridService)))
], SerialNumberCellRendererComponent);
export { SerialNumberCellRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsLW51bWJlci5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQvIiwic291cmNlcyI6WyJjb2x1bW5zL3NlcmlhbC1udW1iZXIuY2VsbC1yZW5kZXJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU8zRCxJQUFhLGlDQUFpQyxHQUE5QyxNQUFhLGlDQUFpQztJQUM1QyxZQUNTLE9BQTRCLEVBQ2lCLGlCQUFvQztRQURqRixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUNpQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0lBQ3ZGLENBQUM7Q0FDTCxDQUFBOztZQUhtQixtQkFBbUI7WUFDb0MsaUJBQWlCLHVCQUF2RixNQUFNLFNBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDOztBQUhsQyxpQ0FBaUM7SUFMN0MsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFOztHQUVUO0tBQ0YsQ0FBQztJQUlHLG1CQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFBO0dBSG5DLGlDQUFpQyxDQUs3QztTQUxZLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkU2VydmljZSB9IGZyb20gJy4uL2RldmljZS1ncmlkLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICB7eyBkZXZpY2VHcmlkU2VydmljZS5nZXRTZXJpYWxOdW1iZXIoY29udGV4dC5pdGVtKSB9fVxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNlcmlhbE51bWJlckNlbGxSZW5kZXJlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0LFxuICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEZXZpY2VHcmlkU2VydmljZSkpIHB1YmxpYyBkZXZpY2VHcmlkU2VydmljZTogRGV2aWNlR3JpZFNlcnZpY2VcbiAgKSB7fVxufVxuIl19