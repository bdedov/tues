import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Base } from './export-schedules.interface';
import { CronService } from './cron.service';
let CronComponent = class CronComponent {
    constructor(cronService) {
        this.cronService = cronService;
        this.emitter = new EventEmitter();
        this.emittedCron = {
            valid: false,
            cron: ''
        };
        this.base = Base.Initial;
        //
    }
    ngOnInit() {
        this.daysOfWeekPosix = this.cronService.daysOfWeekPosix;
        this.daysOfMonth = this.cronService.daysOfMonth;
        this.months = this.cronService.months;
        this.hours = this.cronService.hours;
        this.minutes = this.cronService.minutes;
        this.intervals = this.cronService.intervals;
        this.cronConfig = this.cronService.generateCronConfig(this.cronIn);
        this.base = this.cronService.getBase(this.cronConfig);
    }
    onChangeSelect() {
        this.cronService.clearNextModels(this.base, this.cronConfig);
        this.emittedCron.valid = this.cronService.validateModels(this.base, this.cronConfig);
        this.emittedCron.cron = this.cronService.generateCron(this.cronConfig);
        this.emitter.emit(this.emittedCron);
    }
};
CronComponent.ctorParameters = () => [
    { type: CronService }
];
tslib_1.__decorate([
    Input()
], CronComponent.prototype, "cronIn", void 0);
tslib_1.__decorate([
    Output()
], CronComponent.prototype, "emitter", void 0);
CronComponent = tslib_1.__decorate([
    Component({
        selector: 'cron',
        template: "<div class=\"cron-wrap\">\n  <div class=\"form-group smart-cron-job-every\">\n    <label for=\"smart-cron-job-every\" class=\"control-label\" translate>\n      Interval\n    </label>\n    <div class=\"\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          class=\"cron-select form-control\"\n          id=\"smart-cron-job-every\"\n          [(ngModel)]=\"base\"\n          required=\"true\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngIf=\"base === 1\" value=\"1\" translate>\n            Select\u2026\n          </option>\n          <option *ngFor=\"let baseInterval of intervals\" [ngValue]=\"baseInterval.value\">\n            {{ baseInterval.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group smart-cron-job-on col-md-6\" *ngIf=\"base == 4\">\n      <label class=\"control-label\" for=\"smart-cron-job-on\" translate>\n        Day\n      </label>\n\n      <div class=\"c8y-select-wrapper\">\n        <select\n          class=\"cron-select form-control day-value\"\n          id=\"smart-cron-job-on\"\n          [(ngModel)]=\"cronConfig.weekday\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngFor=\"let dayOfWeek of daysOfWeekPosix\" [ngValue]=\"dayOfWeek.value\">\n            {{ dayOfWeek.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n\n    <div class=\"form-group smart-cron-job-of col-md-6\" *ngIf=\"base == 6\">\n      <label for=\"smart-cron-job-of\" class=\"control-label\" translate>\n        Month\n      </label>\n      <div>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            id=\"smart-cron-job-of\"\n            class=\"cron-select form-control month-value\"\n            [(ngModel)]=\"cronConfig.month\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let month of months\" [ngValue]=\"month.value\">\n              {{ month.label | translate }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group smart-cron-job-on-the col-md-6\" *ngIf=\"base >= 5\">\n      <label for=\"smart-cron-job-on-the\" class=\"control-label\" translate>\n        Day\n      </label>\n      <div>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            id=\"smart-cron-job-on-the\"\n            class=\"cron-select form-control day-of-month-value\"\n            [(ngModel)]=\"cronConfig.day\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let dayOfMonth of daysOfMonth\" [ngValue]=\"dayOfMonth.value\">\n              {{ dayOfMonth.label | translate }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-at\" *ngIf=\"base >= 2\">\n    <label for=\"smart-cron-job-at-hour\" class=\"control-label\">\n      <span *ngIf=\"base >= 3\" translate>Time</span>\n      <span *ngIf=\"base < 3\" translate>Minutes</span>\n    </label>\n    <div>\n      <div class=\"form-inline\">\n        <div class=\"c8y-select-wrapper\" *ngIf=\"base >= 3\">\n          <select\n            id=\"smart-cron-job-at-hour\"\n            class=\"cron-select form-control hour-value\"\n            [(ngModel)]=\"cronConfig.hour\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let hour of hours\" [ngValue]=\"hour.value\">\n              {{ hour.value | number: '2.0-0' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n        <span *ngIf=\"base >= 3\"> : </span>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            class=\"cron-select form-control minute-value\"\n            id=\"smart-cron-job-at-minute\"\n            [(ngModel)]=\"cronConfig.minute\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let minute of minutes\" [ngValue]=\"minute.value\">\n              {{ minute.value | number: '2.0-0' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    })
], CronComponent);
export { CronComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Jvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9ydHMvIiwic291cmNlcyI6WyJjcm9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQTJCLElBQUksRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzdFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU03QyxJQUFhLGFBQWEsR0FBMUIsTUFBYSxhQUFhO0lBa0J4QixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQWhCbEMsWUFBTyxHQUE4QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xFLGdCQUFXLEdBQWdCO1lBQ3pCLEtBQUssRUFBRSxLQUFLO1lBQ1osSUFBSSxFQUFFLEVBQUU7U0FDVCxDQUFDO1FBRUYsU0FBSSxHQUFTLElBQUksQ0FBQyxPQUFPLENBQUM7UUFXeEIsRUFBRTtJQUNKLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQztRQUN4RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7UUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztRQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFFNUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JGLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN2RSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDdEMsQ0FBQztDQUNGLENBQUE7O1lBdEJrQyxXQUFXOztBQWpCbkM7SUFBUixLQUFLLEVBQUU7NkNBQWdCO0FBQ2Q7SUFBVCxNQUFNLEVBQUU7OENBQXlEO0FBRnZELGFBQWE7SUFKekIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLE1BQU07UUFDaEIsd3ZJQUFvQztLQUNyQyxDQUFDO0dBQ1csYUFBYSxDQXdDekI7U0F4Q1ksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVtaXR0ZWRDcm9uLCBDcm9uQ29uZmlnLCBCYXNlIH0gZnJvbSAnLi9leHBvcnQtc2NoZWR1bGVzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBDcm9uU2VydmljZSB9IGZyb20gJy4vY3Jvbi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3JvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jcm9uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBDcm9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgY3JvbkluOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBlbWl0dGVyOiBFdmVudEVtaXR0ZXI8RW1pdHRlZENyb24+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBlbWl0dGVkQ3JvbjogRW1pdHRlZENyb24gPSB7XG4gICAgdmFsaWQ6IGZhbHNlLFxuICAgIGNyb246ICcnXG4gIH07XG5cbiAgYmFzZTogQmFzZSA9IEJhc2UuSW5pdGlhbDtcbiAgY3JvbkNvbmZpZzogQ3JvbkNvbmZpZztcblxuICBkYXlzT2ZXZWVrUG9zaXg6IGFueVtdO1xuICBkYXlzT2ZNb250aDogYW55W107XG4gIG1vbnRoczogYW55W107XG4gIGhvdXJzOiBhbnlbXTtcbiAgbWludXRlczogYW55W107XG4gIGludGVydmFsczogYW55W107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjcm9uU2VydmljZTogQ3JvblNlcnZpY2UpIHtcbiAgICAvL1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5kYXlzT2ZXZWVrUG9zaXggPSB0aGlzLmNyb25TZXJ2aWNlLmRheXNPZldlZWtQb3NpeDtcbiAgICB0aGlzLmRheXNPZk1vbnRoID0gdGhpcy5jcm9uU2VydmljZS5kYXlzT2ZNb250aDtcbiAgICB0aGlzLm1vbnRocyA9IHRoaXMuY3JvblNlcnZpY2UubW9udGhzO1xuICAgIHRoaXMuaG91cnMgPSB0aGlzLmNyb25TZXJ2aWNlLmhvdXJzO1xuICAgIHRoaXMubWludXRlcyA9IHRoaXMuY3JvblNlcnZpY2UubWludXRlcztcbiAgICB0aGlzLmludGVydmFscyA9IHRoaXMuY3JvblNlcnZpY2UuaW50ZXJ2YWxzO1xuXG4gICAgdGhpcy5jcm9uQ29uZmlnID0gdGhpcy5jcm9uU2VydmljZS5nZW5lcmF0ZUNyb25Db25maWcodGhpcy5jcm9uSW4pO1xuICAgIHRoaXMuYmFzZSA9IHRoaXMuY3JvblNlcnZpY2UuZ2V0QmFzZSh0aGlzLmNyb25Db25maWcpO1xuICB9XG5cbiAgb25DaGFuZ2VTZWxlY3QoKSB7XG4gICAgdGhpcy5jcm9uU2VydmljZS5jbGVhck5leHRNb2RlbHModGhpcy5iYXNlLCB0aGlzLmNyb25Db25maWcpO1xuICAgIHRoaXMuZW1pdHRlZENyb24udmFsaWQgPSB0aGlzLmNyb25TZXJ2aWNlLnZhbGlkYXRlTW9kZWxzKHRoaXMuYmFzZSwgdGhpcy5jcm9uQ29uZmlnKTtcbiAgICB0aGlzLmVtaXR0ZWRDcm9uLmNyb24gPSB0aGlzLmNyb25TZXJ2aWNlLmdlbmVyYXRlQ3Jvbih0aGlzLmNyb25Db25maWcpO1xuICAgIHRoaXMuZW1pdHRlci5lbWl0KHRoaXMuZW1pdHRlZENyb24pO1xuICB9XG59XG4iXX0=