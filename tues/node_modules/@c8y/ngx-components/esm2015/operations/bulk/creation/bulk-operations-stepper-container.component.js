import * as tslib_1 from "tslib";
import { Component, OnInit, ViewContainerRef, ViewChild, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
let BulkOperationsStepperContainerComponent = class BulkOperationsStepperContainerComponent {
    constructor(activatedRoute, bulkOpsService, resolver, changeDetector) {
        this.activatedRoute = activatedRoute;
        this.bulkOpsService = bulkOpsService;
        this.resolver = resolver;
        this.changeDetector = changeDetector;
    }
    ngOnInit() {
        this.activatedRoute.params.subscribe(params => {
            if (params && params.type) {
                this.bulkOperationType = params.type;
                this.component = this.bulkOpsService
                    .getBulkTypes()
                    .find(element => element.path.includes(this.bulkOperationType)).component;
                this.changeDetector.detectChanges();
                this.createComponent(this.component);
            }
        });
    }
    createComponent(component) {
        if (component) {
            const factory = this.resolver.resolveComponentFactory(component);
            this.container.createComponent(factory);
        }
    }
};
BulkOperationsStepperContainerComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: BulkOperationsService },
    { type: ComponentFactoryResolver },
    { type: ChangeDetectorRef }
];
tslib_1.__decorate([
    ViewChild('container', { static: false, read: ViewContainerRef })
], BulkOperationsStepperContainerComponent.prototype, "container", void 0);
BulkOperationsStepperContainerComponent = tslib_1.__decorate([
    Component({
        selector: 'bulk-operations-stepper-container',
        template: "<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <ng-container [ngSwitch]=\"bulkOperationType\">\n    <!-- Cases: software, firmware and configuration are default c8y-types -->\n    <div *ngSwitchCase=\"'software'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-software></c8y-stepper-bulk-type-software>\n    </div>\n    <div *ngSwitchCase=\"'firmware'\" class=\"d-contents\">\n      <c8y-stepper-firmware></c8y-stepper-firmware>\n    </div>\n    <div *ngSwitchCase=\"'configuration'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-configuration></c8y-stepper-bulk-type-configuration>\n    </div>\n    <div *ngSwitchCase=\"'device-profile'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-device-profile></c8y-stepper-bulk-type-device-profile>\n    </div>\n    <!-- This case is for 3rd-party-dev defined types -->\n    <div *ngSwitchDefault class=\"d-contents\">\n      <template #container></template>\n    </div>\n  </ng-container>\n</div>\n"
    })
], BulkOperationsStepperContainerComponent);
export { BulkOperationsStepperContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGsvY3JlYXRpb24vYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLFNBQVMsRUFDVCx3QkFBd0IsRUFDeEIsaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQU0vRixJQUFhLHVDQUF1QyxHQUFwRCxNQUFhLHVDQUF1QztJQUtsRCxZQUNVLGNBQThCLEVBQzlCLGNBQXFDLEVBQ3JDLFFBQWtDLEVBQ2xDLGNBQWlDO1FBSGpDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUFDckMsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQW1CO0lBQ3hDLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzVDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUVyQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjO3FCQUNqQyxZQUFZLEVBQUU7cUJBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7Z0JBRTVFLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQ3BDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sZUFBZSxDQUFDLFNBQVM7UUFDL0IsSUFBSSxTQUFTLEVBQUU7WUFDYixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2pFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBM0IyQixjQUFjO1lBQ2QscUJBQXFCO1lBQzNCLHdCQUF3QjtZQUNsQixpQkFBaUI7O0FBUndCO0lBQWxFLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDOzBFQUFXO0FBRGxFLHVDQUF1QztJQUpuRCxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsbUNBQW1DO1FBQzdDLHlnQ0FBK0Q7S0FDaEUsQ0FBQztHQUNXLHVDQUF1QyxDQWlDbkQ7U0FqQ1ksdUNBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdDb250YWluZXJSZWYsXG4gIFZpZXdDaGlsZCxcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uc1N0ZXBwZXJDb250YWluZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7IHN0YXRpYzogZmFsc2UsIHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSkgY29udGFpbmVyO1xuICBidWxrT3BlcmF0aW9uVHlwZTogc3RyaW5nO1xuXG4gIHByaXZhdGUgY29tcG9uZW50OiBhbnk7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHByaXZhdGUgYnVsa09wc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWZcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuYWN0aXZhdGVkUm91dGUucGFyYW1zLnN1YnNjcmliZShwYXJhbXMgPT4ge1xuICAgICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMudHlwZSkge1xuICAgICAgICB0aGlzLmJ1bGtPcGVyYXRpb25UeXBlID0gcGFyYW1zLnR5cGU7XG5cbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlXG4gICAgICAgICAgLmdldEJ1bGtUeXBlcygpXG4gICAgICAgICAgLmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LnBhdGguaW5jbHVkZXModGhpcy5idWxrT3BlcmF0aW9uVHlwZSkpLmNvbXBvbmVudDtcblxuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KSB7XG4gICAgaWYgKGNvbXBvbmVudCkge1xuICAgICAgY29uc3QgZmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoY29tcG9uZW50KTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmNyZWF0ZUNvbXBvbmVudChmYWN0b3J5KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==