import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BaseStepperComponent } from '../base-stepper.component';
let StepperBulkTypeDeviceProfile = class StepperBulkTypeDeviceProfile extends BaseStepperComponent {
    goToConfirmSelection($event) {
        this.deviceTypes = get(this.selectedDeviceProfile, 'c8y_Filter.type');
        $event.stepper.next();
    }
    onDeviceProfileSelected(selectedItem) {
        this.selectedDeviceProfile = selectedItem;
    }
    retrieveOperationPrototype() {
        return {
            name: gettext('Apply device profile'),
            description: get(this.selectedDeviceProfile, 'name'),
            prototype: {
                description: `Apply device profile: ${this.selectedDeviceProfile.name}`,
                profileId: this.selectedDeviceProfile.id,
                profileName: this.selectedDeviceProfile.name,
                c8y_DeviceProfile: this.selectedDeviceProfile.c8y_DeviceProfile
            }
        };
    }
};
StepperBulkTypeDeviceProfile = tslib_1.__decorate([
    Component({
        selector: 'c8y-stepper-bulk-type-device-profile',
        template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select device profile' | translate; \n      completed: !!selectedDeviceProfile;\n      buttonsDisabled: !selectedDeviceProfile; \n      onNext: goToConfirmSelection.bind(this)\"\n  >\n    <c8y-select-device-profile-step\n      (deviceProfile)=\"onDeviceProfileSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-device-profile-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected device profile' | translate\">\n    <c8y-confirm-device-profile-selection-step\n      class=\"d-contents\"\n      [selectedDeviceProfile]=\"selectedDeviceProfile\"\n    ></c8y-confirm-device-profile-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
    })
], StepperBulkTypeDeviceProfile);
export { StepperBulkTypeDeviceProfile };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZGV2aWNlLXByb2ZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiYnVsay9jcmVhdGlvbi9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFPakUsSUFBYSw0QkFBNEIsR0FBekMsTUFBYSw0QkFBNkIsU0FBUSxvQkFBb0I7SUFHcEUsb0JBQW9CLENBQUMsTUFBOEM7UUFDakUsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDdEUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsdUJBQXVCLENBQUMsWUFBWTtRQUNsQyxJQUFJLENBQUMscUJBQXFCLEdBQUcsWUFBWSxDQUFDO0lBQzVDLENBQUM7SUFFUywwQkFBMEI7UUFDbEMsT0FBTztZQUNMLElBQUksRUFBRSxPQUFPLENBQUMsc0JBQXNCLENBQUM7WUFDckMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUUsTUFBTSxDQUFDO1lBQ3BELFNBQVMsRUFBRztnQkFDVixXQUFXLEVBQUUseUJBQXlCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3ZFLFNBQVMsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsRUFBRTtnQkFDeEMsV0FBVyxFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJO2dCQUM1QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCO2FBQ3RDO1NBQzVCLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQXhCWSw0QkFBNEI7SUFKeEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHNDQUFzQztRQUNoRCwrdkJBQThEO0tBQy9ELENBQUM7R0FDVyw0QkFBNEIsQ0F3QnhDO1NBeEJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENka1N0ZXAgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJT3BlcmF0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQzh5U3RlcHBlciwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJhc2VTdGVwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS1zdGVwcGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPcGVyYXRpb25EZXRhaWxzIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXN0ZXBwZXItYnVsay10eXBlLWRldmljZS1wcm9maWxlJyxcbiAgdGVtcGxhdGVVcmw6ICdzdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3RlcHBlckJ1bGtUeXBlRGV2aWNlUHJvZmlsZSBleHRlbmRzIEJhc2VTdGVwcGVyQ29tcG9uZW50IHtcbiAgc2VsZWN0ZWREZXZpY2VQcm9maWxlOiBJTWFuYWdlZE9iamVjdDtcblxuICBnb1RvQ29uZmlybVNlbGVjdGlvbigkZXZlbnQ6IHsgc3RlcHBlcjogQzh5U3RlcHBlcjsgc3RlcDogQ2RrU3RlcCB9KSB7XG4gICAgdGhpcy5kZXZpY2VUeXBlcyA9IGdldCh0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZSwgJ2M4eV9GaWx0ZXIudHlwZScpO1xuICAgICRldmVudC5zdGVwcGVyLm5leHQoKTtcbiAgfVxuXG4gIG9uRGV2aWNlUHJvZmlsZVNlbGVjdGVkKHNlbGVjdGVkSXRlbSkge1xuICAgIHRoaXMuc2VsZWN0ZWREZXZpY2VQcm9maWxlID0gc2VsZWN0ZWRJdGVtO1xuICB9XG5cbiAgcHJvdGVjdGVkIHJldHJpZXZlT3BlcmF0aW9uUHJvdG90eXBlKCk6IE9wZXJhdGlvbkRldGFpbHMge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBnZXR0ZXh0KCdBcHBseSBkZXZpY2UgcHJvZmlsZScpLFxuICAgICAgZGVzY3JpcHRpb246IGdldCh0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZSwgJ25hbWUnKSxcbiAgICAgIHByb3RvdHlwZTogKHtcbiAgICAgICAgZGVzY3JpcHRpb246IGBBcHBseSBkZXZpY2UgcHJvZmlsZTogJHt0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZS5uYW1lfWAsXG4gICAgICAgIHByb2ZpbGVJZDogdGhpcy5zZWxlY3RlZERldmljZVByb2ZpbGUuaWQsXG4gICAgICAgIHByb2ZpbGVOYW1lOiB0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZS5uYW1lLFxuICAgICAgICBjOHlfRGV2aWNlUHJvZmlsZTogdGhpcy5zZWxlY3RlZERldmljZVByb2ZpbGUuYzh5X0RldmljZVByb2ZpbGVcbiAgICAgIH0gYXMgdW5rbm93bikgYXMgSU9wZXJhdGlvblxuICAgIH07XG4gIH1cbn1cbiJdfQ==