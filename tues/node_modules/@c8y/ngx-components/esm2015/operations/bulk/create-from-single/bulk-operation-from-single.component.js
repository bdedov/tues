import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { get } from 'lodash-es';
import { BaseStepperComponent } from '../base-stepper.component';
import { BulkOperationsService, OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
let BulkOperationFromSingleComponent = class BulkOperationFromSingleComponent extends BaseStepperComponent {
    constructor(activatedRoute, bulkOperationService) {
        super();
        this.activatedRoute = activatedRoute;
        this.bulkOperationService = bulkOperationService;
    }
    retrieveOperationPrototype() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const prototype = (yield this.bulkOperationService.getOperation(this.activatedRoute.snapshot.params.operationId)).data;
            return {
                description: get(prototype, 'description'),
                prototype
            };
        });
    }
};
BulkOperationFromSingleComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: BulkOperationsService }
];
BulkOperationFromSingleComponent = tslib_1.__decorate([
    Component({
        selector: 'bulk-operation-from-single',
        template: "<c8y-bulk-operation-stepper> </c8y-bulk-operation-stepper>\n"
    })
], BulkOperationFromSingleComponent);
export { BulkOperationFromSingleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiYnVsay9jcmVhdGUtZnJvbS1zaW5nbGUvYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pFLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsZ0JBQWdCLEVBQ2pCLE1BQU0sd0RBQXdELENBQUM7QUFNaEUsSUFBYSxnQ0FBZ0MsR0FBN0MsTUFBYSxnQ0FBaUMsU0FBUSxvQkFBb0I7SUFDeEUsWUFDVSxjQUE4QixFQUM5QixvQkFBMkM7UUFFbkQsS0FBSyxFQUFFLENBQUM7UUFIQSxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF1QjtJQUdyRCxDQUFDO0lBRWUsMEJBQTBCOztZQUN4QyxNQUFNLFNBQVMsR0FBZSxDQUFDLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FDekUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FDaEQsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUVSLE9BQU87Z0JBQ0wsV0FBVyxFQUFFLEdBQUcsQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDO2dCQUMxQyxTQUFTO2FBQ1YsQ0FBQztRQUNKLENBQUM7S0FBQTtDQUNGLENBQUE7O1lBaEIyQixjQUFjO1lBQ1IscUJBQXFCOztBQUgxQyxnQ0FBZ0M7SUFKNUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDRCQUE0QjtRQUN0Qyx3RUFBd0Q7S0FDekQsQ0FBQztHQUNXLGdDQUFnQyxDQWtCNUM7U0FsQlksZ0NBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IElPcGVyYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQmFzZVN0ZXBwZXJDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlLXN0ZXBwZXIuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdidWxrLW9wZXJhdGlvbi1mcm9tLXNpbmdsZScsXG4gIHRlbXBsYXRlVXJsOiAnYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25Gcm9tU2luZ2xlQ29tcG9uZW50IGV4dGVuZHMgQmFzZVN0ZXBwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25TZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2VcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBhc3luYyByZXRyaWV2ZU9wZXJhdGlvblByb3RvdHlwZSgpOiBQcm9taXNlPE9wZXJhdGlvbkRldGFpbHM+IHtcbiAgICBjb25zdCBwcm90b3R5cGU6IElPcGVyYXRpb24gPSAoYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uU2VydmljZS5nZXRPcGVyYXRpb24oXG4gICAgICB0aGlzLmFjdGl2YXRlZFJvdXRlLnNuYXBzaG90LnBhcmFtcy5vcGVyYXRpb25JZFxuICAgICkpLmRhdGE7XG5cbiAgICByZXR1cm4ge1xuICAgICAgZGVzY3JpcHRpb246IGdldChwcm90b3R5cGUsICdkZXNjcmlwdGlvbicpLFxuICAgICAgcHJvdG90eXBlXG4gICAgfTtcbiAgfVxufVxuIl19