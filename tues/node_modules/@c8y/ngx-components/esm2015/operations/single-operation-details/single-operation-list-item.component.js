import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { assign, get } from 'lodash-es';
import { IOperation, OperationService, OperationStatus } from '@c8y/client';
import { AlertService, ListItemComponent, Tab, gettext, operationStatusClasses, operationStatusIcons } from '@c8y/ngx-components';
let SingleOperationListItemComponent = class SingleOperationListItemComponent {
    constructor(router, operationService, alertService) {
        this.router = router;
        this.operationService = operationService;
        this.alertService = alertService;
        this.collapsed = true;
        this.readOnly = false;
        this.tabs = [];
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.OperationStatus = OperationStatus;
    }
    get displayedDescription() {
        const commandText = get(this.operation, 'c8y_Command.text');
        const opDescription = get(this.operation, 'description');
        return commandText || opDescription || gettext('(no command text or description available)');
    }
    ngOnInit() {
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.tabs = [
            {
                label: gettext('Details'),
                icon: 'asterisk',
                template: this.detailsTabTemplate
            },
            {
                label: gettext('History of changes'),
                icon: 'archive',
                template: this.historyOfChangesTabTemplate
            }
        ];
        this.selectedTab = this.tabs[0];
    }
    scheduleAsBulkOperation() {
        this.router.navigateByUrl(`/devicecontrol/single/create-bulk/${this.operation.id}`);
    }
    cancel() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const operationAfterUpdate = (yield this.operationService.update({
                    id: this.operation.id,
                    status: OperationStatus.FAILED,
                    failureReason: gettext('Operation cancelled by user.')
                })).data;
                assign(this.operation, operationAfterUpdate);
                this.alertService.success(gettext('Operation cancelled.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
};
SingleOperationListItemComponent.ctorParameters = () => [
    { type: Router },
    { type: OperationService },
    { type: AlertService }
];
tslib_1.__decorate([
    Input()
], SingleOperationListItemComponent.prototype, "operation", void 0);
tslib_1.__decorate([
    Input()
], SingleOperationListItemComponent.prototype, "collapsed", void 0);
tslib_1.__decorate([
    Input()
], SingleOperationListItemComponent.prototype, "readOnly", void 0);
tslib_1.__decorate([
    ViewChild('listItem', { static: true })
], SingleOperationListItemComponent.prototype, "listItem", void 0);
tslib_1.__decorate([
    ViewChild('details', { static: true })
], SingleOperationListItemComponent.prototype, "detailsTabTemplate", void 0);
tslib_1.__decorate([
    ViewChild('historyOfChanges', { static: true })
], SingleOperationListItemComponent.prototype, "historyOfChangesTabTemplate", void 0);
SingleOperationListItemComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-single-operation-list-item',
        template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !collapsed }\"\n  [collapsed]=\"collapsed\"\n  #listItem\n  id=\"single-operation-{{ operation.id }}\"\n>\n  <c8y-li-icon>\n    <i [c8yIcon]=\"statusIcons[operation.status]\" [ngClass]=\"statusClasses[operation.status]\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-6\">\n      <span class=\"text-truncate\" title=\"{{ displayedDescription | translate }}\">\n        {{ displayedDescription | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\"></div>\n    <div class=\"col-3\">\n      <div class=\"m-r-16\">\n        <small class=\"icon-flex\">\n          <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n          <span>\n            {{ operation.creationTime | c8yDate }}\n          </span>\n        </small>\n      </div>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"exchange\" class=\"m-r-4\"></i>\n        <span>\n          <a href=\"#/device/{{ operation.deviceId }}\">{{ operation.deviceName }}</a>\n        </span>\n      </small>\n    </div>\n  </div>\n  <ng-container>\n    <c8y-li-action\n      label=\"{{ 'Schedule as bulk operation' | translate }}\"\n      (click)=\"scheduleAsBulkOperation()\"\n      icon=\"c8y-energy\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"!readOnly && operation.status === OperationStatus.PENDING\"\n      label=\"{{ 'Cancel`operation`' | translate }}\"\n      (click)=\"cancel()\"\n      icon=\"times\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <div class=\"tabContainer\">\n      <ul class=\"nav nav-tabs nav-tabsc8y\">\n        <li [ngClass]=\"{ active: selectedTab === tab }\" *ngFor=\"let tab of tabs\">\n          <button [title]=\"tab.label | translate\" (click)=\"selectedTab = tab\" class=\"btn-clean\">\n            <i [c8yIcon]=\"tab.icon\"></i>\n            <span class=\"txt\">{{ tab.label | translate }}</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <ng-container *ngTemplateOutlet=\"selectedTab.template\"></ng-container>\n\n    <ng-template #details>\n      <c8y-single-operation-details [operation]=\"operation\" [readOnly]=\"readOnly\">\n      </c8y-single-operation-details>\n    </ng-template>\n\n    <ng-template #historyOfChanges>\n      <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n    </ng-template>\n  </c8y-li-collapse>\n</c8y-li>\n"
    })
], SingleOperationListItemComponent);
export { SingleOperationListItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsic2luZ2xlLW9wZXJhdGlvbi1kZXRhaWxzL3NpbmdsZS1vcGVyYXRpb24tbGlzdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN4QyxPQUFPLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM1RSxPQUFPLEVBQ0wsWUFBWSxFQUNaLGlCQUFpQixFQUNqQixHQUFHLEVBQ0gsT0FBTyxFQUNQLHNCQUFzQixFQUN0QixvQkFBb0IsRUFDckIsTUFBTSxxQkFBcUIsQ0FBQztBQU03QixJQUFhLGdDQUFnQyxHQUE3QyxNQUFhLGdDQUFnQztJQXFCM0MsWUFDVSxNQUFjLEVBQ2QsZ0JBQWtDLEVBQ2xDLFlBQTBCO1FBRjFCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBdEIzQixjQUFTLEdBQVksSUFBSSxDQUFDO1FBQzFCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFNbkMsU0FBSSxHQUFVLEVBQUUsQ0FBQztRQUVqQixnQkFBVyxHQUFHLG9CQUFvQixDQUFDO1FBQ25DLGtCQUFhLEdBQUcsc0JBQXNCLENBQUM7UUFDdkMsb0JBQWUsR0FBRyxlQUFlLENBQUM7SUFZL0IsQ0FBQztJQVZKLElBQUksb0JBQW9CO1FBQ3RCLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDNUQsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDekQsT0FBTyxXQUFXLElBQUksYUFBYSxJQUFJLE9BQU8sQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO0lBQy9GLENBQUM7SUFRRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQztRQUN4QyxJQUFJLENBQUMsYUFBYSxHQUFHLHNCQUFzQixDQUFDO1FBRTVDLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDVjtnQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQztnQkFDekIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLFFBQVEsRUFBRSxJQUFJLENBQUMsa0JBQWtCO2FBQzNCO1lBQ1I7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztnQkFDcEMsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsUUFBUSxFQUFFLElBQUksQ0FBQywyQkFBMkI7YUFDcEM7U0FDVCxDQUFDO1FBQ0YsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCx1QkFBdUI7UUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMscUNBQXFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBRUssTUFBTTs7WUFDVixJQUFJO2dCQUNGLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUM7b0JBQy9ELEVBQUUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7b0JBQ3JCLE1BQU0sRUFBRSxlQUFlLENBQUMsTUFBTTtvQkFDOUIsYUFBYSxFQUFFLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQztpQkFDdkQsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLG9CQUFvQixDQUFDLENBQUM7Z0JBQzdDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUM7YUFDNUQ7WUFBQyxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQztLQUFBO0NBQ0YsQ0FBQTs7WUF6Q21CLE1BQU07WUFDSSxnQkFBZ0I7WUFDcEIsWUFBWTs7QUF2QjNCO0lBQVIsS0FBSyxFQUFFO21FQUFnQztBQUMvQjtJQUFSLEtBQUssRUFBRTttRUFBMkI7QUFDMUI7SUFBUixLQUFLLEVBQUU7a0VBQTJCO0FBRU07SUFBeEMsU0FBUyxDQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrRUFBNkI7QUFDN0I7SUFBdkMsU0FBUyxDQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs0RUFBeUI7QUFDZjtJQUFoRCxTQUFTLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7cUZBQWtDO0FBUHZFLGdDQUFnQztJQUo1QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZ0NBQWdDO1FBQzFDLGlrRkFBMEQ7S0FDM0QsQ0FBQztHQUNXLGdDQUFnQyxDQStENUM7U0EvRFksZ0NBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBhc3NpZ24sIGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uLCBPcGVyYXRpb25TZXJ2aWNlLCBPcGVyYXRpb25TdGF0dXMgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQge1xuICBBbGVydFNlcnZpY2UsXG4gIExpc3RJdGVtQ29tcG9uZW50LFxuICBUYWIsXG4gIGdldHRleHQsXG4gIG9wZXJhdGlvblN0YXR1c0NsYXNzZXMsXG4gIG9wZXJhdGlvblN0YXR1c0ljb25zXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vc2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNpbmdsZU9wZXJhdGlvbkxpc3RJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgb3BlcmF0aW9uOiBQYXJ0aWFsPElPcGVyYXRpb24+O1xuICBASW5wdXQoKSBjb2xsYXBzZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKSByZWFkT25seTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBWaWV3Q2hpbGQoJ2xpc3RJdGVtJywgeyBzdGF0aWM6IHRydWUgfSkgbGlzdEl0ZW06IExpc3RJdGVtQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCdkZXRhaWxzJywgeyBzdGF0aWM6IHRydWUgfSkgZGV0YWlsc1RhYlRlbXBsYXRlOiBhbnk7XG4gIEBWaWV3Q2hpbGQoJ2hpc3RvcnlPZkNoYW5nZXMnLCB7IHN0YXRpYzogdHJ1ZSB9KSBoaXN0b3J5T2ZDaGFuZ2VzVGFiVGVtcGxhdGU6IGFueTtcblxuICB0YWJzOiBUYWJbXSA9IFtdO1xuICBzZWxlY3RlZFRhYjogVGFiO1xuICBzdGF0dXNJY29ucyA9IG9wZXJhdGlvblN0YXR1c0ljb25zO1xuICBzdGF0dXNDbGFzc2VzID0gb3BlcmF0aW9uU3RhdHVzQ2xhc3NlcztcbiAgT3BlcmF0aW9uU3RhdHVzID0gT3BlcmF0aW9uU3RhdHVzO1xuXG4gIGdldCBkaXNwbGF5ZWREZXNjcmlwdGlvbigpIHtcbiAgICBjb25zdCBjb21tYW5kVGV4dCA9IGdldCh0aGlzLm9wZXJhdGlvbiwgJ2M4eV9Db21tYW5kLnRleHQnKTtcbiAgICBjb25zdCBvcERlc2NyaXB0aW9uID0gZ2V0KHRoaXMub3BlcmF0aW9uLCAnZGVzY3JpcHRpb24nKTtcbiAgICByZXR1cm4gY29tbWFuZFRleHQgfHwgb3BEZXNjcmlwdGlvbiB8fCBnZXR0ZXh0KCcobm8gY29tbWFuZCB0ZXh0IG9yIGRlc2NyaXB0aW9uIGF2YWlsYWJsZSknKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSBvcGVyYXRpb25TZXJ2aWNlOiBPcGVyYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc3RhdHVzSWNvbnMgPSBvcGVyYXRpb25TdGF0dXNJY29ucztcbiAgICB0aGlzLnN0YXR1c0NsYXNzZXMgPSBvcGVyYXRpb25TdGF0dXNDbGFzc2VzO1xuXG4gICAgdGhpcy50YWJzID0gW1xuICAgICAge1xuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRGV0YWlscycpLFxuICAgICAgICBpY29uOiAnYXN0ZXJpc2snLFxuICAgICAgICB0ZW1wbGF0ZTogdGhpcy5kZXRhaWxzVGFiVGVtcGxhdGVcbiAgICAgIH0gYXMgVGFiLFxuICAgICAge1xuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnSGlzdG9yeSBvZiBjaGFuZ2VzJyksXG4gICAgICAgIGljb246ICdhcmNoaXZlJyxcbiAgICAgICAgdGVtcGxhdGU6IHRoaXMuaGlzdG9yeU9mQ2hhbmdlc1RhYlRlbXBsYXRlXG4gICAgICB9IGFzIFRhYlxuICAgIF07XG4gICAgdGhpcy5zZWxlY3RlZFRhYiA9IHRoaXMudGFic1swXTtcbiAgfVxuXG4gIHNjaGVkdWxlQXNCdWxrT3BlcmF0aW9uKCkge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwoYC9kZXZpY2Vjb250cm9sL3NpbmdsZS9jcmVhdGUtYnVsay8ke3RoaXMub3BlcmF0aW9uLmlkfWApO1xuICB9XG5cbiAgYXN5bmMgY2FuY2VsKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBvcGVyYXRpb25BZnRlclVwZGF0ZSA9IChhd2FpdCB0aGlzLm9wZXJhdGlvblNlcnZpY2UudXBkYXRlKHtcbiAgICAgICAgaWQ6IHRoaXMub3BlcmF0aW9uLmlkLFxuICAgICAgICBzdGF0dXM6IE9wZXJhdGlvblN0YXR1cy5GQUlMRUQsXG4gICAgICAgIGZhaWx1cmVSZWFzb246IGdldHRleHQoJ09wZXJhdGlvbiBjYW5jZWxsZWQgYnkgdXNlci4nKVxuICAgICAgfSkpLmRhdGE7XG4gICAgICBhc3NpZ24odGhpcy5vcGVyYXRpb24sIG9wZXJhdGlvbkFmdGVyVXBkYXRlKTtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoZ2V0dGV4dCgnT3BlcmF0aW9uIGNhbmNlbGxlZC4nKSk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgIH1cbiAgfVxufVxuIl19