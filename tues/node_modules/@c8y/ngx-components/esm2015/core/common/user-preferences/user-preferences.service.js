import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { InventoryService, UserService } from '@c8y/client';
import { from } from 'rxjs';
import { switchMap, first } from 'rxjs/operators';
import { UserPreferencesStorageLocal } from './user-preferences-storage-local';
import { UserPreferencesStorageInventory } from './user-preferences-store-inventory';
import { AppStateService } from '../ui-state.service';
let UserPreferencesService = class UserPreferencesService {
    constructor(user, inventory, appState) {
        this.user = user;
        this.inventory = inventory;
        this.appState = appState;
        this.LOCAL_STORAGE_KEY = 'userPreferences';
        this.storage = {
            local: new UserPreferencesStorageLocal(),
            inventory: new UserPreferencesStorageInventory(this.inventory)
        };
        this.currentUser = this.appState.currentUser;
    }
    get(key) {
        return this.currentUser.pipe(first(), switchMap((user) => this.getForUser(key, user)));
    }
    set(key, value) {
        return new Promise((resolve, reject) => {
            this.currentUser.pipe(first()).subscribe((user) => {
                resolve(this.setForUser(key, value, user));
            }, reject);
        });
    }
    getForUser(key, user) {
        const rawKey = this.getRawKey(key, user);
        const storage = this.getStorage(user);
        return from(storage.get(rawKey));
    }
    setForUser(key, value, user) {
        const rawKey = this.getRawKey(key, user);
        const storage = this.getStorage(user);
        return Promise.resolve(storage.set(rawKey, value));
    }
    getRawKey(key, user) {
        const username = user.userName.replace(/\./g, '__');
        return `${key}${username}`;
    }
    getStorage(user) {
        return this.user.hasAllRoles(user, ['ROLE_INVENTORY_READ', 'ROLE_INVENTORY_ADMIN']) ?
            this.storage.inventory : this.storage.local;
    }
};
UserPreferencesService.ctorParameters = () => [
    { type: UserService },
    { type: InventoryService },
    { type: AppStateService }
];
UserPreferencesService = tslib_1.__decorate([
    Injectable()
], UserPreferencesService);
export { UserPreferencesService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wcmVmZXJlbmNlcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvY29tbW9uL3VzZXItcHJlZmVyZW5jZXMvdXNlci1wcmVmZXJlbmNlcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFNUQsT0FBTyxFQUFjLElBQUksRUFBUyxNQUFNLE1BQU0sQ0FBQztBQUMvQyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUd0RCxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtJQU9qQyxZQUNVLElBQWlCLEVBQ2pCLFNBQTJCLEVBQzNCLFFBQXlCO1FBRnpCLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFDM0IsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFSM0Isc0JBQWlCLEdBQUcsaUJBQWlCLENBQUM7UUFVNUMsSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNiLEtBQUssRUFBRSxJQUFJLDJCQUEyQixFQUFFO1lBQ3hDLFNBQVMsRUFBRSxJQUFJLCtCQUErQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7U0FDL0QsQ0FBQztRQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUM7SUFDL0MsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FDMUIsS0FBSyxFQUFFLEVBQ1AsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUNoRCxDQUFDO0lBQ0osQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSztRQUNaLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQ25CLEtBQUssRUFBRSxDQUNSLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQ25CLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM3QyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDYixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxVQUFVLENBQUMsR0FBRyxFQUFFLElBQUk7UUFDbEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELFVBQVUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUk7UUFDekIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRU8sU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJO1FBQ3pCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwRCxPQUFPLEdBQUcsR0FBRyxHQUFHLFFBQVEsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTyxVQUFVLENBQUMsSUFBSTtRQUNyQixPQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLHFCQUFxQixFQUFFLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BGLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUNoRCxDQUFDO0NBRUYsQ0FBQTs7WUFsRGlCLFdBQVc7WUFDTixnQkFBZ0I7WUFDakIsZUFBZTs7QUFWeEIsc0JBQXNCO0lBRGxDLFVBQVUsRUFBRTtHQUNBLHNCQUFzQixDQTBEbEM7U0ExRFksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW52ZW50b3J5U2VydmljZSwgVXNlclNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBJVXNlciB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IE9ic2VydmFibGUsIGZyb20sIG5ldmVyIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzd2l0Y2hNYXAsIGZpcnN0IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgVXNlclByZWZlcmVuY2VzU3RvcmFnZUxvY2FsIH0gZnJvbSAnLi91c2VyLXByZWZlcmVuY2VzLXN0b3JhZ2UtbG9jYWwnO1xuaW1wb3J0IHsgVXNlclByZWZlcmVuY2VzU3RvcmFnZUludmVudG9yeSB9IGZyb20gJy4vdXNlci1wcmVmZXJlbmNlcy1zdG9yZS1pbnZlbnRvcnknO1xuaW1wb3J0IHsgQXBwU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vdWktc3RhdGUuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVc2VyUHJlZmVyZW5jZXNTZXJ2aWNlIHtcbiAgY3VycmVudFVzZXI6IE9ic2VydmFibGU8SVVzZXI+O1xuICBwcml2YXRlIExPQ0FMX1NUT1JBR0VfS0VZID0gJ3VzZXJQcmVmZXJlbmNlcyc7XG4gIHByaXZhdGUgc3RvcmFnZToge1xuICAgIGxvY2FsOiBVc2VyUHJlZmVyZW5jZXNTdG9yYWdlTG9jYWwsXG4gICAgaW52ZW50b3J5OiBVc2VyUHJlZmVyZW5jZXNTdG9yYWdlSW52ZW50b3J5XG4gIH07XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdXNlcjogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBpbnZlbnRvcnk6IEludmVudG9yeVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhcHBTdGF0ZTogQXBwU3RhdGVTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMuc3RvcmFnZSA9IHtcbiAgICAgIGxvY2FsOiBuZXcgVXNlclByZWZlcmVuY2VzU3RvcmFnZUxvY2FsKCksXG4gICAgICBpbnZlbnRvcnk6IG5ldyBVc2VyUHJlZmVyZW5jZXNTdG9yYWdlSW52ZW50b3J5KHRoaXMuaW52ZW50b3J5KVxuICAgIH07XG4gICAgdGhpcy5jdXJyZW50VXNlciA9IHRoaXMuYXBwU3RhdGUuY3VycmVudFVzZXI7XG4gIH1cblxuICBnZXQoa2V5KTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50VXNlci5waXBlKFxuICAgICAgZmlyc3QoKSxcbiAgICAgIHN3aXRjaE1hcCgodXNlcikgPT4gdGhpcy5nZXRGb3JVc2VyKGtleSwgdXNlcikpXG4gICAgKTtcbiAgfVxuXG4gIHNldChrZXksIHZhbHVlKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5jdXJyZW50VXNlci5waXBlKFxuICAgICAgICBmaXJzdCgpXG4gICAgICApLnN1YnNjcmliZSgodXNlcikgPT4ge1xuICAgICAgICByZXNvbHZlKHRoaXMuc2V0Rm9yVXNlcihrZXksIHZhbHVlLCB1c2VyKSk7XG4gICAgICB9LCByZWplY3QpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0Rm9yVXNlcihrZXksIHVzZXIpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIGNvbnN0IHJhd0tleSA9IHRoaXMuZ2V0UmF3S2V5KGtleSwgdXNlcik7XG4gICAgY29uc3Qgc3RvcmFnZSA9IHRoaXMuZ2V0U3RvcmFnZSh1c2VyKTtcbiAgICByZXR1cm4gZnJvbShzdG9yYWdlLmdldChyYXdLZXkpKTtcbiAgfVxuXG4gIHNldEZvclVzZXIoa2V5LCB2YWx1ZSwgdXNlcik6IFByb21pc2U8YW55PiB7XG4gICAgY29uc3QgcmF3S2V5ID0gdGhpcy5nZXRSYXdLZXkoa2V5LCB1c2VyKTtcbiAgICBjb25zdCBzdG9yYWdlID0gdGhpcy5nZXRTdG9yYWdlKHVzZXIpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoc3RvcmFnZS5zZXQocmF3S2V5LCB2YWx1ZSkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRSYXdLZXkoa2V5LCB1c2VyKSB7XG4gICAgY29uc3QgdXNlcm5hbWUgPSB1c2VyLnVzZXJOYW1lLnJlcGxhY2UoL1xcLi9nLCAnX18nKTtcbiAgICByZXR1cm4gYCR7a2V5fSR7dXNlcm5hbWV9YDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0U3RvcmFnZSh1c2VyKSB7XG4gICAgcmV0dXJuICB0aGlzLnVzZXIuaGFzQWxsUm9sZXModXNlciwgWydST0xFX0lOVkVOVE9SWV9SRUFEJywgJ1JPTEVfSU5WRU5UT1JZX0FETUlOJ10pID9cbiAgICAgIHRoaXMuc3RvcmFnZS5pbnZlbnRvcnkgOiB0aGlzLnN0b3JhZ2UubG9jYWw7XG4gIH1cblxufVxuIl19