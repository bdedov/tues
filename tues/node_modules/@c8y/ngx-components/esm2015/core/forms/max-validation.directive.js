var MaxValidationDirective_1;
import * as tslib_1 from "tslib";
import { NG_VALIDATORS } from '@angular/forms';
import { Directive, Input } from '@angular/core';
import { isUndefined } from 'lodash-es';
let MaxValidationDirective = MaxValidationDirective_1 = class MaxValidationDirective {
    constructor() {
        this.max = '';
    }
    validate(control) {
        const parsedMax = parseInt(this.max, 10);
        if (isUndefined(control.value) || !this.max) {
            return null;
        }
        let valid = true;
        valid = !(control.value > parsedMax);
        return valid ? null : { max: { value: parsedMax } };
    }
};
tslib_1.__decorate([
    Input()
], MaxValidationDirective.prototype, "max", void 0);
MaxValidationDirective = MaxValidationDirective_1 = tslib_1.__decorate([
    Directive({
        selector: '[max]',
        providers: [{ provide: NG_VALIDATORS, useExisting: MaxValidationDirective_1, multi: true }]
    })
], MaxValidationDirective);
export { MaxValidationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LXZhbGlkYXRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZm9ybXMvbWF4LXZhbGlkYXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFtQixhQUFhLEVBQWEsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBTXhDLElBQWEsc0JBQXNCLDhCQUFuQyxNQUFhLHNCQUFzQjtJQUpuQztRQUtXLFFBQUcsR0FBVyxFQUFFLENBQUM7SUFZNUIsQ0FBQztJQVZDLFFBQVEsQ0FBQyxPQUF3QjtRQUMvQixNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6QyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQzNDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDakIsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUM7SUFDckQsQ0FBQztDQUNGLENBQUE7QUFaVTtJQUFSLEtBQUssRUFBRTttREFBa0I7QUFEZixzQkFBc0I7SUFKbEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLE9BQU87UUFDakIsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSx3QkFBc0IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUM7S0FDeEYsQ0FBQztHQUNXLHNCQUFzQixDQWFsQztTQWJZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMSURBVE9SUywgVmFsaWRhdG9yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBpc1VuZGVmaW5lZCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1ttYXhdJyxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IE5HX1ZBTElEQVRPUlMsIHVzZUV4aXN0aW5nOiBNYXhWYWxpZGF0aW9uRGlyZWN0aXZlLCBtdWx0aTogdHJ1ZX1dXG59KVxuZXhwb3J0IGNsYXNzIE1heFZhbGlkYXRpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICBASW5wdXQoKSBtYXg6IHN0cmluZyA9ICcnO1xuXG4gIHZhbGlkYXRlKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHtba2V5OiBzdHJpbmddOiBhbnl9IHwgbnVsbCB7XG4gICAgY29uc3QgcGFyc2VkTWF4ID0gcGFyc2VJbnQodGhpcy5tYXgsIDEwKTtcbiAgICBpZiAoaXNVbmRlZmluZWQoY29udHJvbC52YWx1ZSkgfHwgIXRoaXMubWF4KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBsZXQgdmFsaWQgPSB0cnVlO1xuICAgIHZhbGlkID0gIShjb250cm9sLnZhbHVlID4gcGFyc2VkTWF4KTtcbiAgICByZXR1cm4gdmFsaWQgPyBudWxsIDoge21heDogeyB2YWx1ZTogcGFyc2VkTWF4IH0gfTtcbiAgfVxufVxuIl19