var FieldInput_1;
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
let FieldInput = FieldInput_1 = class FieldInput extends FieldType {
    get type() {
        return this.to.type || 'text';
    }
};
FieldInput.CONFIG = {
    types: [
        {
            name: 'input',
            component: FieldInput_1,
            wrappers: ['c8y-form-field']
        },
        { name: 'string', extends: 'input' },
        {
            name: 'number',
            extends: 'input',
            defaultOptions: {
                templateOptions: {
                    type: 'number'
                }
            }
        },
        {
            name: 'integer',
            extends: 'input',
            defaultOptions: {
                templateOptions: {
                    type: 'number'
                }
            }
        }
    ]
};
FieldInput = FieldInput_1 = tslib_1.__decorate([
    Component({
        selector: 'c8y-field-input',
        template: "<input\n  *ngIf=\"type !== 'number'; else numberTmp\"\n  [type]=\"type\"\n  [formControl]=\"formControl\"\n  class=\"form-control\"\n  [formlyAttributes]=\"field\"\n  [required]=\"to.required\"\n  [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n  [class.is-invalid]=\"showError\"\n/>\n<ng-template #numberTmp>\n  <input\n    type=\"number\"\n    [formControl]=\"formControl\"\n    class=\"form-control\"\n    [formlyAttributes]=\"field\"\n    [required]=\"to.required\"\n    [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n    [class.is-invalid]=\"showError\"\n  />\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], FieldInput);
export { FieldInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9keW5hbWljLWZvcm1zL2lucHV0L2lucHV0LnR5cGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQWdCLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTzNELElBQWEsVUFBVSxrQkFBdkIsTUFBYSxVQUFXLFNBQVEsU0FBUztJQThCdkMsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUM7SUFDaEMsQ0FBQztDQUNGLENBQUE7QUFoQ2lCLGlCQUFNLEdBQWlCO0lBQ3JDLEtBQUssRUFBRTtRQUNMO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixTQUFTLEVBQUUsWUFBVTtZQUNyQixRQUFRLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztTQUM3QjtRQUNELEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFO1FBQ3BDO1lBQ0UsSUFBSSxFQUFFLFFBQVE7WUFDZCxPQUFPLEVBQUUsT0FBTztZQUNoQixjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxRQUFRO2lCQUNmO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFNBQVM7WUFDZixPQUFPLEVBQUUsT0FBTztZQUNoQixjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxRQUFRO2lCQUNmO2FBQ0Y7U0FDRjtLQUNGO0NBQ0YsQ0FBQztBQTVCUyxVQUFVO0lBTHRCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsdW5CQUEwQztRQUMxQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBQ1csVUFBVSxDQWlDdEI7U0FqQ1ksVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ09wdGlvbiwgRmllbGRUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1maWVsZC1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC50eXBlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRmllbGRJbnB1dCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUc6IENvbmZpZ09wdGlvbiA9IHtcbiAgICB0eXBlczogW1xuICAgICAge1xuICAgICAgICBuYW1lOiAnaW5wdXQnLFxuICAgICAgICBjb21wb25lbnQ6IEZpZWxkSW5wdXQsXG4gICAgICAgIHdyYXBwZXJzOiBbJ2M4eS1mb3JtLWZpZWxkJ11cbiAgICAgIH0sXG4gICAgICB7IG5hbWU6ICdzdHJpbmcnLCBleHRlbmRzOiAnaW5wdXQnIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdudW1iZXInLFxuICAgICAgICBleHRlbmRzOiAnaW5wdXQnLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgICAgdHlwZTogJ251bWJlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdpbnRlZ2VyJyxcbiAgICAgICAgZXh0ZW5kczogJ2lucHV0JyxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXVxuICB9O1xuXG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiB0aGlzLnRvLnR5cGUgfHwgJ3RleHQnO1xuICB9XG59XG4iXX0=