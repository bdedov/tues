import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { C8yStepper } from './stepper.component';
import { CommonModule } from '../common/common.module';
import { C8yStepperIcon } from './stepper-icon.directive';
import { C8yStepperProgress } from './stepper-progress.component';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { C8yStepperButtons } from './stepper-buttons.component';
const ɵ0 = { displayDefaultIndicatorType: false };
/**
 * The angular module definition for c8y-stepper (Wizard).
 * @exports C8yStepper
 * @exports C8yStepperIcon
 * @exports C8yStepperButtons
 * @exports CdkStep
 */
let StepperModule = class StepperModule {
};
StepperModule = tslib_1.__decorate([
    NgModule({
        imports: [CommonModule, CdkStepperModule, TooltipModule],
        declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],
        exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons],
        providers: [
            {
                /**
                 * This emables additional states, like: edit, done and error
                 * These states are used to display custom icons, if needed.
                 * Any change in here will most probably result in not showing custom icons anymore
                 */
                provide: STEPPER_GLOBAL_OPTIONS,
                useValue: ɵ0
            }
        ]
    })
], StepperModule);
export { StepperModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9zdGVwcGVyL3N0ZXBwZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7V0FxQmhELEVBQUUsMkJBQTJCLEVBQUUsS0FBSyxFQUFFO0FBbkJ0RDs7Ozs7O0dBTUc7QUFpQkgsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtDQUFHLENBQUE7QUFBaEIsYUFBYTtJQWhCekIsUUFBUSxDQUFDO1FBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQztRQUN4RCxZQUFZLEVBQUUsQ0FBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLGlCQUFpQixDQUFDO1FBQ2pGLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDO1FBQ2pFLFNBQVMsRUFBRTtZQUNUO2dCQUNFOzs7O21CQUlHO2dCQUNILE9BQU8sRUFBRSxzQkFBc0I7Z0JBQy9CLFFBQVEsSUFBd0M7YUFDakQ7U0FDRjtLQUNGLENBQUM7R0FDVyxhQUFhLENBQUc7U0FBaEIsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZGtTdGVwcGVyTW9kdWxlLCBDZGtTdGVwLCBTVEVQUEVSX0dMT0JBTF9PUFRJT05TIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3N0ZXBwZXInO1xuaW1wb3J0IHsgQzh5U3RlcHBlciB9IGZyb20gJy4vc3RlcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgQzh5U3RlcHBlckljb24gfSBmcm9tICcuL3N0ZXBwZXItaWNvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQzh5U3RlcHBlclByb2dyZXNzIH0gZnJvbSAnLi9zdGVwcGVyLXByb2dyZXNzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IEM4eVN0ZXBwZXJCdXR0b25zIH0gZnJvbSAnLi9zdGVwcGVyLWJ1dHRvbnMuY29tcG9uZW50JztcblxuLyoqXG4gKiBUaGUgYW5ndWxhciBtb2R1bGUgZGVmaW5pdGlvbiBmb3IgYzh5LXN0ZXBwZXIgKFdpemFyZCkuXG4gKiBAZXhwb3J0cyBDOHlTdGVwcGVyXG4gKiBAZXhwb3J0cyBDOHlTdGVwcGVySWNvblxuICogQGV4cG9ydHMgQzh5U3RlcHBlckJ1dHRvbnNcbiAqIEBleHBvcnRzIENka1N0ZXBcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQ2RrU3RlcHBlck1vZHVsZSwgVG9vbHRpcE1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW0M4eVN0ZXBwZXIsIEM4eVN0ZXBwZXJJY29uLCBDOHlTdGVwcGVyUHJvZ3Jlc3MsIEM4eVN0ZXBwZXJCdXR0b25zXSxcbiAgZXhwb3J0czogW0M4eVN0ZXBwZXIsIENka1N0ZXAsIEM4eVN0ZXBwZXJJY29uLCBDOHlTdGVwcGVyQnV0dG9uc10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIC8qKlxuICAgICAgICogVGhpcyBlbWFibGVzIGFkZGl0aW9uYWwgc3RhdGVzLCBsaWtlOiBlZGl0LCBkb25lIGFuZCBlcnJvclxuICAgICAgICogVGhlc2Ugc3RhdGVzIGFyZSB1c2VkIHRvIGRpc3BsYXkgY3VzdG9tIGljb25zLCBpZiBuZWVkZWQuXG4gICAgICAgKiBBbnkgY2hhbmdlIGluIGhlcmUgd2lsbCBtb3N0IHByb2JhYmx5IHJlc3VsdCBpbiBub3Qgc2hvd2luZyBjdXN0b20gaWNvbnMgYW55bW9yZVxuICAgICAgICovXG4gICAgICBwcm92aWRlOiBTVEVQUEVSX0dMT0JBTF9PUFRJT05TLFxuICAgICAgdXNlVmFsdWU6IHsgZGlzcGxheURlZmF1bHRJbmRpY2F0b3JUeXBlOiBmYWxzZSB9XG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJNb2R1bGUge31cbiJdfQ==