import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { IUser, UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { gettext } from '../i18n/gettext';
let UserTotpRevokeComponent = class UserTotpRevokeComponent {
    constructor(users, alert) {
        this.users = users;
        this.alert = alert;
        this.revokeEmitter = new EventEmitter();
    }
    revoke() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.users.totpRevokeSecret(this.user);
                this.alert.success(gettext('User TOTP secret revoked.'));
                this.revokeEmitter.next();
            }
            catch (e) {
                this.alert.addServerFailure(e);
            }
        });
    }
};
UserTotpRevokeComponent.ctorParameters = () => [
    { type: UserService },
    { type: AlertService }
];
tslib_1.__decorate([
    Input()
], UserTotpRevokeComponent.prototype, "user", void 0);
tslib_1.__decorate([
    Output('revoke')
], UserTotpRevokeComponent.prototype, "revokeEmitter", void 0);
UserTotpRevokeComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-user-totp-revoke',
        template: "<button\n  type=\"button\"\n  class=\"btn btn-default\"\n  [popover]=\"confirm\"\n  [popoverTitle]=\"'Revoke TOTP secret' | translate\"\n  #popover=\"bs-popover\"\n  placement=\"right\"\n>\n  <i c8yIcon=\"key\"></i> {{ 'Revoke TOTP secret' | translate }}\n</button>\n\n<ng-template #confirm>\n  <p class=\"m-b-16\" translate>\n    This action will revoke the user's stored TOTP secret which will require a new setup.\n  </p>\n  <button\n    title=\"{{ 'Revoke' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-danger\"\n    (click)=\"revoke(); popover.hide()\"\n    translate\n  >\n    Revoke\n  </button>\n  <button\n    title=\"{{ 'Cancel' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    (click)=\"popover.hide()\"\n    translate\n  >\n    Cancel\n  </button>\n</ng-template>\n"
    })
], UserTotpRevokeComponent);
export { UserTotpRevokeComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXJldm9rZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS91c2VyL3VzZXItdG90cC1yZXZva2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNMUMsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBdUI7SUFHbEMsWUFDVSxLQUFrQixFQUNsQixLQUFtQjtRQURuQixVQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ2xCLFVBQUssR0FBTCxLQUFLLENBQWM7UUFIWCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFhLENBQUM7SUFJNUQsQ0FBQztJQUVDLE1BQU07O1lBQ1YsSUFBSTtnQkFDRixNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDO2dCQUN6RCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQzNCO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoQztRQUNILENBQUM7S0FBQTtDQUNGLENBQUE7O1lBYmtCLFdBQVc7WUFDWCxZQUFZOztBQUpwQjtJQUFSLEtBQUssRUFBRTtxREFBYTtBQUNIO0lBQWpCLE1BQU0sQ0FBQyxRQUFRLENBQUM7OERBQStDO0FBRnJELHVCQUF1QjtJQUpuQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLDJ6QkFBeUM7S0FDMUMsQ0FBQztHQUNXLHVCQUF1QixDQWlCbkM7U0FqQlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElVc2VyLCBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11c2VyLXRvdHAtcmV2b2tlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItdG90cC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVXNlclRvdHBSZXZva2VDb21wb25lbnQge1xuICBASW5wdXQoKSB1c2VyOiBJVXNlcjtcbiAgQE91dHB1dCgncmV2b2tlJykgcmV2b2tlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8dW5kZWZpbmVkPigpO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHVzZXJzOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2UsXG4gICkgeyB9XG5cbiAgYXN5bmMgcmV2b2tlKCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLnVzZXJzLnRvdHBSZXZva2VTZWNyZXQodGhpcy51c2VyKTtcbiAgICAgIHRoaXMuYWxlcnQuc3VjY2VzcyhnZXR0ZXh0KCdVc2VyIFRPVFAgc2VjcmV0IHJldm9rZWQuJykpO1xuICAgICAgdGhpcy5yZXZva2VFbWl0dGVyLm5leHQoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZSk7XG4gICAgfVxuICB9XG59XG4iXX0=