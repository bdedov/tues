import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { Status } from '../../../common/status.model';
import { gettext } from '../../../i18n/gettext';
import { CookieBannerService } from '../cookie-banner.service';
let CookieBannerPreferencesModalComponent = class CookieBannerPreferencesModalComponent {
    constructor(cookieBannerService) {
        this.cookieBannerService = cookieBannerService;
        this.closeSubject = new Subject();
        this.title = gettext('Cookie preferences');
        this.labels = { ok: gettext('Save settings'), cancel: gettext('Cancel') };
        this.status = Status.INFO;
    }
    ngOnInit() {
        this.configCookiePreferencesList = this.cookieBannerService.transformCookiePreferencesToList(this.configCookiePreferences);
    }
    ngAfterViewInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modalRef.result;
                this.onClose();
            }
            catch (error) {
                this.onDismiss();
            }
        });
    }
    onClose() {
        const cookiePref = this.cookieBannerService.transformCookiePreferencesListToCookiePreferences(this.configCookiePreferencesList);
        this.closeSubject.next(cookiePref);
        this.closeSubject.complete();
    }
    onDismiss() {
        this.closeSubject.next(undefined);
        this.closeSubject.complete();
    }
    getCookieDescription(cookieType) {
        return this.cookieBannerService.getCookieDescription(cookieType);
    }
};
CookieBannerPreferencesModalComponent.ctorParameters = () => [
    { type: CookieBannerService }
];
tslib_1.__decorate([
    ViewChild('modalRef', { static: false })
], CookieBannerPreferencesModalComponent.prototype, "modalRef", void 0);
CookieBannerPreferencesModalComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-cookie-banner-preferences-modal',
        template: "<c8y-confirm-modal [title]=\"title\" [status]=\"status\" [labels]=\"labels\" #modalRef>\n\n  <div *ngFor=\"let item of configCookiePreferencesList\" class=\"row p-t-8 p-b-8 separator-top\">\n    <div class=\"col-xs-2\">\n      <div class=\"text-center\">\n        <label class=\"c8y-switch\">\n          <input\n            name=\"{{ item.name }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"item.value\"\n            [disabled]=\"item.isReadonly\"\n          />\n          <span></span>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-xs-10\">\n      <h4 class=\"text-medium\">\n        {{ item.name | translate | humanize }}\n      </h4>\n      <p>\n        {{ getCookieDescription(item.name) | translate }}\n      </p>\n    </div>\n  </div>\n</c8y-confirm-modal>\n"
    })
], CookieBannerPreferencesModalComponent);
export { CookieBannerPreferencesModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLWJhbm5lci1wcmVmZXJlbmNlcy1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9ib290c3RyYXAvY29va2llLWJhbm5lci9jb29raWUtYmFubmVyLXByZWZlcmVuY2VzLW1vZGFsL2Nvb2tpZS1iYW5uZXItcHJlZmVyZW5jZXMtbW9kYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxNQUFNLEVBQWMsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFJaEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFNL0QsSUFBYSxxQ0FBcUMsR0FBbEQsTUFBYSxxQ0FBcUM7SUFTaEQsWUFBb0IsbUJBQXdDO1FBQXhDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFQNUQsaUJBQVksR0FBK0IsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUN6RCxVQUFLLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDdEMsV0FBTSxHQUFnQixFQUFFLEVBQUUsRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1FBQ2xGLFdBQU0sR0FBZSxNQUFNLENBQUMsSUFBSSxDQUFDO0lBSThCLENBQUM7SUFFaEUsUUFBUTtRQUNOLElBQUksQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsZ0NBQWdDLENBQzFGLElBQUksQ0FBQyx1QkFBdUIsQ0FDN0IsQ0FBQztJQUNKLENBQUM7SUFFSyxlQUFlOztZQUNuQixJQUFJO2dCQUNGLE1BQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUNoQjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNkLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQzthQUNsQjtRQUNILENBQUM7S0FBQTtJQUVELE9BQU87UUFDTCxNQUFNLFVBQVUsR0FBc0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGlEQUFpRCxDQUM5RyxJQUFJLENBQUMsMkJBQTJCLENBQ2pDLENBQUM7UUFFRixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxTQUFTO1FBQ1AsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsb0JBQW9CLENBQUMsVUFBa0I7UUFDckMsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkUsQ0FBQztDQUNGLENBQUE7O1lBbEMwQyxtQkFBbUI7O0FBUmxCO0lBQXpDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7dUVBQWlDO0FBRC9ELHFDQUFxQztJQUpqRCxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUscUNBQXFDO1FBQy9DLDR5QkFBK0Q7S0FDaEUsQ0FBQztHQUNXLHFDQUFxQyxDQTJDakQ7U0EzQ1kscUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFN0YXR1cywgU3RhdHVzVHlwZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uLy4uLy4uL2kxOG4vZ2V0dGV4dCc7XG5pbXBvcnQgeyBDb25maXJtTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9tb2RhbC9tb2RhbC1jb25maXJtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb2RhbExhYmVscyB9IGZyb20gJy4uLy4uLy4uL3NlbGVjdC1tb2RhbC9zZWxlY3QtbW9kYWwubW9kZWwnO1xuaW1wb3J0IHsgQ29va2llLCBDb29raWVQcmVmZXJlbmNlcyB9IGZyb20gJy4uL2Nvb2tpZS1iYW5uZXIubW9kZWwnO1xuaW1wb3J0IHsgQ29va2llQmFubmVyU2VydmljZSB9IGZyb20gJy4uL2Nvb2tpZS1iYW5uZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1jb29raWUtYmFubmVyLXByZWZlcmVuY2VzLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Nvb2tpZS1iYW5uZXItcHJlZmVyZW5jZXMtbW9kYWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvb2tpZUJhbm5lclByZWZlcmVuY2VzTW9kYWxDb21wb25lbnQge1xuICBAVmlld0NoaWxkKCdtb2RhbFJlZicsIHsgc3RhdGljOiBmYWxzZSB9KSBtb2RhbFJlZjogQ29uZmlybU1vZGFsQ29tcG9uZW50O1xuICBjbG9zZVN1YmplY3Q6IFN1YmplY3Q8Q29va2llUHJlZmVyZW5jZXM+ID0gbmV3IFN1YmplY3QoKTtcbiAgdGl0bGUgPSBnZXR0ZXh0KCdDb29raWUgcHJlZmVyZW5jZXMnKTtcbiAgbGFiZWxzOiBNb2RhbExhYmVscyA9IHsgb2s6IGdldHRleHQoJ1NhdmUgc2V0dGluZ3MnKSwgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKSB9O1xuICBzdGF0dXM6IFN0YXR1c1R5cGUgPSBTdGF0dXMuSU5GTztcbiAgY29uZmlnQ29va2llUHJlZmVyZW5jZXM6IENvb2tpZVByZWZlcmVuY2VzO1xuICBjb25maWdDb29raWVQcmVmZXJlbmNlc0xpc3Q6IENvb2tpZVtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29va2llQmFubmVyU2VydmljZTogQ29va2llQmFubmVyU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNvbmZpZ0Nvb2tpZVByZWZlcmVuY2VzTGlzdCA9IHRoaXMuY29va2llQmFubmVyU2VydmljZS50cmFuc2Zvcm1Db29raWVQcmVmZXJlbmNlc1RvTGlzdChcbiAgICAgIHRoaXMuY29uZmlnQ29va2llUHJlZmVyZW5jZXNcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLm1vZGFsUmVmLnJlc3VsdDtcbiAgICAgIHRoaXMub25DbG9zZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aGlzLm9uRGlzbWlzcygpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2xvc2UoKSB7XG4gICAgY29uc3QgY29va2llUHJlZjogQ29va2llUHJlZmVyZW5jZXMgPSB0aGlzLmNvb2tpZUJhbm5lclNlcnZpY2UudHJhbnNmb3JtQ29va2llUHJlZmVyZW5jZXNMaXN0VG9Db29raWVQcmVmZXJlbmNlcyhcbiAgICAgIHRoaXMuY29uZmlnQ29va2llUHJlZmVyZW5jZXNMaXN0XG4gICAgKTtcblxuICAgIHRoaXMuY2xvc2VTdWJqZWN0Lm5leHQoY29va2llUHJlZik7XG4gICAgdGhpcy5jbG9zZVN1YmplY3QuY29tcGxldGUoKTtcbiAgfVxuXG4gIG9uRGlzbWlzcygpIHtcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5uZXh0KHVuZGVmaW5lZCk7XG4gICAgdGhpcy5jbG9zZVN1YmplY3QuY29tcGxldGUoKTtcbiAgfVxuXG4gIGdldENvb2tpZURlc2NyaXB0aW9uKGNvb2tpZVR5cGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuY29va2llQmFubmVyU2VydmljZS5nZXRDb29raWVEZXNjcmlwdGlvbihjb29raWVUeXBlKTtcbiAgfVxufVxuIl19