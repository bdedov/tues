import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
/**
 * Display collapsed content on a list item. Can be
 * used for more detailed information. Use it with
 * content projection.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-collapsed>
 *     <strong>I am only visible if extended</strong>
 *   </c8y-collapsed>
 * </c8y-li>
 * ```
 */
let ListItemCollapseComponent = class ListItemCollapseComponent {
    /**
     * Display collapsed content on a list item. Can be
     * used for more detailed information. Use it with
     * content projection.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-collapsed>
     *     <strong>I am only visible if extended</strong>
     *   </c8y-collapsed>
     * </c8y-li>
     * ```
     */
    constructor() {
        /**
         * The way how to toggle collapse state.
         * button (default) - additional button for toggle collapse state
         * row - toggling collapse state by clicking to entire row.
         */
        this.collapseWay = 'button';
    }
};
tslib_1.__decorate([
    Input()
], ListItemCollapseComponent.prototype, "collapseWay", void 0);
ListItemCollapseComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-list-item-collapse, c8y-li-collapse',
        template: "<ng-content></ng-content>\n"
    })
], ListItemCollapseComponent);
export { ListItemCollapseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWNvbGxhcHNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2xpc3QtZ3JvdXAvbGlzdC1pdGVtLWNvbGxhcHNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQ7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUtILElBQWEseUJBQXlCLEdBQXRDLE1BQWEseUJBQXlCO0lBbEJ0Qzs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0g7UUFLRTs7OztXQUlHO1FBRUgsZ0JBQVcsR0FBcUIsUUFBUSxDQUFDO0lBQzNDLENBQUM7Q0FBQSxDQUFBO0FBREM7SUFEQyxLQUFLLEVBQUU7OERBQ2lDO0FBUDlCLHlCQUF5QjtJQUpyQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUseUNBQXlDO1FBQ25ELHVDQUFrRDtLQUNuRCxDQUFDO0dBQ1cseUJBQXlCLENBUXJDO1NBUlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIERpc3BsYXkgY29sbGFwc2VkIGNvbnRlbnQgb24gYSBsaXN0IGl0ZW0uIENhbiBiZVxuICogdXNlZCBmb3IgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbi4gVXNlIGl0IHdpdGhcbiAqIGNvbnRlbnQgcHJvamVjdGlvbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbFxuICogPGM4eS1saT5cbiAqICAgPGM4eS1jb2xsYXBzZWQ+XG4gKiAgICAgPHN0cm9uZz5JIGFtIG9ubHkgdmlzaWJsZSBpZiBleHRlbmRlZDwvc3Ryb25nPlxuICogICA8L2M4eS1jb2xsYXBzZWQ+XG4gKiA8L2M4eS1saT5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktbGlzdC1pdGVtLWNvbGxhcHNlLCBjOHktbGktY29sbGFwc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGlzdC1pdGVtLWNvbGxhcHNlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBMaXN0SXRlbUNvbGxhcHNlQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFRoZSB3YXkgaG93IHRvIHRvZ2dsZSBjb2xsYXBzZSBzdGF0ZS5cbiAgICogYnV0dG9uIChkZWZhdWx0KSAtIGFkZGl0aW9uYWwgYnV0dG9uIGZvciB0b2dnbGUgY29sbGFwc2Ugc3RhdGVcbiAgICogcm93IC0gdG9nZ2xpbmcgY29sbGFwc2Ugc3RhdGUgYnkgY2xpY2tpbmcgdG8gZW50aXJlIHJvdy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGNvbGxhcHNlV2F5OiAnYnV0dG9uJyB8ICdyb3cnID0gJ2J1dHRvbic7XG59XG4iXX0=