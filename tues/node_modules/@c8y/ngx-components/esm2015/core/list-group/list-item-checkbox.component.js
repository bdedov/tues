var ListItemCheckboxComponent_1;
import * as tslib_1 from "tslib";
import { Output, EventEmitter, Component, Input, forwardRef } from '@angular/core';
import { CheckboxControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';
/**
 * A component to display checkboxes in a c8y-li. Use it with content projection. It
 * can be used standalone or with an ngModel.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-li-checkbox></c8y-li-checkbox>
 * </c8y-li>
 * ```
 */
let ListItemCheckboxComponent = ListItemCheckboxComponent_1 = class ListItemCheckboxComponent extends CheckboxControlValueAccessor {
    /**
     * A component to display checkboxes in a c8y-li. Use it with content projection. It
     * can be used standalone or with an ngModel.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-li-checkbox></c8y-li-checkbox>
     * </c8y-li>
     * ```
     */
    constructor() {
        super(...arguments);
        /**
         * Indicates if the checkbox is selected.
         */
        this.selected = false;
        /**
         * Indicates if the checkbox is disabled.
         */
        this.disabled = false;
        /**
         * An event emitted as soon as the checkbox is selected.
         */
        this.onSelect = new EventEmitter();
    }
    /**
     * @ignore
     */
    ngOnChanges(changes) {
        if (changes.selected && !changes.selected.firstChange) {
            this.onSelect.emit(changes.selected.currentValue);
        }
    }
    /**
     * Selects the checkbox.
     * @param value The value to pass.
     */
    select(value) {
        this.onSelect.emit(value);
        this.onChange(value);
    }
};
tslib_1.__decorate([
    Input()
], ListItemCheckboxComponent.prototype, "selected", void 0);
tslib_1.__decorate([
    Input()
], ListItemCheckboxComponent.prototype, "disabled", void 0);
tslib_1.__decorate([
    Output()
], ListItemCheckboxComponent.prototype, "onSelect", void 0);
ListItemCheckboxComponent = ListItemCheckboxComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'c8y-list-item-checkbox, c8y-li-checkbox',
        template: "<label class=\"c8y-checkbox\">\n  <input\n    type=\"checkbox\"\n    class=\"form-control\"\n    [disabled]=\"disabled\"\n    [checked]=\"selected\"\n    (change)=\"select($event.target.checked); (false)\"\n  />\n  <span></span>\n</label>\n<ng-content></ng-content>\n",
        host: {
            class: 'c8y-list__item__check'
        },
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ListItemCheckboxComponent_1)
            }
        ]
    })
], ListItemCheckboxComponent);
export { ListItemCheckboxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWNoZWNrYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2xpc3QtZ3JvdXAvbGlzdC1pdGVtLWNoZWNrYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWlCLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVqRjs7Ozs7Ozs7OztHQVVHO0FBZUgsSUFBYSx5QkFBeUIsaUNBQXRDLE1BQWEseUJBQTBCLFNBQVEsNEJBQTRCO0lBekIzRTs7Ozs7Ozs7OztPQVVHO0lBQ0g7O1FBZUU7O1dBRUc7UUFFSCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCOztXQUVHO1FBRUgsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQjs7V0FFRztRQUVILGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBbUJ6QyxDQUFDO0lBakJDOztPQUVHO0lBQ0gsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFFBQVEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFO1lBQ3JELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkQ7SUFDSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLEtBQUs7UUFDVixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRixDQUFBO0FBN0JDO0lBREMsS0FBSyxFQUFFOzJEQUNTO0FBS2pCO0lBREMsS0FBSyxFQUFFOzJEQUNTO0FBS2pCO0lBREMsTUFBTSxFQUFFOzJEQUM4QjtBQWY1Qix5QkFBeUI7SUFkckMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHlDQUF5QztRQUNuRCx1UkFBa0Q7UUFDbEQsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLHVCQUF1QjtTQUMvQjtRQUNELFNBQVMsRUFBRTtZQUNUO2dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLEtBQUssRUFBRSxJQUFJO2dCQUNYLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsMkJBQXlCLENBQUM7YUFDekQ7U0FDRjtLQUNGLENBQUM7R0FDVyx5QkFBeUIsQ0FrQ3JDO1NBbENZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE91dHB1dCwgRXZlbnRFbWl0dGVyLCBDb21wb25lbnQsIElucHV0LCBTaW1wbGVDaGFuZ2VzLCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDaGVja2JveENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0byBkaXNwbGF5IGNoZWNrYm94ZXMgaW4gYSBjOHktbGkuIFVzZSBpdCB3aXRoIGNvbnRlbnQgcHJvamVjdGlvbi4gSXRcbiAqIGNhbiBiZSB1c2VkIHN0YW5kYWxvbmUgb3Igd2l0aCBhbiBuZ01vZGVsLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8Yzh5LWxpPlxuICogICA8Yzh5LWxpLWNoZWNrYm94PjwvYzh5LWxpLWNoZWNrYm94PlxuICogPC9jOHktbGk+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWxpc3QtaXRlbS1jaGVja2JveCwgYzh5LWxpLWNoZWNrYm94JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpc3QtaXRlbS1jaGVja2JveC5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2M4eS1saXN0X19pdGVtX19jaGVjaydcbiAgfSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IExpc3RJdGVtQ2hlY2tib3hDb21wb25lbnQpXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIExpc3RJdGVtQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBDaGVja2JveENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgLyoqXG4gICAqIEluZGljYXRlcyBpZiB0aGUgY2hlY2tib3ggaXMgc2VsZWN0ZWQuXG4gICAqL1xuICBASW5wdXQoKVxuICBzZWxlY3RlZCA9IGZhbHNlO1xuICAvKipcbiAgICogSW5kaWNhdGVzIGlmIHRoZSBjaGVja2JveCBpcyBkaXNhYmxlZC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkID0gZmFsc2U7XG4gIC8qKlxuICAgKiBBbiBldmVudCBlbWl0dGVkIGFzIHNvb24gYXMgdGhlIGNoZWNrYm94IGlzIHNlbGVjdGVkLlxuICAgKi9cbiAgQE91dHB1dCgpXG4gIG9uU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgaWYgKGNoYW5nZXMuc2VsZWN0ZWQgJiYgIWNoYW5nZXMuc2VsZWN0ZWQuZmlyc3RDaGFuZ2UpIHtcbiAgICAgIHRoaXMub25TZWxlY3QuZW1pdChjaGFuZ2VzLnNlbGVjdGVkLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNlbGVjdHMgdGhlIGNoZWNrYm94LlxuICAgKiBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIHRvIHBhc3MuXG4gICAqL1xuICBzZWxlY3QodmFsdWUpIHtcbiAgICB0aGlzLm9uU2VsZWN0LmVtaXQodmFsdWUpO1xuICAgIHRoaXMub25DaGFuZ2UodmFsdWUpO1xuICB9XG59XG4iXX0=