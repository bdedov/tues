import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
import { QRCodeModule } from 'angularx-qrcode';
import { ProvidePhoneNumberComponent } from './provide-phone-number.component';
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
let AuthenticationModule = class AuthenticationModule {
};
AuthenticationModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            TotpChallengeComponent,
            PasswordConfirm,
            PasswordStrengthComponent,
            PasswordCheckListComponent,
            NewPasswordComponent,
            PasswordConfirmModalComponent,
            SmsChallengeComponent,
            TotpSetupComponent,
            ProvidePhoneNumberComponent
        ],
        imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule],
        exports: [
            TotpChallengeComponent,
            PasswordStrengthComponent,
            PasswordCheckListComponent,
            PasswordConfirm,
            NewPasswordComponent,
            PasswordConfirmModalComponent,
            SmsChallengeComponent,
            TotpSetupComponent,
            ProvidePhoneNumberComponent
        ],
        entryComponents: [PasswordConfirmModalComponent],
        providers: [PasswordStrengthCheckerService, PasswordService]
    })
], AuthenticationModule);
export { AuthenticationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvYXV0aGVudGljYXRpb24vYXV0aGVudGljYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUUvRTs7Ozs7OztHQU9HO0FBNEJILElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0NBQUcsQ0FBQTtBQUF2QixvQkFBb0I7SUEzQmhDLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRTtZQUNaLHNCQUFzQjtZQUN0QixlQUFlO1lBQ2YseUJBQXlCO1lBQ3pCLDBCQUEwQjtZQUMxQixvQkFBb0I7WUFDcEIsNkJBQTZCO1lBQzdCLHFCQUFxQjtZQUNyQixrQkFBa0I7WUFDbEIsMkJBQTJCO1NBQzVCO1FBQ0QsT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQztRQUM5RSxPQUFPLEVBQUU7WUFDUCxzQkFBc0I7WUFDdEIseUJBQXlCO1lBQ3pCLDBCQUEwQjtZQUMxQixlQUFlO1lBQ2Ysb0JBQW9CO1lBQ3BCLDZCQUE2QjtZQUM3QixxQkFBcUI7WUFDckIsa0JBQWtCO1lBQ2xCLDJCQUEyQjtTQUM1QjtRQUNELGVBQWUsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1FBQ2hELFNBQVMsRUFBRSxDQUFDLDhCQUE4QixFQUFFLGVBQWUsQ0FBQztLQUM3RCxDQUFDO0dBQ1csb0JBQW9CLENBQUc7U0FBdkIsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3Rvb2x0aXAnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQgfSBmcm9tICcuL3Bhc3N3b3JkLWNoZWNrLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkQ29uZmlybSB9IGZyb20gJy4vcGFzc3dvcmQtY29uZmlybS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENoZWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi9wYXNzd29yZC1zdHJlbmd0aC1jaGVja2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGguY29tcG9uZW50JztcbmltcG9ydCB7IE5ld1Bhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9uZXctcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1jb25maXJtLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJy4uL2Zvcm1zL2Zvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLWNoYWxsZW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU21zQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9zbXMtY2hhbGxlbmdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb3RwU2V0dXBDb21wb25lbnQgfSBmcm9tICcuL3RvdHAtc2V0dXAuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQuc2VydmljZSc7XG5pbXBvcnQgeyBRUkNvZGVNb2R1bGUgfSBmcm9tICdhbmd1bGFyeC1xcmNvZGUnO1xuaW1wb3J0IHsgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50IH0gZnJvbSAnLi9wcm92aWRlLXBob25lLW51bWJlci5jb21wb25lbnQnO1xuXG4vKipcbiAqIFRoZSBhbmd1bGFyIG1vZHVsZSBkZWZpbml0aW9uIGZvciBuZXcgcGFzc3dvcmQuXG4gKiBAZXhwb3J0cyBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50XG4gKiBAZXhwb3J0cyBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudFxuICogQGV4cG9ydHMgUGFzc3dvcmRDb25maXJtXG4gKiBAZXhwb3J0cyBOZXdQYXNzd29yZENvbXBvbmVudFxuICogQGV4cG9ydHMgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnRcbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgVG90cENoYWxsZW5nZUNvbXBvbmVudCxcbiAgICBQYXNzd29yZENvbmZpcm0sXG4gICAgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCxcbiAgICBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudCxcbiAgICBOZXdQYXNzd29yZENvbXBvbmVudCxcbiAgICBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCxcbiAgICBTbXNDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgVG90cFNldHVwQ29tcG9uZW50LFxuICAgIFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbRm9ybXNNb2R1bGUsIFRvb2x0aXBNb2R1bGUsIENvbW1vbk1vZHVsZSwgTW9kYWxNb2R1bGUsIFFSQ29kZU1vZHVsZV0sXG4gIGV4cG9ydHM6IFtcbiAgICBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtLFxuICAgIE5ld1Bhc3N3b3JkQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50LFxuICAgIFNtc0NoYWxsZW5nZUNvbXBvbmVudCxcbiAgICBUb3RwU2V0dXBDb21wb25lbnQsXG4gICAgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1Bhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbUGFzc3dvcmRTdHJlbmd0aENoZWNrZXJTZXJ2aWNlLCBQYXNzd29yZFNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uTW9kdWxlIHt9XG4iXX0=