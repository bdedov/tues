import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { BehaviorSubject, combineLatest } from 'rxjs';
import { BsModalService } from 'ngx-bootstrap/modal';
import { IManagedObject, InventoryService, IResultList, QueriesUtil } from '@c8y/client';
import { debounceTime, distinctUntilChanged, shareReplay, switchMap, take, tap } from 'rxjs/operators';
import { FilterInputComponent, gettext, ModalService, Status, AlertService } from '@c8y/ngx-components';
import { DashboardDetailComponent } from '../dashboard-detail.component';
import { ContextDashboardService } from '../context-dashboard.service';
import { ContextDashboardType } from '../context-dashboard.model';
import { TranslateService } from '@ngx-translate/core';
import { ReportDashboardService } from './report-dashboard.service';
let ReportDashboardListComponent = class ReportDashboardListComponent {
    constructor(inventoryService, contextDashboardService, bsModal, translateService, modal, alertService, reportDashboardService) {
        this.inventoryService = inventoryService;
        this.contextDashboardService = contextDashboardService;
        this.bsModal = bsModal;
        this.translateService = translateService;
        this.modal = modal;
        this.alertService = alertService;
        this.reportDashboardService = reportDashboardService;
        this.textFilter$ = new BehaviorSubject('');
        this.reload$ = new BehaviorSubject(null);
        this.reloading = false;
        this.reports$ = combineLatest(this.textFilter$.pipe(debounceTime(400), distinctUntilChanged()), this.reload$).pipe(tap(() => {
            this.reloading = true;
        }), switchMap(([text]) => this.loadReports(text)), tap(() => {
            this.reloading = false;
        }), shareReplay(1));
        this.DELETED_SUCCESS_MSG = gettext('Report deleted.');
    }
    loadReports(partialName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return partialName
                ? this.reportDashboardService.listReports({ filter: { name: `*${partialName}*` } })
                : this.reportDashboardService.listReports();
        });
    }
    add() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const initialState = {
                isReport: true,
                isNamedDashboard: true
            };
            const modal = this.bsModal.show(DashboardDetailComponent, {
                class: 'modal-lg',
                ignoreBackdropClick: true,
                initialState
            }).content;
            try {
                const cfg = yield modal.result;
                const { name, icon, c8y_IsNavigatorNode, priority, description } = cfg, dashboardCfg = tslib_1.__rest(cfg, ["name", "icon", "c8y_IsNavigatorNode", "priority", "description"]);
                const report = (yield this.reportDashboardService.createReport({
                    name,
                    icon,
                    c8y_IsNavigatorNode,
                    priority,
                    description
                })).data;
                yield this.contextDashboardService.create(dashboardCfg, `${this.contextDashboardService.REPORT_PARTIAL_NAME}${report.id}`);
                if (report.c8y_IsNavigatorNode) {
                    this.reportDashboardService.addReportNavigatorNode(report);
                }
                this.reload$.next();
                modal.close();
            }
            catch (ex) {
                if (ex) {
                    throw new Error(`Something went wrong: ${ex}`);
                }
            }
        });
    }
    delete(report) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const msg = gettext(`You are about to delete the report "{{ reportName }}". Do you want to proceed?`);
                yield this.modal.confirm(gettext('Delete report'), this.translateService.instant(msg, {
                    reportName: report.name
                }), Status.DANGER, {
                    ok: gettext('Delete'),
                    cancel: gettext('Cancel')
                });
                this.contextDashboardService
                    .getDashboard$(`report_${report.id}`, [ContextDashboardType.Named])
                    .pipe(take(1))
                    .subscribe(dashboard => this.contextDashboardService.delete(dashboard, false));
                yield this.inventoryService.delete(report.id);
                this.alertService.success(this.DELETED_SUCCESS_MSG);
                if (report.c8y_IsNavigatorNode) {
                    this.reportDashboardService.removeNavigatorNode(report);
                }
                this.reload$.next();
            }
            catch (ex) {
                if (ex) {
                    throw new Error(`Something went wrong: ${ex}`);
                }
            }
        });
    }
    update(report) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            report.c8y_IsNavigatorNode = report.c8y_IsNavigatorNode ? {} : null;
            yield this.inventoryService.update(report);
            report.c8y_IsNavigatorNode
                ? this.reportDashboardService.addReportNavigatorNode(report)
                : this.reportDashboardService.removeNavigatorNode(report);
        });
    }
};
ReportDashboardListComponent.ctorParameters = () => [
    { type: InventoryService },
    { type: ContextDashboardService },
    { type: BsModalService },
    { type: TranslateService },
    { type: ModalService },
    { type: AlertService },
    { type: ReportDashboardService }
];
tslib_1.__decorate([
    ViewChild(FilterInputComponent, { static: false })
], ReportDashboardListComponent.prototype, "filter", void 0);
ReportDashboardListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-report-dashboard-list',
        template: "<c8y-title>\n  <span translate>\n    Reports\n  </span>&nbsp;\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form\">\n  <div class=\"input-group input-group-search\">\n    <input class=\"form-control\"\n      type=\"search\"\n      title=\"{{ 'Filter\u2026' | translate }}\"\n      placeholder=\"{{ 'Filter\u2026' | translate }}\"\n      [ngModel]=\"textFilter$ | async\"\n      (ngModelChange)=\"textFilter$.next($event)\"\n    />\n    <span class=\"input-group-addon\">\n      <i c8yIcon=\"search\"\n        *ngIf=\"(textFilter$ | async).length === 0\"\n      ></i>\n      <i class=\"text-muted\"\n        c8yIcon=\"times\"\n        *ngIf=\"(textFilter$ | async).length > 0\"\n        (click)=\"textFilter$.next('')\"\n      ></i>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    title=\"{{ 'Add report' | translate }}\"\n    (click)=\"add()\"\n    >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add report' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    title=\"{{ 'Reload' | translate }}\"\n    (click)=\"loadReports()\"\n  >\n    <i [ngClass]=\"{ 'fa-spin': reloading }\"\n      c8yIcon=\"refresh\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"p-b-32\">\n  <c8y-list-group>\n    <c8y-li class=\"page-sticky-header hidden-xs hidden-sm\"\n      *ngIf=\"(reports$ | async)?.data.length > 0\"\n    >\n      <c8y-li-icon>\n        <i class=\"fa\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-80\">\n        <div class=\"col-3\">\n          {{ 'Report' | translate }}\n        </div>\n        <div class=\"col-6\">\n          {{ 'Description' | translate }}\n        </div>\n        <div class=\"col-2\">\n          {{ 'Show in navigator' | translate }}\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n\n    <c8y-li *c8yFor=\"let report of reports$; let i = index; loadMore: 'auto'\">\n      <c8y-li-icon [icon]=\"report.icon\"></c8y-li-icon>\n      <c8y-li-body class=\"content-flex-70\">\n        <div class=\"col-3\">\n          <button class=\"btn-clean\"\n            title=\"{{ report.name }}\"\n            routerLink=\"/reports/{{ report.id }}\"\n          >\n            <span class=\"text-truncate\">\n              {{ report.name }}\n            </span>\n          </button>\n        </div>\n        <div class=\"col-6\">\n          <small class=\"text-truncate-wrap\">\n            <em class=\"text-muted\"\n              *ngIf=\"!report.description; else showDescription\"\n            >\n              {{ 'No description available' | translate }}\n            </em>\n            <ng-template #showDescription>\n              {{ report.description }}\n            </ng-template>\n          </small>\n        </div>\n        <div class=\"col-2\">\n          <span class=\"m-t-8 visible-xs\"></span>\n          <label class=\"c8y-switch c8y-switch--inline\"\n            title=\"{{ 'Show in navigator' | translate }}\"\n          >\n            <input\n              [(ngModel)]=\"!!report.c8y_IsNavigatorNode\"\n              type=\"checkbox\"\n              (change)=\"update(report)\"\n            />\n            <span></span>\n            <span class=\"visible-xs\">\n              {{ 'Show in navigator' | translate }}\n            </span>\n          </label>\n        </div>\n        <div class=\"col-1 text-right hidden-xs\">\n          <button class=\"btn-dot showOnHover pull-right\"\n            (click)=\"delete(report)\"\n            title=\"{{ 'Remove report' | translate }}\"\n          >\n            <i class=\"text-danger\"\n            c8yIcon=\"minus-circle\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"visible-xs p-t-8 text-right\">\n          <button class=\"btn-danger btn btn-xs\"\n            (click)=\"delete(report)\"\n            title=\"{{ 'Remove report' | translate }}\"\n          >\n            <i c8yIcon=\"trash\"></i>\n            Delete\n          </button>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n\n<div class=\"c8y-empty-state text-center\"\n  *ngIf=\"(reports$ | async)?.data.length === 0\"\n  >\n  <h1 c8yIcon=\"th\"></h1>\n  <h3 translate>\n    There are no reports defined\n  </h3>\n  <p translate>\n    Add a report first.\n  </p>\n  <div>\n    <button class=\"btn btn-primary\"\n      (click)=\"add()\"\n      translate\n    >\n      Add report\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small forceHtmlTranslate ngNonBindable\n      >Find out more in the\n      <a c8y-guide-href=\"users-guide/cockpit/#reports\">\n        User guide`KEEP_ORIGINAL`\n      </a>.\n      </small>\n  </p>\n</div>\n"
    })
], ReportDashboardListComponent);
export { ReportDashboardListComponent };
//# sourceMappingURL=data:application/json;base64,