import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { LoraSetDeviceProtocolService } from './lora-set-device-protocol.service';
import { AlertService, gettext } from '@c8y/ngx-components';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { Router } from '@angular/router';
import { pipe } from 'rxjs';
import { map } from 'rxjs/operators';
let LoraAssignDeviceProtocolComponent = class LoraAssignDeviceProtocolComponent {
    constructor(loraService, alertService, router, inventoryService) {
        this.loraService = loraService;
        this.alertService = alertService;
        this.router = router;
        this.inventoryService = inventoryService;
        this.filterCurrentProtocol = pipe(map((protocols) => protocols.filter(protocol => !this.currentProtocol || this.currentProtocol.id !== protocol.id)));
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.reload();
        });
    }
    reload() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.loading = true;
            this.newProtocol = null;
            try {
                yield this.loadDevice();
                this.availableProtocols = yield this.loraService.getAvailableProtocols();
                this.currentProtocol = yield this.loraService.getCurrentProtocol(this.device);
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
            finally {
                this.loading = false;
            }
        });
    }
    loadDevice() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const deviceId = this.router.routerState.snapshot.url.match(/\d+/)[0];
            const { data } = yield this.inventoryService.detail(deviceId);
            this.device = data;
        });
    }
    apply(selectedProtocol) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.loraService.applyProtocol(this.device, selectedProtocol);
                yield this.reload();
                this.alertService.success(gettext('Device protocol set.'));
                this.loraSetDeviceProtocolForm.reset('dirty');
            }
            catch (ex) {
                this.alertService.danger(gettext('Could not set device protocol.'));
            }
        });
    }
};
LoraAssignDeviceProtocolComponent.ctorParameters = () => [
    { type: LoraSetDeviceProtocolService },
    { type: AlertService },
    { type: Router },
    { type: InventoryService }
];
tslib_1.__decorate([
    ViewChild('loraSetDeviceProtocolForm', { static: false })
], LoraAssignDeviceProtocolComponent.prototype, "loraSetDeviceProtocolForm", void 0);
LoraAssignDeviceProtocolComponent = tslib_1.__decorate([
    Component({
        selector: 'set-device-protocol',
        template: "<form #loraSetDeviceProtocolForm=\"ngForm\" class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header separator\">\n        <h4 class=\"card-title\">{{ 'LoRa device protocol' | translate }}</h4>\n      </div>\n      <div *ngIf=\"loading\" class=\"card-block\">\n        <div style=\"position: relative; min-height: 40px;min-width: 55px;\">\n          <div class=\"spinner\">\n            <div class=\"rect1\"></div>\n            <div class=\"rect2\"></div>\n            <div class=\"rect3\"></div>\n            <div class=\"rect4\"></div>\n          </div>\n        </div>\n        <span translate>Loading</span>\n      </div>\n      <div *ngIf=\"!loading\">\n        <div class=\"card-block\">\n          <div class=\"form-group\">\n            <label translate>Current device protocol</label>\n            <p class=\"form-control-static\" *ngIf=\"!currentProtocol\">\n              {{ 'c8y_LoriotLora' }}\n            </p>\n            <p class=\"form-control-static\" *ngIf=\"currentProtocol\">\n              {{ currentProtocol.name }}\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <label translate>New device protocol</label>\n            <div class=\"c8y-select-wrapper\">\n              <select class=\"form-control\" [(ngModel)]=\"newProtocol\" name=\"newProtocol\" required>\n                <option *ngIf=\"!newProtocol\" [ngValue]=\"null\">\n                  {{ 'Select device protocol' | translate }}\n                </option>\n                <option\n                  *c8yFor=\"let protocol of availableProtocols; pipe: filterCurrentProtocol\"\n                  [ngValue]=\"protocol\"\n                >\n                  {{ protocol.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer separator\">\n          <button\n            title=\"{{ 'Apply' | translate }}\"\n            class=\"btn btn-primary\"\n            (click)=\"apply(newProtocol)\"\n            translate\n            [disabled]=\"!loraSetDeviceProtocolForm.dirty\"\n          >\n            Apply\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\u200C\n"
    })
], LoraAssignDeviceProtocolComponent);
export { LoraAssignDeviceProtocolComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9yYS1zZXQtZGV2aWNlLXByb3RvY29sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvcHJvdG9jb2wtbG9yYS8iLCJzb3VyY2VzIjpbImxvcmEtc2V0LWRldmljZS1wcm90b2NvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDNUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDNUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT3JDLElBQWEsaUNBQWlDLEdBQTlDLE1BQWEsaUNBQWlDO0lBYzVDLFlBQ1UsV0FBeUMsRUFDekMsWUFBMEIsRUFDMUIsTUFBYyxFQUNkLGdCQUFrQztRQUhsQyxnQkFBVyxHQUFYLFdBQVcsQ0FBOEI7UUFDekMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFYNUMsMEJBQXFCLEdBQUcsSUFBSSxDQUMxQixHQUFHLENBQUMsQ0FBQyxTQUEyQixFQUFFLEVBQUUsQ0FDbEMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsS0FBSyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQy9GLENBQ0YsQ0FBQztJQVFFLENBQUM7SUFDQyxRQUFROztZQUNaLE1BQU0sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3RCLENBQUM7S0FBQTtJQUVLLE1BQU07O1lBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDcEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7WUFDeEIsSUFBSTtnQkFDRixNQUFNLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDeEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO2dCQUN6RSxJQUFJLENBQUMsZUFBZSxHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDL0U7WUFBQyxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3hDO29CQUFTO2dCQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2FBQ3RCO1FBQ0gsQ0FBQztLQUFBO0lBRUssVUFBVTs7WUFDZCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLENBQUM7S0FBQTtJQUVLLEtBQUssQ0FBQyxnQkFBZ0I7O1lBQzFCLElBQUk7Z0JBQ0YsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLGdCQUFnQixDQUFDLENBQUM7Z0JBQ3BFLE1BQU0sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO2dCQUNwQixJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO2dCQUMzRCxJQUFJLENBQUMseUJBQXlCLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQy9DO1lBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQzthQUNyRTtRQUNILENBQUM7S0FBQTtDQUNGLENBQUE7O1lBdkN3Qiw0QkFBNEI7WUFDM0IsWUFBWTtZQUNsQixNQUFNO1lBQ0ksZ0JBQWdCOztBQU5lO0lBQTFELFNBQVMsQ0FBQywyQkFBMkIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztvRkFBZ0M7QUFaL0UsaUNBQWlDO0lBTDdDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxxQkFBcUI7UUFDL0IsNHRFQUF3RDtLQUN6RCxDQUFDO0dBRVcsaUNBQWlDLENBc0Q3QztTQXREWSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb3JhU2V0RGV2aWNlUHJvdG9jb2xTZXJ2aWNlIH0gZnJvbSAnLi9sb3JhLXNldC1kZXZpY2UtcHJvdG9jb2wuc2VydmljZSc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJbnZlbnRvcnlTZXJ2aWNlLCBJUmVzdWx0TGlzdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBwaXBlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NldC1kZXZpY2UtcHJvdG9jb2wnLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9yYS1zZXQtZGV2aWNlLXByb3RvY29sLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIExvcmFBc3NpZ25EZXZpY2VQcm90b2NvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGRldmljZTogSU1hbmFnZWRPYmplY3Q7XG4gIGN1cnJlbnRQcm90b2NvbDogSU1hbmFnZWRPYmplY3Q7XG4gIGF2YWlsYWJsZVByb3RvY29sczogSVJlc3VsdExpc3Q8SU1hbmFnZWRPYmplY3Q+O1xuICBuZXdQcm90b2NvbDogSU1hbmFnZWRPYmplY3Q7XG5cbiAgZmlsdGVyQ3VycmVudFByb3RvY29sID0gcGlwZShcbiAgICBtYXAoKHByb3RvY29sczogSU1hbmFnZWRPYmplY3RbXSkgPT5cbiAgICAgIHByb3RvY29scy5maWx0ZXIocHJvdG9jb2wgPT4gIXRoaXMuY3VycmVudFByb3RvY29sIHx8IHRoaXMuY3VycmVudFByb3RvY29sLmlkICE9PSBwcm90b2NvbC5pZClcbiAgICApXG4gICk7XG4gIEBWaWV3Q2hpbGQoJ2xvcmFTZXREZXZpY2VQcm90b2NvbEZvcm0nLCB7IHN0YXRpYzogZmFsc2UgfSkgbG9yYVNldERldmljZVByb3RvY29sRm9ybTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbG9yYVNlcnZpY2U6IExvcmFTZXREZXZpY2VQcm90b2NvbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgaW52ZW50b3J5U2VydmljZTogSW52ZW50b3J5U2VydmljZVxuICApIHsgfVxuICBhc3luYyBuZ09uSW5pdCgpIHtcbiAgICBhd2FpdCB0aGlzLnJlbG9hZCgpO1xuICB9XG5cbiAgYXN5bmMgcmVsb2FkKCkge1xuICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgdGhpcy5uZXdQcm90b2NvbCA9IG51bGw7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubG9hZERldmljZSgpO1xuICAgICAgdGhpcy5hdmFpbGFibGVQcm90b2NvbHMgPSBhd2FpdCB0aGlzLmxvcmFTZXJ2aWNlLmdldEF2YWlsYWJsZVByb3RvY29scygpO1xuICAgICAgdGhpcy5jdXJyZW50UHJvdG9jb2wgPSBhd2FpdCB0aGlzLmxvcmFTZXJ2aWNlLmdldEN1cnJlbnRQcm90b2NvbCh0aGlzLmRldmljZSk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBsb2FkRGV2aWNlKCkge1xuICAgIGNvbnN0IGRldmljZUlkID0gdGhpcy5yb3V0ZXIucm91dGVyU3RhdGUuc25hcHNob3QudXJsLm1hdGNoKC9cXGQrLylbMF07XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCB0aGlzLmludmVudG9yeVNlcnZpY2UuZGV0YWlsKGRldmljZUlkKTtcbiAgICB0aGlzLmRldmljZSA9IGRhdGE7XG4gIH1cblxuICBhc3luYyBhcHBseShzZWxlY3RlZFByb3RvY29sKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubG9yYVNlcnZpY2UuYXBwbHlQcm90b2NvbCh0aGlzLmRldmljZSwgc2VsZWN0ZWRQcm90b2NvbCk7XG4gICAgICBhd2FpdCB0aGlzLnJlbG9hZCgpO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdEZXZpY2UgcHJvdG9jb2wgc2V0LicpKTtcbiAgICAgIHRoaXMubG9yYVNldERldmljZVByb3RvY29sRm9ybS5yZXNldCgnZGlydHknKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuZGFuZ2VyKGdldHRleHQoJ0NvdWxkIG5vdCBzZXQgZGV2aWNlIHByb3RvY29sLicpKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==