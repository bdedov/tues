import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { AddDeviceProfileComponent } from './add-device-profile.component';
import { DeviceProfileService } from './device-profile.service';
import { Router } from '@angular/router';
import { BehaviorSubject } from 'rxjs';
import { tap, switchMap } from 'rxjs/operators';
let DeviceProfileListComponent = class DeviceProfileListComponent {
    constructor(inventoryService, translateService, modalService, alertService, bsModalService, router, deviceProfileService) {
        this.inventoryService = inventoryService;
        this.translateService = translateService;
        this.modalService = modalService;
        this.alertService = alertService;
        this.bsModalService = bsModalService;
        this.router = router;
        this.deviceProfileService = deviceProfileService;
        this.reloading = false;
        this.reload = new BehaviorSubject(null);
        this.deviceProfiles$ = this.reload.pipe(tap(() => (this.reloading = true)), switchMap(() => this.deviceProfileService.getDeviceProfiles()), tap(() => (this.reloading = false)));
    }
    ngOnInit() {
        this.loadDeviceProfiles();
    }
    loadDeviceProfiles() {
        this.reload.next();
    }
    createDeviceProfile() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const modal = this.bsModalService.show(AddDeviceProfileComponent, {
                class: 'modal-sm'
            }).content;
            try {
                const profileId = yield modal.result;
                modal.close();
                this.router.navigateByUrl(`/device-profiles/${profileId}`);
            }
            catch (ex) {
                // do nothing
            }
        });
    }
    duplicateDeviceProfile(deviceProfile) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const copy = cloneDeep(deviceProfile);
            copy.id = null;
            copy.name = 'Duplicate of ' + deviceProfile.name;
            const mo = (yield this.deviceProfileService.createDeviceProfile(copy)).data;
            this.router.navigateByUrl(`/device-profiles/${mo.id}`);
        });
    }
    deleteDeviceProfile(deviceProfile) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const deviceProfileName = deviceProfile.name;
            const title = gettext('Delete device profile');
            const confirmationText = this.translateService.instant(gettext('You are about to delete a device profile "{{ deviceProfileName }}".'), { deviceProfileName });
            const finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));
            try {
                yield this.modalService.confirm(title, `${confirmationText} ${finalQuestion}`, Status.DANGER, {
                    ok: gettext('Delete')
                });
                yield this.delete(deviceProfile.id);
                this.reload.next();
            }
            catch (ex) {
                // do nothing
            }
        });
    }
    delete(profileId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.inventoryService.delete(profileId);
                this.alertService.success(gettext('Device profile deleted.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
};
DeviceProfileListComponent.ctorParameters = () => [
    { type: InventoryService },
    { type: TranslateService },
    { type: ModalService },
    { type: AlertService },
    { type: BsModalService },
    { type: Router },
    { type: DeviceProfileService }
];
DeviceProfileListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-device-profile-list',
        template: "<c8y-title>{{ 'Device profiles' | translate }}</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"createDeviceProfile()\"\n    title=\"{{ 'Add device profile' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add device profile' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"loadDeviceProfiles()\"\n    title=\"{{ 'Reload' | translate }}\">\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'fa-spin': reloading }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state text-left\"\n  *ngIf=\"(deviceProfiles$ | async)?.data.length === 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\"\n    [c8yIcon]=\"'c8y-device-profile'\"\n  ></h1>\n  <h3 translate>\n    No device profiles available.\n  </h3>\n  <p translate>\n    Add a new device profile by clicking below.\n  </p>\n  <p>\n    <button class=\"btn btn-primary\"\n      title=\"{{ 'Add device profile' | translate }}\"\n      (click)=\"createDeviceProfile()\"\n      translate\n    >\n      Add device profile\n    </button>\n  </p>\n</div>\n\n<!-- DEVICE PROFILES LIST -->\n<c8y-list-group class=\"m-b-24\"\n  [ngClass]=\"{'dd-low': (deviceProfiles$ | async)?.data.length < 10 }\"\n>\n  <c8y-li class=\"page-sticky-header c8y-list__item--empty-actions hidden-xs\"\n    *ngIf=\"(deviceProfiles$ | async)?.data.length > 0\"\n  >\n    <c8y-li-icon>\n      <i class=\"fa\"></i>\n    </c8y-li-icon>\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\">\n        {{'Device profile' | translate}}\n      </div>\n      <div class=\"col-6\">\n        {{'Device type' | translate}}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-li *c8yFor=\"let deviceProfile of deviceProfiles$\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-device-profile\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\" \n        title=\"{{ deviceProfile.name }}\"\n      >\n        <button class=\"btn-clean\"\n          routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n          style=\"max-width: inherit;\"\n        >\n          <span class=\"text-truncate\">\n            {{ deviceProfile.name }}\n          </span>\n        </button>\n      </div>\n      <div class=\"col-6\"\n        title=\"{{ deviceProfile.c8y_Filter?.type || '-' }}\"\n      >\n        <span class=\"text-label-small m-r-4 visible-xs\" translate>\n            Device type\n        </span>\n        <span class=\"text-truncate\"\n          *ngIf=\"deviceProfile.c8y_Filter?.type; else emptyText\"\n        >\n          {{ deviceProfile.c8y_Filter?.type}}\n      </span>\n      </div>\n      <ng-template #emptyText>\n        <small class=\"text-muted\">\n          <em>\n            {{ 'Undefined' | translate }}\n          </em>\n        </small>\n      </ng-template>\n    </c8y-li-body>\n\n    <c8y-li-action\n      routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n      icon=\"pencil\"\n      label=\"{{ 'Edit' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)=\"duplicateDeviceProfile(deviceProfile)\"\n      icon=\"copy\"\n      label=\"{{ 'Duplicate' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)=\"deleteDeviceProfile(deviceProfile)\"\n      icon=\"trash\"\n      label=\"{{ 'Delete' | translate }}\"\n    >\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n"
    })
], DeviceProfileListComponent);
export { DeviceProfileListComponent };
//# sourceMappingURL=data:application/json;base64,