var DataModule_1;
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { BasicAuth, FetchClient, Realtime, CookieAuth } from '@c8y/client';
import { ApiService } from './api.service';
import * as services from './services';
function toProvider(provide) {
    let deps = [FetchClient, Realtime];
    if (provide === FetchClient) {
        deps = [CookieAuth];
    }
    if (provide === BasicAuth || provide === CookieAuth) {
        deps = [];
    }
    if (provide === Realtime) {
        deps = [FetchClient];
    }
    return { provide, useClass: provide, deps };
}
const ɵ0 = (k) => toProvider(services[k]);
const providers = Object.keys(services).map(ɵ0)
    .concat([
    { provide: ApiService, useClass: ApiService, deps: [FetchClient] }
]);
// @dynamic
let DataModule = DataModule_1 = class DataModule {
    static providers() {
        return providers;
    }
    static forRoot() {
        return {
            ngModule: DataModule_1,
            providers
        };
    }
};
DataModule = DataModule_1 = tslib_1.__decorate([
    NgModule()
], DataModule);
export { DataModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXBpL2RhdGEubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxLQUFLLFFBQVEsTUFBTSxZQUFZLENBQUM7QUFFdkMsU0FBUyxVQUFVLENBQUMsT0FBTztJQUN6QixJQUFJLElBQUksR0FBVSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMxQyxJQUFJLE9BQU8sS0FBSyxXQUFXLEVBQUc7UUFDNUIsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDckI7SUFDRCxJQUFJLE9BQU8sS0FBSyxTQUFTLElBQUksT0FBTyxLQUFLLFVBQVUsRUFBRztRQUNwRCxJQUFJLEdBQUcsRUFBRSxDQUFDO0tBQ1g7SUFDRCxJQUFJLE9BQU8sS0FBSyxRQUFRLEVBQUU7UUFDeEIsSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDdEI7SUFDRCxPQUFPLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFDNUMsQ0FBQztXQUVtRCxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUFsRixNQUFNLFNBQVMsR0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBMEM7S0FDMUYsTUFBTSxDQUFDO0lBQ04sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUU7Q0FDbkUsQ0FBQyxDQUFDO0FBQ0wsV0FBVztBQUVYLElBQWEsVUFBVSxrQkFBdkIsTUFBYSxVQUFVO0lBQ3JCLE1BQU0sQ0FBQyxTQUFTO1FBQ2QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxZQUFVO1lBQ3BCLFNBQVM7U0FDVixDQUFDO0lBQ0osQ0FBQztDQUNGLENBQUE7QUFWWSxVQUFVO0lBRHRCLFFBQVEsRUFBRTtHQUNFLFVBQVUsQ0FVdEI7U0FWWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2ljQXV0aCwgRmV0Y2hDbGllbnQsIFJlYWx0aW1lLCBDb29raWVBdXRoIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQXBpU2VydmljZSB9IGZyb20gJy4vYXBpLnNlcnZpY2UnO1xuaW1wb3J0ICogYXMgc2VydmljZXMgZnJvbSAnLi9zZXJ2aWNlcyc7XG5cbmZ1bmN0aW9uIHRvUHJvdmlkZXIocHJvdmlkZSkge1xuICBsZXQgZGVwczogYW55W10gPSBbRmV0Y2hDbGllbnQsIFJlYWx0aW1lXTtcbiAgaWYgKHByb3ZpZGUgPT09IEZldGNoQ2xpZW50KSAge1xuICAgIGRlcHMgPSBbQ29va2llQXV0aF07XG4gIH1cbiAgaWYgKHByb3ZpZGUgPT09IEJhc2ljQXV0aCB8fCBwcm92aWRlID09PSBDb29raWVBdXRoKSAge1xuICAgIGRlcHMgPSBbXTtcbiAgfVxuICBpZiAocHJvdmlkZSA9PT0gUmVhbHRpbWUpIHtcbiAgICBkZXBzID0gW0ZldGNoQ2xpZW50XTtcbiAgfVxuICByZXR1cm4ge3Byb3ZpZGUsIHVzZUNsYXNzOiBwcm92aWRlLCBkZXBzfTtcbn1cblxuY29uc3QgcHJvdmlkZXJzOiBhbnlbXSA9IChPYmplY3Qua2V5cyhzZXJ2aWNlcykubWFwKChrKSA9PiB0b1Byb3ZpZGVyKHNlcnZpY2VzW2tdKSkgYXMgYW55W10pXG4gIC5jb25jYXQoW1xuICAgIHsgcHJvdmlkZTogQXBpU2VydmljZSwgdXNlQ2xhc3M6IEFwaVNlcnZpY2UsIGRlcHM6IFtGZXRjaENsaWVudF0gfVxuICBdKTtcbi8vIEBkeW5hbWljXG5ATmdNb2R1bGUoKVxuZXhwb3J0IGNsYXNzIERhdGFNb2R1bGUge1xuICBzdGF0aWMgcHJvdmlkZXJzKCkge1xuICAgIHJldHVybiBwcm92aWRlcnM7XG4gIH1cbiAgc3RhdGljIGZvclJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBEYXRhTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzXG4gICAgfTtcbiAgfVxufVxuIl19