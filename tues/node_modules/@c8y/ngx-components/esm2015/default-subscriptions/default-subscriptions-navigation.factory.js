import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { DefaultSubscriptionsGuard } from './default-subscriptions.guard';
let DefaultSubscriptionsNavigationFactory = class DefaultSubscriptionsNavigationFactory {
    constructor(defaultSubscriptionsGuard) {
        this.defaultSubscriptionsGuard = defaultSubscriptionsGuard;
        this.navNode = new NavigatorNode({
            label: gettext('Default subscriptions'),
            path: '/default-subscriptions',
            icon: 'c8y-c8y-data',
            parent: gettext('Applications'),
            priority: 1000
        });
    }
    /** Returns the navigation node if the feature is active. */
    get() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (yield this.defaultSubscriptionsGuard.canActivate()) {
                return this.navNode;
            }
        });
    }
};
DefaultSubscriptionsNavigationFactory.ctorParameters = () => [
    { type: DefaultSubscriptionsGuard }
];
DefaultSubscriptionsNavigationFactory = tslib_1.__decorate([
    Injectable()
], DefaultSubscriptionsNavigationFactory);
export { DefaultSubscriptionsNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGVmYXVsdC1zdWJzY3JpcHRpb25zLyIsInNvdXJjZXMiOlsiZGVmYXVsdC1zdWJzY3JpcHRpb25zLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUcxRSxJQUFhLHFDQUFxQyxHQUFsRCxNQUFhLHFDQUFxQztJQVNoRCxZQUFvQix5QkFBb0Q7UUFBcEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtRQVJoRSxZQUFPLEdBQUcsSUFBSSxhQUFhLENBQUM7WUFDbEMsS0FBSyxFQUFFLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztZQUN2QyxJQUFJLEVBQUUsd0JBQXdCO1lBQzlCLElBQUksRUFBRSxjQUFjO1lBQ3BCLE1BQU0sRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDO1lBQy9CLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQyxDQUFDO0lBRXdFLENBQUM7SUFFNUUsNERBQTREO0lBQ3RELEdBQUc7O1lBQ1AsSUFBSSxNQUFNLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDdEQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO2FBQ3JCO1FBQ0gsQ0FBQztLQUFBO0NBQ0YsQ0FBQTs7WUFSZ0QseUJBQXlCOztBQVQ3RCxxQ0FBcUM7SUFEakQsVUFBVSxFQUFFO0dBQ0EscUNBQXFDLENBaUJqRDtTQWpCWSxxQ0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBOYXZpZ2F0b3JOb2RlLCBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZCB9IGZyb20gJy4vZGVmYXVsdC1zdWJzY3JpcHRpb25zLmd1YXJkJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERlZmF1bHRTdWJzY3JpcHRpb25zTmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIHByaXZhdGUgbmF2Tm9kZSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICBsYWJlbDogZ2V0dGV4dCgnRGVmYXVsdCBzdWJzY3JpcHRpb25zJyksXG4gICAgcGF0aDogJy9kZWZhdWx0LXN1YnNjcmlwdGlvbnMnLFxuICAgIGljb246ICdjOHktYzh5LWRhdGEnLFxuICAgIHBhcmVudDogZ2V0dGV4dCgnQXBwbGljYXRpb25zJyksXG4gICAgcHJpb3JpdHk6IDEwMDBcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkOiBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkKSB7fVxuXG4gIC8qKiBSZXR1cm5zIHRoZSBuYXZpZ2F0aW9uIG5vZGUgaWYgdGhlIGZlYXR1cmUgaXMgYWN0aXZlLiAqL1xuICBhc3luYyBnZXQoKTogUHJvbWlzZTxOYXZpZ2F0b3JOb2RlPiB7XG4gICAgaWYgKGF3YWl0IHRoaXMuZGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZC5jYW5BY3RpdmF0ZSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy5uYXZOb2RlO1xuICAgIH1cbiAgfVxufVxuIl19