import { AssetNode } from '../asset-node';
export class GroupNode extends AssetNode {
    // FIXME: Currently hasChildren returns true if it is a group,
    //        Issue is, that we disable the children in the API
    //        getGroupItems service call due to performance. This leads
    //        to that the dropdown chevron is shown always. Issue is,
    //        that even if we return the chevrons, we have no way to determine
    //        if the childAssets contain groups or other assets (like dashboards).
    // get hasChildren() {
    //  return this.root || this.service.groups.isGroup(this.mo) && (this.mo as IManagedObject).childAssets.references.length > 0;
    // }
    /**
     * Creates a new node which shows only groups.
     *
     * @param service The service to use.
     * @param config  The default configuration of the node.
     */
    constructor(service, config = {}) {
        super(service, config);
        this.service = service;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvYXNzZXRzLW5hdmlnYXRvci8iLCJzb3VyY2VzIjpbImFzc2V0LXNlbGVjdG9yL2dyb3VwLW5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxNQUFNLE9BQU8sU0FBVSxTQUFRLFNBQVM7SUFDdEMsOERBQThEO0lBQzlELDJEQUEyRDtJQUMzRCxtRUFBbUU7SUFDbkUsaUVBQWlFO0lBQ2pFLDBFQUEwRTtJQUMxRSw4RUFBOEU7SUFDOUUsc0JBQXNCO0lBQ3RCLDhIQUE4SDtJQUM5SCxJQUFJO0lBRUo7Ozs7O09BS0c7SUFDSCxZQUFzQixPQUF5QixFQUFFLE1BQU0sR0FBRyxFQUFFO1FBQzFELEtBQUssQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFESCxZQUFPLEdBQVAsT0FBTyxDQUFrQjtJQUUvQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcm91cE5vZGVTZXJ2aWNlIH0gZnJvbSAnLi9ncm91cC1ub2RlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXNzZXROb2RlIH0gZnJvbSAnLi4vYXNzZXQtbm9kZSc7XG5cbmV4cG9ydCBjbGFzcyBHcm91cE5vZGUgZXh0ZW5kcyBBc3NldE5vZGUge1xuICAvLyBGSVhNRTogQ3VycmVudGx5IGhhc0NoaWxkcmVuIHJldHVybnMgdHJ1ZSBpZiBpdCBpcyBhIGdyb3VwLFxuICAvLyAgICAgICAgSXNzdWUgaXMsIHRoYXQgd2UgZGlzYWJsZSB0aGUgY2hpbGRyZW4gaW4gdGhlIEFQSVxuICAvLyAgICAgICAgZ2V0R3JvdXBJdGVtcyBzZXJ2aWNlIGNhbGwgZHVlIHRvIHBlcmZvcm1hbmNlLiBUaGlzIGxlYWRzXG4gIC8vICAgICAgICB0byB0aGF0IHRoZSBkcm9wZG93biBjaGV2cm9uIGlzIHNob3duIGFsd2F5cy4gSXNzdWUgaXMsXG4gIC8vICAgICAgICB0aGF0IGV2ZW4gaWYgd2UgcmV0dXJuIHRoZSBjaGV2cm9ucywgd2UgaGF2ZSBubyB3YXkgdG8gZGV0ZXJtaW5lXG4gIC8vICAgICAgICBpZiB0aGUgY2hpbGRBc3NldHMgY29udGFpbiBncm91cHMgb3Igb3RoZXIgYXNzZXRzIChsaWtlIGRhc2hib2FyZHMpLlxuICAvLyBnZXQgaGFzQ2hpbGRyZW4oKSB7XG4gIC8vICByZXR1cm4gdGhpcy5yb290IHx8IHRoaXMuc2VydmljZS5ncm91cHMuaXNHcm91cCh0aGlzLm1vKSAmJiAodGhpcy5tbyBhcyBJTWFuYWdlZE9iamVjdCkuY2hpbGRBc3NldHMucmVmZXJlbmNlcy5sZW5ndGggPiAwO1xuICAvLyB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgbm9kZSB3aGljaCBzaG93cyBvbmx5IGdyb3Vwcy5cbiAgICpcbiAgICogQHBhcmFtIHNlcnZpY2UgVGhlIHNlcnZpY2UgdG8gdXNlLlxuICAgKiBAcGFyYW0gY29uZmlnICBUaGUgZGVmYXVsdCBjb25maWd1cmF0aW9uIG9mIHRoZSBub2RlLlxuICAgKi9cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHNlcnZpY2U6IEdyb3VwTm9kZVNlcnZpY2UsIGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoc2VydmljZSwgY29uZmlnKTtcbiAgfVxufVxuIl19