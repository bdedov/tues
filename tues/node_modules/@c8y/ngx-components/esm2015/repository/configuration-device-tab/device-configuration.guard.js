import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { DeviceConfigurationService } from './device-configuration.service';
import { DeviceConfigurationOperation } from '../repository.model';
let DeviceConfigurationGuard = class DeviceConfigurationGuard {
    constructor(deviceConfigurationService) {
        this.deviceConfigurationService = deviceConfigurationService;
    }
    canActivate(route, state) {
        const contextData = route.data.contextData || route.parent.data.contextData;
        if (!contextData) {
            return false;
        }
        return ((contextData.c8y_SupportedConfigurations &&
            contextData.c8y_SupportedConfigurations.length > 0) ||
            this.deviceConfigurationService.hasAnySupportedOperation(contextData, [
                DeviceConfigurationOperation.DOWNLOAD_CONFIG,
                DeviceConfigurationOperation.UPLOAD_CONFIG,
                DeviceConfigurationOperation.CONFIG,
                DeviceConfigurationOperation.SEND_CONFIG
            ]));
    }
};
DeviceConfigurationGuard.ctorParameters = () => [
    { type: DeviceConfigurationService }
];
DeviceConfigurationGuard = tslib_1.__decorate([
    Injectable()
], DeviceConfigurationGuard);
export { DeviceConfigurationGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWNvbmZpZ3VyYXRpb24uZ3VhcmQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvIiwic291cmNlcyI6WyJjb25maWd1cmF0aW9uLWRldmljZS10YWIvZGV2aWNlLWNvbmZpZ3VyYXRpb24uZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHbkUsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7SUFDbkMsWUFBb0IsMEJBQXNEO1FBQXRELCtCQUEwQixHQUExQiwwQkFBMEIsQ0FBNEI7SUFBRyxDQUFDO0lBRTlFLFdBQVcsQ0FBQyxLQUE2QixFQUFFLEtBQTBCO1FBQ25FLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUM1RSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2hCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLENBQ0wsQ0FBQyxXQUFXLENBQUMsMkJBQTJCO1lBQ3RDLFdBQVcsQ0FBQywyQkFBMkIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBQ3JELElBQUksQ0FBQywwQkFBMEIsQ0FBQyx3QkFBd0IsQ0FBQyxXQUFXLEVBQUU7Z0JBQ3BFLDRCQUE0QixDQUFDLGVBQWU7Z0JBQzVDLDRCQUE0QixDQUFDLGFBQWE7Z0JBQzFDLDRCQUE0QixDQUFDLE1BQU07Z0JBQ25DLDRCQUE0QixDQUFDLFdBQVc7YUFDekMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTs7WUFsQmlELDBCQUEwQjs7QUFEL0Qsd0JBQXdCO0lBRHBDLFVBQVUsRUFBRTtHQUNBLHdCQUF3QixDQW1CcEM7U0FuQlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgQ2FuQWN0aXZhdGUsIFJvdXRlclN0YXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV2aWNlQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGV2aWNlQ29uZmlndXJhdGlvbk9wZXJhdGlvbiB9IGZyb20gJy4uL3JlcG9zaXRvcnkubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGV2aWNlQ29uZmlndXJhdGlvbkd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRldmljZUNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBEZXZpY2VDb25maWd1cmF0aW9uU2VydmljZSkge31cblxuICBjYW5BY3RpdmF0ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpIHtcbiAgICBjb25zdCBjb250ZXh0RGF0YSA9IHJvdXRlLmRhdGEuY29udGV4dERhdGEgfHwgcm91dGUucGFyZW50LmRhdGEuY29udGV4dERhdGE7XG4gICAgaWYgKCFjb250ZXh0RGF0YSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgKGNvbnRleHREYXRhLmM4eV9TdXBwb3J0ZWRDb25maWd1cmF0aW9ucyAmJlxuICAgICAgICBjb250ZXh0RGF0YS5jOHlfU3VwcG9ydGVkQ29uZmlndXJhdGlvbnMubGVuZ3RoID4gMCkgfHxcbiAgICAgIHRoaXMuZGV2aWNlQ29uZmlndXJhdGlvblNlcnZpY2UuaGFzQW55U3VwcG9ydGVkT3BlcmF0aW9uKGNvbnRleHREYXRhLCBbXG4gICAgICAgIERldmljZUNvbmZpZ3VyYXRpb25PcGVyYXRpb24uRE9XTkxPQURfQ09ORklHLFxuICAgICAgICBEZXZpY2VDb25maWd1cmF0aW9uT3BlcmF0aW9uLlVQTE9BRF9DT05GSUcsXG4gICAgICAgIERldmljZUNvbmZpZ3VyYXRpb25PcGVyYXRpb24uQ09ORklHLFxuICAgICAgICBEZXZpY2VDb25maWd1cmF0aW9uT3BlcmF0aW9uLlNFTkRfQ09ORklHXG4gICAgICBdKVxuICAgICk7XG4gIH1cbn1cbiJdfQ==