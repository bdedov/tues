"use strict";!function(){function t(d,e,a,n){var f=this;_.assign(f,{$onChanges:function(t){_.get(t,"contractInfo.currentValue")&&function(u){d.getProductsInfo().then(function(t){var e,a,n,o=u.CurrentPhase,r=_.last(u.Phases),c=u.PlanVariantId;"Inactive"!==r.Type&&(c=r.PlanVariantId);var l=_.find(t.PlanVariants,{Id:c}),i=!0;"Trial"===o.Type&&"Normal"===r.Type?(a=r.StartDate,n=moment(a).diff(moment(),"days")):"Inactive"===r.Type?(e=r.StartDate,i=!1,n=moment(e).diff(moment(),"days")):"Normal"===r.Type&&(a=r.StartDate);var s=_.find(d.PLAN_VARIANTS.values(),{value:l.ExternalId});f.currentPlan=_.assign(l,s),f.plansAvailableForUpgrade=_.filter(d.PLAN_VARIANTS.values(),function(t){return _.includes(f.currentPlan.upgradableTo,t.name)}),f.daysLeftInTrial=n,f.canCloseAccount=i,f.normalPhaseStartDate=a,f.inactivePhaseStartDate=e})}(f.contractInfo)},upgradeToPlan:function(t){var e="onCreateUpgradeTo".concat(_.startCase(_.toLower(t.name)),"Modal");f[e]()},closeAccount:function(){var t={title:n("Close account"),body:n("You are about to close your account. Do you want to proceed?"),status:"danger",labels:{ok:n("Close account")}};return e(t).then(d.endContract).then(function(){a.success(n("Your account will be closed at the end of the current billing period."))})}})}t.$inject=["customerBillingSvc","c8yModal","c8yAlert","gettext"],angular.module("c8y.customerBilling").component("plansOverviewWidget",{controller:t,controllerAs:"vm",templateUrl:":::PLUGIN_PATH:::/plansOverview/plansOverviewWidget.html",bindings:{contractInfo:"<",onCreateUpgradeToStandardModal:"&?",onCreateUpgradeToEnterpriseModal:"&?"}})}();