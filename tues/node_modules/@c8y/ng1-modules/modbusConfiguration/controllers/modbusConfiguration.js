"use strict";!function(){function e(s,t,e,i,a,n,d,r,o,c,u,l,v){var f=e.deviceId,g={protocols:[]},D={types:[]},y={IS_REQUIRED:"required",ADDRESS_IN_USE:"address-in-use",ADDRESSES_IN_USE:"addresses-in-use",POLLING_RATE_LARGER_THAN_TRANSMIT_RATE:"polling-rate-larger-than-transmit-rate"},S={};function p(e){D.types.length=0,_.forEach(e,function(e){D.types.push(e)})}function E(){return s.devices=s.devices||[],s.devices.length=0,d.childDevices(f).then(A)}function A(e){var i=_.isArray(e)?e:[e];s.devices=s.devices||[],_.forEach(i,function(i){var e=_.find(D.types,function(e){return i.c8y_ModbusDevice.type==="/inventory/managedObjects/".concat(e.id)});s.devices.push({id:i.id,name:i.name,deviceType:e&&e.name,address:i.c8y_ModbusDevice.address,ipAddress:i.c8y_ModbusDevice.ipAddress})})}function m(){var e=["RTU","ASCII"];return C(s.device)&&(e=["TCP"]),e}function h(e){g.protocols=e}function R(){b(),E(),o.success(l("New child device added."))}function T(){s.newDevice.adding=!1,o.danger(l("Failed to add new child device."))}function b(){delete s.newDevice,s.newDeviceForm.$setPristine()}function C(e){return e&&e.c8y_ModbusConfiguration&&"TCP"===e.c8y_ModbusConfiguration.protocol}S[y.IS_REQUIRED]=l("This field is required."),S[y.ADDRESS_IN_USE]=l("This address is already in use."),S[y.ADDRESSES_IN_USE]=l("These addresses are already in use."),S[y.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE]=l("Polling rate must be equal to or smaller than transmit rate."),s.invalid=function(e,i){return function(){var e="newDeviceForm",i=s[e].address,n=i.$modelValue,t=s[e].ipAddress,a=t.$modelValue,d=!C(s.device)&&n&&_.some(s.devices,{address:n}),r=C(s.device)&&n&&a&&_.some(s.devices,{address:n,ipAddress:a});i.$setValidity(y.ADDRESS_IN_USE,!d),i.$setValidity(y.ADDRESSES_IN_USE,!r),t.$setValidity(y.ADDRESSES_IN_USE,!r)}(),function(){var e="modbusCommunicationForm",i=s[e].pollingRate,n=s[e].transmitRate,t=!(i.$modelValue>n.$modelValue);i.$setValidity(y.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,t)}(),n.invalid(s,e,i)},s.getFieldValidationHints=function(e,i){var n=[];return s[e][i]&&s[e][i].$error&&_.forEach(s[e][i].$error,function(e,i){e&&n.push(v.getString(S[i]))}),n.join(" ")},s.serialConfigurationOptions={baudRates:[3200,9600,19200,38400],dataBits:[7,8],parities:["N","E","O"],stopBits:[1,2]},s.modbusConfigurationOptions=g,s.deviceConfigurationOptions=D,s.save=function(e){var i=[];return i.push(function(e){var i=t.resolve();if(e.c8y_SerialConfiguration){var n={deviceId:e.id,description:l("Set serial configuration"),c8y_SerialConfiguration:e.c8y_SerialConfiguration};i=a.create(n)}return i}(e)),i.push(function(e){var i=t.resolve();if(e.c8y_ModbusConfiguration){var n={deviceId:e.id,description:l("Set modbus configuration"),c8y_ModbusConfiguration:e.c8y_ModbusConfiguration};i=a.create(n)}return i}(e)),t.all(i).then(function(){o.success(l("Terminal configuration will be updated."))})},s.startAddingNewDevice=function(){s.newDevice={name:null,deviceType:null,address:null}},s.addNewDevice=function(e){!function(i){return!!_.find(s.devices,function(e){return e.address===i.address&&C(s.device)&&e.ipAddress===i.ipAddress})}(e)?(e.adding=!0,u.create(s.device,e).then(R,T)):o.danger(l("Device with the same address already exists."))},s.clearNewDevice=b,s.navigateToDetail=function(e){i.url("device/".concat(e.id))},s.onClickDelete=function(e){r({title:l("Delete device"),body:v.getString('You are about to delete device "{{name}}". Do you want to proceed?',e),status:"danger",labels:{ok:l("Delete")}}).then(angular.bind(d,d.remove,e)).then(_.partial(_.pull,s.devices,e)).then(_.partial(o.success,l("Device deleted.")))},s.usesModbusTCP=C,c.getAvailableDeviceTypes().then(p).then(E).then(m).then(h)}e.$inject=["$scope","$q","$routeParams","$location","c8yDeviceControl","c8yBase","c8yDevices","c8yModal","c8yAlert","c8yDeviceDatabase","c8yModbusDevice","gettext","gettextCatalog"],angular.module("c8y.modbusConfiguration").controller("modbusConfigCtrl",e)}();