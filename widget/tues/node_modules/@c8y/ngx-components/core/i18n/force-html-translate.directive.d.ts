import { TranslateService } from '@ngx-translate/core';
import { AfterViewChecked, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { Subscription } from 'rxjs';
/**
 * This is temporary fallback directive that is used to handle HTML blocks translation on maintenance versions
 * in version 10.9.4 and later, this is replaced by default translate directive.
 */
export declare class ForceHtmlTranslateDirective implements AfterViewChecked, OnDestroy {
    private translateService;
    private element;
    private _ref;
    currentParams: any;
    onLangChangeSub: Subscription;
    onDefaultLangChangeSub: Subscription;
    onTranslationChangeSub: Subscription;
    /**
     * Used to trigger events when html is replaced by directive.
     */
    htmlUpdateEvent: EventEmitter<void>;
    translateParams: any;
    constructor(translateService: TranslateService, element: ElementRef, _ref: ChangeDetectorRef);
    ngAfterViewChecked(): void;
    checkNodes(): void;
    ngOnDestroy(): void;
    /**
     * Builds lookup key from innerHTML, removes comments (that might be added by Angular) and trims it.
     */
    private getLookupKey;
    private isLookupKeyMissing;
    private lookupKeyExist;
    private translateAndUpdateHtmlContent;
}
