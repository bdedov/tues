import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FetchClient, IIdentified, IResult, Service } from '@c8y/client';
import { get } from 'lodash-es';
var ProviderConfigurationService = /** @class */ (function (_super) {
    tslib_1.__extends(ProviderConfigurationService, _super);
    function ProviderConfigurationService(client, activatedRoute) {
        var _this = _super.call(this, client) || this;
        _this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.baseUrl');
        _this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.listUrl');
        return _this;
    }
    ProviderConfigurationService_1 = ProviderConfigurationService;
    ProviderConfigurationService.prototype.detail = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.detail.call(this, ProviderConfigurationService_1.NO_DETAIL_ID)];
            });
        });
    };
    ProviderConfigurationService.prototype.update = function (entity) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.update.call(this, entity)];
            });
        });
    };
    ProviderConfigurationService.prototype.delete = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.delete.call(this, ProviderConfigurationService_1.NO_DETAIL_ID)];
            });
        });
    };
    /** There is a single provider configuration per tenant and detail URL is not needed */
    ProviderConfigurationService.prototype.getDetailUrl = function (_) {
        return this.listUrl;
    };
    var ProviderConfigurationService_1;
    ProviderConfigurationService.NO_DETAIL_ID = null;
    ProviderConfigurationService.ctorParameters = function () { return [
        { type: FetchClient },
        { type: ActivatedRoute }
    ]; };
    ProviderConfigurationService = ProviderConfigurationService_1 = tslib_1.__decorate([
        Injectable()
    ], ProviderConfigurationService);
    return ProviderConfigurationService;
}(Service));
export { ProviderConfigurationService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItY29uZmlndXJhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvcHJvdmlkZXItY29uZmlndXJhdGlvbi9zZXJ2aWNlL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN6RSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBSWhDO0lBQWtELHdEQUEyQjtJQU0zRSxzQ0FBWSxNQUFtQixFQUFFLGNBQThCO1FBQS9ELFlBQ0Usa0JBQU0sTUFBTSxDQUFDLFNBR2Q7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxjQUFjLEVBQUUsc0RBQXNELENBQUMsQ0FBQztRQUMzRixLQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxjQUFjLEVBQUUsc0RBQXNELENBQUMsQ0FBQzs7SUFDN0YsQ0FBQztxQ0FWVSw0QkFBNEI7SUFZakMsNkNBQU0sR0FBWjs7O2dCQUNFLHNCQUFPLGlCQUFNLE1BQU0sWUFBQyw4QkFBNEIsQ0FBQyxZQUFZLENBQUMsRUFBQzs7O0tBQ2hFO0lBRUssNkNBQU0sR0FBWixVQUFhLE1BQW1DOzs7Z0JBQzlDLHNCQUFPLGlCQUFNLE1BQU0sWUFBQyxNQUFNLENBQUMsRUFBQzs7O0tBQzdCO0lBRUssNkNBQU0sR0FBWjs7O2dCQUNFLHNCQUFPLGlCQUFNLE1BQU0sWUFBQyw4QkFBNEIsQ0FBQyxZQUFZLENBQUMsRUFBQzs7O0tBQ2hFO0lBRUQsdUZBQXVGO0lBQzdFLG1EQUFZLEdBQXRCLFVBQXVCLENBQWdDO1FBQ3JELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDOztJQTFCdUIseUNBQVksR0FBVyxJQUFJLENBQUM7O2dCQUtoQyxXQUFXO2dCQUFrQixjQUFjOztJQU5wRCw0QkFBNEI7UUFEeEMsVUFBVSxFQUFFO09BQ0EsNEJBQTRCLENBNEJ4QztJQUFELG1DQUFDO0NBQUEsQUE1QkQsQ0FBa0QsT0FBTyxHQTRCeEQ7U0E1QlksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgRmV0Y2hDbGllbnQsIElJZGVudGlmaWVkLCBJUmVzdWx0LCBTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IFByb3ZpZGVyUHJvcGVydGllcyB9IGZyb20gJy4uL21vZGVsL3Byb3ZpZGVyLXByb3BlcnRpZXMubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUHJvdmlkZXJDb25maWd1cmF0aW9uU2VydmljZSBleHRlbmRzIFNlcnZpY2U8UHJvdmlkZXJQcm9wZXJ0aWVzPiB7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IE5PX0RFVEFJTF9JRDogc3RyaW5nID0gbnVsbDtcblxuICBwcm90ZWN0ZWQgYmFzZVVybDogc3RyaW5nO1xuICBwcm90ZWN0ZWQgbGlzdFVybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGNsaWVudDogRmV0Y2hDbGllbnQsIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkge1xuICAgIHN1cGVyKGNsaWVudCk7XG4gICAgdGhpcy5iYXNlVXJsID0gZ2V0KGFjdGl2YXRlZFJvdXRlLCAnc25hcHNob3QuZGF0YS5lbmRwb2ludC5jb25maWd1cmF0aW9uRW5kcG9pbnQuYmFzZVVybCcpO1xuICAgIHRoaXMubGlzdFVybCA9IGdldChhY3RpdmF0ZWRSb3V0ZSwgJ3NuYXBzaG90LmRhdGEuZW5kcG9pbnQuY29uZmlndXJhdGlvbkVuZHBvaW50Lmxpc3RVcmwnKTtcbiAgfVxuXG4gIGFzeW5jIGRldGFpbCgpOiBQcm9taXNlPElSZXN1bHQ8UHJvdmlkZXJQcm9wZXJ0aWVzPj4ge1xuICAgIHJldHVybiBzdXBlci5kZXRhaWwoUHJvdmlkZXJDb25maWd1cmF0aW9uU2VydmljZS5OT19ERVRBSUxfSUQpO1xuICB9XG5cbiAgYXN5bmMgdXBkYXRlKGVudGl0eTogUGFydGlhbDxQcm92aWRlclByb3BlcnRpZXM+KTogUHJvbWlzZTxJUmVzdWx0PFByb3ZpZGVyUHJvcGVydGllcz4+IHtcbiAgICByZXR1cm4gc3VwZXIudXBkYXRlKGVudGl0eSk7XG4gIH1cblxuICBhc3luYyBkZWxldGUoKTogUHJvbWlzZTxJUmVzdWx0PG51bGw+PiB7XG4gICAgcmV0dXJuIHN1cGVyLmRlbGV0ZShQcm92aWRlckNvbmZpZ3VyYXRpb25TZXJ2aWNlLk5PX0RFVEFJTF9JRCk7XG4gIH1cblxuICAvKiogVGhlcmUgaXMgYSBzaW5nbGUgcHJvdmlkZXIgY29uZmlndXJhdGlvbiBwZXIgdGVuYW50IGFuZCBkZXRhaWwgVVJMIGlzIG5vdCBuZWVkZWQgKi9cbiAgcHJvdGVjdGVkIGdldERldGFpbFVybChfOiBzdHJpbmcgfCBudW1iZXIgfCBJSWRlbnRpZmllZCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubGlzdFVybDtcbiAgfVxufVxuIl19