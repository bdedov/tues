/* tslint:disable:max-classes-per-file */
import * as tslib_1 from "tslib";
import { Directive, TemplateRef, Type } from '@angular/core';
var CellRendererContext = /** @class */ (function () {
    function CellRendererContext() {
    }
    return CellRendererContext;
}());
export { CellRendererContext };
var CellRendererDefDirective = /** @class */ (function () {
    function CellRendererDefDirective(template) {
        this.template = template;
    }
    CellRendererDefDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    CellRendererDefDirective = tslib_1.__decorate([
        Directive({ selector: '[c8yCellRendererDef]' })
    ], CellRendererDefDirective);
    return CellRendererDefDirective;
}());
export { CellRendererDefDirective };
var HeaderCellRendererDefDirective = /** @class */ (function () {
    function HeaderCellRendererDefDirective(template) {
        this.template = template;
    }
    HeaderCellRendererDefDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    HeaderCellRendererDefDirective = tslib_1.__decorate([
        Directive({ selector: '[c8yHeaderCellRendererDef]' })
    ], HeaderCellRendererDefDirective);
    return HeaderCellRendererDefDirective;
}());
export { HeaderCellRendererDefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1yZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2RhdGEtZ3JpZC9jb2x1bW4vY2VsbC1yZW5kZXJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5Q0FBeUM7O0FBRXpDLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWE3RDtJQUFBO0lBSUEsQ0FBQztJQUFELDBCQUFDO0FBQUQsQ0FBQyxBQUpELElBSUM7O0FBR0Q7SUFDRSxrQ0FBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7SUFBRyxDQUFDOztnQkFBcEIsV0FBVzs7SUFEN0Isd0JBQXdCO1FBRHBDLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxDQUFDO09BQ25DLHdCQUF3QixDQUVwQztJQUFELCtCQUFDO0NBQUEsQUFGRCxJQUVDO1NBRlksd0JBQXdCO0FBS3JDO0lBQ0Usd0NBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0lBQUcsQ0FBQzs7Z0JBQXBCLFdBQVc7O0lBRDdCLDhCQUE4QjtRQUQxQyxTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQztPQUN6Qyw4QkFBOEIsQ0FFMUM7SUFBRCxxQ0FBQztDQUFBLEFBRkQsSUFFQztTQUZZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlOm1heC1jbGFzc2VzLXBlci1maWxlICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29sdW1uIH0gZnJvbSAnLi4vZGF0YS1ncmlkLm1vZGVsJztcblxuZXhwb3J0IGludGVyZmFjZSBDZWxsUmVuZGVyZXJEZWYge1xuICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDZWxsUmVuZGVyZXJTcGVjIHtcbiAgcmVuZGVyZXI6IFRlbXBsYXRlUmVmPENlbGxSZW5kZXJlckNvbnRleHQ+IHwgVHlwZTxhbnk+O1xuICBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0O1xufVxuXG5leHBvcnQgY2xhc3MgQ2VsbFJlbmRlcmVyQ29udGV4dCB7XG4gIHZhbHVlOiBhbnk7XG4gIGl0ZW0/OiBhbnk7XG4gIHByb3BlcnR5OiBDb2x1bW47XG59XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tjOHlDZWxsUmVuZGVyZXJEZWZdJyB9KVxuZXhwb3J0IGNsYXNzIENlbGxSZW5kZXJlckRlZkRpcmVjdGl2ZSBpbXBsZW1lbnRzIENlbGxSZW5kZXJlckRlZiB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2M4eUhlYWRlckNlbGxSZW5kZXJlckRlZl0nIH0pXG5leHBvcnQgY2xhc3MgSGVhZGVyQ2VsbFJlbmRlcmVyRGVmRGlyZWN0aXZlIGltcGxlbWVudHMgQ2VsbFJlbmRlcmVyRGVmIHtcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuIl19