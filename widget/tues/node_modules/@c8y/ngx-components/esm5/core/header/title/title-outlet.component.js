import * as tslib_1 from "tslib";
import { Component, ElementRef, NgZone } from '@angular/core';
import { HeaderService } from '../header.service';
import { debounceTime, map, filter } from 'rxjs/operators';
var TitleOutletComponent = /** @class */ (function () {
    function TitleOutletComponent(headerService, element, zone) {
        var _this = this;
        this.headerService = headerService;
        this.element = element;
        this.zone = zone;
        this.title = undefined;
        this.pageTitleUpdate = true;
        var title$ = this.headerService.map(function (state) { return state.title; });
        title$.subscribe(function (title) { return (_this.title = title); });
        var pageTitleUpdate$ = this.headerService.map(function (state) { return state.pageTitleUpdate; });
        pageTitleUpdate$.subscribe(function (pageTitleUpdate) { return (_this.pageTitleUpdate = pageTitleUpdate); });
        this.zone.runOutsideAngular(function () {
            _this.headerService.state$.pipe(debounceTime(100), filter(function (state) { return state.pageTitleUpdate; }), debounceTime(100), map(function () { return _this.element.nativeElement.querySelector('h1'); }), filter(function (el) { return el !== null; }), map(function (el) { return el.innerText; }), filter(Boolean))
                .subscribe(function (title) { return headerService.changePageTitle(title); });
        });
    }
    TitleOutletComponent.ctorParameters = function () { return [
        { type: HeaderService },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    TitleOutletComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-title-outlet',
            template: "<div class=\"c8y-ui-title\">\n  <div class=\"title\" *c8yOutlet=\"title\"></div>\n</div>\n"
        })
    ], TitleOutletComponent);
    return TitleOutletComponent;
}());
export { TitleOutletComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUtb3V0bGV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2hlYWRlci90aXRsZS90aXRsZS1vdXRsZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBTTNEO0lBSUUsOEJBQ1UsYUFBNEIsRUFDNUIsT0FBbUIsRUFDbkIsSUFBWTtRQUh0QixpQkFzQkM7UUFyQlMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDNUIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUNuQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBTnRCLFVBQUssR0FBRyxTQUFTLENBQUM7UUFDbEIsb0JBQWUsR0FBWSxJQUFJLENBQUM7UUFPOUIsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsS0FBSyxFQUFYLENBQVcsQ0FBQyxDQUFDO1FBQzVELE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQXBCLENBQW9CLENBQUMsQ0FBQztRQUVoRCxJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsS0FBSyxDQUFDLGVBQWUsRUFBckIsQ0FBcUIsQ0FBQyxDQUFDO1FBQ2hGLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxVQUFBLGVBQWUsSUFBSSxPQUFBLENBQUMsS0FBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUMsRUFBeEMsQ0FBd0MsQ0FBQyxDQUFDO1FBRXhGLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUM7WUFDMUIsS0FBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUM1QixZQUFZLENBQUMsR0FBRyxDQUFDLEVBQ2pCLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxlQUFlLEVBQXJCLENBQXFCLENBQUMsRUFDdEMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUNqQixHQUFHLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBOUMsQ0FBOEMsQ0FBQyxFQUN6RCxNQUFNLENBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLEtBQUssSUFBSSxFQUFYLENBQVcsQ0FBQyxFQUN6QixHQUFHLENBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLENBQUMsU0FBUyxFQUFaLENBQVksQ0FBQyxFQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQ2YsU0FBUyxDQUFDLFVBQUMsS0FBYSxJQUFLLE9BQUEsYUFBYSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBcEMsQ0FBb0MsQ0FBQyxDQUFDO1FBQ3hFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBckJ3QixhQUFhO2dCQUNuQixVQUFVO2dCQUNiLE1BQU07O0lBUFgsb0JBQW9CO1FBSmhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsc0dBQTRDO1NBQzdDLENBQUM7T0FDVyxvQkFBb0IsQ0EyQmhDO0lBQUQsMkJBQUM7Q0FBQSxBQTNCRCxJQTJCQztTQTNCWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4uL2hlYWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgbWFwLCBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS10aXRsZS1vdXRsZXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGl0bGUtb3V0bGV0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaXRsZU91dGxldENvbXBvbmVudCB7XG4gIHRpdGxlID0gdW5kZWZpbmVkO1xuICBwYWdlVGl0bGVVcGRhdGU6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaGVhZGVyU2VydmljZTogSGVhZGVyU2VydmljZSxcbiAgICBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSB6b25lOiBOZ1pvbmVcbiAgKSB7XG4gICAgY29uc3QgdGl0bGUkID0gdGhpcy5oZWFkZXJTZXJ2aWNlLm1hcChzdGF0ZSA9PiBzdGF0ZS50aXRsZSk7XG4gICAgdGl0bGUkLnN1YnNjcmliZSh0aXRsZSA9PiAodGhpcy50aXRsZSA9IHRpdGxlKSk7XG5cbiAgICBjb25zdCBwYWdlVGl0bGVVcGRhdGUkID0gdGhpcy5oZWFkZXJTZXJ2aWNlLm1hcChzdGF0ZSA9PiBzdGF0ZS5wYWdlVGl0bGVVcGRhdGUpO1xuICAgIHBhZ2VUaXRsZVVwZGF0ZSQuc3Vic2NyaWJlKHBhZ2VUaXRsZVVwZGF0ZSA9PiAodGhpcy5wYWdlVGl0bGVVcGRhdGUgPSBwYWdlVGl0bGVVcGRhdGUpKTtcblxuICAgIHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICB0aGlzLmhlYWRlclNlcnZpY2Uuc3RhdGUkLnBpcGUoXG4gICAgICAgIGRlYm91bmNlVGltZSgxMDApLFxuICAgICAgICBmaWx0ZXIoc3RhdGUgPT4gc3RhdGUucGFnZVRpdGxlVXBkYXRlKSxcbiAgICAgICAgZGVib3VuY2VUaW1lKDEwMCksXG4gICAgICAgIG1hcCgoKSA9PiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdoMScpKSxcbiAgICAgICAgZmlsdGVyKGVsID0+IGVsICE9PSBudWxsKSxcbiAgICAgICAgbWFwKGVsID0+IGVsLmlubmVyVGV4dCksXG4gICAgICAgIGZpbHRlcihCb29sZWFuKSlcbiAgICAgICAgLnN1YnNjcmliZSgodGl0bGU6IHN0cmluZykgPT4gaGVhZGVyU2VydmljZS5jaGFuZ2VQYWdlVGl0bGUodGl0bGUpKTtcbiAgICB9KTtcbiAgfVxufVxuIl19