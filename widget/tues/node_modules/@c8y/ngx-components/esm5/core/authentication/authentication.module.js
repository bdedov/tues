import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
import { QRCodeModule } from 'angularx-qrcode';
import { ProvidePhoneNumberComponent } from './provide-phone-number.component';
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
var AuthenticationModule = /** @class */ (function () {
    function AuthenticationModule() {
    }
    AuthenticationModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                TotpChallengeComponent,
                PasswordConfirm,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent,
                ProvidePhoneNumberComponent
            ],
            imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule],
            exports: [
                TotpChallengeComponent,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                PasswordConfirm,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent,
                ProvidePhoneNumberComponent
            ],
            entryComponents: [PasswordConfirmModalComponent],
            providers: [PasswordStrengthCheckerService, PasswordService]
        })
    ], AuthenticationModule);
    return AuthenticationModule;
}());
export { AuthenticationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvYXV0aGVudGljYXRpb24vYXV0aGVudGljYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUUvRTs7Ozs7OztHQU9HO0FBNEJIO0lBQUE7SUFBbUMsQ0FBQztJQUF2QixvQkFBb0I7UUEzQmhDLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixzQkFBc0I7Z0JBQ3RCLGVBQWU7Z0JBQ2YseUJBQXlCO2dCQUN6QiwwQkFBMEI7Z0JBQzFCLG9CQUFvQjtnQkFDcEIsNkJBQTZCO2dCQUM3QixxQkFBcUI7Z0JBQ3JCLGtCQUFrQjtnQkFDbEIsMkJBQTJCO2FBQzVCO1lBQ0QsT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQztZQUM5RSxPQUFPLEVBQUU7Z0JBQ1Asc0JBQXNCO2dCQUN0Qix5QkFBeUI7Z0JBQ3pCLDBCQUEwQjtnQkFDMUIsZUFBZTtnQkFDZixvQkFBb0I7Z0JBQ3BCLDZCQUE2QjtnQkFDN0IscUJBQXFCO2dCQUNyQixrQkFBa0I7Z0JBQ2xCLDJCQUEyQjthQUM1QjtZQUNELGVBQWUsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1lBQ2hELFNBQVMsRUFBRSxDQUFDLDhCQUE4QixFQUFFLGVBQWUsQ0FBQztTQUM3RCxDQUFDO09BQ1csb0JBQW9CLENBQUc7SUFBRCwyQkFBQztDQUFBLEFBQXBDLElBQW9DO1NBQXZCLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1jaGVjay1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm0gfSBmcm9tICcuL3Bhc3N3b3JkLWNvbmZpcm0uZGlyZWN0aXZlJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQgfSBmcm9tICcuL3Bhc3N3b3JkLXN0cmVuZ3RoLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZXdQYXNzd29yZENvbXBvbmVudCB9IGZyb20gJy4vbmV3LXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5tb2R1bGUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICcuLi9mb3Jtcy9mb3Jtcy5tb2R1bGUnO1xuaW1wb3J0IHsgVG90cENoYWxsZW5nZUNvbXBvbmVudCB9IGZyb20gJy4vdG90cC1jaGFsbGVuZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNtc0NoYWxsZW5nZUNvbXBvbmVudCB9IGZyb20gJy4vc21zLWNoYWxsZW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVG90cFNldHVwQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLXNldHVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuL3Bhc3N3b3JkLnNlcnZpY2UnO1xuaW1wb3J0IHsgUVJDb2RlTW9kdWxlIH0gZnJvbSAnYW5ndWxhcngtcXJjb2RlJztcbmltcG9ydCB7IFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudCB9IGZyb20gJy4vcHJvdmlkZS1waG9uZS1udW1iZXIuY29tcG9uZW50JztcblxuLyoqXG4gKiBUaGUgYW5ndWxhciBtb2R1bGUgZGVmaW5pdGlvbiBmb3IgbmV3IHBhc3N3b3JkLlxuICogQGV4cG9ydHMgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudFxuICogQGV4cG9ydHMgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnRcbiAqIEBleHBvcnRzIFBhc3N3b3JkQ29uZmlybVxuICogQGV4cG9ydHMgTmV3UGFzc3dvcmRDb21wb25lbnRcbiAqIEBleHBvcnRzIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50XG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFRvdHBDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtLFxuICAgIFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQsXG4gICAgTmV3UGFzc3dvcmRDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnQsXG4gICAgU21zQ2hhbGxlbmdlQ29tcG9uZW50LFxuICAgIFRvdHBTZXR1cENvbXBvbmVudCxcbiAgICBQcm92aWRlUGhvbmVOdW1iZXJDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW0Zvcm1zTW9kdWxlLCBUb29sdGlwTW9kdWxlLCBDb21tb25Nb2R1bGUsIE1vZGFsTW9kdWxlLCBRUkNvZGVNb2R1bGVdLFxuICBleHBvcnRzOiBbXG4gICAgVG90cENoYWxsZW5nZUNvbXBvbmVudCxcbiAgICBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ29uZmlybSxcbiAgICBOZXdQYXNzd29yZENvbXBvbmVudCxcbiAgICBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCxcbiAgICBTbXNDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgVG90cFNldHVwQ29tcG9uZW50LFxuICAgIFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudFxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1Bhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSwgUGFzc3dvcmRTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbk1vZHVsZSB7fVxuIl19