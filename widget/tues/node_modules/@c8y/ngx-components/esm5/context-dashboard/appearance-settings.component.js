import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES } from './context-dashboard.model';
import { ControlContainer, NgForm } from '@angular/forms';
var AppearanceSettingsComponent = /** @class */ (function () {
    function AppearanceSettingsComponent() {
        this.themeClass = 'dashboard-theme-light';
        this.headerClass = 'panel-title-regular';
        this.themeClassChange = new EventEmitter();
        this.headerClassChange = new EventEmitter();
        this.possibleStylingTheme = DASHBOARD_THEME_CLASSES;
        this.possibleStylingHeader = WIDGET_HEADER_CLASSES;
    }
    AppearanceSettingsComponent.prototype.themeClassClick = function (value) {
        value = this.resetToDefault(value, this.themeClass, this.defaultThemeClass);
        this.themeClass = value;
        this.themeClassChange.emit(value);
    };
    AppearanceSettingsComponent.prototype.headerClassClick = function (value) {
        value = this.resetToDefault(value, this.headerClass, this.defaultHeaderClass);
        this.headerClass = value;
        this.headerClassChange.emit(value);
    };
    AppearanceSettingsComponent.prototype.resetToDefault = function (value, compareTo, defaultValue) {
        if (defaultValue && value === compareTo) {
            value = defaultValue;
        }
        return value;
    };
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "themeClass", void 0);
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "headerClass", void 0);
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "defaultThemeClass", void 0);
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "defaultHeaderClass", void 0);
    tslib_1.__decorate([
        Output()
    ], AppearanceSettingsComponent.prototype, "themeClassChange", void 0);
    tslib_1.__decorate([
        Output()
    ], AppearanceSettingsComponent.prototype, "headerClassChange", void 0);
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "possibleStylingTheme", void 0);
    tslib_1.__decorate([
        Input()
    ], AppearanceSettingsComponent.prototype, "possibleStylingHeader", void 0);
    AppearanceSettingsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-appearance-settings',
            template: "<h6 class=\"legend form-block\"><span translate>Layout</span></h6>\n<div class=\"row \">\n  <div class=\"col-sm-6 m-b-32\">\n    <label translate>Theme</label>\n    <ul class=\"list-group\" style=\"box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);\">\n      <li\n        class=\"list-group-item flex-row\"\n        style=\"align-items: center; box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);\"\n        *ngFor=\"let themeClassItem of possibleStylingTheme; let i = index\"\n      >\n        <div class=\"list-item-checkbox\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradiocontentclass' + i\"\n              name=\"content\"\n              [value]=\"themeClassItem.class\"\n              [ngModel]=\"themeClass\"\n              (click)=\"themeClassClick(themeClassItem.class)\"\n            />\n            <span></span>\n          </label>\n        </div>\n        <label [for]=\"'groupradiocontentclass' + i\">\n          <span>{{ themeClassItem.label | translate }}</span>\n          <br />\n          <small *ngIf=\"themeClassItem.class === defaultThemeClass\" class=\"text-muted\" translate\n            >Dashboard default</small\n          >\n        </label>\n        <button\n          class=\"btn btn-clean flex-item-top\"\n          popover=\"{{ themeClassItem.description | translate }}\"\n          container=\"body\"\n          placement=\"top\"\n          triggers=\"focus\"\n        >\n          <i [c8yIcon]=\"'question-circle-o'\" class=\"text-primary\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-sm-6\">\n    <label translate>Widget header style</label>\n    <ul class=\"list-group\" style=\"box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);\">\n      <li\n        class=\"list-group-item flex-row\"\n        style=\"align-items: center; box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);\"\n        *ngFor=\"let headerClassItem of possibleStylingHeader; let i = index\"\n      >\n        <div class=\"list-item-checkbox\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradioheaderclass' + i\"\n              name=\"header\"\n              [value]=\"headerClassItem.class\"\n              [ngModel]=\"headerClass\"\n              (click)=\"headerClassClick(headerClassItem.class)\"\n            />\n            <span></span>\n          </label>\n        </div>\n        <label [for]=\"'groupradioheaderclass' + i\">\n          <span>{{ headerClassItem.label | translate }}</span>\n          <br />\n          <small *ngIf=\"headerClassItem.class === defaultHeaderClass\" class=\"text-muted\" translate\n            >Dashboard default</small\n          >\n        </label>\n        <button\n          class=\"btn btn-clean flex-item-top\"\n          popover=\"{{ headerClassItem.description | translate }}\"\n          container=\"body\"\n          placement=\"top\"\n          triggers=\"focus\"\n        >\n          <i [c8yIcon]=\"'question-circle-o'\" class=\"text-primary\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n</div>\n",
            viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]
        })
    ], AppearanceSettingsComponent);
    return AppearanceSettingsComponent;
}());
export { AppearanceSettingsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZWFyYW5jZS1zZXR0aW5ncy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2NvbnRleHQtZGFzaGJvYXJkLyIsInNvdXJjZXMiOlsiYXBwZWFyYW5jZS1zZXR0aW5ncy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDM0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBTzFEO0lBTEE7UUFPRSxlQUFVLEdBQVcsdUJBQXVCLENBQUM7UUFFN0MsZ0JBQVcsR0FBVyxxQkFBcUIsQ0FBQztRQU01QyxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRTlDLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFHL0MseUJBQW9CLEdBQUcsdUJBQXVCLENBQUM7UUFHL0MsMEJBQXFCLEdBQUcscUJBQXFCLENBQUM7SUFvQmhELENBQUM7SUFsQkMscURBQWUsR0FBZixVQUFnQixLQUFLO1FBQ25CLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzVFLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELHNEQUFnQixHQUFoQixVQUFpQixLQUFLO1FBQ3BCLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVPLG9EQUFjLEdBQXRCLFVBQXVCLEtBQWEsRUFBRSxTQUFpQixFQUFFLFlBQW9CO1FBQzNFLElBQUksWUFBWSxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkMsS0FBSyxHQUFHLFlBQVksQ0FBQztTQUN0QjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQW5DRDtRQURDLEtBQUssRUFBRTttRUFDcUM7SUFFN0M7UUFEQyxLQUFLLEVBQUU7b0VBQ29DO0lBRTVDO1FBREMsS0FBSyxFQUFFOzBFQUNrQjtJQUUxQjtRQURDLEtBQUssRUFBRTsyRUFDbUI7SUFFM0I7UUFEQyxNQUFNLEVBQUU7eUVBQ3FDO0lBRTlDO1FBREMsTUFBTSxFQUFFOzBFQUNzQztJQUcvQztRQURDLEtBQUssRUFBRTs2RUFDdUM7SUFHL0M7UUFEQyxLQUFLLEVBQUU7OEVBQ3NDO0lBbEJuQywyQkFBMkI7UUFMdkMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlCQUF5QjtZQUNuQyx3akdBQW1EO1lBQ25ELGFBQWEsRUFBRSxDQUFFLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBRTtTQUN0RSxDQUFDO09BQ1csMkJBQTJCLENBc0N2QztJQUFELGtDQUFDO0NBQUEsQUF0Q0QsSUFzQ0M7U0F0Q1ksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgREFTSEJPQVJEX1RIRU1FX0NMQVNTRVMsIFdJREdFVF9IRUFERVJfQ0xBU1NFUyB9IGZyb20gJy4vY29udGV4dC1kYXNoYm9hcmQubW9kZWwnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYXBwZWFyYW5jZS1zZXR0aW5ncycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hcHBlYXJhbmNlLXNldHRpbmdzLmNvbXBvbmVudC5odG1sJyxcbiAgdmlld1Byb3ZpZGVyczogWyB7IHByb3ZpZGU6IENvbnRyb2xDb250YWluZXIsIHVzZUV4aXN0aW5nOiBOZ0Zvcm0gfSBdXG59KVxuZXhwb3J0IGNsYXNzIEFwcGVhcmFuY2VTZXR0aW5nc0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIHRoZW1lQ2xhc3M6IHN0cmluZyA9ICdkYXNoYm9hcmQtdGhlbWUtbGlnaHQnO1xuICBASW5wdXQoKVxuICBoZWFkZXJDbGFzczogc3RyaW5nID0gJ3BhbmVsLXRpdGxlLXJlZ3VsYXInO1xuICBASW5wdXQoKVxuICBkZWZhdWx0VGhlbWVDbGFzczogc3RyaW5nO1xuICBASW5wdXQoKVxuICBkZWZhdWx0SGVhZGVyQ2xhc3M6IHN0cmluZztcbiAgQE91dHB1dCgpXG4gIHRoZW1lQ2xhc3NDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgQE91dHB1dCgpXG4gIGhlYWRlckNsYXNzQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgQElucHV0KClcbiAgcG9zc2libGVTdHlsaW5nVGhlbWUgPSBEQVNIQk9BUkRfVEhFTUVfQ0xBU1NFUztcblxuICBASW5wdXQoKVxuICBwb3NzaWJsZVN0eWxpbmdIZWFkZXIgPSBXSURHRVRfSEVBREVSX0NMQVNTRVM7XG5cbiAgdGhlbWVDbGFzc0NsaWNrKHZhbHVlKSB7XG4gICAgdmFsdWUgPSB0aGlzLnJlc2V0VG9EZWZhdWx0KHZhbHVlLCB0aGlzLnRoZW1lQ2xhc3MsIHRoaXMuZGVmYXVsdFRoZW1lQ2xhc3MpO1xuICAgIHRoaXMudGhlbWVDbGFzcyA9IHZhbHVlO1xuICAgIHRoaXMudGhlbWVDbGFzc0NoYW5nZS5lbWl0KHZhbHVlKTtcbiAgfVxuXG4gIGhlYWRlckNsYXNzQ2xpY2sodmFsdWUpIHtcbiAgICB2YWx1ZSA9IHRoaXMucmVzZXRUb0RlZmF1bHQodmFsdWUsIHRoaXMuaGVhZGVyQ2xhc3MsIHRoaXMuZGVmYXVsdEhlYWRlckNsYXNzKTtcbiAgICB0aGlzLmhlYWRlckNsYXNzID0gdmFsdWU7XG4gICAgdGhpcy5oZWFkZXJDbGFzc0NoYW5nZS5lbWl0KHZhbHVlKTtcbiAgfVxuXG4gIHByaXZhdGUgcmVzZXRUb0RlZmF1bHQodmFsdWU6IHN0cmluZywgY29tcGFyZVRvOiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKGRlZmF1bHRWYWx1ZSAmJiB2YWx1ZSA9PT0gY29tcGFyZVRvKSB7XG4gICAgICB2YWx1ZSA9IGRlZmF1bHRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG59XG4iXX0=