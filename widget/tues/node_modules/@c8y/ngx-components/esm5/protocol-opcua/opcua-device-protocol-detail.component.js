import * as tslib_1 from "tslib";
import { Component, OnInit, ViewChildren, QueryList, Input, Output, EventEmitter, ViewChild, OnChanges, ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { OpcuaService } from './opcuaService';
import { AlertService, gettext } from '@c8y/ngx-components';
import { find, assign, omit, findIndex, pick, get } from 'lodash';
import { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';
var OpcuaDeviceProtocolDetailComponent = /** @class */ (function () {
    function OpcuaDeviceProtocolDetailComponent(changeDetectorRef, opcuaService, alertService, router) {
        var _this = this;
        this.changeDetectorRef = changeDetectorRef;
        this.opcuaService = opcuaService;
        this.alertService = alertService;
        this.router = router;
        this.initialModel = {
            id: '',
            fieldbusType: 'opcuaV2',
            description: '',
            unit: '',
            fieldbusVersion: 4,
            name: '',
            referencedServerId: '',
            referencedRootNodeId: '',
            subscriptionType: {
                type: 'None'
            },
            mappings: [],
            overriddenSubscriptions: [],
            applyConstraints: {
                browsePathMatchesRegex: '',
                matchesNodeIds: [],
                serverObjectHasFragment: '',
                matchesServerIds: []
            },
            enabled: ''
        };
        this.isLoaded = true;
        this.getParentAttr = function (key) { return get(_this.model, key); };
    }
    OpcuaDeviceProtocolDetailComponent.prototype.ngAfterContentChecked = function () {
        this.changeDetectorRef.detectChanges();
    };
    OpcuaDeviceProtocolDetailComponent.prototype.getMapping = function () {
        return this.model.mappings;
    };
    OpcuaDeviceProtocolDetailComponent.prototype.getEmptyMappingObject = function () {
        return {
            id: 'new',
            browsePath: []
        };
    };
    OpcuaDeviceProtocolDetailComponent.prototype.getOverriddenSubscriptionsByPath = function (browsePath) {
        return find(this.model.overriddenSubscriptions, { browsePath: browsePath });
    };
    OpcuaDeviceProtocolDetailComponent.prototype.getStructuredResource = function (resource) {
        var overriddenSubscriptions = this.getOverriddenSubscriptionsByPath(resource.browsePath);
        var result = assign({}, resource);
        if (overriddenSubscriptions) {
            result = assign({}, resource, { subscriptionType: overriddenSubscriptions.subscriptionType });
        }
        return result;
    };
    OpcuaDeviceProtocolDetailComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var id, res, data, _a, data;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        id = this.opcuaService.getId();
                        if (!id) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.opcuaService.getDeviceProtocol(id)];
                    case 1:
                        res = _b.sent();
                        if (!(res && res.status !== 200)) return [3 /*break*/, 5];
                        if (!res.json) return [3 /*break*/, 3];
                        return [4 /*yield*/, res.json()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _a = undefined;
                        _b.label = 4;
                    case 4:
                        data = _a;
                        this.alertService.addServerFailure({ data: data, res: res });
                        this.isLoaded = false;
                        return [3 /*break*/, 7];
                    case 5: return [4 /*yield*/, res.json()];
                    case 6:
                        data = _b.sent();
                        if (data && data.applyConstraints === null) {
                            delete data.applyConstraints;
                        }
                        if (data && data.subscriptionType === null) {
                            delete data.subscriptionType;
                        }
                        this.model = assign(this.initialModel, data);
                        if (!this.model.mappings) {
                            this.model.mappings = [];
                        }
                        this.model = assign(this.initialModel, this.updateViableMapping(data));
                        this.isLoaded = false;
                        _b.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    OpcuaDeviceProtocolDetailComponent.prototype.updateViableMapping = function (model) {
        var mappings = model.mappings;
        var result = [];
        if (mappings) {
            result = mappings.map(function (item, i) {
                return assign(item, { id: i });
            });
        }
        return assign(model, { mappings: result });
    };
    OpcuaDeviceProtocolDetailComponent.prototype.trackByIndex = function (index) {
        return index;
    };
    OpcuaDeviceProtocolDetailComponent.prototype.addVariable = function () {
        this.model.mappings.push(this.getEmptyMappingObject());
    };
    OpcuaDeviceProtocolDetailComponent.prototype.updateVariable = function (mappingObject) {
        var mappings = this.model.mappings;
        var index = findIndex(mappings, { id: mappingObject.id });
        mappings.splice(index, 1);
        if (mappingObject.id === 'new') {
            mappingObject.id = mappings.length;
        }
        mappings.push(mappingObject);
    };
    OpcuaDeviceProtocolDetailComponent.prototype.removeVariable = function (mappingObject) {
        var mappings = this.model.mappings;
        var index = findIndex(mappings, { id: mappingObject.id });
        mappings.splice(index, 1);
    };
    OpcuaDeviceProtocolDetailComponent.prototype.actionHandler = function (actionObject) {
        switch (actionObject.action) {
            case 'save':
                this.updateVariable(actionObject.data);
                break;
            case 'delete':
                this.removeVariable(actionObject.data);
                break;
        }
    };
    OpcuaDeviceProtocolDetailComponent.prototype.extractOverridSubscriptionType = function (_mapping) {
        var overriddenSubscriptions = [];
        var variableMapping = [];
        _mapping.forEach(function (element) {
            if (element.id !== 'new') {
                if (element.subscriptionType) {
                    overriddenSubscriptions.push(assign({ browsePath: element.browsePath }, { subscriptionType: element.subscriptionType }));
                }
                variableMapping.push(omit(element, ['subscriptionType']));
            }
        });
        return [variableMapping, overriddenSubscriptions];
    };
    OpcuaDeviceProtocolDetailComponent.prototype.prepareRequestJson = function (_model) {
        var requestJson = {};
        var _a = tslib_1.__read(this.extractOverridSubscriptionType(_model.mappings), 2), mappings = _a[0], overriddenSubscriptions = _a[1];
        requestJson = assign(requestJson, pick(_model, Object.keys(this.initialModel)), {
            mappings: mappings,
            overriddenSubscriptions: overriddenSubscriptions
        });
        return requestJson;
    };
    OpcuaDeviceProtocolDetailComponent.prototype.save = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.opcuaService.updateDeviceProtocol(this.prepareRequestJson(this.model))];
                    case 1:
                        res = _a.sent();
                        if (res && res.status === 200) {
                            this.router.navigate(['deviceprotocols']);
                            this.alertService.success(gettext('Device protocol saved.'));
                        }
                        else {
                            this.alertService.addServerFailure({ res: res });
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        ex_1 = _a.sent();
                        this.alertService.danger(gettext('Failed to save. Try again.'));
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    OpcuaDeviceProtocolDetailComponent.prototype.canSave = function (deviceTypeForm) {
        if (this.instanceList) {
            var activeInstances = this.instanceList.filter(function (item) { return item.isActive(); });
            if (activeInstances.length > 0) {
                return true;
            }
        }
        return !deviceTypeForm.form.valid;
    };
    OpcuaDeviceProtocolDetailComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: OpcuaService },
        { type: AlertService },
        { type: Router }
    ]; };
    tslib_1.__decorate([
        ViewChildren(OpcuaDeviceProtocolMapping)
    ], OpcuaDeviceProtocolDetailComponent.prototype, "instanceList", void 0);
    OpcuaDeviceProtocolDetailComponent = tslib_1.__decorate([
        Component({
            selector: 'opcua-device-protocol-detail',
            template: "<c8y-title *ngIf=\"!isLoaded\">{{ model.name }}</c8y-title>\n<div>\n  <form #deviceTypeForm=\"ngForm\" name=\"detailForm\" *ngIf=\"!isLoaded\">\n    <opcua-device-protocol-description [model]=\"model\"></opcua-device-protocol-description>\n    <div class=\"card m-b-4\">\n      <div class=\"card-header separator\">\n        <h4 translate>Variables</h4>\n      </div>\n      <div class=\"list-group\" *ngIf=\"model.mappings.length > 0\" ngModelGroup=\"variable\">\n        <opcua-device-protocol-mapping\n          *ngFor=\"let resource of getMapping(); trackBy: trackByIndex; let i = index\"\n          [index]=\"i\"\n          [referencedServerId]=\"model.referencedServerId\"\n          [referencedRootNodeId]=\"model.referencedRootNodeId\"\n          [resource]=\"getStructuredResource(resource)\"\n          [getParentAttr]=\"getParentAttr\"\n          (onAction)=\"actionHandler($event)\"\n        >\n        </opcua-device-protocol-mapping>\n      </div>\n      <div class=\"card-block\">\n        <div class=\"c8y-empty-state text-left\" *ngIf=\"model.mappings.length === 0\">\n          <h1 c8yIcon=\"sliders\"></h1>\n          <p translate>No variables to display. Click below to add.</p>\n        </div>\n        <button\n          title=\"{{ 'Add variable' | translate }}\"\n          class=\"btn-add-block addVariableBtn\"\n          (click)=\"addVariable()\"\n        >\n          <i c8yIcon=\"plus-circle\"></i> {{ 'Add variable' | translate }}\n        </button>\n      </div>\n    </div>\n    <div class=\"card m-b-4\">\n      <div class=\"card-header separator\">\n        <h4 translate>Data reporting</h4>\n      </div>\n      <div class=\"card-block\" ngModelGroup=\"subscription\">\n        <opcua-device-protocol-data-reporting\n          [groupName]=\"'subscription'\"\n          [model]=\"model\"\n        ></opcua-device-protocol-data-reporting>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"card-header separator\">\n        <h4 translate>Auto apply constraints</h4>\n      </div>\n      <div class=\"card-block overflow-visible\" ngModelGroup=\"autoApply\">\n        <opcua-auto-apply [model]=\"model\"></opcua-auto-apply>\n      </div>\n    </div>\n\n    <span>\n      <div class=\"text-center page-footer m-t-16\">\n        <div class=\"btn-save-wrapper animated\">\n          <button\n            title=\"{{ 'Save' | translate }}\"\n            id=\"deviceTypeSave\"\n            class=\"btn btn-primary\"\n            (click)=\"save()\"\n            [disabled]=\"canSave(deviceTypeForm)\"\n            translate\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </span>\n  </form>\n</div>\n"
        })
    ], OpcuaDeviceProtocolDetailComponent);
    return OpcuaDeviceProtocolDetailComponent;
}());
export { OpcuaDeviceProtocolDetailComponent };
//# sourceMappingURL=data:application/json;base64,