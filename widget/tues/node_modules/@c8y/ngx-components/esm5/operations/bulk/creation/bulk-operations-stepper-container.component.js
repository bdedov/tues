import * as tslib_1 from "tslib";
import { Component, OnInit, ViewContainerRef, ViewChild, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
var BulkOperationsStepperContainerComponent = /** @class */ (function () {
    function BulkOperationsStepperContainerComponent(activatedRoute, bulkOpsService, resolver, changeDetector) {
        this.activatedRoute = activatedRoute;
        this.bulkOpsService = bulkOpsService;
        this.resolver = resolver;
        this.changeDetector = changeDetector;
    }
    BulkOperationsStepperContainerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.activatedRoute.params.subscribe(function (params) {
            if (params && params.type) {
                _this.bulkOperationType = params.type;
                _this.component = _this.bulkOpsService
                    .getBulkTypes()
                    .find(function (element) { return element.path.includes(_this.bulkOperationType); }).component;
                _this.changeDetector.detectChanges();
                _this.createComponent(_this.component);
            }
        });
    };
    BulkOperationsStepperContainerComponent.prototype.createComponent = function (component) {
        if (component) {
            var factory = this.resolver.resolveComponentFactory(component);
            this.container.createComponent(factory);
        }
    };
    BulkOperationsStepperContainerComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: BulkOperationsService },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef }
    ]; };
    tslib_1.__decorate([
        ViewChild('container', { static: false, read: ViewContainerRef })
    ], BulkOperationsStepperContainerComponent.prototype, "container", void 0);
    BulkOperationsStepperContainerComponent = tslib_1.__decorate([
        Component({
            selector: 'bulk-operations-stepper-container',
            template: "<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <ng-container [ngSwitch]=\"bulkOperationType\">\n    <!-- Cases: software, firmware and configuration are default c8y-types -->\n    <div *ngSwitchCase=\"'software'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-software></c8y-stepper-bulk-type-software>\n    </div>\n    <div *ngSwitchCase=\"'firmware'\" class=\"d-contents\">\n      <c8y-stepper-firmware></c8y-stepper-firmware>\n    </div>\n    <div *ngSwitchCase=\"'configuration'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-configuration></c8y-stepper-bulk-type-configuration>\n    </div>\n    <div *ngSwitchCase=\"'device-profile'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-device-profile></c8y-stepper-bulk-type-device-profile>\n    </div>\n    <!-- This case is for 3rd-party-dev defined types -->\n    <div *ngSwitchDefault class=\"d-contents\">\n      <template #container></template>\n    </div>\n  </ng-container>\n</div>\n"
        })
    ], BulkOperationsStepperContainerComponent);
    return BulkOperationsStepperContainerComponent;
}());
export { BulkOperationsStepperContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGsvY3JlYXRpb24vYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLFNBQVMsRUFDVCx3QkFBd0IsRUFDeEIsaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQU0vRjtJQUtFLGlEQUNVLGNBQThCLEVBQzlCLGNBQXFDLEVBQ3JDLFFBQWtDLEVBQ2xDLGNBQWlDO1FBSGpDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUFDckMsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQW1CO0lBQ3hDLENBQUM7SUFFSiwwREFBUSxHQUFSO1FBQUEsaUJBYUM7UUFaQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQSxNQUFNO1lBQ3pDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3pCLEtBQUksQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUVyQyxLQUFJLENBQUMsU0FBUyxHQUFHLEtBQUksQ0FBQyxjQUFjO3FCQUNqQyxZQUFZLEVBQUU7cUJBQ2QsSUFBSSxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLGlCQUFpQixDQUFDLEVBQTdDLENBQTZDLENBQUMsQ0FBQyxTQUFTLENBQUM7Z0JBRTVFLEtBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQ3BDLEtBQUksQ0FBQyxlQUFlLENBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8saUVBQWUsR0FBdkIsVUFBd0IsU0FBUztRQUMvQixJQUFJLFNBQVMsRUFBRTtZQUNiLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDakUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDOztnQkExQnlCLGNBQWM7Z0JBQ2QscUJBQXFCO2dCQUMzQix3QkFBd0I7Z0JBQ2xCLGlCQUFpQjs7SUFSd0I7UUFBbEUsU0FBUyxDQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUM7OEVBQVc7SUFEbEUsdUNBQXVDO1FBSm5ELFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxtQ0FBbUM7WUFDN0MseWdDQUErRDtTQUNoRSxDQUFDO09BQ1csdUNBQXVDLENBaUNuRDtJQUFELDhDQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0FqQ1ksdUNBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdDb250YWluZXJSZWYsXG4gIFZpZXdDaGlsZCxcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uc1N0ZXBwZXJDb250YWluZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7IHN0YXRpYzogZmFsc2UsIHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSkgY29udGFpbmVyO1xuICBidWxrT3BlcmF0aW9uVHlwZTogc3RyaW5nO1xuXG4gIHByaXZhdGUgY29tcG9uZW50OiBhbnk7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHByaXZhdGUgYnVsa09wc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWZcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuYWN0aXZhdGVkUm91dGUucGFyYW1zLnN1YnNjcmliZShwYXJhbXMgPT4ge1xuICAgICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMudHlwZSkge1xuICAgICAgICB0aGlzLmJ1bGtPcGVyYXRpb25UeXBlID0gcGFyYW1zLnR5cGU7XG5cbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlXG4gICAgICAgICAgLmdldEJ1bGtUeXBlcygpXG4gICAgICAgICAgLmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LnBhdGguaW5jbHVkZXModGhpcy5idWxrT3BlcmF0aW9uVHlwZSkpLmNvbXBvbmVudDtcblxuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KSB7XG4gICAgaWYgKGNvbXBvbmVudCkge1xuICAgICAgY29uc3QgZmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoY29tcG9uZW50KTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmNyZWF0ZUNvbXBvbmVudChmYWN0b3J5KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==