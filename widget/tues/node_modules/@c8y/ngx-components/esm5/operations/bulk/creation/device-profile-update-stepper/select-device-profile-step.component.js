import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter } from '@angular/core';
import { BehaviorSubject, combineLatest, from } from 'rxjs';
import { switchMap, shareReplay, debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { isEqual, uniqWith, get } from 'lodash-es';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { DeviceProfileService } from '@c8y/ngx-components/device-profile';
var SelectDeviceProfileStepComponent = /** @class */ (function () {
    function SelectDeviceProfileStepComponent(deviceProfileService, translate) {
        var _this = this;
        this.deviceProfileService = deviceProfileService;
        this.translate = translate;
        this.deviceProfile = new EventEmitter();
        this.textFilter$ = new BehaviorSubject('');
        this.deviceType$ = new BehaviorSubject('');
        this.DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');
        this.deviceTypes = [];
        this.selectedDeviceType = { name: '' };
        this.deviceProfile$ = combineLatest(this.textFilter$, this.deviceType$).pipe(switchMap(function (_a) {
            var _b = tslib_1.__read(_a, 2), name = _b[0], deviceType = _b[1];
            return _this.getDeviceProfiles(name, deviceType);
        }), shareReplay(1));
        this.loadDeviceTypes();
    }
    SelectDeviceProfileStepComponent.prototype.loadDeviceTypes = function () {
        var _this = this;
        this.deviceTypeSubscription = this.deviceType$
            .pipe(debounceTime(300), distinctUntilChanged(), switchMap(function (searchStr) {
            var query = { 'c8y_Filter.type': "*" + searchStr + "*" };
            return from(_this.deviceProfileService.getDeviceProfiles(query));
        }))
            .subscribe(function (_a) {
            var data = _a.data;
            _this.deviceTypes = uniqWith(data.map(function (val) { return ({ name: val.c8y_Filter.type }); }).filter(function (val) { return val.name; }), isEqual);
        });
    };
    SelectDeviceProfileStepComponent.prototype.ngOnDestroy = function () {
        this.deviceTypeSubscription.unsubscribe();
    };
    SelectDeviceProfileStepComponent.prototype.selectDeviceProfile = function (deviceProfile) {
        this.deviceProfile.emit(deviceProfile);
    };
    SelectDeviceProfileStepComponent.prototype.getDeviceTypeTitle = function (deviceProfile) {
        return get(deviceProfile, 'c8y_Filter.type', this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));
    };
    SelectDeviceProfileStepComponent.prototype.getDeviceProfiles = function (name, deviceType) {
        var query = deviceType ? { 'c8y_Filter.type': deviceType } : {};
        if (name) {
            query.name = "*" + name + "*";
        }
        return this.deviceProfileService.getDeviceProfiles(query);
    };
    SelectDeviceProfileStepComponent.ctorParameters = function () { return [
        { type: DeviceProfileService },
        { type: TranslateService }
    ]; };
    tslib_1.__decorate([
        Output()
    ], SelectDeviceProfileStepComponent.prototype, "deviceProfile", void 0);
    SelectDeviceProfileStepComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-select-device-profile-step',
            template: "<div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select device profile' | translate }}</h4>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              title=\"{{ 'Filter device profiles\u2026' | translate }}\"\n              placeholder=\"{{ 'Filter device profiles\u2026' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                c8yIcon=\"times\"\n                class=\"text-muted\"\n                *ngIf=\"(textFilter$ | async).length\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <c8y-form-group class=\"m-0\">\n            <c8y-typeahead\n              name=\"deviceType\"\n              [(ngModel)]=\"selectedDeviceType\"\n              placeholder=\"{{ 'Type to filter device types\u2026' | translate }}\"\n              (onSearch)=\"deviceType$.next($event)\"\n              [allowFreeEntries]=\"false\"\n            >\n              <c8y-li\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = {name: ''}; deviceType$.next('')\"\n              >\n                <span>{{'All device types' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n                *ngFor=\"let deviceType of deviceTypes\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n                [active]=\"selectedDeviceType === deviceType\"\n              >\n                <c8y-highlight\n                  [text]=\"deviceType.name\"\n                  [pattern]=\"deviceType$ | async\"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n            ><c8y-message\n              name=\"notExisting\"\n              [text]=\"'Select one of the existing device types.' | translate\"\n            ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-v\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group>\n        <c8y-li *c8yFor=\"let deviceProfile of deviceProfile$ | async; loadMore: 'auto'\">\n          <c8y-li-radio (onSelect)=\"selectDeviceProfile(deviceProfile)\"></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-device-profile\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-5\">\n              <div class=\"text-truncate\" title=\"{{ deviceProfile.name }}\">\n                {{ deviceProfile.name }}\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(deviceProfile) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"deviceProfile.c8y_Filter?.type; else noType\">\n                  {{ deviceProfile.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <small><em class=\"text-muted\" translate>Undefined`device type`</em></small>\n                </ng-template>\n              </div>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"
        })
    ], SelectDeviceProfileStepComponent);
    return SelectDeviceProfileStepComponent;
}());
export { SelectDeviceProfileStepComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWRldmljZS1wcm9maWxlLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiYnVsay9jcmVhdGlvbi9kZXZpY2UtcHJvZmlsZS11cGRhdGUtc3RlcHBlci9zZWxlY3QtZGV2aWNlLXByb2ZpbGUtc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQWMsZUFBZSxFQUFFLGFBQWEsRUFBZ0IsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxvQkFBb0IsRUFBTyxNQUFNLGdCQUFnQixDQUFDO0FBRWpHLE9BQU8sRUFBWSxPQUFPLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFNMUU7SUFnQkUsMENBQ1Usb0JBQTBDLEVBQzFDLFNBQTJCO1FBRnJDLGlCQUtDO1FBSlMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUMxQyxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQWpCM0Isa0JBQWEsR0FBaUMsSUFBSSxZQUFZLEVBQWtCLENBQUM7UUFDM0YsZ0JBQVcsR0FBNEIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDL0QsZ0JBQVcsR0FBNEIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEQsNEJBQXVCLEdBQUcsT0FBTyxDQUFDLHlC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cG9uZW50LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgQmVoYXZpb3JTdWJqZWN0LCBjb21iaW5lTGF0ZXN0LCBTdWJzY3JpcHRpb24sIGZyb20gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHN3aXRjaE1hcCwgc2hhcmVSZXBsYXksIGRlYm91bmNlVGltZSwgZGlzdGluY3RVbnRpbENoYW5nZWQsIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IElSZXN1bHRMaXN0LCBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IHByb3BlcnR5LCBpc0VxdWFsLCB1bmlxV2l0aCwgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IERldmljZVByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtcHJvZmlsZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zZWxlY3QtZGV2aWNlLXByb2ZpbGUtc3RlcCcsXG4gIHRlbXBsYXRlVXJsOiAnc2VsZWN0LWRldmljZS1wcm9maWxlLXN0ZXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNlbGVjdERldmljZVByb2ZpbGVTdGVwQ29tcG9uZW50IHtcbiAgQE91dHB1dCgpIGRldmljZVByb2ZpbGU6IEV2ZW50RW1pdHRlcjxJTWFuYWdlZE9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyPElNYW5hZ2VkT2JqZWN0PigpO1xuICB0ZXh0RmlsdGVyJDogQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KCcnKTtcbiAgZGV2aWNlVHlwZSQ6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XG4gIHJlYWRvbmx5IERFVklDRV9UWVBFX05PVF9ERUZJTkVEID0gZ2V0dGV4dCgnRGV2aWNlIHR5cGUgbm90IGRlZmluZWQnKTtcbiAgZGV2aWNlVHlwZXMgPSBbXTtcbiAgc2VsZWN0ZWREZXZpY2VUeXBlID0geyBuYW1lOiAnJyB9O1xuICBkZXZpY2VQcm9maWxlJDogT2JzZXJ2YWJsZTxJUmVzdWx0TGlzdDxJTWFuYWdlZE9iamVjdD4+ID0gY29tYmluZUxhdGVzdChcbiAgICB0aGlzLnRleHRGaWx0ZXIkLFxuICAgIHRoaXMuZGV2aWNlVHlwZSRcbiAgKS5waXBlKFxuICAgIHN3aXRjaE1hcCgoW25hbWUsIGRldmljZVR5cGVdKSA9PiB0aGlzLmdldERldmljZVByb2ZpbGVzKG5hbWUsIGRldmljZVR5cGUpKSxcbiAgICBzaGFyZVJlcGxheSgxKVxuICApO1xuICBwcml2YXRlIGRldmljZVR5cGVTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGRldmljZVByb2ZpbGVTZXJ2aWNlOiBEZXZpY2VQcm9maWxlU2VydmljZSxcbiAgICBwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZVxuICApIHtcbiAgICB0aGlzLmxvYWREZXZpY2VUeXBlcygpO1xuICB9XG5cbiAgbG9hZERldmljZVR5cGVzKCkge1xuICAgIHRoaXMuZGV2aWNlVHlwZVN1YnNjcmlwdGlvbiA9IHRoaXMuZGV2aWNlVHlwZSRcbiAgICAgIC5waXBlKFxuICAgICAgICBkZWJvdW5jZVRpbWUoMzAwKSxcbiAgICAgICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSxcbiAgICAgICAgc3dpdGNoTWFwKHNlYXJjaFN0ciA9PiB7XG4gICAgICAgICAgY29uc3QgcXVlcnkgPSB7ICdjOHlfRmlsdGVyLnR5cGUnOiBgKiR7c2VhcmNoU3RyfSpgIH07XG4gICAgICAgICAgcmV0dXJuIGZyb20odGhpcy5kZXZpY2VQcm9maWxlU2VydmljZS5nZXREZXZpY2VQcm9maWxlcyhxdWVyeSkpO1xuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSggKHsgZGF0YSB9KSA9PiB7XG4gICAgICAgIHRoaXMuZGV2aWNlVHlwZXMgPSB1bmlxV2l0aChcbiAgICAgICAgICBkYXRhLm1hcCh2YWwgPT4gKHsgbmFtZTogdmFsLmM4eV9GaWx0ZXIudHlwZSB9KSkuZmlsdGVyKHZhbCA9PiB2YWwubmFtZSksXG4gICAgICAgICAgaXNFcXVhbFxuICAgICAgICApO1xuICAgICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRldmljZVR5cGVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIHNlbGVjdERldmljZVByb2ZpbGUoZGV2aWNlUHJvZmlsZTogSU1hbmFnZWRPYmplY3QpIHtcbiAgICB0aGlzLmRldmljZVByb2ZpbGUuZW1pdChkZXZpY2VQcm9maWxlKTtcbiAgfVxuXG4gIGdldERldmljZVR5cGVUaXRsZShkZXZpY2VQcm9maWxlOiBJTWFuYWdlZE9iamVjdCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGdldChcbiAgICAgIGRldmljZVByb2ZpbGUsXG4gICAgICAnYzh5X0ZpbHRlci50eXBlJyxcbiAgICAgIHRoaXMudHJhbnNsYXRlLmluc3RhbnQodGhpcy5ERVZJQ0VfVFlQRV9OT1RfREVGSU5FRCkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREZXZpY2VQcm9maWxlcyhuYW1lPzogc3RyaW5nLCBkZXZpY2VUeXBlPzogc3RyaW5nKSB7XG4gICAgY29uc3QgcXVlcnk6IGFueSA9IGRldmljZVR5cGUgPyB7ICdjOHlfRmlsdGVyLnR5cGUnOiBkZXZpY2VUeXBlIH0gOiB7fTtcbiAgICBpZiAobmFtZSkge1xuICAgICAgcXVlcnkubmFtZSA9IGAqJHtuYW1lfSpgO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5kZXZpY2VQcm9maWxlU2VydmljZS5nZXREZXZpY2VQcm9maWxlcyhxdWVyeSk7XG4gIH1cblxufVxuIl19