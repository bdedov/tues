import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { AddDeviceProfileComponent } from './add-device-profile.component';
import { DeviceProfileService } from './device-profile.service';
import { Router } from '@angular/router';
import { BehaviorSubject } from 'rxjs';
import { tap, switchMap } from 'rxjs/operators';
var DeviceProfileListComponent = /** @class */ (function () {
    function DeviceProfileListComponent(inventoryService, translateService, modalService, alertService, bsModalService, router, deviceProfileService) {
        var _this = this;
        this.inventoryService = inventoryService;
        this.translateService = translateService;
        this.modalService = modalService;
        this.alertService = alertService;
        this.bsModalService = bsModalService;
        this.router = router;
        this.deviceProfileService = deviceProfileService;
        this.reloading = false;
        this.reload = new BehaviorSubject(null);
        this.deviceProfiles$ = this.reload.pipe(tap(function () { return (_this.reloading = true); }), switchMap(function () { return _this.deviceProfileService.getDeviceProfiles(); }), tap(function () { return (_this.reloading = false); }));
    }
    DeviceProfileListComponent.prototype.ngOnInit = function () {
        this.loadDeviceProfiles();
    };
    DeviceProfileListComponent.prototype.loadDeviceProfiles = function () {
        this.reload.next();
    };
    DeviceProfileListComponent.prototype.createDeviceProfile = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var modal, profileId, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        modal = this.bsModalService.show(AddDeviceProfileComponent, {
                            class: 'modal-sm'
                        }).content;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, modal.result];
                    case 2:
                        profileId = _a.sent();
                        modal.close();
                        this.router.navigateByUrl("/device-profiles/" + profileId);
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DeviceProfileListComponent.prototype.duplicateDeviceProfile = function (deviceProfile) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var copy, mo;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        copy = cloneDeep(deviceProfile);
                        copy.id = null;
                        copy.name = 'Duplicate of ' + deviceProfile.name;
                        return [4 /*yield*/, this.deviceProfileService.createDeviceProfile(copy)];
                    case 1:
                        mo = (_a.sent()).data;
                        this.router.navigateByUrl("/device-profiles/" + mo.id);
                        return [2 /*return*/];
                }
            });
        });
    };
    DeviceProfileListComponent.prototype.deleteDeviceProfile = function (deviceProfile) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var deviceProfileName, title, confirmationText, finalQuestion, ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        deviceProfileName = deviceProfile.name;
                        title = gettext('Delete device profile');
                        confirmationText = this.translateService.instant(gettext('You are about to delete a device profile "{{ deviceProfileName }}".'), { deviceProfileName: deviceProfileName });
                        finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, this.modalService.confirm(title, confirmationText + " " + finalQuestion, Status.DANGER, {
                                ok: gettext('Delete')
                            })];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.delete(deviceProfile.id)];
                    case 3:
                        _a.sent();
                        this.reload.next();
                        return [3 /*break*/, 5];
                    case 4:
                        ex_2 = _a.sent();
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    DeviceProfileListComponent.prototype.delete = function (profileId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ex_3;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.inventoryService.delete(profileId)];
                    case 1:
                        _a.sent();
                        this.alertService.success(gettext('Device profile deleted.'));
                        return [3 /*break*/, 3];
                    case 2:
                        ex_3 = _a.sent();
                        this.alertService.addServerFailure(ex_3);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    DeviceProfileListComponent.ctorParameters = function () { return [
        { type: InventoryService },
        { type: TranslateService },
        { type: ModalService },
        { type: AlertService },
        { type: BsModalService },
        { type: Router },
        { type: DeviceProfileService }
    ]; };
    DeviceProfileListComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-profile-list',
            template: "<c8y-title>{{ 'Device profiles' | translate }}</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"createDeviceProfile()\"\n    title=\"{{ 'Add device profile' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add device profile' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"loadDeviceProfiles()\"\n    title=\"{{ 'Reload' | translate }}\">\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'fa-spin': reloading }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state text-left\"\n  *ngIf=\"(deviceProfiles$ | async)?.data.length === 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\"\n    [c8yIcon]=\"'c8y-device-profile'\"\n  ></h1>\n  <h3 translate>\n    No device profiles available.\n  </h3>\n  <p translate>\n    Add a new device profile by clicking below.\n  </p>\n  <p>\n    <button class=\"btn btn-primary\"\n      title=\"{{ 'Add device profile' | translate }}\"\n      (click)=\"createDeviceProfile()\"\n      translate\n    >\n      Add device profile\n    </button>\n  </p>\n</div>\n\n<!-- DEVICE PROFILES LIST -->\n<c8y-list-group class=\"m-b-24\"\n  [ngClass]=\"{'dd-low': (deviceProfiles$ | async)?.data.length < 10 }\"\n>\n  <c8y-li class=\"page-sticky-header c8y-list__item--empty-actions hidden-xs\"\n    *ngIf=\"(deviceProfiles$ | async)?.data.length > 0\"\n  >\n    <c8y-li-icon>\n      <i class=\"fa\"></i>\n    </c8y-li-icon>\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\">\n        {{'Device profile' | translate}}\n      </div>\n      <div class=\"col-6\">\n        {{'Device type' | translate}}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-li *c8yFor=\"let deviceProfile of deviceProfiles$\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-device-profile\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\" \n        title=\"{{ deviceProfile.name }}\"\n      >\n        <button class=\"btn-clean\"\n          routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n          style=\"max-width: inherit;\"\n        >\n          <span class=\"text-truncate\">\n            {{ deviceProfile.name }}\n          </span>\n        </button>\n      </div>\n      <div class=\"col-6\"\n        title=\"{{ deviceProfile.c8y_Filter?.type || '-' }}\"\n      >\n        <span class=\"text-label-small m-r-4 visible-xs\" translate>\n            Device type\n        </span>\n        <span class=\"text-truncate\"\n          *ngIf=\"deviceProfile.c8y_Filter?.type; else emptyText\"\n        >\n          {{ deviceProfile.c8y_Filter?.type}}\n      </span>\n      </div>\n      <ng-template #emptyText>\n        <small class=\"text-muted\">\n          <em>\n            {{ 'Undefined' | translate }}\n          </em>\n        </small>\n      </ng-template>\n    </c8y-li-body>\n\n    <c8y-li-action\n      routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n      icon=\"pencil\"\n      label=\"{{ 'Edit' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)=\"duplicateDeviceProfile(deviceProfile)\"\n      icon=\"copy\"\n      label=\"{{ 'Duplicate' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)=\"deleteDeviceProfile(deviceProfile)\"\n      icon=\"trash\"\n      label=\"{{ 'Delete' | translate }}\"\n    >\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n"
        })
    ], DeviceProfileListComponent);
    return DeviceProfileListComponent;
}());
export { DeviceProfileListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXByb2ZpbGUtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2RldmljZS1wcm9maWxlLyIsInNvdXJjZXMiOlsiZGV2aWNlLXByb2ZpbGUtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDNUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xGLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFNaEQ7SUFTRSxvQ0FDVSxnQkFBa0MsRUFDbEMsZ0JBQWtDLEVBQ2xDLFlBQTBCLEVBQzFCLFlBQTBCLEVBQzFCLGNBQThCLEVBQzlCLE1BQWMsRUFDZCxvQkFBMEM7UUFQcEQsaUJBUUk7UUFQTSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsaUJBQVksR0FB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QUFDLEVBQUE7O3dCQUFuQyxTQUFtQyxDQUFDO3dCQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDOzs7Ozs7Ozs7S0FJdEI7SUFFYSwyQ0FBTSxHQUFwQixVQUFxQixTQUFTOzs7Ozs7O3dCQUUxQixxQkFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFBOzt3QkFBN0MsU0FBNkMsQ0FBQzt3QkFDOUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQzs7Ozt3QkFFOUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFFLENBQUMsQ0FBQzs7Ozs7O0tBRTFDOztnQkFyRTJCLGdCQUFnQjtnQkFDaEIsZ0JBQWdCO2dCQUNwQixZQUFZO2dCQUNaLFlBQVk7Z0JBQ1YsY0FBYztnQkFDdEIsTUFBTTtnQkFDUSxvQkFBb0I7O0lBaEJ6QywwQkFBMEI7UUFKdEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlCQUF5QjtZQUNuQywyZ0hBQW1EO1NBQ3BELENBQUM7T0FDVywwQkFBMEIsQ0FnRnRDO0lBQUQsaUNBQUM7Q0FBQSxBQWhGRCxJQWdGQztTQWhGWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIEludmVudG9yeVNlcnZpY2UsIElSZXN1bHRMaXN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0LCBNb2RhbFNlcnZpY2UsIFN0YXR1cyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBBZGREZXZpY2VQcm9maWxlQ29tcG9uZW50IH0gZnJvbSAnLi9hZGQtZGV2aWNlLXByb2ZpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5zZXJ2aWNlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHRhcCwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGV2aWNlLXByb2ZpbGUtbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9kZXZpY2UtcHJvZmlsZS1saXN0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VQcm9maWxlTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHJlbG9hZGluZzogYm9vbGVhbiA9IGZhbHNlO1xuICByZWxvYWQ6IEJlaGF2aW9yU3ViamVjdDx2b2lkPiA9IG5ldyBCZWhhdmlvclN1YmplY3QobnVsbCk7XG4gIGRldmljZVByb2ZpbGVzJDogT2JzZXJ2YWJsZTxJUmVzdWx0TGlzdDxJTWFuYWdlZE9iamVjdD4+ID0gdGhpcy5yZWxvYWQucGlwZShcbiAgICB0YXAoKCkgPT4gKHRoaXMucmVsb2FkaW5nID0gdHJ1ZSkpLFxuICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLmRldmljZVByb2ZpbGVTZXJ2aWNlLmdldERldmljZVByb2ZpbGVzKCkpLFxuICAgIHRhcCgoKSA9PiAodGhpcy5yZWxvYWRpbmcgPSBmYWxzZSkpXG4gICk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBic01vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICBwcml2YXRlIGRldmljZVByb2ZpbGVTZXJ2aWNlOiBEZXZpY2VQcm9maWxlU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5sb2FkRGV2aWNlUHJvZmlsZXMoKTtcbiAgfVxuXG4gIGxvYWREZXZpY2VQcm9maWxlcygpIHtcbiAgICB0aGlzLnJlbG9hZC5uZXh0KCk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVEZXZpY2VQcm9maWxlKCkge1xuICAgIGNvbnN0IG1vZGFsID0gdGhpcy5ic01vZGFsU2VydmljZS5zaG93KEFkZERldmljZVByb2ZpbGVDb21wb25lbnQsIHtcbiAgICAgIGNsYXNzOiAnbW9kYWwtc20nXG4gICAgfSkuY29udGVudCBhcyBBZGREZXZpY2VQcm9maWxlQ29tcG9uZW50O1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwcm9maWxlSWQgPSBhd2FpdCBtb2RhbC5yZXN1bHQ7XG4gICAgICBtb2RhbC5jbG9zZSgpO1xuICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVCeVVybChgL2RldmljZS1wcm9maWxlcy8ke3Byb2ZpbGVJZH1gKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgLy8gZG8gbm90aGluZ1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGR1cGxpY2F0ZURldmljZVByb2ZpbGUoZGV2aWNlUHJvZmlsZSkge1xuICAgIGNvbnN0IGNvcHkgPSBjbG9uZURlZXAoZGV2aWNlUHJvZmlsZSk7XG4gICAgY29weS5pZCA9IG51bGw7XG4gICAgY29weS5uYW1lID0gJ0R1cGxpY2F0ZSBvZiAnICsgZGV2aWNlUHJvZmlsZS5uYW1lO1xuICAgIGNvbnN0IG1vID0gKGF3YWl0IHRoaXMuZGV2aWNlUHJvZmlsZVNlcnZpY2UuY3JlYXRlRGV2aWNlUHJvZmlsZShjb3B5KSkuZGF0YTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZUJ5VXJsKGAvZGV2aWNlLXByb2ZpbGVzLyR7bW8uaWR9YCk7XG4gIH1cblxuICBhc3luYyBkZWxldGVEZXZpY2VQcm9maWxlKGRldmljZVByb2ZpbGUpIHtcbiAgICBjb25zdCBkZXZpY2VQcm9maWxlTmFtZSA9IGRldmljZVByb2ZpbGUubmFtZTtcbiAgICBjb25zdCB0aXRsZSA9IGdldHRleHQoJ0RlbGV0ZSBkZXZpY2UgcHJvZmlsZScpO1xuICAgIGNvbnN0IGNvbmZpcm1hdGlvblRleHQgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChcbiAgICAgIGdldHRleHQoJ1lvdSBhcmUgYWJvdXQgdG8gZGVsZXRlIGEgZGV2aWNlIHByb2ZpbGUgXCJ7eyBkZXZpY2VQcm9maWxlTmFtZSB9fVwiLicpLFxuICAgICAgeyBkZXZpY2VQcm9maWxlTmFtZSB9XG4gICAgKTtcbiAgICBjb25zdCBmaW5hbFF1ZXN0aW9uID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoZ2V0dGV4dCgnRG8geW91IHdhbnQgdG8gcHJvY2VlZD8nKSk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWxTZXJ2aWNlLmNvbmZpcm0oXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBgJHtjb25maXJtYXRpb25UZXh0fSAke2ZpbmFsUXVlc3Rpb259YCxcbiAgICAgICAgU3RhdHVzLkRBTkdFUixcbiAgICAgICAge1xuICAgICAgICAgIG9rOiBnZXR0ZXh0KCdEZWxldGUnKVxuICAgICAgICB9XG4gICAgICApO1xuICAgICAgYXdhaXQgdGhpcy5kZWxldGUoZGV2aWNlUHJvZmlsZS5pZCk7XG4gICAgICB0aGlzLnJlbG9hZC5uZXh0KCk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGRlbGV0ZShwcm9maWxlSWQpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5pbnZlbnRvcnlTZXJ2aWNlLmRlbGV0ZShwcm9maWxlSWQpO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdEZXZpY2UgcHJvZmlsZSBkZWxldGVkLicpKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfVxuICB9XG59XG4iXX0=