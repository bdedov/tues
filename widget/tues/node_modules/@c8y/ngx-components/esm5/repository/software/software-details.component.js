import * as tslib_1 from "tslib";
import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';
import { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';
import { Subject, merge, BehaviorSubject } from 'rxjs';
import { ActivatedRoute } from '@angular/router';
import { RepositoryService } from '../repository.service';
import { Component } from '@angular/core';
import { map, switchMap, takeUntil, withLatestFrom, tap, take, distinctUntilKeyChanged, shareReplay } from 'rxjs/operators';
import { InventoryService, IResultList } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { AddSoftwareModalComponent } from './add-software-modal.component';
var SoftwareDetailsComponent = /** @class */ (function () {
    function SoftwareDetailsComponent(activatedRoute, inventoryService, repositoryService, alertService, translateService, modalService, bsModalService) {
        var _this = this;
        this.activatedRoute = activatedRoute;
        this.inventoryService = inventoryService;
        this.repositoryService = repositoryService;
        this.alertService = alertService;
        this.translateService = translateService;
        this.modalService = modalService;
        this.bsModalService = bsModalService;
        this.reload$ = new Subject();
        this.reloading$ = new BehaviorSubject(false);
        this.updateSoftware$ = new Subject();
        this.softwareUpdated$ = new Subject();
        this.baseVersionsUpdated$ = new Subject();
        this.software$ = merge(this.activatedRoute.params.pipe(map(function (params) { return params.id; }), switchMap(function (id) { return _this.inventoryService.detail$(id); })), this.reload$.pipe(tap(function () { return _this.reloading$.next(true); }), switchMap(function () { return _this.activatedRoute.params; }), map(function (params) { return params.id; }), switchMap(function (id) { return _this.inventoryService.detail$(id); }), tap(function () { return _this.reloading$.next(false); })), this.softwareUpdated$).pipe(shareReplay(1));
        this.baseVersions$ = merge(this.software$.pipe(distinctUntilKeyChanged('id')), this.baseVersionsUpdated$, this.reload$).pipe(switchMap(function () { return _this.software$; }), switchMap(function (software) { return _this.repositoryService.listBaseVersions(software); }), shareReplay(1));
        this.isLegacy$ = this.software$.pipe(map(function (software) { return _this.repositoryService.isLegacyEntry(software); }), shareReplay(1));
        this.destroy$ = new Subject();
    }
    SoftwareDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.updateSoftware$
            .pipe(withLatestFrom(this.software$), switchMap(function (_a) {
            var _b = tslib_1.__read(_a, 2), softwarePartial = _b[0], software = _b[1];
            return _this.inventoryService.update(tslib_1.__assign({ id: software.id }, softwarePartial));
        }), map(function (_a) {
            var data = _a.data;
            return data;
        }), tap(function (software) { return _this.softwareUpdated$.next(software); }), tap(function () { return _this.alertService.success(gettext('Saved.')); }), takeUntil(this.destroy$))
            .subscribe();
    };
    SoftwareDetailsComponent.prototype.getBinaryName$ = function (binaryUrl) {
        return this.repositoryService.getBinaryName$(binaryUrl);
    };
    SoftwareDetailsComponent.prototype.addBaseVersion = function () {
        var _this = this;
        this.software$
            .pipe(take(1), switchMap(function (software) {
            var initialState = {
                model: {
                    selected: software,
                    description: software.description
                }
            };
            var config = {
                class: 'modal-sm',
                ignoreBackdropClick: true,
                initialState: initialState
            };
            var modalRef = _this.bsModalService.show(AddSoftwareModalComponent, config);
            return modalRef.content.saved;
        }))
            .subscribe(function () { return _this.baseVersionsUpdated$.next(); });
    };
    SoftwareDetailsComponent.prototype.deleteBaseVersion = function (baseVersion) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, body, labels, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        title = gettext('Delete software');
                        body = "\n        " + this.translateService.instant(gettext('You are about to delete software {{ version }}.'), { version: baseVersion.c8y_Software.version }) + "\n        " + this.translateService.instant(gettext('This operation is irreversible.')) + "\n        " + this.translateService.instant(gettext('Do you want to proceed?')) + "\n      ";
                        labels = {
                            ok: gettext('Delete')
                        };
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.repositoryService.delete(baseVersion)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Software deleted.'));
                        this.baseVersionsUpdated$.next();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        // only if not cancel from modal
                        if (ex_1) {
                            this.alertService.addServerFailure(ex_1);
                        }
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    SoftwareDetailsComponent.prototype.ngOnDestroy = function () {
        this.destroy$.next(true);
        this.destroy$.unsubscribe();
    };
    SoftwareDetailsComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: InventoryService },
        { type: RepositoryService },
        { type: AlertService },
        { type: TranslateService },
        { type: ModalService },
        { type: BsModalService }
    ]; };
    tslib_1.__decorate([
        memoize()
    ], SoftwareDetailsComponent.prototype, "getBinaryName$", null);
    SoftwareDetailsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-software-details',
            template: "<c8y-title>\n  {{ (software$ | async)?.name }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    path=\"#/software\"\n    label=\"{{ 'Software repository' | translate }}\"\n    icon=\"c8y-tools\"\n  >\n  </c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    *ngIf=\"!(isLegacy$ | async)\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add software' | translate }}\"\n    (click)=\"addBaseVersion()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add software' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"reload$.next()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': reloading$ | async }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"card m-b-4\">\n  <div class=\"card-header separator\">\n    <h4 class=\"card-title\" translate>\n      Name, description and device type filter\n    </h4>\n  </div>\n  <div class=\"card-block\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Name' | translate }}\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #nameInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(software$ | async)?.name\"\n              #nameModel=\"ngModel\"\n              placeholder=\"{{ 'e.g. My software' | translate }}\"\n              required\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"updateSoftware$.next({ name: nameInput.value }); nameModel.reset()\"\n                [disabled]=\"nameInput.value.length == 0\"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Description' | translate }}\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #descriptionInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(software$ | async)?.description\"\n              #descriptionModel=\"ngModel\"\n              placeholder=\"{{ 'e.g. Cloud connectivity software' | translate }}\"\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"\n                  updateSoftware$.next({ description: descriptionInput.value });\n                  descriptionModel.reset()\n                \"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Device type filter' | translate }}\n\n            <a\n              class=\"pointer\"\n              popover=\"{{\n                'If the filter is set, the software will show up for installation only for devices of that type. If no filter is set, it will be available for all devices.'\n                  | translate\n              }}\"\n              [outsideClick]=\"true\"\n              container=\"body\"\n            >\n              <i c8yIcon=\"question-circle-o\"></i>\n            </a>\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #deviceTypeInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(software$ | async)?.c8y_Filter?.type\"\n              #deviceTypeModel=\"ngModel\"\n              placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"\n                  updateSoftware$.next({ c8y_Filter: { type: deviceTypeInput.value } });\n                  deviceTypeModel.reset()\n                \"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-header separator\">\n    <h4 class=\"card-title\" translate>\n      Versions\n    </h4>\n  </div>\n\n  <div class=\"card-block p-t-0\">\n    <div *ngIf=\"(baseVersions$ | async)?.data.length === 0\">\n      <div class=\"c8y-empty-state text-center\">\n        <h1 c8yIcon=\"c8y-tools\" class=\"c8y-icon-duocolor\"></h1>\n        <h3 translate>No versions to display.</h3>\n        <p translate>Add a new version by clicking below.</p>\n        <p>\n          <button\n            class=\"btn btn-primary\"\n            title=\"{{ 'Add software' | translate }}\"\n            (click)=\"addBaseVersion()\"\n            translate\n          >\n            Add software\n          </button>\n        </p>\n      </div>\n    </div>\n\n    <c8y-list-group \n      [ngClass]=\"{'dd-low': (baseVersions$ | async)?.data.length < 10}\"\n      *ngIf=\"(baseVersions$ | async)?.data.length > 0\"\n    >\n      <c8y-li *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\">\n        <c8y-li-icon>\n          <i c8yIcon=\"c8y-tools\"></i>\n        </c8y-li-icon>\n\n        <c8y-li-body class=\"content-flex-50\">\n          <div class=\"col-4\">\n            <p>{{ baseVersion.c8y_Software.version }}</p>\n          </div>\n          <div class=\"col-5 \">\n            <p class=\"text-truncate\">\n              <span class=\"text-label-small m-r-8\" translate>\n                File\n              </span>\n              <span title=\" {{ getBinaryName$(baseVersion.c8y_Software.url) | async }}\">\n                <c8y-file-download url=\"{{baseVersion.c8y_Software.url}}\"></c8y-file-download>\n              </span>\n            </p>\n          </div>\n          <div class=\"col-2 flex-row\">\n            <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning flex-item-right-sm\">\n              {{ 'Legacy' | translate }}\n            </span>\n\n            <div class=\"v-fit-20\" *ngIf=\"!(isLegacy$ | async)\">\n              <button\n                class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8\"\n                (click)=\"deleteBaseVersion(baseVersion)\"\n                title=\"{{ 'Delete' | translate }}\"\n              >\n                <i c8yIcon=\"minus-circle\"></i> {{ 'Delete' | translate }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!(isLegacy$ | async)\" class=\"flex-item-right v-fit-20 p-r-8 hidden-xs\">\n            <button\n              class=\"btn btn-dot text-danger showOnHover\"\n              (click)=\"deleteBaseVersion(baseVersion)\"\n              title=\"{{ 'Delete' | translate }}\"\n            >\n              <i c8yIcon=\"minus-circle\"></i>\n            </button>\n          </div>\n        </c8y-li-body>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</div>\n"
        })
    ], SoftwareDetailsComponent);
    return SoftwareDetailsComponent;
}());
export { SoftwareDetailsComponent };
//# sourceMappingURL=data:application/json;base64,