import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { InventoryService, IManagedObject, OperationStatus, IOperation } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { RepositoryService } from '../repository.service';
import { AlertService } from '@c8y/ngx-components';
import { DeviceConfigurationOperation } from '../repository.model';
import { DeviceConfigurationService } from './device-configuration.service';
var TextBasedConfigurationComponent = /** @class */ (function () {
    function TextBasedConfigurationComponent(route, alertService, repositoryService, deviceConfigurationService, inventoryService) {
        this.route = route;
        this.alertService = alertService;
        this.repositoryService = repositoryService;
        this.deviceConfigurationService = deviceConfigurationService;
        this.inventoryService = inventoryService;
        this.reloadingConfig = false;
        this.savingConfig = false;
    }
    TextBasedConfigurationComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.device = this.route.snapshot.parent.data.contextData;
                        return [4 /*yield*/, this.loadOperation()];
                    case 1:
                        _a.sent();
                        this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(this.device, [DeviceConfigurationOperation.SEND_CONFIG]);
                        this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(this.device, [DeviceConfigurationOperation.CONFIG]);
                        if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {
                            this.config = this.device.c8y_Configuration.config;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.prototype.loadOperation = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operation;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.repositoryService.getLastConfigUpdateOperation(this.device.id)];
                    case 1:
                        operation = _a.sent();
                        if (operation !== null) {
                            this.repositoryService.observeOperation(operation).subscribe(function (operationUpdate) {
                                _this.latestOperation = operationUpdate;
                            });
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.prototype.reloadConfiguration = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationCfg;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.reloadingConfig = true;
                        return [4 /*yield*/, this.repositoryService.createTextBasedConfigurationReloadOperation(this.device)];
                    case 1:
                        operationCfg = _a.sent();
                        try {
                            this.repositoryService
                                .createObservedOperation(operationCfg)
                                .subscribe(function (operationUpdate) { return _this.onOperationReloadSuccess(operationUpdate); }, function (operationUpdate) { return _this.onOperationReloadError(operationUpdate); }, function () { return _this.onOperationReloadComplete(); });
                        }
                        catch (ex) {
                            this.alertService.addServerFailure(ex);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.prototype.updateConfiguration = function (config) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationCfg;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.savingConfig = true;
                        return [4 /*yield*/, this.repositoryService.createTextBasedConfigurationUpdateOperation(this.device, config)];
                    case 1:
                        operationCfg = _a.sent();
                        try {
                            this.repositoryService
                                .createObservedOperation(operationCfg)
                                .subscribe(function (operationUpdate) { return _this.onOperationUpdateSuccess(operationUpdate); }, function (operationUpdate) { return _this.onOperationUpdateError(operationUpdate); }, function () { return _this.onOperationUpdateComplete(); });
                        }
                        catch (ex) {
                            this.alertService.addServerFailure(ex);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.prototype.onOperationReloadSuccess = function (operationUpdate) {
        this.latestOperation = operationUpdate;
        if (operationUpdate.status === OperationStatus.PENDING) {
            this.alertService.success(gettext('Configuration will be reloaded.'));
        }
    };
    TextBasedConfigurationComponent.prototype.onOperationReloadError = function (operationUpdate) {
        this.latestOperation = operationUpdate;
        this.reloadingConfig = false;
    };
    TextBasedConfigurationComponent.prototype.onOperationReloadComplete = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadDevice()];
                    case 1:
                        _a.sent();
                        this.config = this.device.c8y_Configuration.config;
                        this.reloadingConfig = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.prototype.onOperationUpdateSuccess = function (operationUpdate) {
        this.latestOperation = operationUpdate;
        if (operationUpdate.status === OperationStatus.PENDING) {
            this.alertService.success(gettext('Configuration will be updated.'));
        }
    };
    TextBasedConfigurationComponent.prototype.onOperationUpdateError = function (operationUpdate) {
        this.latestOperation = operationUpdate;
        this.savingConfig = false;
    };
    TextBasedConfigurationComponent.prototype.onOperationUpdateComplete = function () {
        this.device.c8y_Configuration.config = this.config;
        this.savingConfig = false;
    };
    TextBasedConfigurationComponent.prototype.loadDevice = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.inventoryService.detail(this.device.id, { withChildren: false })];
                    case 1:
                        _a.device = (_b.sent()).data;
                        return [2 /*return*/];
                }
            });
        });
    };
    TextBasedConfigurationComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: AlertService },
        { type: RepositoryService },
        { type: DeviceConfigurationService },
        { type: InventoryService }
    ]; };
    TextBasedConfigurationComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-text-based-configuration',
            template: "<div class=\"d-flex d-col fit-v\">\n  <fieldset *ngIf=\"latestOperation !== undefined\" class=\"card-block bg-gray-white fit-h\">\n    <div class=\"content-flex-50\">\n      <c8y-single-operation [operation]=\"latestOperation\" class=\"flex-grow\"></c8y-single-operation>\n      <div class=\"flex-item-right d-flex\">\n        <button\n          title=\"{{ 'Get snapshot from device' | translate }}\"\n          type=\"button\"\n          class=\"btn btn-default btn-sm flex-item-v-center m-t-8 m-b-8\"\n          *ngIf=\"showTextBasedConfigReload\"\n          (click)=\"reloadConfiguration()\"\n          [disabled]=\"reloadingConfig || savingConfig\"\n        >\n          <i\n            c8yIcon=\"refresh\"\n            *ngIf=\"reloadingConfig\"\n            class=\"m-r-4\"\n            [ngClass]=\"{ 'fa-spin': reloadingConfig }\"\n          ></i>\n          <i c8yIcon=\"download\" *ngIf=\"!reloadingConfig\" class=\"m-r-4\"></i>\n\n          {{ 'Get snapshot from device' | translate }}\n        </button>\n      </div>\n    </div>\n  </fieldset>\n  <div class=\"card-block flex-grow\">\n    <textarea\n      [(ngModel)]=\"config\"\n      style=\"height: 100%;\"\n      class=\"form-control\"\n      [disabled]=\"reloadingConfig || savingConfig\"\n      c8y-spellcheck=\"false\"\n    ></textarea>\n  </div>\n  <div class=\"card-footer fit-h separator\" *ngIf=\"showTextBasedConfigSave\">\n    <button\n      type=\"button\"\n      (click)=\"updateConfiguration(config)\"\n      [disabled]=\"reloadingConfig || savingConfig\"\n      class=\"btn btn-primary\"\n      [ngClass]=\"{ 'btn-pending': savingConfig }\"\n    >\n      <span title=\"{{ 'Send' | translate }}\" *ngIf=\"!savingConfig\">\n        {{ 'Send configuration to device' | translate }}\n      </span>\n      <span title=\"{{ 'Sending' | translate }}\u2026\" *ngIf=\"savingConfig\">\n        {{ 'Sending' | translate }}\u2026</span\n      >\n    </button>\n  </div>\n</div>\n"
        })
    ], TextBasedConfigurationComponent);
    return TextBasedConfigurationComponent;
}());
export { TextBasedConfigurationComponent };
//# sourceMappingURL=data:application/json;base64,