import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { uniqBy, isUndefined } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
var ConfigurationDetailComponent = /** @class */ (function () {
    function ConfigurationDetailComponent(repositoryService, bsModalRef, alert) {
        var _this = this;
        this.repositoryService = repositoryService;
        this.bsModalRef = bsModalRef;
        this.alert = alert;
        this.binary = {
            file: undefined,
            url: undefined
        };
        this.pattern = '';
        this.mo = {};
        this.saving = false;
        this.uploadChoice = 'uploadBinary';
        this.result = new Promise(function (resolve, reject) {
            _this._save = resolve;
            _this._cancel = reject;
        });
    }
    ConfigurationDetailComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)];
                    case 1:
                        _a.configs = _b.sent();
                        if (this.selected) {
                            this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';
                            this.existingBinary = this.binary.file;
                        }
                        this.setPipe('');
                        this.submitButtonTitle = this.mo.id
                            ? gettext('Update configuration')
                            : gettext('Add configuration');
                        return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationDetailComponent.prototype.cancel = function () {
        this.bsModalRef.hide();
        this._cancel();
    };
    ConfigurationDetailComponent.prototype.setPipe = function (filterStr) {
        this.pattern = filterStr;
        this.filterPipe = pipe(map(function (data) { return uniqBy(data, 'configurationType'); }), map(function (data) {
            return data.filter(function (mo) {
                return mo.configurationType &&
                    mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1;
            });
        }));
    };
    ConfigurationDetailComponent.prototype.onFile = function (dropped) {
        this.configurationForm.form.markAsDirty();
        if (!isUndefined(dropped.url)) {
            this.binary = {
                url: dropped.url
            };
            return;
        }
        else if (!isUndefined(dropped.droppedFiles)) {
            this.binary = {
                file: dropped.droppedFiles[0].file
            };
            return;
        }
        else {
            this.binary = {
                file: undefined,
                url: undefined
            };
        }
    };
    ConfigurationDetailComponent.prototype.save = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, selected, version, description, binary, deviceType, ex_1;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 2, 3, 4]);
                        this.saving = true;
                        _a = this, selected = _a.selected, version = _a.version, description = _a.description, binary = _a.binary, deviceType = _a.deviceType;
                        if (this.existingBinary === this.binary.file) {
                            binary.file = undefined;
                        }
                        return [4 /*yield*/, this.repositoryService.save({ selected: selected, version: version, description: description, binary: binary, deviceType: deviceType }, RepositoryType.CONFIGURATION, this.mo)];
                    case 1:
                        _b.sent();
                        this.alert.success(this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.'));
                        this.bsModalRef.hide();
                        this._save();
                        return [3 /*break*/, 4];
                    case 2:
                        ex_1 = _b.sent();
                        this.alert.addServerFailure(ex_1);
                        this._cancel();
                        return [3 /*break*/, 4];
                    case 3:
                        this.saving = false;
                        return [7 /*endfinally*/];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationDetailComponent.ctorParameters = function () { return [
        { type: RepositoryService },
        { type: BsModalRef },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        ViewChild('configurationForm', { static: true })
    ], ConfigurationDetailComponent.prototype, "configurationForm", void 0);
    ConfigurationDetailComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-configuration-detail',
            template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'cogs'\"></i>\n    <h4 translate *ngIf=\"mo.id\">Update configuration</h4>\n    <h4 translate *ngIf=\"!mo.id\">Add configuration</h4>\n  </div>\n\n  <form class=\"d-contents\" #configurationForm=\"ngForm\" (ngSubmit)=\"configurationForm.form.valid && save()\">\n    <div class=\"modal-inner-scroll\">\n      <div class=\"modal-body\">\n        <c8y-form-group>\n          <label translate>Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} hosts\"\n            autocomplete=\"off\"\n            required\n            maxlength=\"254\"\n            [(ngModel)]=\"version\"\n            name=\"version\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Device type</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n            maxlength=\"254\"\n            autocomplete=\"off\"\n            [(ngModel)]=\"deviceType\"\n            name=\"deviceType\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Description</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g. Host configuration' | translate }} c8y_Linux\"\n            maxlength=\"254\"\n            autocomplete=\"off\"\n            [(ngModel)]=\"description\"\n            name=\"description\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Configuration type</label>\n          <c8y-typeahead\n            [(ngModel)]=\"selected\"\n            name=\"confType\"\n            placeholder=\"{{ 'e.g.' | translate }} ssh\"\n            (onSearch)=\"setPipe($event)\"\n            displayProperty=\"configurationType\"\n          >\n            <c8y-li\n              *c8yFor=\"let config of configs; pipe: filterPipe; notFound: notFoundTemplate\"\n              class=\"p-l-8 p-r-8 c8y-list__item--link\"\n              (click)=\"selected = config; setPipe('')\"\n              [active]=\"selected === config\"\n            >\n              <c8y-highlight\n                [text]=\"config.configurationType || '--'\"\n                [pattern]=\"pattern\"\n              ></c8y-highlight>\n            </c8y-li>\n            <ng-template #notFoundTemplate>\n              <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n                <span translate>No match found, add new`configuration`?</span>\n                <button title=\"Create new`configuration`\" type=\"button\" class=\"btn btn-primary btn-xs m-l-16\" translate>\n                  Create new`configuration`\n                </button>\n              </c8y-li>\n            </ng-template>\n          </c8y-typeahead>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <div class=\"legend form-block top-m-xxl\" translate>Configuration file</div>\n          <c8y-file-picker\n            [maxAllowedFiles]=\"1\"\n            (onFilesPicked)=\"onFile($event)\"\n            [uploadChoice]=\"uploadChoice\"\n            [fileUrl]=\"binary.url\"\n            [fileBinary]=\"binary.file\"\n          >\n          </c8y-file-picker>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button\n        (click)=\"cancel()\"\n        type=\"button\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Cancel' | translate }}\"\n        [disabled]=\"saving\"\n      >\n        <span translate>Cancel</span>\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        type=\"submit\"\n        title=\"{{ submitButtonTitle | translate }}\"\n        [ngClass]=\"{ 'btn-pending': saving }\"\n        [disabled]=\"\n          !configurationForm.valid ||\n          configurationForm.pristine ||\n          (!binary?.url && !binary?.file) ||\n          saving\n        \"\n      >\n        {{ submitButtonTitle | translate }}\n      </button>\n    </div>\n  </form>\n</div>\n"
        })
    ], ConfigurationDetailComponent);
    return ConfigurationDetailComponent;
}());
export { ConfigurationDetailComponent };
//# sourceMappingURL=data:application/json;base64,