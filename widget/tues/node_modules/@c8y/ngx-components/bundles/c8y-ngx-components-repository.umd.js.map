{"version":3,"file":"c8y-ngx-components-repository.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/repository/repository.model.ts","ng://@c8y/ngx-components/repository/repository.service.ts","ng://@c8y/ngx-components/repository/firmware/add-firmware-modal.component.ts","ng://@c8y/ngx-components/repository/firmware/add-firmware-patch-modal.component.ts","ng://@c8y/ngx-components/repository/firmware/firmware-list.component.ts","ng://@c8y/ngx-components/repository/firmware/firmware-details.component.ts","ng://@c8y/ngx-components/repository/software/add-software-modal.component.ts","ng://@c8y/ngx-components/repository/software/software-list.component.ts","ng://@c8y/ngx-components/repository/software/software-details.component.ts","ng://@c8y/ngx-components/repository/configuration/configuration-detail.component.ts","ng://@c8y/ngx-components/repository/configuration/configuration-list.component.ts","ng://@c8y/ngx-components/repository/repository-navigation-factory.ts","ng://@c8y/ngx-components/repository/select-modal/repository-select-modal.component.ts","ng://@c8y/ngx-components/repository/firmware-device-tab/firmware-device-tab.component.ts","ng://@c8y/ngx-components/repository/firmware-device-tab/firmware-device-tab.guard.ts","ng://@c8y/ngx-components/repository/software-device-tab/software-device-tab.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/software-device-tab.guard.ts","ng://@c8y/ngx-components/repository/software-device-tab/installed-software.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/device-software-list.component.ts","ng://@c8y/ngx-components/repository/software-device-tab/device-software-changes.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.service.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/source-code-preview.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/save-to-repository.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/configuration-preview.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/configuration-filter.pipe.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration.guard.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/device-configuration-list.component.ts","ng://@c8y/ngx-components/repository/configuration-device-tab/text-based-configuration.component.ts","ng://@c8y/ngx-components/repository/file-download/link-render-type.enum.ts","ng://@c8y/ngx-components/repository/file-download/file-download.component.ts","ng://@c8y/ngx-components/repository/repository.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { IManagedObject } from '@c8y/client';\n\nexport enum RepositoryType {\n  FIRMWARE = 'c8y_Firmware',\n  SOFTWARE = 'c8y_Software',\n  CONFIGURATION = 'c8y_ConfigurationDump'\n}\n\nexport const REPOSITORY_BINARY_TYPES = {\n  [RepositoryType.SOFTWARE]: 'c8y_SoftwareBinary',\n  [RepositoryType.FIRMWARE]: 'c8y_FirmwareBinary',\n  [RepositoryType.CONFIGURATION]: 'c8y_ConfigurationDumpBinary'\n};\n\nexport interface ModalModel {\n  selected?: { id?: string; name?: string; [key: string]: any };\n  version?: string;\n  dependency?: { c8y_Firmware: { version: string } };\n  patchVersion?: string;\n  description?: string;\n  deviceType?: string;\n  binary?: {\n    file?: File;\n    url?: string;\n  };\n}\n\nexport interface RepositoryCategory extends Partial<IManagedObject> {\n  type: string;\n  description?: string;\n  c8y_Filter?: {\n    type: string;\n  };\n}\n\nexport interface FirmwareBinary extends Partial<IManagedObject> {\n  type: 'c8y_FirmwareBinary';\n  c8y_Firmware: {\n    version: string;\n    url: string;\n  };\n}\n\nexport interface FirmwarePatchBinary extends FirmwareBinary {\n  c8y_Patch: {\n    dependency: string;\n  };\n}\n\nexport interface SoftwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Software: {\n    version: string;\n    url: string;\n  };\n}\n\nexport type RepositoryBinary = FirmwareBinary | SoftwareBinary | FirmwarePatchBinary;\n\nexport interface SelectedRepositoryBinary {\n  id: string;\n  name: string;\n  version: string;\n  url: string;\n  dependency?: string;\n  c8y_Patch?: boolean;\n}\n\nexport interface DeviceFirmware {\n  version: string;\n  url: string;\n  name: string;\n}\n\nexport interface DeviceSoftware {\n  name: string;\n  version?: string;\n  url: string;\n}\n\nexport interface DeviceSoftwareChange extends DeviceSoftware {\n  action: 'install' | 'delete';\n}\n\nexport interface ConfigurationSnapshot {\n  id?: string;\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  binaryType?: any;\n  deviceType?: string;\n  configurationType?: string;\n  description?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n  isLegacy?: boolean;\n}\n\nexport interface DeviceConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile',\n  CONFIG = 'c8y_Configuration',\n  SEND_CONFIG = 'c8y_SendConfiguration'\n}\n","import { Observable, of, from, throwError, merge } from 'rxjs';\nimport { map, switchMap, takeWhile, take, filter, withLatestFrom } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  isNil,\n  isUndefined,\n  assign,\n  set,\n  head,\n  get,\n  isString,\n  pick,\n  cloneDeep,\n  remove,\n  find,\n  forEach,\n  map as _map\n} from 'lodash-es';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport {\n  InventoryService,\n  InventoryBinaryService,\n  IResult,\n  IManagedObject,\n  IManagedObjectBinary,\n  IIdentified,\n  QueriesUtil,\n  IResultList,\n  IFetchResponse,\n  IOperation,\n  OperationService,\n  Realtime,\n  OperationStatus,\n  IEvent,\n  EventService,\n  EventBinaryService,\n  IdReference\n} from '@c8y/client';\nimport {\n  RepositoryCategory,\n  RepositoryBinary,\n  FirmwareBinary,\n  SoftwareBinary,\n  FirmwarePatchBinary,\n  ModalModel,\n  RepositoryType,\n  REPOSITORY_BINARY_TYPES,\n  DeviceFirmware,\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  SelectedRepositoryBinary,\n  ConfigurationSnapshot\n} from './repository.model';\n\n@Injectable()\nexport class RepositoryService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventory: InventoryService,\n    private inventoryBinary: InventoryBinaryService,\n    private operation: OperationService,\n    private alert: AlertService,\n    private event: EventService,\n    private realtime: Realtime,\n    private eventBinary: EventBinaryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  /**\n   * Lists repository entries of given type.\n   * @param type The type of repository entries to list.\n   * @param options Extra listing options.\n   */\n  listRepositoryEntries(\n    type: RepositoryType,\n    options?: {\n      /** Additional query. */\n      query?: any;\n      /** (deprecated - to be removed) Only include entries with matching partial names. */\n      partialName?: string;\n      /** Include entries with matching partial text in the specified properties. */\n      partialTextFilter?: { partialText: string; properties: string[] };\n      /** Exclude legacy entries. */\n      skipLegacy?: boolean;\n      /** Other request params. */\n      params?: any;\n    }\n  ) {\n    const defaultOrder = [{ name: 1 }];\n    const defaultFilters = { type };\n    const legacyFilters = { __has: `url` };\n    let filters = {};\n\n    let fullQuery = (options && options.query) || {};\n    fullQuery = this.queriesUtil.addOrderbys(fullQuery, defaultOrder, 'prepend');\n\n    fullQuery = this.queriesUtil.addAndFilter(fullQuery, defaultFilters);\n\n    if (options && options.partialTextFilter) {\n      const { partialText, properties } = options.partialTextFilter;\n      const orFilter = { __or: properties.map(property => ({ [property]: `*${partialText}*` })) };\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, orFilter);\n    }\n\n    if (options && options.partialName) {\n      // backwards compatibility if\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { name: `*${options.partialName}*` });\n    }\n\n    if (options && options.skipLegacy) {\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { __not: legacyFilters });\n    }\n\n    filters = {\n      query: this.queriesUtil.buildQuery(fullQuery),\n      pageSize: 50,\n      withTotalPages: true,\n      ...((options && options.params) || {})\n    };\n    return this.inventory.list(filters);\n  }\n\n  // TODO: merge with create()\n  async save(data: ModalModel, type: RepositoryType, mo: Partial<IManagedObject> = {}) {\n    switch (type) {\n      case RepositoryType.CONFIGURATION: {\n        Object.assign(mo, {\n          type: RepositoryType.CONFIGURATION,\n          configurationType: data.selected ? data.selected.configurationType : undefined,\n          name: data.version,\n          description: data.description,\n          deviceType: data.deviceType,\n          c8y_Global: {}\n        });\n        if (!data.deviceType && mo.id) {\n          mo.deviceType = null;\n        }\n        if (!data.selected && mo.id) {\n          mo.configurationType = null;\n        }\n        break;\n      }\n    }\n\n    const existingUrl = mo.url;\n    if (data.binary.url) {\n      mo.url = data.binary.url;\n    } else if (data.binary.file) {\n      const response = await this.inventoryBinary.create(data.binary.file, {\n        c8y_Global: {}\n      } as Partial<IManagedObject>);\n      mo.url = response.data.self;\n    }\n\n    if (mo.id) {\n      return this.updateEntry(mo, existingUrl);\n    }\n    return this.createEntry(mo);\n  }\n\n  async create(modal: ModalModel, type: RepositoryType) {\n    switch (type) {\n      case RepositoryType.FIRMWARE:\n      case RepositoryType.SOFTWARE:\n        return this.createFirmwareOrSoftware(modal, type);\n    }\n  }\n\n  async createFirmwareOrSoftware(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<RepositoryCategory> {\n    let binary: IManagedObjectBinary;\n    let binaryURL: string;\n    let repositoryEntry: RepositoryCategory;\n    let repositoryBinary: FirmwareBinary | SoftwareBinary;\n    const mos = [];\n    const {\n      selected: { id: selectedId },\n      binary: { file, url }\n    } = modal;\n    try {\n      if (file) {\n        ({ data: binary } = await this.saveBinary(file));\n        ({ self: binaryURL } = binary);\n        mos.push(binary);\n      } else {\n        binaryURL = url;\n      }\n\n      ({ data: repositoryEntry } = await this.createOrUpdateRepositoryEntry(modal, type));\n      if (isNil(selectedId)) {\n        mos.push(repositoryEntry);\n      }\n\n      ({ data: repositoryBinary } = await this.createRepositoryBinary(\n        modal,\n        binaryURL,\n        type,\n        repositoryEntry\n      ));\n      mos.push(repositoryBinary);\n\n      if (file) {\n        await this.linkBinary(repositoryBinary, binary);\n      }\n\n      return repositoryEntry;\n    } catch (error) {\n      this.cleanUp(mos);\n      this.errorMsg();\n\n      // Propagate error\n      throw error;\n    }\n  }\n\n  saveBinary(file: File): Promise<IResult<IManagedObjectBinary>> {\n    return this.inventoryBinary.create(file, { c8y_Global: {} } as Partial<IManagedObject>);\n  }\n\n  createOrUpdateRepositoryEntry(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<IResult<RepositoryCategory>> {\n    const {\n      selected: { id, name },\n      description,\n      deviceType\n    } = modal;\n\n    const mo = {\n      id,\n      name: id ? undefined : name,\n      description,\n      type: id ? undefined : type,\n      c8y_Global: {}\n    };\n\n    if (deviceType) {\n      set(mo, 'c8y_Filter.type', deviceType);\n    }\n\n    return id\n      ? (this.inventory.update(mo) as Promise<IResult<RepositoryCategory>>)\n      : (this.inventory.create(mo) as Promise<IResult<RepositoryCategory>>);\n  }\n\n  createRepositoryBinary(\n    modal: ModalModel,\n    binaryURL: string,\n    type: RepositoryType,\n    parent: RepositoryCategory\n  ): Promise<IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>> {\n    const mo = this.prepareRepositoryBinaryMO(modal, binaryURL, type);\n\n    return this.inventory.childAdditionsCreate(mo, parent) as Promise<\n      IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>\n    >;\n  }\n\n  prepareRepositoryBinaryMO(modal: ModalModel, binaryURL: string, type: RepositoryType) {\n    const { version, patchVersion, dependency } = modal;\n    const result = {\n      type: REPOSITORY_BINARY_TYPES[type],\n      [type]: {\n        url: binaryURL\n      },\n      c8y_Global: {}\n    };\n\n    if (dependency) {\n      set(result, [type, 'version'], patchVersion);\n      assign(result, {\n        c8y_Patch: {\n          dependency: dependency.c8y_Firmware.version\n        }\n      });\n    } else {\n      set(result, [type, 'version'], version);\n    }\n    return result;\n  }\n\n  async linkBinary(\n    repositoryBinary: FirmwareBinary | SoftwareBinary,\n    binary: IManagedObjectBinary\n  ) {\n    const { id: repositoryBinaryId } = repositoryBinary;\n    if (binary) {\n      const { id: binaryId } = binary;\n      return this.inventory.childAdditionsAdd(binaryId, repositoryBinaryId);\n    }\n  }\n\n  cleanUp(mosToDelete: IIdentified[]) {\n    mosToDelete.forEach(mo => {\n      const { c8y_IsBinary } = mo;\n      isUndefined(c8y_IsBinary) ? this.delete(mo) : this.inventoryBinary.delete(mo);\n    });\n  }\n\n  delete(entity: IIdentified): Promise<IResult<null>> {\n    return this.inventory.delete(entity, { forceCascade: true });\n  }\n\n  errorMsg() {\n    const msg = gettext('Failed to save');\n    this.alert.danger(msg);\n  }\n\n  getBaseVersionsCount$(entry: IManagedObject): Observable<number> {\n    if (this.isLegacyEntry(entry)) {\n      return of(1);\n    }\n    return from(this.listBaseVersions(entry, { pageSize: 1, withTotalPages: true })).pipe(\n      map(({ paging }) => paging.totalPages)\n    );\n  }\n\n  getBaseVersionFromMO(mo: RepositoryBinary): string {\n    return this.isPatch(mo) ? get(mo, 'c8y_Patch.dependency') : get(mo, 'c8y_Firmware.version');\n  }\n\n  isPatch(mo: RepositoryBinary): boolean {\n    return !!get(mo, 'c8y_Patch.dependency');\n  }\n\n  getPatchVersionsCount$(entry: IManagedObject, baseVersion: FirmwareBinary): Observable<number> {\n    if (this.isLegacyEntry(baseVersion)) {\n      return of(0);\n    }\n    return from(\n      this.listPatchVersions(entry, baseVersion, { pageSize: 1, withTotalPages: true })\n    ).pipe(map(({ paging }) => paging.totalPages));\n  }\n\n  isLegacyEntry(entry: Partial<IManagedObject>): boolean {\n    return Boolean(entry.url);\n  }\n\n  /**\n   * Lists all versions (base and patch ones) of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listAllVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const VERSION_FILTER_ORDER = {\n      __filter: {},\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, VERSION_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists base versions of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listBaseVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const NO_PATCH_FILTER_ORDER = {\n      __filter: {\n        __not: { __has: 'c8y_Patch' }\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, NO_PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listPatchVersions(entry: IManagedObject, baseVersion: FirmwareBinary | string, params = {}) {\n    const version = isString(baseVersion) ? baseVersion : get(baseVersion, 'c8y_Firmware.version');\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        'c8y_Patch.dependency': version\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry including the base version.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * In terms of legacy base version the entry gets transformed to fit the needed data model.\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listBaseVersionAndPatches(entry: IManagedObject, baseVersion: IManagedObject, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return Promise.resolve({\n        data: [\n          Object.assign(\n            {\n              c8y_Firmware: {\n                version: entry.version,\n                url: entry.url\n              }\n            },\n            entry\n          )\n        ]\n      });\n    }\n\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        __or: {\n          'c8y_Patch.dependency': baseVersion.c8y_Firmware.version,\n          'c8y_Firmware.version': baseVersion.c8y_Firmware.version\n        }\n      },\n      __orderby: [{ 'c8y_Patch.dependency': 1 }, { 'c8y_Firmware.version': 1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  listChildren(entry: Partial<IManagedObject>, filters = {}, params: any = {}) {\n    const childrenFilters = { __bygroupid: entry.id };\n    const query = this.queriesUtil.addAndFilter(filters, childrenFilters);\n    // FIXME: needed because of issue in forOf directive (...)\n    params.withTotalPages = true;\n    return this.inventory.listQuery(query, params);\n  }\n\n  /**\n   * Fetches all items from the list starting with the provided page.\n   * @param firstPage The first page of the list to fetch all items for.\n   */\n  async fetchAllItemsFromList(firstPage) {\n    let allItems;\n\n    if (!firstPage.then) {\n      allItems = [...firstPage];\n    } else {\n      let { paging, data: items } = await firstPage;\n      allItems = [...items];\n\n      while (paging && paging.nextPage) {\n        ({ paging, data: items } = await paging.next());\n        allItems = [...allItems, ...items];\n      }\n    }\n\n    return allItems;\n  }\n\n  /**\n   * Gets top level repository entry managed object for base or patch version.\n   * @param mo Base or patch version managed object with parents.\n   */\n  getRepositoryEntryMO$(mo: IManagedObject): Observable<IManagedObject | undefined> {\n    if (!mo) {\n      return of(undefined);\n    }\n    const [reference] = get(mo, 'additionParents.references');\n    const id = get(reference, 'managedObject.id');\n    return id\n      ? from(this.inventory.detail(id, { withChildren: false })).pipe(map(({ data }) => data))\n      : of(undefined);\n  }\n  /**\n   * Gets base or patch version managed object.\n   * @param deviceRepositoryFragment Device repository fragment.\n   * @param type Top level repository entry type.\n   * @param configuration Configuration object with options:\n   * - **skipLegacy** - `boolean` - Exclude legacy entries.\n   * - **filters** - `object` - Filter object.\n   *\n   * @deprecated as it doesn't support 'missing url' case\n   */\n  getRepositoryBinaryMoByVersion(\n    deviceRepositoryFragment: DeviceFirmware | DeviceSoftware,\n    type: RepositoryType,\n    { skipLegacy = false, filters = {} }: { skipLegacy?: boolean; filters?: object } = {}\n  ): Promise<IManagedObject> {\n    const { version, url, name } = deviceRepositoryFragment;\n    const repositoryBinaryType = REPOSITORY_BINARY_TYPES[type];\n    let query;\n    const newModelBaseVersionQuery = {\n      [`${type}.version`]: version,\n      [`${type}.url`]: url,\n      type: repositoryBinaryType\n    };\n    const legacyVersionQuery = { url, type, name };\n    filters = { withChildren: false, withParents: true, ...filters };\n\n    if (skipLegacy) {\n      query = {\n        __and: {\n          ...newModelBaseVersionQuery\n        }\n      };\n    } else {\n      query = {\n        __or: [{ __and: { ...newModelBaseVersionQuery } }, { __and: { ...legacyVersionQuery } }]\n      };\n    }\n\n    return this.inventory.listQuery(query, filters).then(({ data }) => head(data));\n  }\n\n  getBinaryName$(binaryUrl: string): Observable<string> {\n    if (!binaryUrl) {\n      return of('---');\n    }\n\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId) {\n      return of(binaryUrl);\n    }\n    return this.inventory.detail$(binaryId).pipe(map(mo => mo.name));\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find\n   * repository entries of specified type matching the type of provided device.\n   * @param repositoryType The type of repository entries which will be queried with the generated query.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   */\n  getDeviceTypeQuery(repositoryType: RepositoryType, device: IManagedObject): object {\n    let result = { type: repositoryType };\n    if (device.type) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [{ deviceType: device.type }, { __not: { __has: `deviceType` } }]\n        });\n      } else {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [\n            { 'c8y_Filter.type': device.type },\n            { 'c8y_Filter.type': '' },\n            { __not: { __has: `c8y_Filter.type` } }\n          ]\n        });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find configuration repository entries\n   * matching the type of provided device and specified configuration type.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   * @param configurationType Configuration type for which matching repository entries will be queried with the generated query.\n   */\n  getConfigurationTypeQuery(device: IManagedObject, configurationType: string): object {\n    const query = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION, device);\n    return this.queriesUtil.addAndFilter(query, {\n      __or: [\n        { configurationType },\n        { configurationType: '' },\n        { __not: { __has: `configurationType` } }\n      ]\n    });\n  }\n\n  /**\n   * Gets the list of software installed in the device in the uniform format.\n   * Supports c8y_SoftwareList and c8y_Software fragments.\n   * @param device The device whose software list should be returned.\n   */\n  getDeviceSoftwareList(device: IManagedObject): DeviceSoftware[] {\n    if (device.c8y_SoftwareList) {\n      return cloneDeep(device.c8y_SoftwareList);\n    }\n    if (device.c8y_Software) {\n      return _map(device.c8y_Software, (version, name) => ({ name, version }));\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a software update operation for given device and the list of changes, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param changes The list of software changes which should be applied.\n   */\n  async createSoftwareUpdateOperation(\n    device: IManagedObject,\n    changes: DeviceSoftwareChange[]\n  ): Promise<IOperation> {\n    const operation = this.getSoftwareUpdateOperation(device, changes);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a software update operation for given device and changes.\n   * Returned operation type depends on device's supported operations.\n   * Supports c8y_SoftwareUpdate, c8y_SoftwareList, and c8y_Software operations.\n   * @param device The device for which operation should be prepared.\n   * @param changes The list of software changes which should be applied.\n   */\n  getSoftwareUpdateOperation(device: IManagedObject, changes: DeviceSoftwareChange[]): IOperation {\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Apply software changes: ${changes\n        .map(\n          change =>\n            `${change.action} \"${change.name}\"${\n              change.version ? ` (version: ${change.version})` : ''\n            }`\n        )\n        .join(', ')}`\n    };\n    if (device.c8y_SupportedOperations.includes('c8y_SoftwareUpdate')) {\n      operation.c8y_SoftwareUpdate = cloneDeep(changes);\n    } else if (device.c8y_SupportedOperations.includes('c8y_SoftwareList')) {\n      operation.c8y_SoftwareList = cloneDeep(device.c8y_SoftwareList) || [];\n      changes.forEach(change => {\n        const deviceSoftware: DeviceSoftware = pick(change, ['name', 'version', 'url']);\n        if (change.action === 'delete') {\n          remove(operation.c8y_SoftwareList, deviceSoftware);\n        }\n        if (change.action === 'install') {\n          operation.c8y_SoftwareList.push(deviceSoftware);\n        }\n      });\n    } else if (device.c8y_SupportedOperations.includes('c8y_Software')) {\n      operation.c8y_Software = cloneDeep(device.c8y_Software) || {};\n      changes.forEach(change => {\n        if (change.action === 'delete') {\n          delete operation.c8y_Software[change.name];\n        }\n        if (change.action === 'install') {\n          operation.c8y_Software[change.name] = change.version;\n        }\n      });\n    }\n    return operation;\n  }\n\n  /**\n   * Extracts the list of device software changes from given operation in the context of given device.\n   * @param operation The operation from which the list should be extracted.\n   * @param device The target device of the operation.\n   */\n  getDeviceSoftwareChangesFromOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    if (operation.c8y_SoftwareUpdate) {\n      return cloneDeep(operation.c8y_SoftwareUpdate);\n    }\n    if (operation.c8y_SoftwareList) {\n      return this.getDeviceSoftwareChangesFromSoftwareListOperation(operation, device);\n    }\n    if (operation.c8y_Software) {\n      return this.getDeviceSoftwareChangesFromSoftwareOperation(operation, device);\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and the selected repository binary, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param selectedOption The selected repository binary option.\n   */\n  async createFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): Promise<IOperation> {\n    const operation = this.getFirmwareUpdateOperation(device, selectedOption);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and selected version.\n   * Supports c8y_Firmware operation.\n   * @param device The device for which operation should be prepared.\n   * @param selectedOption Selected firmware version.\n   */\n  getFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): IOperation {\n    delete selectedOption.id;\n\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Update firmware to: \"${selectedOption.name}\"${\n        selectedOption.version ? ` (version: ${selectedOption.version})` : ''\n      }`,\n      c8y_Firmware: { ...selectedOption }\n    };\n\n    return operation;\n  }\n\n  /**\n   * Prepares a configuration file upload operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param isLegacy  A legacy operation is created without a configurationType.\n   */\n  getUploadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Retrieve configuration snapshot from device ${device.name}`,\n        c8y_UploadConfigFile: {}\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Retrieve ${configurationType} configuration snapshot from device ${\n        device.name\n      }`,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Prepares a configuration file download operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param binaryUrl The url of a binary to be downloaded.\n   * @param isLegacy A legacy operation is created without a configurationType.\n   */\n  getDownloadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    configSnapshot: ConfigurationSnapshot,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Send configuration snapshot ${configSnapshot.name} to device ${device.name}`,\n        c8y_DownloadConfigFile: {\n          url: configSnapshot.binaryUrl,\n          c8y_ConfigurationDump: {\n            id: configSnapshot.id\n          }\n        }\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Send configuration snapshot ${\n        configSnapshot.name\n      } of configuration type ${configurationType} to device ${device.name}`,\n      c8y_DownloadConfigFile: {\n        url: configSnapshot.binaryUrl,\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Gets the last firmware update operation for given device.\n   * Looks for c8y_Firmware operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastFirmwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([{ ...filters, fragmentType: 'c8y_Firmware' }]);\n  }\n\n  /**\n   * Gets the last software update operation for given device.\n   * Looks for c8y_SoftwareUpdate, c8y_SoftwareList, or c8y_Software operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastSoftwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_SoftwareUpdate' },\n      { ...filters, fragmentType: 'c8y_SoftwareList' },\n      { ...filters, fragmentType: 'c8y_Software' }\n    ]);\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * If a query returns at least one operation, the first one will be returned.\n   * Otherwise the next query will be performed.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getFirstMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation = null;\n\n    for (const filters of filtersList) {\n      const operations = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        matchingOperation = operations[0];\n        break;\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Creates the operation and returns an observable to track its progress.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to create and track.\n   */\n  createObservedOperation(operation: IOperation): Observable<IOperation> {\n    return from(this.operation.create(operation)).pipe(\n      map(({ data }) => data),\n      take(1),\n      switchMap(createdOperation => this.observeOperation(createdOperation))\n    );\n  }\n\n  /**\n   * Returns an observable to track progress of given operation.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to be observed.\n   */\n  observeOperation(operation: IOperation): Observable<IOperation> {\n    const observedOperation$ = of(operation);\n    const operationUpdates$ = observedOperation$.pipe(\n      switchMap(observedOperation =>\n        this.realtime.observable(`/operations/${observedOperation.deviceId}`)\n      ),\n      map(({ data }) => data),\n      withLatestFrom(observedOperation$),\n      filter(([operationUpdate, observedOperation]) => operationUpdate.id === observedOperation.id),\n      switchMap(([operationUpdate]) => {\n        if (operationUpdate.status === OperationStatus.FAILED) {\n          return throwError(operationUpdate);\n        }\n        return of(operationUpdate);\n      }),\n      takeWhile(operationUpdate => operationUpdate.status !== OperationStatus.SUCCESSFUL, true)\n    );\n    return merge(observedOperation$, operationUpdates$);\n  }\n\n  /**\n   * Gets a single event with latest creationTime for the given device Id and event type.\n   * @param deviceId The device Id for which the events should be queried.\n   * @param type Event type.\n   */\n  async getLatestConfigurationEvent(\n    deviceId: string | number,\n    type: string\n  ): Promise<IEvent | undefined> {\n    const eventFilter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.event.list(eventFilter);\n    return data[0];\n  }\n\n  /**\n   * Gets a list of operations for the given device Id, and operation type.\n   * @param deviceId The device Id for which the operation should be queried.\n   * @param operationType Operation type fragment.\n   */\n  async getConfigFileOperationList(\n    deviceId: string | number,\n    operationType: string\n  ): Promise<IOperation[]> {\n    const operationFilter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    return (await this.operation.list(operationFilter)).data;\n  }\n\n  /**\n   * Gets latest uploaded configuration snapshot for the given device, and configuration type.\n   * @param device The device for which the configuration snapshot was uploaded.\n   * @param configurationType Selected configuration type.\n   */\n  async getConfigSnapshot(\n    device: IManagedObject,\n    configurationType: string\n  ): Promise<ConfigurationSnapshot | undefined> {\n    const event: IEvent = await this.getLatestConfigurationEvent(device.id, configurationType);\n    let configSnapshot: ConfigurationSnapshot;\n    if (event) {\n      configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: device.type,\n        configurationType\n      };\n      try {\n        configSnapshot.binary = await (await this.eventBinary.download(event)).text();\n        if (event.c8y_IsBinary) {\n          configSnapshot.binaryType = event.c8y_IsBinary.type;\n        }\n      } catch (ex) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return configSnapshot;\n  }\n\n  async getLegacyConfigSnapshot(deviceId) {\n    let configSnapshot: ConfigurationSnapshot;\n    let mo;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    const snapshotId = device.c8y_ConfigurationDump && device.c8y_ConfigurationDump.id;\n    if (!snapshotId) {\n      return;\n    }\n\n    try {\n      mo = (await this.inventory.detail(snapshotId)).data;\n    } catch (ex) {\n      // do nothing\n    }\n    if (mo) {\n      configSnapshot = {\n        time: mo.creationTime,\n        name: mo.name\n      };\n      configSnapshot.binary = await this.getBinaryText(mo.url, { allowExternal: false });\n    }\n    return configSnapshot;\n  }\n\n  /**\n   * Returns a binary object as text.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  async getBinaryText(\n    binaryUrl: string,\n    options: { allowExternal: boolean; noAlerts?: boolean }\n  ): Promise<string> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n\n    let res;\n    if (!binaryId && options.allowExternal) {\n      res = await this.getExternalBinaryResponse(binaryUrl, options);\n    } else {\n      res = await this.getInternalBinaryResponse(binaryId, options);\n    }\n    if (!res) {\n      return null;\n    }\n    return res.text();\n  }\n\n  /**\n   * Returns a binary object as File.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   */\n  async getBinaryFile(binaryUrl: string, options: { allowExternal: boolean }): Promise<File> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId && !options.allowExternal) {\n      return null;\n    }\n    // @TODO: note that it doesn't solve issue with external binary here, such url won't have binaryId, so we won't know the name or contentType to use in File constructor, let's add a @FIXME comment for now?\n    const { name, contentType } = (await this.inventory.detail(binaryId)).data;\n    const res = !!binaryId\n      ? await this.getInternalBinaryResponse(binaryId)\n      : await this.getExternalBinaryResponse(binaryUrl);\n    const arrayBuffer = await res.arrayBuffer();\n    return new File([arrayBuffer], name, { type: contentType });\n  }\n\n  /**\n   * Gets the last configuration update operation for given device.\n   * Looks for c8y_Configuration and c8y_SendConfiguration operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastConfigUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_Configuration' },\n      { ...filters, fragmentType: 'c8y_SendConfiguration' }\n    ]);\n  }\n\n  /**\n   * Prepares a configuration download operation for given device and its current configuration.\n   * Supports c8y_SendConfiguration operation.\n   * @param device The device for which operation should be prepared.\n   */\n  createTextBasedConfigurationReloadOperation(device: IManagedObject): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Requested current configuration'),\n      c8y_SendConfiguration: {}\n    };\n  }\n\n  /**\n   * Prepares a configuration update operation for the given device.\n   * Supports c8y_Configuration operation.\n   * @param device The device for which operation should be prepared.\n   * @param config The configuration which will update the existing one.\n   */\n  createTextBasedConfigurationUpdateOperation(device: IManagedObject, config: string): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Configuration update'),\n      c8y_Configuration: {\n        config\n      }\n    };\n  }\n\n  async getBinary(binaryId: IdReference): Promise<IFetchResponse> {\n    try {\n      return await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alert.danger(msg);\n    }\n  }\n\n  /**\n   * Gets all available snapshots from the repository for the given device.\n   * @param device The device for which the snapshots should be prepared.\n   * @param configurationType Selected configuration type.\n   */\n  async getSnapshotsFromRepository(device, configurationType) {\n    const searchQuery = this.getConfigurationTypeQuery(device, configurationType);\n    const res = await this.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: searchQuery,\n      params: { pageSize: 100 }\n    });\n    return res.data;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryId binary ID\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getInternalBinaryResponse(\n    binaryId: IdReference,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      res = await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getExternalBinaryResponse(\n    binaryUrl: string,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      const fetchRes = await fetch(binaryUrl);\n      if (fetchRes.status >= 400) {\n        throw res;\n      }\n      res = fetchRes;\n    } catch {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the external binary');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  private async createEntry(mo: Partial<IManagedObject>) {\n    const binaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    const newMo = await this.inventory.create(mo);\n    if (binaryId) {\n      await this.inventory.childAdditionsAdd(binaryId, newMo.data);\n    }\n    return newMo;\n  }\n\n  private async updateEntry(mo: Partial<IManagedObject>, url) {\n    const existingBinaryId = await this.inventoryBinary.getIdFromUrl(url);\n    const newBinaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    if (existingBinaryId && existingBinaryId !== newBinaryId) {\n      const id = this.inventoryBinary.getIdFromUrl(url);\n      await this.inventoryBinary.delete(id);\n    }\n    if (newBinaryId) {\n      await this.inventory.childAdditionsAdd(newBinaryId, mo);\n    }\n    return this.inventory.update(mo);\n  }\n\n  private getBaseVersionResultListForLegacyEntry(entry) {\n    return Promise.resolve({\n      res: {} as IFetchResponse,\n      data: [\n        {\n          ...entry,\n          [entry.type]: {\n            version: entry.version,\n            url: entry.url\n          }\n        }\n      ]\n    } as IResultList<IManagedObject>);\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareListOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_SoftwareList, deviceSoftware => {\n      const operationSoftware = find(operation.c8y_SoftwareList, { name: deviceSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...deviceSoftware,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_SoftwareList, operationSoftware => {\n      const deviceSoftware = find(device.c8y_SoftwareList, { name: operationSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...operationSoftware,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_Software, (deviceSoftwareVersion, deviceSoftwareName) => {\n      if (operation.c8y_Software[deviceSoftwareName] !== deviceSoftwareVersion) {\n        changes.push({\n          name: deviceSoftwareName,\n          version: deviceSoftwareVersion,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_Software, (operationSoftwareVersion, operationSoftwareName) => {\n      if (device.c8y_Software[operationSoftwareName] !== operationSoftwareVersion) {\n        changes.push({\n          name: operationSoftwareName,\n          version: operationSoftwareVersion,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-firmware-software-modal',\n  templateUrl: 'add-firmware-modal.component.html'\n})\nexport class AddFirmwareModalComponent {\n  @ViewChild('firmwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  firmwaresResult;\n  saving = false;\n  firmwarePreselected: boolean = false;\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadFirmwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n    }\n  }\n\n  loadFirmwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.firmwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getFirmwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.firmwaresResult = result;\n      });\n  }\n\n  getFirmwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onFirmwareSelect(firmware: IManagedObject) {\n    assign(this.model, {\n      selected: firmware,\n      description: firmware.description,\n      deviceType: get(firmware, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { isUndefined } from 'lodash-es';\nimport { BehaviorSubject, of, from, pipe, merge, Observable } from 'rxjs';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { NgForm } from '@angular/forms';\nimport {\n  debounceTime,\n  tap,\n  switchMap,\n  distinctUntilChanged,\n  shareReplay,\n  map\n} from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-firmware-patch-modal.component',\n  templateUrl: 'add-firmware-patch-modal.component.html'\n})\nexport class AddFirmwarePatchModalComponent {\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ViewChild('firmwarePatchForm', { static: false }) form: NgForm;\n\n  model: ModalModel = {\n    selected: undefined,\n    dependency: null,\n    patchVersion: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  firmwareInput$ = new BehaviorSubject<string>('');\n  firmwares$: Observable<IResultList<IManagedObject>> = this.firmwareInput$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    switchMap(searchStr =>\n      from(\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          partialName: searchStr,\n          skipLegacy: true\n        })\n      )\n    ),\n    shareReplay(1)\n  );\n  firmwareSelected$ = new BehaviorSubject<Partial<RepositoryCategory>>(null);\n  patchDependencyInput$ = new BehaviorSubject<string>('');\n\n  saving = false;\n  firmwarePreselected: boolean = false;\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmwareInput$.pipe(\n      tap(() => {\n        this.model.dependency = null;\n        if (this.form) {\n          this.form.form.get('patchDependency').reset();\n        }\n      }),\n      switchMap(() => of(null))\n    ),\n    this.firmwareSelected$\n  ).pipe(\n    switchMap(selectedFirmware =>\n      selectedFirmware ? this.repository.listBaseVersions(selectedFirmware) : of(null)\n    ),\n    shareReplay(1)\n  );\n  baseVersionsFilterPipe = pipe(\n    switchMap((data: []) =>\n      this.patchDependencyInput$.pipe(\n        map(partialVersion =>\n          data.filter((mo: any) => {\n            const version = mo.c8y_Firmware.version.toLowerCase();\n            return (\n              partialVersion.length === 0 || version.indexOf(partialVersion.toLowerCase()) > -1\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private modal: BsModalRef,\n    private repository: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n      this.firmwareSelected$.next(this.model.selected);\n    }\n  }\n\n  async save() {\n    this.saving = true;\n    this.repository\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware patch added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n  map,\n  pluck\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest, from } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-firmware-list',\n  templateUrl: 'firmware-list.component.html'\n})\nexport class FirmwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  firmwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getFirmwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  canAddFirmwarePatch$: Observable<boolean> = from(\n    this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { skipLegacy: true })\n  ).pipe(map(({ data }) => data.length > 0));\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getFirmwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = {partialText, properties};\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {partialTextFilter} );\n  }\n\n  addFirmware() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  addFirmwarePatch() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  editFirmware(firmware: IManagedObject) {\n    this.router.navigate([firmware.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteFirmware(firmware: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext(\n            'You are about to delete firmware \"{{ name }}\" with all its versions and patches.'\n          ),\n          { name: firmware.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(firmware);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(\n      firmware,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE)\n    );\n  }\n}\n","import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { Observable, Subject, merge, BehaviorSubject, combineLatest } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { RepositoryService } from './../repository.service';\nimport { IManagedObject } from '@c8y/client';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n  tap,\n  take,\n  distinctUntilKeyChanged,\n  shareReplay\n} from 'rxjs/operators';\nimport { InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property } from 'lodash-es';\nimport { FirmwareBinary } from '../repository.model';\n\n@Component({\n  selector: 'c8y-firmware-details',\n  templateUrl: './firmware-details.component.html'\n})\nexport class FirmwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateFirmware$: Subject<Partial<IManagedObject>> = new Subject();\n  firmwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n  patchVersionsUpdated$: Subject<void> = new Subject();\n\n  firmware$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id)),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.firmwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmware$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.patchVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.firmware$),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  canAddPatchVersions$: Observable<boolean> = combineLatest(\n    this.isLegacy$,\n    this.baseVersions$.pipe(map(({ data }) => data.length > 0))\n  ).pipe(map(([isLegacy, hasBaseVersions]) => !isLegacy && hasBaseVersions));\n\n  expanded: { [id: string]: boolean } = {};\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateFirmware$\n      .pipe(\n        withLatestFrom(this.firmware$),\n        switchMap(([firmwarePartial, firmware]) =>\n          this.inventoryService.update({\n            id: firmware.id,\n            ...firmwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(firmware => this.firmwareUpdated$.next(firmware)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.baseVersionsUpdated$,\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getPatchVersions$(baseVersion) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.listPatchVersions(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  addBaseVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware,\n              description: firmware.description\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  addPatchVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.patchVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware {{ version }} with all its patches.'),\n          { version: baseVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async deletePatchVersion(patchVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware patch');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware patch {{ version }}.'),\n          { version: patchVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(patchVersion);\n      this.alertService.success(gettext('Firmware patch deleted.'));\n      this.patchVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-software-software-modal',\n  templateUrl: 'add-software-modal.component.html'\n})\nexport class AddSoftwareModalComponent {\n  @ViewChild('softwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  softwaresResult;\n  saving = false;\n  softwarePreselected: boolean = false;\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadSoftwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.softwarePreselected = true;\n    }\n  }\n\n  loadSoftwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.softwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getSoftwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.softwaresResult = result;\n      });\n  }\n\n  getSoftwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.SOFTWARE)\n      .then(savedSoftware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedSoftware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Software added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onSoftwareSelect(software: IManagedObject) {\n    assign(this.model, {\n      selected: software,\n      description: software.description,\n      deviceType: get(software, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-software-list',\n  templateUrl: 'software-list.component.html'\n})\nexport class SoftwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  softwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getSoftwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getSoftwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = {partialText, properties};\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { partialTextFilter });\n  }\n\n  addSoftware() {\n    const config: ModalOptions = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));\n  }\n\n  editSoftware(software: IManagedObject) {\n    this.router.navigate([software.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteSoftware(software: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software \"{{ name }}\" with all its versions.'),\n          { name: software.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(software);\n      this.alertService.success(gettext('Software deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number | string> {\n    return this.softwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(software)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(software: IManagedObject): string {\n    return get(\n      software,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE));\n  }\n}\n","import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { Observable, Subject, merge, BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { RepositoryService } from '../repository.service';\nimport { IManagedObject } from '@c8y/client';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n  tap,\n  take,\n  distinctUntilKeyChanged,\n  shareReplay\n} from 'rxjs/operators';\nimport { InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\n\n@Component({\n  selector: 'c8y-software-details',\n  templateUrl: './software-details.component.html'\n})\nexport class SoftwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateSoftware$: Subject<Partial<IManagedObject>> = new Subject();\n  softwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n\n  software$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => this.inventoryService.detail$(id)),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.softwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.software$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.software$),\n    switchMap(software => this.repositoryService.listBaseVersions(software)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.software$.pipe(\n    map(software => this.repositoryService.isLegacyEntry(software)),\n    shareReplay(1)\n  );\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateSoftware$\n      .pipe(\n        withLatestFrom(this.software$),\n        switchMap(([softwarePartial, software]) =>\n          this.inventoryService.update({\n            id: software.id,\n            ...softwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(software => this.softwareUpdated$.next(software)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  addBaseVersion() {\n    this.software$\n      .pipe(\n        take(1),\n        switchMap(software => {\n          const initialState = {\n            model: {\n              selected: software,\n              description: software.description\n            }\n          };\n          const config: ModalOptions = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software {{ version }}.'),\n          { version: baseVersion.c8y_Software.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Software deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { uniqBy, isUndefined } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-configuration-detail',\n  templateUrl: './configuration-detail.component.html'\n})\nexport class ConfigurationDetailComponent implements ModalModel {\n  @ViewChild('configurationForm', { static: true }) configurationForm: NgForm;\n  selected: { id: string; name: string };\n  version: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  saving = false;\n  uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  existingBinary: File;\n  submitButtonTitle: string;\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);\n    if (this.selected) {\n      this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';\n      this.existingBinary = this.binary.file;\n    }\n    this.setPipe('');\n    this.submitButtonTitle = this.mo.id\n      ? gettext('Update configuration')\n      : gettext('Add configuration');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  onFile(dropped: PickedFiles) {\n    this.configurationForm.form.markAsDirty();\n    if (!isUndefined(dropped.url)) {\n      this.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  async save() {\n    try {\n      this.saving = true;\n      const { selected, version, description, binary, deviceType } = this;\n      if (this.existingBinary === this.binary.file) {\n        binary.file = undefined;\n      }\n      await this.repositoryService.save(\n        { selected, version, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.saving = false;\n    }\n  }\n}\n","import { Component, OnInit, Pipe, ViewChild } from '@angular/core';\nimport {IManagedObject, InventoryBinaryService, InventoryService, IResultList} from '@c8y/client';\nimport {\n  AlertService,\n  FilterInputComponent,\n  gettext, memoize,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { property } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  @ViewChild(FilterInputComponent, { static: false }) filter: FilterInputComponent;\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe: Pipe;\n  filterTerm = '';\n  reloading: boolean = false;\n  data;\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private translateService: TranslateService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit() {\n    this.loadConfigurations();\n  }\n\n  async loadConfigurations() {\n    this.reloading = true;\n    this.configurations$ = of(\n      await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)\n    );\n    this.reloading = false;\n    this.reset();\n  }\n\n  async add() {\n    try {\n      await (this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationDetailComponent).result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    try {\n      const modal = this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: { id: configuration.id, configurationType: configuration.configurationType },\n          version: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { file: fileBinary, url: configuration.url }\n        } as ModalModel\n      }).content as ConfigurationDetailComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  isBinaryFile(configuration: IManagedObject) {\n    const id: string = this.inventoryBinaryService.getIdFromUrl(configuration.url);\n    return id ? true : false;\n  }\n\n  @memoize(property('id'))\n  getBinaryName(configuration: IManagedObject) {\n    return this.repositoryService.getBinaryName$(configuration.url);\n  }\n\n  async download(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    saveAs(fileBinary);\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      const title = gettext('Delete configuration snapshot');\n      const confirmationText = gettext(\n        'You are about to delete the configuration snapshot {{ name }}.'\n      );\n      const hint = gettext('This operation is irreversible.');\n      const proceed = gettext('Do you want to proceed?');\n      const body = [\n        this.translateService.instant(confirmationText, {\n          name: configuration.name\n        }),\n        this.translateService.instant(hint),\n        this.translateService.instant(proceed)\n      ].join(' ');\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.loadConfigurations();\n    } catch (ex) {\n      if (ex) {\n        this.alert.addServerFailure(ex);\n      }\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n    this.filterPipe = pipe(\n      map((data: []) => {\n        this.data =\n          filterTerm.trim().length === 0\n            ? data\n            : data.filter(\n                (mo: IManagedObject) =>\n                  this.filterContainString(mo.name, filterTerm) ||\n                  this.filterContainString(mo.configurationType, filterTerm) ||\n                  this.filterContainString(mo.deviceType, filterTerm)\n              );\n\n        return this.data;\n      })\n    );\n  }\n\n  shouldShowEmptyState() {\n    return !(this.data && this.data.length > 0);\n  }\n\n  reset() {\n    this.filter.filterTerm = '';\n    this.setPipe('');\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class RepositoryNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Firmware repository'),\n          path: 'firmware',\n          icon: 'c8y-firmware',\n          parent: gettext('Management'),\n          priority: 1000\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Software repository'),\n          path: 'software',\n          icon: 'c8y-tools',\n          parent: gettext('Management'),\n          priority: 900\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Configuration repository'),\n          path: 'configuration',\n          icon: 'gears',\n          parent: gettext('Management'),\n          priority: 800\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  gettext,\n  ISelectModalObject,\n  ISelectModalOption,\n  ModalLabels,\n  ModalSelectionMode\n} from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable, from, BehaviorSubject } from 'rxjs';\nimport { switchMap, map, mergeMap, shareReplay, tap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport {\n  RepositoryType,\n  RepositoryCategory,\n  RepositoryBinary,\n  SelectedRepositoryBinary\n} from '../repository.model';\n\n// MODAL STRUCTURE\n// - selectModalObject (repository entry (repositoryCategory) -> type c8y_Firmware/c8y_Software)\n//   -- ISelectModalOption (repository binary entry (repositoryBinary) => type c8y_FirmwareBinary/c8y_SoftwareBinary)\n//   -- ISelectModalOption...\n// - selectModalObject...\n\n/**\n * RepositorySelectModalComponent displays repository entries options and allows to select them.\n *\n * @example\n * ```\n * import { take } from 'rxjs/operators';\n * import { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from '@c8y/ngx-components/repository';\n *\n * const initialState = {\n *   repositoryType: RepositoryType.FIRMWARE,\n *   title: gettext('Install firmware'),\n *   subTitle: gettext('Available firmwares matching the device type'),\n *   icon: 'c8y-firmware',\n *   mode: ModalSelectionMode.SINGLE,\n *   labels: { ok: gettext('Install') },\n *   disableSelected: false\n * };\n *\n * const modal = this.bsModal.show(RepositorySelectModalComponent, {\n *   ignoreBackdropClick: true,\n *   initialState\n * });\n *\n * modal.content.load.next();\n * modal.content.resultEmitter.pipe(take(1)).subscribe((firmware) => {\n *   ...\n * })\n * ```\n */\n\n@Component({\n  selector: 'c8y-repository-select-modal',\n  templateUrl: './repository-select-modal.component.html'\n})\nexport class RepositorySelectModalComponent {\n  /**\n   * Optional\n   * Allows to provide custom data.\n   * @example\n   * ```\n   * import { from } from 'rxjs';\n   *\n   * const repositoryEntry = { name: 'ExampleEntry', type: 'c8y_Firmware' };\n   * const versions = [{ c8y_Firmware: { version: '1.0.0', url: 'http://example.com' } }];\n   *\n   * const initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};\n   * ```\n   */\n  repositoryEntriesWithVersions$: Observable<IManagedObject[]> = undefined;\n  /**\n   * Repository entry type.\n   */\n  repositoryType: RepositoryType.FIRMWARE | RepositoryType.SOFTWARE;\n  /**\n   * Optional\n   * Allows to use custom badges templates.\n   * @example\n   * ```\n   * import { gettext } from '@c8y/ngx-components';\n   *\n   * const badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n   * const initialState = { badgeTemplates };\n   * ```\n   */\n  badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n  /**\n   * Optional\n   * Allows to provide custom modal title.\n   */\n  title: string = gettext('Select repository entry');\n  /**\n   * Optional\n   * Allows to provide custom modal subtitle.\n   */\n  subTitle: string;\n  /**\n   * Loads the content of the modal.\n   * Must be invoked by the modal's caller.\n   */\n  load: Subject<void> = new Subject();\n  /**\n   * Optional\n   * Emits a search string currently entered in the filter input.\n   * Use it to filter the items if you use custom repositoryEntriesWithVersions$.\n   */\n  searchTerm: BehaviorSubject<string> = new BehaviorSubject('');\n  /**\n   * Optional\n   * Allows to provide device type query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  deviceTypeQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  searchQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.\n   */\n  labels: ModalLabels = { ok: gettext('Save') };\n  /**\n   * Optional\n   * Allows to hide the filter input field.\n   * By default, the filter input field is displayed.\n   */\n  showFilter: boolean = true;\n  /**\n   * Optional\n   * Allows to show a warning that the search criteria should be narrowed down.\n   * By default, this warning is hidden.\n   */\n  areMoreEntries: boolean = false;\n  /**\n   * Optional\n   * Allows to pass the array of items. Each item from this array will be marked as selected in the modal.\n   */\n  selected: SelectedRepositoryBinary[];\n  /**\n   * Emits the list of selected options.\n   */\n  resultEmitter: EventEmitter<SelectedRepositoryBinary[]> = new EventEmitter<\n    SelectedRepositoryBinary[]\n  >();\n  /**\n   * Optional\n   * Allows to change selection mode.\n   * Supported options:\n   *   * single: only single option can be selected.\n   *   * multiple: multiple options can be selected.\n   */\n  mode: ModalSelectionMode = ModalSelectionMode.SINGLE;\n  /**\n   * Optional\n   * Allows to use custom icon in the modal header.\n   */\n  icon: string;\n  /**\n   * Allows to block selection of the other versions from the same repository entry.\n   */\n  disableSelected: boolean = true;\n  modalEntries: Observable<ISelectModalObject[]> = this.load.pipe(\n    switchMap(() => this.repositoryEntriesWithVersions$),\n    mergeMap(mos => this.aggregate(mos)),\n    tap(items => {\n      this.areMoreEntries = items.length >= this.PAGE_SIZE ? true : false;\n    })\n  );\n  private PAGE_SIZE = 100;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  ngOnInit() {\n    if (!this.repositoryType) {\n      throw new Error('Repository type must be defined');\n    }\n\n    if (!this.repositoryEntriesWithVersions$) {\n      this.repositoryEntriesWithVersions$ = from(\n        this.repositoryService.listRepositoryEntries(this.repositoryType, {\n          query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n          params: { pageSize: this.PAGE_SIZE }\n        })\n      ).pipe(\n        map(({ data }) => data),\n        map(mos => this.getAndAssignRepositoryBinaries(mos)),\n        shareReplay(1)\n      );\n    }\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listAllVersions(mo);\n    });\n    return mos;\n  }\n\n  search(searchTerm: string) {\n    this.searchTerm.next(searchTerm);\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = { name: `*${searchTerm}*` };\n    }\n    this.load.next();\n  }\n\n  result(selectedItems: SelectedRepositoryBinary[]) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  async aggregate(mos: IManagedObject[]): Promise<ISelectModalObject[]> {\n    const repositoryType = this.repositoryType;\n    const selectedItems: SelectedRepositoryBinary[] = this.selected;\n\n    return Promise.all(\n      mos.map(async repositoryEntry => {\n        const options: ISelectModalOption[] = this.getSelectModalOptions(\n          await this.repositoryService.fetchAllItemsFromList(repositoryEntry.versions),\n          selectedItems,\n          repositoryEntry as RepositoryCategory,\n          repositoryType\n        );\n        const selectModalObject = this.getSelectModalObject(\n          repositoryEntry as RepositoryCategory,\n          options\n        );\n\n        return selectModalObject;\n      })\n    );\n  }\n\n  getSelectModalOptions(\n    versions: RepositoryBinary[],\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryType: RepositoryType\n  ): ISelectModalOption[] {\n    const selectModalOptions: ISelectModalOption[] = [];\n    versions.forEach(repositoryBinary => {\n      const isSelected: boolean = this.isBinaryRepositorySelected(\n        selectedItems,\n        repositoryEntry,\n        repositoryBinary,\n        repositoryType\n      );\n\n      const { version } = repositoryBinary[`${repositoryType}`];\n      const bodyValue =\n        version || `(${this.translateService.instant(gettext('not specified`version`'))})`;\n      const bodyClass = version ? '' : 'text-muted';\n      selectModalOptions.push({\n        body: [\n          {\n            value: bodyValue,\n            class: bodyClass\n          }\n        ],\n        obj: {\n          id: repositoryBinary.id,\n          name: repositoryEntry.name,\n          version,\n          ...(get(repositoryBinary, 'c8y_Patch.dependency') && {\n            dependency: get(repositoryBinary, 'c8y_Patch.dependency')\n          }),\n          ...(get(repositoryBinary, 'c8y_Patch') && { c8y_Patch: true }),\n          url: repositoryBinary[`${repositoryType}`].url\n        },\n        selected: isSelected\n      });\n    });\n    return selectModalOptions;\n  }\n\n  isBinaryRepositorySelected(\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryBinary: RepositoryBinary,\n    repositoryType: RepositoryType\n  ): boolean {\n    const isSelected = selectedItems\n      ? selectedItems.filter(\n          repositoryFragment =>\n            repositoryFragment.name === repositoryEntry.name &&\n            repositoryFragment.version === repositoryBinary[`${repositoryType}`].version\n        ).length > 0\n      : false;\n\n    return isSelected;\n  }\n\n  getSelectModalObject(\n    repositoryEntry: RepositoryCategory,\n    options: ISelectModalOption[]\n  ): ISelectModalObject {\n    const label =\n      options.length === 1\n        ? this.translateService.instant(this.badgeTemplates['=1'], { count: options.length })\n        : this.translateService.instant(this.badgeTemplates.other, { count: options.length });\n\n    const selectModalObject: ISelectModalObject = {\n      groupId: repositoryEntry.id,\n      body: [\n        { value: repositoryEntry.name, class: 'text-truncate' },\n        { value: repositoryEntry.description, class: 'text-truncate text-muted' }\n      ],\n      additionalInformation: { value: label, class: 'label label-info' },\n      options\n    };\n\n    return selectModalObject;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { assign, isEmpty } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, combineLatest, from, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { ModalSelectionMode, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IOperation, InventoryService, OperationStatus } from '@c8y/client';\n\nimport { RepositoryService } from '../repository.service';\nimport { DeviceFirmware, FirmwareBinary, RepositoryType } from '../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-device-tab',\n  templateUrl: 'firmware-device-tab.component.html'\n})\nexport class FirmwareDeviceTabComponent {\n  isEmpty = isEmpty;\n  reloading: boolean = false;\n  device$: BehaviorSubject<IManagedObject> = new BehaviorSubject(\n    this.route.parent.snapshot.data.contextData\n  );\n  deviceFirmwareFragment$: Observable<DeviceFirmware> = this.device$.pipe(\n    map(device => device.c8y_Firmware)\n  );\n  firmwareBinary$: Observable<IManagedObject> = this.deviceFirmwareFragment$.pipe(\n    filter(deviceFirmwareFragment => !isEmpty(deviceFirmwareFragment)),\n    switchMap(deviceFirmwareFragment =>\n      from(\n        this.repository.getRepositoryBinaryMoByVersion(\n          deviceFirmwareFragment,\n          RepositoryType.FIRMWARE\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n  repositoryEntry$: Observable<IManagedObject> = this.firmwareBinary$.pipe(\n    switchMap(mo => this.repository.getRepositoryEntryMO$(mo)),\n    shareReplay(1)\n  );\n  patches$: Observable<IManagedObject[]> = combineLatest(\n    this.firmwareBinary$,\n    this.repositoryEntry$\n  ).pipe(\n    switchMap(([firmwareBinary, repositoryEntry]) => {\n      if (repositoryEntry && firmwareBinary) {\n        const version: string = this.repository.getBaseVersionFromMO(\n          firmwareBinary as FirmwareBinary\n        );\n\n        return from(this.repository.listPatchVersions(repositoryEntry, version)).pipe(\n          map(({ data }) => data)\n        );\n      } else {\n        return of([]);\n      }\n    }),\n    shareReplay(1)\n  );\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    // TODO check route snapshot, why is not refreshing device.\n    // Scanario: missing deviceFirmwareFragment => install new version => switch tabs.\n    // Expected: device should be set.\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  installFirmware() {\n    const initialState = {\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getRepositoryEntriesWithVersions$(modal.content.searchTerm),\n      repositoryType: RepositoryType.FIRMWARE,\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n\n          if (initialState.repositoryEntriesWithVersionsFn$) {\n            modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n              modal\n            );\n          }\n\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedFirmware]) => {\n        this.handleOperation(selectedFirmware);\n      });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          query: this.repository.getDeviceTypeQuery(RepositoryType.FIRMWARE, this.device$.value),\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repository.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addPatch() {\n    const initialState = {\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersions$: this.getRepositoryEntryWithPatches$(),\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(selectedOption => {\n        this.handleOperation(selectedOption);\n      });\n  }\n\n  getRepositoryEntryWithPatches$() {\n    return combineLatest(this.repositoryEntry$, this.patches$).pipe(\n      map(([repositoryEntry, patches]) => {\n        return [{ ...repositoryEntry, versions: patches }];\n      })\n    );\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const deviceId = this.device$.value.id;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  private async handleOperation(selectedFirmware) {\n    const operation = await this.repository.createFirmwareUpdateOperation(\n      this.device$.value,\n      selectedFirmware\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const deviceId = this.device$.value.id;\n    const operation = await this.repository.getLastFirmwareUpdateOperation(deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { get, indexOf } from 'lodash-es';\n\nconst FIRMWARE_FRAGMENT = 'c8y_Firmware';\nconst SUPPORTED_OPERATIONS_FRAGMENT = 'c8y_SupportedOperations';\n\n@Injectable()\nexport class FirmwareDeviceTabGuard implements CanActivate {\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    const supportedOperations = get(contextData, SUPPORTED_OPERATIONS_FRAGMENT);\n    return !!supportedOperations\n      ? indexOf(supportedOperations, FIRMWARE_FRAGMENT) >= 0\n      : false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IManagedObject, InventoryService, OperationStatus, IOperation } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-software-device-tab',\n  templateUrl: 'software-device-tab.component.html'\n})\nexport class SoftwareDeviceTabComponent implements OnInit {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData.id;\n  device$ = new BehaviorSubject<IManagedObject>(this.route.snapshot.parent.data.contextData);\n  deviceTypeQuery$: Observable<object> = this.device$.pipe(\n    map(device => this.repository.getDeviceTypeQuery(RepositoryType.SOFTWARE, device))\n  );\n  list$: Observable<DeviceSoftware[]> = this.device$.pipe(\n    map(device => this.repository.getDeviceSoftwareList(device))\n  );\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n  reloading: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  addChanges(requestedChanges: DeviceSoftwareChange[]) {\n    let stagedChanges = [...this.changes$.value];\n    requestedChanges.forEach(requestedChange => {\n      const alreadyStaged = stagedChanges.some(stagedChange =>\n        this.areSameChanges(stagedChange, requestedChange));\n      if (!alreadyStaged) {\n        stagedChanges = [...stagedChanges, requestedChange];\n      }\n    });\n    this.changes$.next(stagedChanges);\n  }\n\n  dropChange(changeToBeDropped: DeviceSoftwareChange) {\n    let stagedChanges = [...this.changes$.value];\n    stagedChanges = stagedChanges.filter(stagedChange => !this.areSameChanges(stagedChange, changeToBeDropped));\n    this.changes$.next(stagedChanges);\n  }\n\n  areSameChanges(change1: DeviceSoftwareChange, change2: DeviceSoftwareChange) {\n    return change1.name === change2.name &&\n      change1.version === change2.version &&\n      change1.action === change2.action;\n  }\n\n  clearChanges() {\n    this.changes$.next([]);\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const device = (await this.inventory.detail(this.deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  async applyChanges() {\n    const operation = await this.repository.createSoftwareUpdateOperation(\n      this.device$.value,\n      this.changes$.value\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const operation = await this.repository.getLastSoftwareUpdateOperation(this.deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.displayChangesFromOperation(operation);\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.clearChanges();\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private displayChangesFromOperation(operation: IOperation) {\n    const changes = this.repository.getDeviceSoftwareChangesFromOperation(\n      operation,\n      this.device$.value\n    );\n    this.changes$.next(changes);\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable()\nexport class SoftwareDeviceTabGuard implements CanActivate {\n  private readonly operations = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.isAnyOperationSupported(route);\n  }\n\n  private isAnyOperationSupported(route: ActivatedRouteSnapshot) {\n    const device = route.data.contextData || route.parent.data.contextData;\n    const supportedOperations = (device && device.c8y_SupportedOperations) || [];\n    return this.operations.some(operation => supportedOperations.indexOf(operation) >= 0);\n  }\n}\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\nimport { from, of, BehaviorSubject } from 'rxjs';\nimport { shareReplay, map, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { IManagedObject, InventoryService, IOperation } from '@c8y/client';\nimport { gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from './../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-installed-software',\n  templateUrl: 'installed-software.component.html'\n})\nexport class InstalledSoftwareComponent {\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() deviceSoftwareChangesOperation: IOperation;\n  @Input() deviceSoftwareChangesInProgress: boolean;\n  @Input() deviceTypeQuery: object;\n  @Output() changes = new EventEmitter<DeviceSoftwareChange[]>();\n\n  constructor(\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {\n  }\n\n  installSoftware() {\n    this.displaySoftwareSelectModal({\n      title: gettext('Install software'),\n      labels: { ok: gettext('Install') },\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getInstallableSoftwareListWithVersions$(modal.content.searchTerm)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n    });\n  }\n\n  updateSoftware(softwareToRemove) {\n    this.displaySoftwareSelectModal({\n      title: gettext('Update software'),\n      labels: { ok: gettext('Update') },\n      showFilter: false,\n      repositoryEntriesWithVersions$: this.getSingleSoftwareWithVersions$(softwareToRemove)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n    });\n  }\n\n  removeSoftware(softwareToRemove) {\n    this.emitSoftwareRemoval([softwareToRemove]);\n  }\n\n  getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    const installedSoftwareNames = this.softwareList.map(s => s.name);\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          query: this.deviceTypeQuery,\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(softwareList => {\n        return softwareList.filter(software => {\n          return !installedSoftwareNames.includes(software.name);\n        });\n      }),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  getSingleSoftwareWithVersions$(software: DeviceSoftware) {\n    return from(\n      this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: { name: software.name }\n      })\n    ).pipe(\n      map(({ data }) => data),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  attachVersions(softwareList: IManagedObject[]) {\n    softwareList.forEach(software => {\n      software.versions = this.repository.listBaseVersions(software);\n    });\n    return softwareList;\n  }\n\n  displaySoftwareSelectModal(initialStateOverrides) {\n    const initialState = {\n      repositoryType: RepositoryType.SOFTWARE,\n      subTitle: gettext('Available softwares matching the device type'),\n      mode: ModalSelectionMode.MULTI,\n      icon: 'c8y-tools',\n      disableSelected: false,\n      selected: this.softwareList,\n      ...initialStateOverrides\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      class: 'modal-sm',\n      initialState\n    });\n\n    if (initialStateOverrides.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialStateOverrides.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    return modal.content.resultEmitter;\n  }\n\n  emitSoftwareInstall(items: DeviceSoftwareChange[]) {\n    this.changes.emit(items.map(item => {\n      return { ...item, action: 'install' };\n    }));\n  }\n\n  emitSoftwareRemoval(items: DeviceSoftwareChange[]) {\n    this.changes.emit(items.map(item => {\n      return { ...item, action: 'delete' };\n    }));\n  }\n}\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\nimport { filter } from 'lodash-es';\nimport { OperationStatus } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-list',\n  templateUrl: 'device-software-list.component.html'\n})\nexport class DeviceSoftwareListComponent {\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Output() update = new EventEmitter<DeviceSoftware>();\n  @Output() remove = new EventEmitter<DeviceSoftware>();\n  showUpdate: boolean;\n  showRemove: boolean;\n\n  ngAfterContentInit() {\n    this.showUpdate = this.update.observers.length > 0;\n    this.showRemove = this.remove.observers.length > 0;\n  }\n\n  isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean {\n    const relevantChanges = filter(this.deviceSoftwareChanges, software);\n    return relevantChanges.length > 0;\n  }\n}\n","import { Component, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-changes',\n  templateUrl: 'device-software-changes.component.html'\n})\nexport class DeviceSoftwareChangesComponent implements OnChanges {\n  @Input() changes: DeviceSoftwareChange[];\n  @Input() changesInProgress: boolean;\n  @Output() clear: EventEmitter<void> = new EventEmitter();\n  @Output() drop: EventEmitter<DeviceSoftwareChange> = new EventEmitter();\n  @Output() apply: EventEmitter<void> = new EventEmitter();\n\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  installations$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'install');\n    })\n  );\n\n  removals$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'delete');\n    })\n  );\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.changes) {\n      this.changes$.next(changes.changes.currentValue);\n    }\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  configurationsUpdated = new EventEmitter<any>();\n\n  updateConfigurations(repositorySnapsOnly?: boolean) {\n    this.configurationsUpdated.emit(repositorySnapsOnly);\n  }\n\n  hasAnySupportedOperation(\n    mo: IManagedObject,\n    operation: DeviceConfigurationOperation | DeviceConfigurationOperation[]\n  ) {\n    const supported = mo.c8y_SupportedOperations as [];\n    if (!supported) {\n      return false;\n    }\n    if (!Array.isArray(operation)) {\n      operation = [operation];\n    }\n    return supported.some(supportedOperation => operation.includes(supportedOperation));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  DeviceConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem,\n  RepositoryType,\n  DeviceConfigurationOperation\n} from '../repository.model';\nimport { gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit {\n  supportedConfigurations: SupportedConfigurationItem[] = [];\n  showBinaryBasedConfig = false;\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: DeviceConfigurationListEmptyState;\n  device: IManagedObject;\n  isLegacy: boolean;\n  showTextBasedConfig: boolean;\n  reloading: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private repositoryService: RepositoryService\n  ) {\n    this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {\n      this.updateSnapshots(repositorySnapsOnly);\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    if (this.device.c8y_SupportedConfigurations) {\n      this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n        name: item\n      }));\n    }\n\n    if (\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG\n      ])\n    ) {\n      this.supportedConfigurations.push({\n        name: gettext('Legacy configuration snapshot'),\n        isLegacy: true\n      });\n    }\n    if (this.supportedConfigurations.length > 0) {\n      this.showBinaryBasedConfig = true;\n    }\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n\n    this.showTextBasedConfig = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG, DeviceConfigurationOperation.SEND_CONFIG]\n    );\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = config.name;\n    this.isLegacy = config.isLegacy;\n    this.updateSnapshots();\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      id: config.id,\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      try {\n        const binary = await this.repositoryService.getBinaryFile(config.url, {\n          allowExternal: false\n        });\n        if (binary) {\n          this.repositorySnapshot.binary = await (binary as any).text();\n        }\n      } catch (ex) {\n        // do nothing\n      }\n    }\n  }\n\n  async updateSnapshots(repositorySnapsOnly?: boolean) {\n    this.reloading = false;\n    this.repositorySnapshot = undefined;\n    this.repositorySnapshots = await this.repositoryService.getSnapshotsFromRepository(\n      this.device,\n      this.configurationType\n    );\n    if (!repositorySnapsOnly) {\n      this.configSnapshot = this.isLegacy\n        ? await this.repositoryService.getLegacyConfigSnapshot(this.device)\n        : await this.repositoryService.getConfigSnapshot(this.device, this.configurationType);\n    }\n    this.reloading = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot, RepositoryType } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService\n  ) {}\n\n  async save() {\n    {\n      try {\n        const configSnapshotData = {\n          selected: {\n            configurationType: this.configSnapshot.configurationType\n          },\n          version: this.configSnapshot.name,\n          deviceType: this.configSnapshot.deviceType,\n          description: this.configSnapshot.description,\n          binary: {\n            file: new File([this.configSnapshot.binary], this.configSnapshot.name)\n          }\n        };\n        await this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);\n        this.alertService.success(gettext('Configuration saved.'));\n        this._save();\n      } catch (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from '../repository.model';\nimport {\n  IManagedObject,\n  IOperation,\n  OperationService,\n  OperationStatus,\n  Realtime,\n  UserService\n} from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AlertService, AppStateService } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() set configurationType(type: string) {\n    this._configurationType = type;\n    this.setOperation(type);\n  }\n  get configurationType(): string {\n    return this._configurationType;\n  }\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() isLegacy: boolean = false;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  canCallAction = true;\n  deviceConfigurationOperation = DeviceConfigurationOperation;\n  private _configurationType: string;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService,\n    private repositoryService: RepositoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setOperation(this._configurationType);\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .subscribe(({ data }) => {\n        this.updatePreview(data);\n      });\n    if (this.isLegacy) {\n      this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(\n        this.device,\n        this.operationToTrigger\n      );\n    }\n  }\n\n  async setOperation(configType): Promise<void> {\n    const operationList = await this.repositoryService.getConfigFileOperationList(\n      this.device.id,\n      this.operationToTrigger\n    );\n\n    const operation = this.isLegacy\n      ? operationList.find(op => op[this.operationToTrigger] && !op[this.operationToTrigger].type)\n      : operationList.find(op => op[this.operationToTrigger].type === configType);\n\n    this.operation =\n      operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createDeviceOperation() {\n    let operationCfg;\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.configSnapshot,\n        this.isLegacy\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getUploadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.isLegacy\n      );\n    }\n    try {\n      this.operation = (await this.operationService.create(operationCfg)).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updatePreview(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      (this.isLegacy ||\n        (operation[this.operationToTrigger].type &&\n          operation[this.operationToTrigger].type === this.configurationType))\n    ) {\n      this.operation = operation;\n      this.updateSnapshotsOnConfigUpload(operation);\n    }\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });\n    let fileName = this.configSnapshot.name;\n    switch (this.configSnapshot.binaryType) {\n      case 'text/csv':\n      case 'application/csv':\n        fileName = fileName.concat('.csv');\n        break;\n      case 'text/yaml':\n      case 'application/x-yaml':\n        fileName = fileName.concat('.yaml');\n        break;\n      case 'application/json':\n        fileName = fileName.concat('.json');\n        break;\n    }\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateConfigurations(true);\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.operationsSubscription) {\n      this.operationsSubscription.unsubscribe();\n    }\n  }\n\n  private async updateSnapshotsOnConfigUpload(operation) {\n    if (\n      operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&\n      operation.status === OperationStatus.SUCCESSFUL\n    ) {\n      this.deviceConfigurationService.updateConfigurations();\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from '../repository.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { DeviceConfigurationOperation } from '../repository.model';\n\n@Injectable()\nexport class DeviceConfigurationGuard implements CanActivate {\n  constructor(private deviceConfigurationService: DeviceConfigurationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return (\n      (contextData.c8y_SupportedConfigurations &&\n        contextData.c8y_SupportedConfigurations.length > 0) ||\n      this.deviceConfigurationService.hasAnySupportedOperation(contextData, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG,\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ])\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DeviceConfigurationListEmptyState, SupportedConfigurationItem } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './device-configuration-list.component.html'\n})\nexport class DeviceConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: DeviceConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService, IManagedObject, OperationStatus, IOperation } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-text-based-configuration',\n  templateUrl: './text-based-configuration.component.html'\n})\nexport class TextBasedConfigurationComponent implements OnInit {\n  device: IManagedObject;\n  latestOperation: IOperation;\n  showTextBasedConfigReload: boolean;\n  showTextBasedConfigSave: boolean;\n  reloadingConfig = false;\n  savingConfig = false;\n  config: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private inventoryService: InventoryService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    await this.loadOperation();\n    this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.SEND_CONFIG]\n    );\n    this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG]\n    );\n    if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {\n      this.config = this.device.c8y_Configuration.config;\n    }\n  }\n\n  async loadOperation() {\n    const operation = await this.repositoryService.getLastConfigUpdateOperation(this.device.id);\n    if (operation !== null) {\n      this.repositoryService.observeOperation(operation).subscribe(operationUpdate => {\n        this.latestOperation = operationUpdate;\n      });\n    }\n  }\n\n  async reloadConfiguration() {\n    this.reloadingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationReloadOperation(\n      this.device\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationReloadSuccess(operationUpdate),\n          operationUpdate => this.onOperationReloadError(operationUpdate),\n          () => this.onOperationReloadComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateConfiguration(config) {\n    this.savingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationUpdateOperation(\n      this.device,\n      config\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationUpdateSuccess(operationUpdate),\n          operationUpdate => this.onOperationUpdateError(operationUpdate),\n          () => this.onOperationUpdateComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOperationReloadSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be reloaded.'));\n    }\n  }\n\n  private onOperationReloadError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.reloadingConfig = false;\n  }\n\n  private async onOperationReloadComplete() {\n    await this.loadDevice();\n    this.config = this.device.c8y_Configuration.config;\n    this.reloadingConfig = false;\n  }\n\n  private onOperationUpdateSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be updated.'));\n    }\n  }\n\n  private onOperationUpdateError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.savingConfig = false;\n  }\n\n  private onOperationUpdateComplete() {\n    this.device.c8y_Configuration.config = this.config;\n    this.savingConfig = false;\n  }\n\n  private async loadDevice() {\n    this.device = (await this.inventoryService.detail(this.device.id, { withChildren: false })).data;\n  }\n}\n","export enum LinkRenderType {\n    DOWNLOAD,\n    LINK,\n    TEXTONLY\n}\n","import { Component, Input } from '@angular/core';\nimport { RepositoryService } from './../repository.service';\nimport { memoize } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { InventoryBinaryService } from '@c8y/client';\nimport { LinkRenderType } from './link-render-type.enum';\n\n@Component({\n  selector: 'c8y-file-download',\n  templateUrl: './file-download.component.html'\n})\nexport class FileDownloadComponent {\n  @Input() url: string;\n  linkRenderType = LinkRenderType;\n  constructor(\n    private repositoryService: RepositoryService,\n    private inventoryBinaryService: InventoryBinaryService\n  ) {}\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize()\n  determineBehavior(): LinkRenderType {\n    let result: LinkRenderType;\n    if (this.inventoryBinaryService.getIdFromUrl(this.url)) {\n      result = LinkRenderType.DOWNLOAD;\n    } else if (this.url.match(/\\/\\//g)) {\n      result = LinkRenderType.LINK;\n    } else {\n      result = LinkRenderType.TEXTONLY;\n    }\n    return result;\n  }\n\n  async downloadFile() {\n    const binary: File = await this.repositoryService.getBinaryFile(this.url, {\n      allowExternal: false\n    });\n    saveAs(binary);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  FormsModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ONCE_ROUTE,\n  Route,\n  ViewContext,\n  gettext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\nimport { RepositoryService } from './repository.service';\nimport { FirmwareListComponent } from './firmware/firmware-list.component';\nimport { FirmwareDetailsComponent } from './firmware/firmware-details.component';\nimport { AddFirmwareModalComponent } from './firmware/add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './firmware/add-firmware-patch-modal.component';\nimport { SoftwareListComponent } from './software/software-list.component';\nimport { SoftwareDetailsComponent } from './software/software-details.component';\nimport { AddSoftwareModalComponent } from './software/add-software-modal.component';\nimport { ConfigurationListComponent } from './configuration/configuration-list.component';\nimport { ConfigurationDetailComponent } from './configuration/configuration-detail.component';\nimport { RepositoryNavigationFactory } from './repository-navigation-factory';\nimport { FirmwareDeviceTabComponent } from './firmware-device-tab/firmware-device-tab.component';\nimport { FirmwareDeviceTabGuard } from './firmware-device-tab/firmware-device-tab.guard';\nimport { SoftwareDeviceTabComponent } from './software-device-tab/software-device-tab.component';\nimport { SoftwareDeviceTabGuard } from './software-device-tab/software-device-tab.guard';\nimport { InstalledSoftwareComponent } from './software-device-tab/installed-software.component';\nimport { RepositorySelectModalComponent } from './select-modal/repository-select-modal.component';\nimport { DeviceSoftwareListComponent } from './software-device-tab/device-software-list.component';\nimport { DeviceSoftwareChangesComponent } from './software-device-tab/device-software-changes.component';\nimport { DeviceConfigurationComponent } from './configuration-device-tab/device-configuration.component';\nimport { SourceCodePreviewComponent } from './configuration-device-tab/source-code-preview.component';\nimport { ConfigurationPreviewComponent } from './configuration-device-tab/configuration-preview.component';\nimport { ConfigurationFilterPipe } from './configuration-device-tab/configuration-filter.pipe';\nimport { SaveToRepositoryComponent } from './configuration-device-tab/save-to-repository.component';\nimport { DeviceConfigurationService } from './configuration-device-tab/device-configuration.service';\nimport { DeviceConfigurationGuard } from './configuration-device-tab/device-configuration.guard';\nimport { DeviceConfigurationListComponent } from './configuration-device-tab/device-configuration-list.component';\nimport { TextBasedConfigurationComponent } from './configuration-device-tab/text-based-configuration.component';\nimport { FileDownloadComponent } from './file-download/file-download.component';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    FormsModule,\n    SingleOperationDetailsModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    PopoverModule,\n    TabsModule.forRoot()\n  ],\n  exports: [],\n  declarations: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    InstalledSoftwareComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareListComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    DeviceConfigurationListComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent,\n    FileDownloadComponent\n  ],\n  entryComponents: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    DeviceSoftwareListComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent\n  ],\n  providers: [\n    RepositoryService,\n    DeviceConfigurationService,\n    FirmwareDeviceTabGuard,\n    SoftwareDeviceTabGuard,\n    DeviceConfigurationGuard,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: RepositoryNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: [\n        {\n          path: 'firmware',\n          component: FirmwareListComponent\n        },\n        {\n          path: 'firmware/:id',\n          component: FirmwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'firmware',\n          component: FirmwareDeviceTabComponent,\n          label: gettext('Firmware'),\n          icon: 'c8y-firmware',\n          priority: 500,\n          canActivate: [FirmwareDeviceTabGuard]\n        },\n        {\n          path: 'software',\n          component: SoftwareListComponent\n        },\n        {\n          path: 'software/:id',\n          component: SoftwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'software',\n          component: SoftwareDeviceTabComponent,\n          label: gettext('Software'),\n          icon: 'c8y-tools',\n          priority: 499,\n          canActivate: [SoftwareDeviceTabGuard]\n        },\n        {\n          path: 'configuration',\n          component: ConfigurationListComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'device-configuration',\n          component: DeviceConfigurationComponent,\n          label: gettext('Configuration'),\n          icon: 'gears',\n          priority: 600,\n          canActivate: [DeviceConfigurationGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class RepositoryModule {}\n"],"names":["RepositoryType","DeviceConfigurationOperation","QueriesUtil","isNil","set","assign","isUndefined","gettext","of","from","map","get","isString","head","cloneDeep","_map","pick","remove","tslib_1.__values","take","switchMap","withLatestFrom","filter","OperationStatus","throwError","takeWhile","merge","forEach","find","tslib_1.__assign","InventoryService","InventoryBinaryService","OperationService","AlertService","EventService","Realtime","EventBinaryService","Injectable","EventEmitter","BehaviorSubject","tap","debounceTime","distinctUntilChanged","BsModalRef","tslib_1.__decorate","ViewChild","Output","Component","shareReplay","pipe","combineLatest","Status","ModalService","BsModalService","TranslateService","Router","ActivatedRoute","memoize","property","Subject","distinctUntilKeyChanged","takeUntil","uniqBy","saveAs","FilterInputComponent","NavigatorNode","ModalSelectionMode","mergeMap","isEmpty","indexOf","Input","UserService","AppStateService","Pipe","ViewContext","NgModule","CoreModule","FormsModule","SingleOperationDetailsModule","BsDropdownModule","TooltipModule","PopoverModule","TabsModule","HOOK_NAVIGATOR_NODES","HOOK_ONCE_ROUTE"],"mappings":"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"}