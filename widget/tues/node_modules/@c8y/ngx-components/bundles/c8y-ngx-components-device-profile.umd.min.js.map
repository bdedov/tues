{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/device-profile/device-profile-navigation.factory.ts","ng://@c8y/ngx-components/device-profile/device-profile.service.ts","ng://@c8y/ngx-components/device-profile/select-configuration-modal.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.model.ts","ng://@c8y/ngx-components/device-profile/device-profile.component.ts","ng://@c8y/ngx-components/device-profile/add-device-profile.component.ts","ng://@c8y/ngx-components/device-profile/device-profile-list.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.guard.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-tab-profile.component.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-tab-profile-detail.component.ts","ng://@c8y/ngx-components/device-profile/device-tab-profile/device-profile-item-list.component.ts","ng://@c8y/ngx-components/device-profile/device-profile.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","DeviceProfileNavigationFactory","prototype","get","nodeItem","NavigatorNode","gettext","path","icon","parent","Injectable","DeviceProfileService","inventoryService","operationService","alertService","dateFrom","Date","dateTo","now","NOT_INSTALLED_WARNING","VERSION_MISSMATCH_WARNING","SAME_URL_WARNING","queriesUtil","QueriesUtil","createDeviceProfile","deviceProfile","create","getDeviceProfilesByDeviceType","deviceType","deviceTypeFilter","__or","c8y_Filter.type","__not","__has","getDeviceProfiles","andQuery","query","type","addAndFilter","listQuery","pageSize","withTotalPages","getProfileOperation","deviceId","filter","fragmentType","toISOString","revert","list","operation","_a","data","status","OperationStatus","SUCCESSFUL","undefined","createProfileOperation","device","operationCfg","id","profileId","profileName","name","c8y_DeviceProfile","description","addServerFailure","ex_1","getFirmwareItems","selectedProfile","deviceFirmware","c8y_Firmware","profileFirmware","deviceItems","profileItems","createProfileComparison","getAlert","getSoftwareItems","deviceSoftware","c8y_SoftwareList","profileSoftware","getConfigurationItems","deviceConfiguration","keys","forEach","slice","profileConfiguration","itemType","_this","notInstalled","comparisionResult","profile","itemDetails","itemName","mergeByProperty","propertyNameWithDetails","comparisonObj","createProfileComparisonFromDeviceItems","extendedComparisonObj","extendProfileComparisonWithProfileItems","sortBy","toArray","reduce","comapritionItem","deviceItem","assign","itemUrl","url","profileItem","comparisonAlert","InventoryService","OperationService","AlertService","SelectConfigurationModalComponent","repositoryService","title","load","Subject","configurations","pipe","switchMap","getItems","map","aggregate","resultEmitter","EventEmitter","deviceTypeQuery","searchQuery","labels","ok","search","searchTerm","addOrFilter","configurationType","selectedItems","emit","listRepositoryEntries","RepositoryType","CONFIGURATION","params","mos","selected","acc","curr","val","selectModalOption","obj","selectModalObject","find","options","groupId","RepositoryService","Component","selector","template","DeviceProfileOperation","DeviceProfileComponent","route","location","breadcrumbService","bsModal","DEVICE_TYPE_POPOVER","ngOnInit","snapshot","paramMap","getDeviceProfile","_b","software","configuration","addFirmware","initialState","getDeviceTypeQuery","FIRMWARE","repositoryType","repositoryEntriesWithVersionsFn$","modalDialog","getRepositoryEntriesWithVersions$","content","mode","ModalSelectionMode","SINGLE","modal","show","RepositorySelectModalComponent","ignoreBackdropClick","repositoryEntriesWithVersions$","take","subscribe","firmwareList","firmware","deviceProfilePartial","version","isPatch","patchDependency","updateDeviceProfile","searchTerm$","repoType","distinctUntilChanged","partialName","skipLegacy","getAndAssignRepositoryBinaries","shareReplay","mo","versions","listBaseVersions","addConfiguration","selectedConfigurations","selectedMapped","selectedItem","merged","concat","uniqWith","arrVal","othVal","addSoftware","SOFTWARE","MULTI","selectedSoftware","action","isSoftware","isFirmware","Boolean","isConfiguration","removeItem","removedItem","category","filtered","item","isEqual","removeFirmware","partialDeviceProfile","c8y_Filter","update","success","detail","ex_2","has","isEmpty","ActivatedRoute","Location","BreadcrumbService","BsModalService","AddDeviceProfileComponent","deviceProfileService","_save","_cancel","close","hide","BsModalRef","DeviceProfileListComponent","translateService","modalService","bsModalService","router","reloading","reload","BehaviorSubject","deviceProfiles$","tap","loadDeviceProfiles","class","navigateByUrl","duplicateDeviceProfile","copy","cloneDeep","deleteDeviceProfile","deviceProfileName","confirmationText","instant","finalQuestion","confirm","Status","DANGER","delete","ex_3","TranslateService","ModalService","Router","DeviceProfileGuard","canActivate","state","contextData","hasSupportedOperation","APPLY_PROFILE","supported","c8y_SupportedOperations","supportedOperation","DeviceTabProfileComponent","deviceRealtime","realtime","firmwareItems","softwareItems","configurationItems","pattern","getDeviceProfilesAndUpdateProfileItems","subscribeToManagedObjects","deviceProfiles","_c","c8y_Profile","profileId_1","updateProfileItems","subscribeToOperations","selectProfile","createOperation","setPipe","filterStr","filterPipe","toLowerCase","indexOf","ngOnDestroy","operationsSubscription","unsubscribe","moOnUpdateSubscription","moOnDeleteSubscription","onUpdate$","managedObject","onDelete$","danger","window","href","operationsChannel","observable","ManagedObjectRealtimeService","Realtime","providers","DeviceTabProfileDetailComponent","emptyStateText","emptyStateDetails","showTextLabel","tslib_1.__decorate","Input","DeviceProfileItemListComponent","deviceProfilesRoutes","component","context","ViewContext","Device","DeviceProfileModule","NgModule","declarations","exports","imports","CoreModule","CommonModule","RepositoryModule","RouterModule","forChild","BsDropdownModule","forRoot","TooltipModule","ReactiveFormsModule","ButtonsModule","PopoverModule","SingleOperationDetailsModule","entryComponents","provide","HOOK_NAVIGATOR_NODES","useClass","multi","HOOK_ONCE_ROUTE","useValue","Éµ0"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileNavigationFactory implements NavigatorNodeFactory {\n  nodeItem: NavigatorNode;\n\n  async get() {\n    if (!this.nodeItem) {\n      this.nodeItem = new NavigatorNode({\n        label: gettext('Device profiles'),\n        path: '/device-profiles',\n        icon: 'c8y-device-profile',\n        parent: gettext('Management')\n      });\n    }\n    return this.nodeItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport {\n  DeviceProfile,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware,\n  ComparisonResult\n} from './device-profile.model';\nimport { AlertService } from '@c8y/ngx-components';\nimport { sortBy, toArray, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  private NOT_INSTALLED_WARNING = gettext('Not installed on the device');\n  private VERSION_MISSMATCH_WARNING = gettext('Version mismatch');\n  private SAME_URL_WARNING = gettext('Url is the same');\n\n  constructor(\n    private inventoryService: InventoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  createDeviceProfile(deviceProfile: Partial<DeviceProfile>) {\n    return this.inventoryService.create(deviceProfile as IManagedObject);\n  }\n\n  getDeviceProfilesByDeviceType(deviceType: string): Promise<IResultList<IManagedObject>> {\n    const deviceTypeFilter = {\n      __or: [{ 'c8y_Filter.type': deviceType }, { __not: { __has: 'c8y_Filter.type' } }]\n    };\n    return this.getDeviceProfiles(deviceTypeFilter);\n  }\n\n  getDeviceProfiles(andQuery?: any): Promise<IResultList<IManagedObject>> {\n    let query: object = {\n      type: 'c8y_Profile'\n    };\n    const filter: object = {\n      pageSize: 100,\n      withTotalPages: true\n    };\n    query = this.queriesUtil.addAndFilter(query, andQuery || {});\n    return this.inventoryService.listQuery(query, filter);\n  }\n\n  async getProfileOperation(deviceId: string | number) {\n    const filter: object = {\n      deviceId,\n      fragmentType: 'c8y_DeviceProfile',\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n\n    const operation = (await this.operationService.list(filter)).data[0];\n    return operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createProfileOperation(device: IManagedObject, deviceProfile: Partial<DeviceProfile>) {\n    let operation;\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      profileId: deviceProfile.id,\n      profileName: deviceProfile.name,\n      c8y_DeviceProfile: deviceProfile.c8y_DeviceProfile,\n      description: `Assign device profile ${deviceProfile.name} to device ${device.name}`\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  getFirmwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceFirmware = device.c8y_Firmware;\n    const profileFirmware = get(selectedProfile, 'c8y_DeviceProfile.firmware');\n    const deviceItems = [];\n    const profileItems = [];\n\n    if (deviceFirmware) {\n      deviceItems.push(deviceFirmware);\n    }\n    if (profileFirmware) {\n      profileItems.push(profileFirmware);\n    }\n    return this.createProfileComparison(deviceItems, profileItems, 'name', 'version', this.getAlert('firmware'));\n  }\n\n  getSoftwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceSoftware = device.c8y_SoftwareList;\n    const profileSoftware = get(selectedProfile, 'c8y_DeviceProfile.software');\n    return this.createProfileComparison(deviceSoftware, profileSoftware, 'name', 'version', this.getAlert('software'));\n  }\n\n  getConfigurationItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceConfiguration = [];\n    Object.keys(device).forEach(key => {\n      if (key.slice(0, 18) === 'c8y_Configuration_') {\n        deviceConfiguration.push(device[key]);\n      }\n    });\n    const profileConfiguration = get(selectedProfile, 'c8y_DeviceProfile.configuration');\n    return this.createProfileComparison(deviceConfiguration, profileConfiguration, 'url', 'type', this.getAlert('configuration'));\n  }\n\n  private getAlert(itemType: string): (comparisionResult: ComparisonResult) => string  {\n    const notInstalled = (comparisionResult: ComparisonResult) => {\n      return !comparisionResult.device ? this.NOT_INSTALLED_WARNING : '';\n    };\n\n    switch (itemType) {\n      case 'firmware':\n      case 'software':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device && comparisionResult.profile && comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails ?\n            this.VERSION_MISSMATCH_WARNING : notInstalled(comparisionResult);\n        };\n      case 'configuration':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device && comparisionResult.profile &&\n            ((comparisionResult.device.itemName !== comparisionResult.profile.itemName) ||\n            (comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails)) ?\n            this.SAME_URL_WARNING : notInstalled(comparisionResult);\n        };\n      default:\n        return notInstalled;\n    }\n  }\n\n  private createProfileComparison(\n    deviceItems: any[] = [],\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware> = [],\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: ( comparisionResult: ComparisonResult ) => string\n  ): ComparisonResult[] {\n    const comparisonObj = this.createProfileComparisonFromDeviceItems(deviceItems, mergeByProperty, propertyNameWithDetails);\n    const extendedComparisonObj = this.extendProfileComparisonWithProfileItems(\n      comparisonObj,\n      profileItems,\n      mergeByProperty,\n      propertyNameWithDetails,\n      getAlert\n    );\n    return sortBy(toArray(extendedComparisonObj), 'name');\n  }\n\n  private createProfileComparisonFromDeviceItems(\n    deviceItems: any[],\n    mergeByProperty: string,\n    propertyNameWithDetails: string\n  ): any {\n    return deviceItems.reduce(\n      (comapritionItem, deviceItem) =>\n        Object.assign(comapritionItem, {\n          [deviceItem[mergeByProperty]]: {\n            device: {\n              itemName: deviceItem.name,\n              itemDetails: deviceItem[propertyNameWithDetails],\n              itemUrl: deviceItem.url\n            },\n            profile: undefined,\n          }\n        }),\n      {}\n    );\n  }\n\n  private extendProfileComparisonWithProfileItems(\n    comparisonObj: object,\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware>,\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: ( comparisionResult: ComparisonResult ) => string\n  ) {\n    profileItems.forEach(profileItem => {\n      const comparisionResult: ComparisonResult = {\n        profile: {\n          itemName: profileItem.name,\n          itemDetails: profileItem[propertyNameWithDetails],\n          itemUrl: profileItem.url\n        },\n        device: comparisonObj[profileItem[mergeByProperty]] ? comparisonObj[profileItem[mergeByProperty]].device : undefined,\n      };\n      comparisionResult.comparisonAlert = getAlert(comparisionResult);\n      comparisonObj[profileItem[mergeByProperty]] = comparisionResult;\n    });\n    return comparisonObj;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { gettext, ISelectModalObject, ISelectModalOption, ModalLabels } from '@c8y/ngx-components';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { assign } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-select-configuration-modal',\n  templateUrl: './select-configuration-modal.component.html'\n})\nexport class SelectConfigurationModalComponent {\n  title: string = gettext('Select configuration');\n  load: Subject<void> = new Subject();\n  configurations: Observable<any[]> = this.load.pipe(\n    switchMap(() => this.getItems()),\n    map(({ data }) => this.aggregate(data))\n  );\n  resultEmitter: EventEmitter<any[]> = new EventEmitter<any>();\n  selected: [];\n  deviceTypeQuery: any = {};\n  searchQuery: any = {};\n  labels: ModalLabels = { ok: gettext('Save') };\n  private queriesUtil: QueriesUtil;\n\n  constructor(private repositoryService: RepositoryService) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  search(searchTerm) {\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = this.queriesUtil.addOrFilter(\n        { name: `*${searchTerm}*` },\n        { configurationType: `*${searchTerm}*` }\n      );\n    }\n    this.load.next();\n  }\n\n  result(selectedItems) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  getItems() {\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n      params: { pageSize: 100 }\n    });\n  }\n\n  aggregate(mos: IManagedObject[]): ISelectModalObject[] {\n    const selectedItems: any[] = this.selected;\n    return mos.reduce((acc, curr) => {\n      curr.configurationType = curr.configurationType || curr.name;\n      const selected =\n        selectedItems && selectedItems.filter(val => val.url === curr.url).length > 0;\n      const selectModalOption: ISelectModalOption = {\n        body: [{ value: curr.name }],\n        obj: curr,\n        selected\n      };\n      let selectModalObject: ISelectModalObject = acc.find(\n        val => val.body[0].value === curr.configurationType\n      ) as ISelectModalObject;\n      if (selectModalObject) {\n        selectModalObject.options.push(selectModalOption);\n      } else {\n        selectModalObject = {\n          groupId: curr.id,\n          body: [{ value: curr.configurationType }],\n          options: [selectModalOption]\n        };\n        acc.push(selectModalObject);\n      }\n      return acc;\n    }, []);\n  }\n}\n","import { IManagedObject } from '@c8y/client';\n\nexport interface DeviceProfile extends Partial<IManagedObject> {\n  name?: string;\n  type: string;\n  c8y_Filter: {\n    type?: string;\n  };\n  c8y_DeviceProfile: {\n    firmware?: DeviceProfileFirmware;\n    software?: DeviceProfileSoftware[];\n    configuration?: DeviceProfileConfiguration[];\n  };\n}\n\nexport interface DeviceProfileFirmware {\n  name: string;\n  version: string;\n  url: string;\n  isPatch: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceProfileSoftware {\n  name: string;\n  version: string;\n  url: string;\n  action: string;\n}\n\nexport interface DeviceProfileConfiguration {\n  url: string;\n  name: string;\n  type: string;\n}\n\nexport interface ComparisonResult {\n  profile: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  device: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  comparisonAlert?: string;\n}\n\nexport enum DeviceProfileOperation {\n  APPLY_PROFILE = 'c8y_DeviceProfile'\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  DeviceProfile,\n  DeviceProfileConfiguration,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware\n} from './device-profile.model';\nimport { AlertService, BreadcrumbService, gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { assign, isEqual, concat, uniqWith } from 'lodash-es';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { has, isEmpty } from 'lodash-es';\nimport { take, distinctUntilChanged, switchMap, map, shareReplay } from 'rxjs/operators';\nimport { RepositoryType, RepositorySelectModalComponent } from '@c8y/ngx-components/repository';\nimport { BehaviorSubject, } from 'rxjs';\nimport { RepositoryService } from '@c8y/ngx-components/repository';\n\n@Component({\n  selector: 'c8y-device-profile',\n  templateUrl: './device-profile.component.html'\n})\nexport class DeviceProfileComponent implements OnInit {\n  DEVICE_TYPE_POPOVER = gettext(\n    'The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.'\n  );\n  deviceProfile: DeviceProfile;\n  profileName: string;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private location: Location,\n    private breadcrumbService: BreadcrumbService,\n    private bsModal: BsModalService,\n    private repositoryService: RepositoryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  async ngOnInit() {\n    const profileId = this.route.snapshot.paramMap.get('id');\n    this.deviceProfile = (await this.getDeviceProfile(profileId)) as DeviceProfile;\n    if (this.deviceProfile) {\n      this.profileName = this.deviceProfile.name;\n      if (!this.deviceProfile.c8y_DeviceProfile.software) {\n        this.deviceProfile.c8y_DeviceProfile.software = [];\n      }\n      if (!this.deviceProfile.c8y_DeviceProfile.configuration) {\n        this.deviceProfile.c8y_DeviceProfile.configuration = [];\n      }\n    }\n  }\n\n  addFirmware() {\n    const initialState = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.FIRMWARE),\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.FIRMWARE),\n      icon: 'c8y-firmware',\n      title: gettext('Select firmware'),\n      mode: ModalSelectionMode.SINGLE\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(firmwareList => {\n      const [firmware] = firmwareList;\n      if (!firmware) {\n        return;\n      }\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, {\n        firmware: {\n          name: firmware.name,\n          version: firmware.version,\n          url: firmware.url,\n          isPatch: firmware.isPatch,\n          patchDependency: firmware.patchDependency\n        } as DeviceProfileFirmware\n      });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>, repoType: RepositoryType) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repositoryService.listRepositoryEntries(repoType, {\n          partialName: searchTerm,\n          params: { pageSize: 100 },\n          skipLegacy: true\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addConfiguration() {\n    const modal = this.bsModal.show(SelectConfigurationModalComponent, {\n      ignoreBackdropClick: true\n    });\n    modal.content.deviceTypeQuery = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION);\n    modal.content.selected = this.deviceProfile.c8y_DeviceProfile.configuration;\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedConfigurations => {\n      const selectedMapped: DeviceProfileConfiguration = selectedConfigurations.map(\n        selectedItem => {\n          return assign(\n            {\n              url: selectedItem.url,\n              name: selectedItem.name\n            },\n            selectedItem.configurationType ? { type: selectedItem.configurationType } : {}\n          );\n        }\n      );\n      const merged: DeviceProfileConfiguration = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.configuration || []\n      );\n      const configuration: DeviceProfileConfiguration = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.type && othVal.type && arrVal.type === othVal.type;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { configuration });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  addSoftware() {\n    const initialState = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.SOFTWARE),\n      repositoryType: RepositoryType.SOFTWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.SOFTWARE),\n      selected: this.deviceProfile.c8y_DeviceProfile.software,\n      icon: 'c8y-tools',\n      title: gettext('Select software'),\n      mode: ModalSelectionMode.MULTI\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedSoftware => {\n      const selectedMapped: DeviceProfileSoftware = selectedSoftware.map(selectedItem => {\n        return {\n          name: selectedItem.name,\n          version: selectedItem.version,\n          url: selectedItem.url,\n          action: 'install'\n        };\n      });\n      const merged: DeviceProfileSoftware = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.software || []\n      );\n      const software: DeviceProfileSoftware = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.name && othVal.name && arrVal.name === othVal.name;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { software });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  get isDeviceProfileEmpty() {\n    const isSoftware =\n      this.deviceProfile.c8y_DeviceProfile.software &&\n      this.deviceProfile.c8y_DeviceProfile.software.length > 0;\n    const isFirmware = Boolean(this.deviceProfile.c8y_DeviceProfile.firmware);\n    const isConfiguration =\n      this.deviceProfile.c8y_DeviceProfile.configuration &&\n      this.deviceProfile.c8y_DeviceProfile.configuration.length > 0;\n    return isSoftware || isFirmware || isConfiguration;\n  }\n\n  removeItem(removedItem, category) {\n    const deviceProfilePartial: Partial<IManagedObject> = {\n      c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile\n    };\n    const filtered = deviceProfilePartial.c8y_DeviceProfile[category].filter(\n      item => !isEqual(removedItem, item)\n    );\n    deviceProfilePartial.c8y_DeviceProfile[category] = filtered;\n    this.updateDeviceProfile(deviceProfilePartial);\n  }\n\n  removeFirmware() {\n    delete this.deviceProfile.c8y_DeviceProfile.firmware;\n    this.updateDeviceProfile({ c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile });\n  }\n\n  async updateDeviceProfile(partialDeviceProfile) {\n    if (partialDeviceProfile.c8y_Filter && partialDeviceProfile.c8y_Filter.type === '') {\n      delete partialDeviceProfile.c8y_Filter.type;\n    }\n    Object.assign(partialDeviceProfile, { id: this.deviceProfile.id });\n    try {\n      const { data } = await this.inventoryService.update(partialDeviceProfile);\n      this.deviceProfile = data as DeviceProfile;\n      this.profileName = this.deviceProfile.name;\n      this.alertService.success(gettext('Device profile changed.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private async getDeviceProfile(profileId) {\n    try {\n      const { data } = await this.inventoryService.detail(profileId);\n      return data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private getDeviceTypeQuery(repositoryType) {\n    if (\n      has(this.deviceProfile, 'c8y_Filter.type') &&\n      !isEmpty(this.deviceProfile.c8y_Filter.type)\n    ) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        return this.queriesUtil.addOrFilter(\n          { deviceType: this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `deviceType` } }\n        );\n      } else {\n        return this.queriesUtil.addOrFilter(\n          { 'c8y_Filter.type': this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `c8y_Filter.type` } }\n        );\n      }\n    }\n    return {};\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DeviceProfile } from './device-profile.model';\nimport { DeviceProfileService } from './device-profile.service';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-device-profile',\n  templateUrl: './add-device-profile-component.html'\n})\nexport class AddDeviceProfileComponent {\n  DEVICE_TYPE_POPOVER = gettext('The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.');\n  deviceProfile: Partial<DeviceProfile> = {\n    name: '',\n    type: 'c8y_Profile',\n    c8y_Filter: {},\n    c8y_DeviceProfile : {\n    }\n  };\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(private modal: BsModalRef, private deviceProfileService: DeviceProfileService) {}\n\n  async create() {\n    const mo = (await this.deviceProfileService.createDeviceProfile(this.deviceProfile)).data;\n    this._save(mo.id);\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { cloneDeep } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileService } from './device-profile.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-profile-list',\n  templateUrl: './device-profile-list.component.html'\n})\nexport class DeviceProfileListComponent implements OnInit {\n  reloading: boolean = false;\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  deviceProfiles$: Observable<IResultList<IManagedObject>> = this.reload.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.deviceProfileService.getDeviceProfiles()),\n    tap(() => (this.reloading = false))\n  );\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private bsModalService: BsModalService,\n    private router: Router,\n    private deviceProfileService: DeviceProfileService\n  ) {}\n\n  ngOnInit() {\n    this.loadDeviceProfiles();\n  }\n\n  loadDeviceProfiles() {\n    this.reload.next();\n  }\n\n  async createDeviceProfile() {\n    const modal = this.bsModalService.show(AddDeviceProfileComponent, {\n      class: 'modal-sm'\n    }).content as AddDeviceProfileComponent;\n    try {\n      const profileId = await modal.result;\n      modal.close();\n      this.router.navigateByUrl(`/device-profiles/${profileId}`);\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async duplicateDeviceProfile(deviceProfile) {\n    const copy = cloneDeep(deviceProfile);\n    copy.id = null;\n    copy.name = 'Duplicate of ' + deviceProfile.name;\n    const mo = (await this.deviceProfileService.createDeviceProfile(copy)).data;\n    this.router.navigateByUrl(`/device-profiles/${mo.id}`);\n  }\n\n  async deleteDeviceProfile(deviceProfile) {\n    const deviceProfileName = deviceProfile.name;\n    const title = gettext('Delete device profile');\n    const confirmationText = this.translateService.instant(\n      gettext('You are about to delete a device profile \"{{ deviceProfileName }}\".'),\n      { deviceProfileName }\n    );\n    const finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));\n    try {\n      await this.modalService.confirm(\n        title,\n        `${confirmationText} ${finalQuestion}`,\n        Status.DANGER,\n        {\n          ok: gettext('Delete')\n        }\n      );\n      await this.delete(deviceProfile.id);\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  private async delete(profileId) {\n    try {\n      await this.inventoryService.delete(profileId);\n      this.alertService.success(gettext('Device profile deleted.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { DeviceProfileOperation } from './device-profile.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceProfileGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return this.hasSupportedOperation(contextData, DeviceProfileOperation.APPLY_PROFILE);\n  }\n\n  private hasSupportedOperation(mo: IManagedObject, operation: DeviceProfileOperation) {\n    const supported = mo.c8y_SupportedOperations || [];\n    if (!supported) {\n      return false;\n    }\n    return !!supported.find(supportedOperation => supportedOperation === operation);\n  }\n}\n","import { Component, OnDestroy, OnInit, Pipe } from '@angular/core';\nimport { IManagedObject, IOperation, IResultList, Realtime } from '@c8y/client';\nimport { ActivatedRoute } from '@angular/router';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { DeviceProfileService } from '../device-profile.service';\nimport { DeviceProfile, ComparisonResult } from '../device-profile.model';\nimport { AlertService, gettext, ManagedObjectRealtimeService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-tab-profile',\n  templateUrl: './device-tab-profile.component.html',\n  providers: [ManagedObjectRealtimeService]\n})\nexport class DeviceTabProfileComponent implements OnInit, OnDestroy {\n  device: IManagedObject;\n  deviceProfiles: IResultList<IManagedObject>;\n  selectedProfile: Partial<DeviceProfile>;\n  operation: IOperation;\n  firmwareItems: ComparisonResult[] = [];\n  softwareItems: ComparisonResult[] = [];\n  configurationItems: ComparisonResult[] = [];\n\n  filterPipe: Pipe;\n  pattern: string = '';\n  reloading: boolean = false;\n  private operationsSubscription: Subscription;\n  private moOnDeleteSubscription: Subscription;\n  private moOnUpdateSubscription: Subscription;\n\n  constructor(\n    public deviceRealtime: ManagedObjectRealtimeService,\n    private deviceProfileService: DeviceProfileService,\n    private route: ActivatedRoute,\n    private realtime: Realtime,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.getDeviceProfilesAndUpdateProfileItems();\n    this.subscribeToManagedObjects();\n  }\n\n  async getDeviceProfilesAndUpdateProfileItems() {\n    this.reloading = true;\n    this.deviceProfiles = await this.deviceProfileService.getDeviceProfilesByDeviceType(\n      this.device.type\n    );\n    if (this.device.c8y_Profile) {\n      const profileId = this.device.c8y_Profile.profileId;\n      this.selectedProfile = this.deviceProfiles.data.find(mo => mo.id === profileId);\n    }\n    this.updateProfileItems(this.device, this.selectedProfile);\n    this.operation = await this.deviceProfileService.getProfileOperation(this.device.id);\n    this.subscribeToOperations();\n    this.reloading = false;\n  }\n\n  selectProfile(mo: DeviceProfile) {\n    this.selectedProfile = mo;\n    this.updateProfileItems(this.device, this.selectedProfile);\n  }\n\n  async createOperation() {\n    this.operation = await this.deviceProfileService.createProfileOperation(\n      this.device,\n      this.selectedProfile\n    );\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: any[]) => {\n        return data.filter(\n          (mo: any) => mo.name && mo.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n    this.moOnUpdateSubscription.unsubscribe();\n    this.moOnDeleteSubscription.unsubscribe();\n  }\n\n  updateProfileItems(device, profile) {\n    this.firmwareItems = this.deviceProfileService.getFirmwareItems(device, profile);\n    this.softwareItems = this.deviceProfileService.getSoftwareItems(device, profile);\n    this.configurationItems = this.deviceProfileService.getConfigurationItems(device, profile);\n  }\n\n  private subscribeToManagedObjects() {\n    this.moOnUpdateSubscription = this.deviceRealtime\n      .onUpdate$(this.device.id)\n      .subscribe((managedObject: IManagedObject) => {\n        this.updateProfileItems(managedObject, this.selectedProfile);\n      });\n    this.moOnDeleteSubscription = this.deviceRealtime.onDelete$(this.device.id).subscribe(() => {\n      this.alertService.danger(gettext('This device has just been deleted. You will be redirected to \"All devices\" page now.'));\n      window.location.href = '#/device';\n    });\n  }\n\n  private subscribeToOperations() {\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .pipe(filter(({ data }) => data.c8y_DeviceProfile))\n      .subscribe(({ data }) => {\n        this.operation = data;\n      });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-tab-profile-detail',\n  templateUrl: './device-tab-profile-detail.component.html'\n})\nexport class DeviceTabProfileDetailComponent {\n  @Input() sectionTitle: string;\n  @Input() sectionIcon: string;\n  @Input() emptyStateText: string = '';\n  @Input() emptyStateDetails: string = '';\n  @Input() isProfileSelected: boolean;\n  @Input() isEmpty: boolean;\n  @Input() items: ComparisonResult[];\n  @Input() showTextLabel: boolean = true;\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-profile-item-list',\n  templateUrl: './device-profile-item-list.component.html'\n})\nexport class DeviceProfileItemListComponent {\n  @Input() icon: string;\n  @Input() comparisonResults: ComparisonResult[];\n  @Input() showProfileItems: boolean;\n  @Input() showTextLabel: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport {\n  CommonModule,\n  CoreModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ONCE_ROUTE,\n  gettext,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeviceProfileComponent } from './device-profile.component';\nimport { DeviceProfileListComponent } from './device-profile-list.component';\nimport { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';\nimport { DeviceProfileService } from './device-profile.service';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileGuard } from './device-profile.guard';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';\nimport { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';\nimport { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\n\nconst deviceProfilesRoutes: Route[] = [\n  {\n    path: 'device-profiles/:id',\n    component: DeviceProfileComponent\n  },\n  {\n    path: 'device-profiles',\n    component: DeviceProfileListComponent\n  }\n];\n\nconst deviceTabProfileRoutes: any[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-profile',\n    component: DeviceTabProfileComponent,\n    label: gettext('Device profile'),\n    icon: 'c8y-device-profile',\n    canActivate: [DeviceProfileGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceProfileComponent,\n    DeviceProfileListComponent,\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent,\n    DeviceTabProfileDetailComponent,\n    DeviceProfileItemListComponent\n  ],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RepositoryModule,\n    RouterModule.forChild(deviceProfilesRoutes),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule,\n    SingleOperationDetailsModule\n  ],\n  entryComponents: [\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent\n  ],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: DeviceProfileNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: deviceTabProfileRoutes,\n      multi: true\n    },\n    DeviceProfileService,\n    DeviceProfileGuard\n  ]\n})\nexport class DeviceProfileModule {}\n"]}