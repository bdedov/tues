{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-mapping-customaction.component.ts","ng://@c8y/ngx-components/protocol-opcua/address-space.service.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space-detail.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcuaService.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-agent.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-browse-path-validation.directive.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-object-mapping.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-mapping.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-detail.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-data-reporting.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-object-mapping-status-icon.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-microservice.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server-config.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server-list.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-servers.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-description.component.ts","ng://@c8y/ngx-components/protocol-opcua/dynamic-data-source.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space-tree.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-auto-apply-settings.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-protocol.module.ts","ng://@c8y/ngx-components/protocol-opcua/ng1/downgraded.components.ts","ng://@c8y/ngx-components/protocol-opcua/ng1/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","OpcuaDeviceProtocolMappingCustomAction","hasCustomAction","placeholders","getHeaderPair","customAction","headers","addHeader","updateCustomAction","removeCustomAction","index","splice","trackByIndex","ngOnInit","get","tslib_1.__decorate","Input","Component","selector","template","viewProviders","provide","ControlContainer","useExisting","NgModelGroup","AddressSpaceService","fetchClient","client","microserviceUrl","header","Content-Type","nodeNavigationData$","BehaviorSubject","node","undefined","selectedAncestorIds","resetTreeToRootNode","triggerNodeToOpen","nodeNavigationData","getNodeNavData$","asObservable","getNode","serverId","nodeId","getNodeById","getRootNode","options","method","fetch","param","encodeURIComponent","getChildrenOf","childrenAvailable","nodeReferences","some","ref","inverse","hierarchical","getSearchedNodes","searchKey","url","params","searchString","_a","json","getIcon","nodeClassName","Variable","Method","View","ObjectType","VariableType","ReferenceType","DataType","FetchClient","Injectable","OpcuaAddressSpaceDetailComponent","addressSpaceService","selected","showDetails","toggleAttrDetail","EventEmitter","_node","setNodeData","nodeData","attributes","references","nodeDataRef","nodeDataAttr","assign","omit","toggleDetail","emit","navigateTo","ancestors","nodeNavData","Output","OpcuaService","inventoryService","router","alertService","deviceTypeProtocolUrl","binaryService","binary","getServers","id","createServer","data","doesGatewayIdExist","cleanUpPayload","JSON","stringify","updateServer","server","doesIdExist","res","status","addServerFailure","removeServer","gatewayId","getKeystore","binaryId","detail","uploadKeystore","file","size","updateKeystore","removeKeystore","delete","getMoId","currentUrl","routerState","snapshot","RegExp","test","match","getId","getDeviceProtocol","updateDeviceProtocol","createDeviceProtocol","quickInfo","InventoryService","Router","AlertService","OpcuaAgentGuard","type","canActivate","contextData","OpcuaDeviceProtocolBrowsePathValidation","el","validate","control","isValidJson","invalidBrowsePathNotation","isBrowsePathUnique","browsePathNotUnique","browsePath","parse","isEmpty","toArray","str","_this","mappings","getMappings","item","isEqual","model","ElementRef","OpcuaDeviceProtocolBrowsePathValidation_1","Directive","providers","NG_VALIDATORS","forwardRef","multi","OpcuaDeviceProtocolObjectMapping","elementRef","injector","_super","tslib_1.__extends","Injector","UpgradeComponent","OpcuaDeviceProtocolMapping","onAction","isPathFocused","isBrowsePathUniq","dataReporting","isTreeOpen","isNew","resetModel","moId","getParentAttr","isDetailOpen","initialFormSetup","dataReportingName","ngOnChanges","changes","_model","previousValue","SimpleChange","mapping","name","bodyTemplate","endpoint","subscriptionType","cloneDeep","stringfyBrowsePath","nodeDisplayName","referencedRootNodeId","referencedNode","children","expanded","absolutePaths","mapHeadersObjectToList","unset","showAddressSpaceTree","referencedServerId","ngAfterViewInit","keys","map","path","updateBrowsePath","relativePath","displayName","browsePathModel","markAsDirty","updateDisplayname","updateBrowsePathInput","save","measurementCreation","set","modifiedCustomAction","subFormRef","reducedHeaders","reduce","action","cancel","onDelete","canSave","variableForm","valid","objectMappingForm","$componentScope","mappingForm","$valid","dirty","$dirty","isActive","setTreeFromRefNode","ViewChild","static","OpcuaDeviceProtocolDetailComponent","changeDetectorRef","opcuaService","initialModel","fieldbusType","description","unit","fieldbusVersion","overriddenSubscriptions","applyConstraints","browsePathMatchesRegex","matchesNodeIds","serverObjectHasFragment","matchesServerIds","enabled","isLoaded","ngAfterContentChecked","detectChanges","getMapping","getEmptyMappingObject","getOverriddenSubscriptionsByPath","find","getStructuredResource","resource","_b","updateViableMapping","addVariable","updateVariable","mappingObject","findIndex","removeVariable","actionHandler","actionObject","extractOverridSubscriptionType","_mapping","variableMapping","forEach","element","prepareRequestJson","requestJson","pick","navigate","success","gettext","danger","deviceTypeForm","instanceList","filter","form","ChangeDetectorRef","ViewChildren","OpcuaDeviceProtocolDataReportingComponent","onSubscriptionChange","subscription","subscriptionParameters","samplingRate","deadbandType","deadbandValue","ranges","queueSize","dataChangeTrigger","discardOldest","cyclicReadParameters","rate","types","filters","triggers","discard","requireCyclic","requireSubscription","subscriptionTypeName","parseReadingInterval","$event","toInteger","updateModel","setTimeout","OpcuaDeviceProtocolObjectMappingStatus","OpcuaAddressSpaceComponent","selectednode","loading","searchInProgress","focusStatus","filterLabel","ngOnDestroy","searchNodes","clearNodeListAndCheckSearchString","isSearch","currentNode","nodeList","resultLabel","clearSearch","selectNode","toggleCurrentNode","isNodeSet","backHandler","OpcuaMicroserviceGuard","app","microserviceName","checkApp","isApplicationAvailable","AppStateService","OpcuaServerConfigComponent","fileName","targetConnectionState","minIntervalNumber","connectionStatusLabel","canceled","removed","saved","changePassword","initialPasswordRequired","NONE","SIGN","SIGN_ENC","securityPolicies","sign","sign_enc","ANONYM","USER_PASSWORD","KEY_BASED","initialKeystore","lastModified","slice","keystore","authSwitch","_server","config","keystoreFilename","updateConnectionStatusLabel","setNewPassword","securityModes","authenticationModes","setCurrentAuthenticationMode","setCurrentSecurityMode","remove","keystoreBinaryId","response","userPassword","getModelConfig","passwordEncrypted","uploadFile","droppedFiles","console","warn","setPolicy","securityMode","setServerConnection","updateAuthentication","resetUserAuthentication","resetKeyBasedAuthentication","restoreUserData","restoreKeyBasedData","c8y_Connection","username","toggleChangePassword","userName","userIdentityMode","keystorePass","certificatePass","getServerConfig","cfg","currentSecMode","foundInSignEncrypt","authenticationMode","fragment","has","DropAreaComponent","OpcuaServerListComponent","serverList","present","presentConfig","active","OpcuaServerGuard","OpcuaServersComponent","translateService","context","serverObjectList","initialServerObject","serverUrl","rescanCron","timeout","autoReconnect","statusCheckInterval","padlock","padlockMsg","NEW_SERVER_ID","paramIndex","decorator","_c","setQuickInfo","localServerObjectExist","addServer","onPresent","onSaved","reloadTabs","refreshTabs","onCanceled","removeServerObjectListById","onRemoved","mo","log","ex_1","svr","updateServerObjectListById","updatedServer","ex_2","idx","instant","TranslateService","ContextRouteComponent","Optional","tslib_1.__param","OpcuaDeviceProtocolDescription","autoScan","setAutoScanOption","NgForm","DynamicDataSource","treeControl","dataChange","isExpanded","dataNodes","connect","collectionViewer","expansionModel","onChange","subscribe","change","added","handleTreeControl","merge","viewChange","pipe","toggleNode","reverse","addressSpaceNode","expand","currentlyLoadingChildren","parentNode","refreshNestedTree","catch","treeData","triggerResize","window","dispatchEvent","Event","OpcuaAddressSpaceTreeComponent","focusEmitter","selectedNode","dataSource","getChildren","hasChild","_nodeData","_moId","initializeDataSet","currentValue","nodeNavDataSubscription","openNode","subscriptionRef","focused","isFocusedNode","closed","unsubscribe","setupTree","clonedAncestors","clone","shift","setChildNodes","toggleFocusedNode","nodes","ids","toggledNode","rootNode","nestedTreeControl","NestedTreeControl","getRelativePath","unshift","browseName","OpcuaAutoApplySettingsComponent","opcuaServers","constraints","placeholderSelectServerIds","list","pageSize","withTotalPages","itemId","serverIdsSelected","items","onChangeNodeId","event","checked","showRootNodes","add","onChangeShowServerIds","showServerIds","onChangeShowBrowsePath","showBrowsePath","onChangeShowServerFragment","showServerFragment","trackByFn","routes","ViewContext","Device","component","icon","deviceProtocolRoutes","OpcuaProtocolModule","NgModule","declarations","imports","CoreModule","FormsModule","ReactiveFormsModule","DropAreaModule","ButtonsModule","CdkTreeModule","RouterModule","forRoot","useHash","TooltipModule","PopoverModule","DeviceStatusModule","BrowserAnimationsModule","CollapseModule","BsDropdownModule","entryComponents","HOOK_ONCE_ROUTE","useValue","ɵ0","opcuaAddressSpaceTreeComponent","downgradeComponent","inputs","outputs","NAME","ng1Modules","angular\n    .module","directive","registerNgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgModelGroup, ControlContainer } from '@angular/forms';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping-customaction',\n  templateUrl: './opcua-device-protocol-mapping-customaction.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMappingCustomAction implements OnInit {\n  _model: any;\n  @Input() customAction;\n\n  hasCustomAction = false;\n  // no translation needed\n  readonly placeholders: string = '${value}, ${serverId}, ${nodeId}, ${deviceId}';\n\n  getHeaderPair() {\n    return { key: '', value: '' };\n  }\n  get headers() {\n    return this.customAction.headers;\n  }\n\n  addHeader() {\n    const { headers } = this.customAction;\n    headers.push(this.getHeaderPair());\n  }\n\n  updateCustomAction() {\n    this.hasCustomAction = !this.hasCustomAction;\n  }\n\n  removeCustomAction(index) {\n    const { headers } = this.customAction;\n\n    headers.splice(index, 1);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  ngOnInit() {\n    if (get(this.customAction, 'endpoint')) {\n      this.hasCustomAction = true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions } from '@c8y/client';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressSpaceService {\n  private nodeNavigationData$: BehaviorSubject<NodeNavigationData>;\n  private client: FetchClient;\n  private microserviceUrl: string;\n  private header: any;\n\n  constructor(fetchClient: FetchClient) {\n    this.client = fetchClient;\n    this.microserviceUrl = '/service/opcua-mgmt-service/address-space';\n    this.header = { 'Content-Type': 'application/json' };\n    this.nodeNavigationData$ = new BehaviorSubject<NodeNavigationData>({\n      node: undefined,\n      selectedAncestorIds: []\n    });\n  }\n\n  resetTreeToRootNode() {\n    this.triggerNodeToOpen({ node: undefined, selectedAncestorIds: [] });\n  }\n\n  triggerNodeToOpen(nodeNavigationData: NodeNavigationData) {\n    this.nodeNavigationData$.next(nodeNavigationData);\n  }\n\n  getNodeNavData$(): Observable<NodeNavigationData> {\n    return this.nodeNavigationData$.asObservable();\n  }\n\n  getNode(serverId: string, nodeId?: string) {\n    if (serverId && serverId.length > 0) {\n      if (nodeId && nodeId.length > 0) {\n        return this.getNodeById(serverId, nodeId);\n      }\n      return this.getRootNode(serverId);\n    }\n  }\n\n  getRootNode(serverId: string) {\n    if (serverId && serverId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}`, options);\n    }\n  }\n\n  getNodeById(serverId: string, nodeId: string) {\n    if (serverId && nodeId && serverId.length > 0 && nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(nodeId);\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}?nodeId=${param}`, options);\n    }\n  }\n\n  getChildrenOf(node: AddressSpaceNode, serverId: string) {\n    if (serverId && node.nodeId && serverId.length > 0 && node.nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(node.nodeId);\n      return this.client.fetch(\n        `${this.microserviceUrl}/${serverId}/children?nodeId=${param}`,\n        options\n      );\n    }\n  }\n\n  childrenAvailable(nodeReferences: AdressSpaceNodeReference[]): boolean {\n    if (!nodeReferences || nodeReferences.length === 0) {\n      return false;\n    }\n    return nodeReferences.some(ref => !ref.inverse && ref.hierarchical);\n  }\n\n  async getSearchedNodes(searchKey: string, serverId: string) {\n    const url = `service/opcua-mgmt-service/search/${serverId}/`;\n    const options: IFetchOptions = {\n      headers: this.header,\n      params: {\n        searchString: '*' + searchKey + '*'\n      }\n    };\n    const res = await this.client.fetch(url, options);\n    return res.json();\n  }\n\n  getIcon(nodeClassName: string) {\n    const iconList = {\n      Object: 'cube',\n      Variable: 'th-list',\n      Method: 'random',\n      View: 'window-maximize',\n      ObjectType: 'c8y-group',\n      VariableType: 'c8y-group',\n      ReferenceType: 'c8y-group',\n      DataType: 'c8y-group'\n    };\n    return iconList[nodeClassName] || 'circle';\n  }\n}\n\nexport interface AddressSpaceNode {\n  nodeId: string;\n  currentlyLoadingChildren?: boolean;\n  nodeClass?: number;\n  nodeClassName?: string;\n  browseName?: string;\n  displayName?: string;\n  description?: any;\n  references?: AdressSpaceNodeReference[];\n  ancestorNodeIds?: [string[]];\n  children: AddressSpaceNode[];\n  expanded: boolean;\n  absolutePaths: [string[]];\n  relativePath?: string[];\n  parentNode?: AddressSpaceNode;\n}\n\nexport interface AdressSpaceNodeReference {\n  referenceId: string;\n  targetId: string;\n  inverse: boolean;\n  hierarchical: boolean;\n}\n\nexport interface SearchedNode {\n  absolutePath: string[];\n  ancestorNodeIds: [string[]];\n  displayName: string;\n  nodeClassName: string;\n  nodeId: string;\n}\n\nexport interface NodeNavigationData {\n  node: AddressSpaceNode;\n  selectedAncestorIds: string[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { omit } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-address-space-detail',\n  templateUrl: './opcua-address-space-detail.component.html'\n})\nexport class OpcuaAddressSpaceDetailComponent {\n  @Input() set node(n) {\n    this._node = n;\n    if (n) {\n      this.setNodeData(n);\n    } else {\n      // remove details from current view\n      this.showDetails = false;\n    }\n  }\n  nodeDataAttr: Map<string, string>;\n  nodeDataRef: object[];\n  selected: boolean = false;\n  showDetails: boolean = false;\n\n  @Output() toggleAttrDetail: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n\n  private _node: AddressSpaceNode;\n\n  constructor(private addressSpaceService: AddressSpaceService) {}\n  setNodeData(nodeData) {\n    this.showDetails = true;\n    const { attributes, references } = nodeData;\n    this.nodeDataRef = references;\n    const omitList = [\n      'attributes',\n      'references',\n      'children',\n      'currentlyLoadingChildren',\n      'expanded',\n      'browsePath',\n      'relativePath',\n      'parentNode'\n    ];\n    this.nodeDataAttr = Object.assign({}, attributes, omit(nodeData, omitList));\n  }\n\n  toggleDetail(node) {\n    this.showDetails = !this.showDetails;\n    this.toggleAttrDetail.emit(node);\n  }\n\n  navigateTo(ancestors: string[]) {\n    const nodeNavData: NodeNavigationData = {\n      node: this._node,\n      selectedAncestorIds: ancestors\n    };\n\n    this.toggleDetail(this._node);\n    this.addressSpaceService.triggerNodeToOpen(nodeNavData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions, InventoryService, InventoryBinaryService } from '@c8y/client';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { Router } from '@angular/router';\nimport { AlertService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaService {\n  private binaryService: InventoryBinaryService;\n  private microserviceUrl: string;\n  private deviceTypeProtocolUrl: string;\n  private header: any;\n\n  constructor(\n    private client: FetchClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private alertService: AlertService\n    ) {\n    this.microserviceUrl = '/service/opcua-mgmt-service/server';\n    this.deviceTypeProtocolUrl = '/service/opcua-mgmt-service/deviceTypes';\n    this.header = { 'Content-Type': 'application/json' };\n    this.binaryService = inventoryService.binary;\n  }\n\n  getServers(id: string) {\n    if (id && id.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${id}`, options);\n    }\n  }\n\n  createServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data)) {\n      this.cleanUpPayload(data);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(data)\n      };\n      return this.client.fetch(`${this.microserviceUrl}`, options);\n    }\n  }\n\n  async updateServer(server: OpcuaServer) {\n    if (this.doesGatewayIdExist(server) && this.doesIdExist(server)) {\n      this.cleanUpPayload(server);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(server)\n      };\n      const res = await this.client.fetch(`${this.microserviceUrl}`, options);\n      let data;\n      try {\n        data = await res.json();\n      } catch (e) {\n        // nothing\n      }\n\n      if (res.status !== 200) {\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        return data;\n      }\n    }\n  }\n\n  removeServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data) && this.doesIdExist(data)) {\n      const options: IFetchOptions = {\n        method: 'DELETE'\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${data.gatewayId}/${data.id}`, options);\n    }\n  }\n\n  getKeystore(binaryId: string) {\n    if (binaryId && binaryId.length > 0) {\n      return this.inventoryService.detail(binaryId);\n    }\n    return null;\n  }\n\n  uploadKeystore(file: File) {\n    if (file && file.size > 0) {\n      return this.binaryService.create(file);\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  async updateKeystore(id: string, file: File) {\n    if (id && id.length > 0 && file && file.size > 0) {\n      const { res } = await this.removeKeystore(id);\n      if (res && res.status === 204) {\n        return this.uploadKeystore(file);\n      }\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  removeKeystore(id: string) {\n    if (id && id.length > 0) {\n      return this.binaryService.delete(id);\n    }\n  }\n\n  getMoId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDevice: boolean = new RegExp(/device\\/\\d+/).test(currentUrl);\n    if (isDevice) {\n      return currentUrl.match(/\\d+/)[0];\n    }\n    return '';\n  }\n\n  getId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDeviceprotocol: boolean = new RegExp(/deviceprotocols/).test(currentUrl);\n    if (isDeviceprotocol && RegExp(/\\d+$/).test(currentUrl)) {\n      return currentUrl.match(/\\d+$/)[0];\n    }\n  }\n\n  async getDeviceProtocol(id: string) {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header,\n      };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${id}`, options);\n\n  }\n\n  async updateDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${data.id}`, options);\n\n  }\n\n  async createDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}`, options);\n  }\n\n  private doesGatewayIdExist(data: OpcuaServer) {\n    return data && data.gatewayId && data.gatewayId.length > 0;\n  }\n\n  private doesIdExist(data: OpcuaServer) {\n    return data && data.id && data.id.length > 0 && data.id !== 'new';\n  }\n\n  private cleanUpPayload(data: OpcuaServer) {\n    if (data) {\n      if (data.id && data.id === 'new') { delete data.id; }\n      if (data.quickInfo) { delete data.quickInfo; }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaAgentGuard implements CanActivate {\n  type = 'c8y_OPCUA_Device_Agent';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Directive, forwardRef, ElementRef, Input, HostListener } from '@angular/core';\nimport { NgForm, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport { some, isEqual, isEmpty } from 'lodash-es';\n\n@Directive({\n  selector: '[c8yBrowsePathValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => OpcuaDeviceProtocolBrowsePathValidation),\n      multi: true\n    }\n  ]\n})\nexport class OpcuaDeviceProtocolBrowsePathValidation implements Validator {\n  @Input() getMappings: () => [];\n  @Input() model: any;\n\n  constructor(private el: ElementRef) {}\n\n  validate(control: AbstractControl): { [key: string]: any } {\n    if (control.value) {\n      if (!this.isValidJson(control.value)) {\n        return { invalidBrowsePathNotation: true };\n      } else {\n        if (this.isBrowsePathUnique(control.value)) {\n          return { browsePathNotUnique: true };\n        }\n      }\n    }\n    return null;\n  }\n\n  isValidJson(value) {\n    try {\n      const browsePath = JSON.parse(value);\n      return !isEmpty(browsePath);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  toArray(str) {\n    return JSON.parse(str);\n  }\n\n  isBrowsePathUnique(value): boolean {\n    const mappings = this.getMappings();\n    const found = some(mappings, item => {\n      if (isEqual(item.browsePath, this.toArray(value)) && item.id !== this.model.id) {\n        return item;\n      }\n    });\n    return found ? true : false;\n  }\n}\n","import { Directive, ElementRef, Injector, ViewChild, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping'\n})\nexport class OpcuaDeviceProtocolObjectMapping extends UpgradeComponent {\n  @Input() mapping: any;\n  @Input() customActions: any;\n  @Input() autoObserveParams: any;\n  @Input() hideAutoObserve: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMapping', elementRef, injector);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { NgForm, ControlContainer, FormControl, NgModelGroup } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isEmpty, assign, unset, get, set, reject, find, cloneDeep, isEqual } from 'lodash-es';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { AddressSpaceService } from './address-space.service';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping',\n  templateUrl: './opcua-device-protocol-mapping.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMapping implements OnInit, OnChanges {\n  @ViewChild(OpcuaDeviceProtocolObjectMapping, { static: false }) objectMappingForm: any;\n  @ViewChild('variableForm', { static: false }) subFormRef: any;\n  @ViewChild('browsePathModel', { static: false }) browsePathModel: any;\n\n  @Input('resource') _model;\n  @Input() index;\n  @Input() getParentAttr;\n  @Input() referencedServerId;\n  @Input() referencedRootNodeId;\n  @Output() onAction: EventEmitter<any> = new EventEmitter<any>();\n\n  mapping;\n\n  isDetailOpen;\n  customAction;\n  referencedNode;\n  isPathFocused = false;\n  groupName: string;\n  browsePath: string;\n  nodeDisplayName: string;\n  isBrowsePathUniq = true;\n  dataReporting = 'default';\n  isTreeOpen = false;\n  isNew = false;\n  resetModel = false;\n  dataReportingName;\n  private moId: string = '';\n  constructor(\n    private alertService: AlertService,\n    private addressSpaceService: AddressSpaceService\n  ) {}\n\n  toggleDetail() {\n    this.isDetailOpen = !this.isDetailOpen;\n    if (this.resetModel) {\n      this.initialFormSetup();\n    }\n  }\n\n  getMappings = () => this.getParentAttr('mappings');\n\n  ngOnInit() {\n    this.dataReportingName = 'ReportingMode' + this.index;\n    this.initialFormSetup();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes._model.previousValue &&\n      !isEqual(this._model, changes._model.previousValue.SimpleChange)\n    ) {\n      if (this.mapping && this.mapping.name === this._model.name) {\n        this.mapping.id = this._model.id;\n      }\n    }\n  }\n\n  initialFormSetup() {\n    const mapping = {\n      id: '',\n      browsePath: [],\n      name: '',\n      subscriptionType: {\n        type: 'None'\n      }\n    };\n\n    const customAction = {\n      headers: [{ key: 'Authorization', value: '' }, { key: 'Content-Type', value: '' }],\n      bodyTemplate: '',\n      type: 'HttpPost',\n      endpoint: ''\n    };\n\n    this.mapping = assign({}, mapping, cloneDeep(this._model));\n\n    if (isEmpty(this.mapping.browsePath)) {\n      this.isNew = true;\n      this.isDetailOpen = true;\n    } else {\n      this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n      this.nodeDisplayName = this.mapping.name;\n    }\n\n    if (this.referencedRootNodeId) {\n      this.referencedNode = { nodeId: this.referencedRootNodeId };\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    } else {\n      this.referencedNode = { nodeId: '' };\n    }\n\n    if (get(this.mapping, 'customAction')) {\n      this.customAction = assign(customAction, get(this.mapping, 'customAction'));\n      this.customAction.headers = this.mapHeadersObjectToList(get(this.customAction, 'headers'));\n    } else {\n      this.customAction = assign({}, customAction);\n    }\n\n    unset(this.mapping, 'customAction');\n    if (get(this._model, 'subscriptionType')) {\n      this.dataReporting = 'custom';\n    } else {\n      this.dataReporting = 'default';\n    }\n    this.resetModel = false;\n  }\n\n  showAddressSpaceTree() {\n    return !isEmpty(this.referencedServerId);\n  }\n\n  ngAfterViewInit() {\n    if (\n      get(this.mapping, 'subscriptionType') &&\n      get(this.mapping, 'subscriptionType.type') !== 'None'\n    ) {\n      this.dataReporting = 'custom';\n    }\n  }\n\n  mapHeadersObjectToList(headers) {\n    if (Object.keys(headers).length > 0) {\n      return Object.keys(headers).map(item => {\n        return { key: item, value: headers[item] };\n      });\n    }\n  }\n\n  stringfyBrowsePath(path) {\n    return JSON.stringify(path);\n  }\n\n  updateBrowsePath(node) {\n    this.mapping.browsePath = node.relativePath;\n    this.nodeDisplayName = node.displayName;\n    this.mapping.name = this.nodeDisplayName;\n    this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n    this.browsePathModel.control.markAsDirty();\n  }\n\n  updateDisplayname() {\n    this.mapping.name = this.nodeDisplayName;\n  }\n\n  updateBrowsePathInput() {\n    if (this.browsePath) {\n      try {\n        this.mapping.browsePath = JSON.parse(this.browsePath);\n      } catch (error) {\n        return;\n      }\n    }\n  }\n\n  save() {\n    if (this.dataReporting === 'default') {\n      unset(this.mapping, 'subscriptionType');\n    }\n\n    if (get(this.mapping, 'measurementCreation')) {\n      const { measurementCreation } = this.mapping;\n      set(measurementCreation, 'fragmentName', get(measurementCreation, 'type'));\n    }\n\n    const { customAction } = this.subFormRef.value;\n    let modifiedCustomAction;\n    if (customAction.hasCustomAction) {\n      const reducedHeaders = this.customAction.headers.reduce((result, item) => {\n        result[item.key] = item.value;\n        return result;\n      }, {});\n\n      modifiedCustomAction = assign({}, this.customAction, { headers: reducedHeaders });\n    }\n\n    this.onAction.emit({\n      action: 'save',\n      data: assign({}, this.mapping, { customAction: modifiedCustomAction })\n    });\n    this.isDetailOpen = false;\n  }\n\n  cancel() {\n    this.isDetailOpen = false;\n    this.resetModel = true;\n    if (this.mapping.id === 'new') {\n      this.onAction.emit({ action: 'delete', data: assign({}, this.mapping) });\n    }\n  }\n\n  onDelete() {\n    this.onAction.emit({ action: 'delete', data: this.mapping });\n  }\n\n  canSave(variableForm) {\n    const areValid = () =>\n      variableForm.valid && this.objectMappingForm.$componentScope.mappingForm.$valid;\n    const areDirty = () =>\n      variableForm.dirty || this.objectMappingForm.$componentScope.mappingForm.$dirty;\n    return areValid() && areDirty();\n  }\n\n  isActive() {\n    return this.isDetailOpen;\n  }\n\n  setTreeFromRefNode() {\n    if (this.referencedRootNodeId) {\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OpcuaService } from './opcuaService';\nimport { NgForm } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { OpcuaDeviceType } from './opcua-protocol-device-type.interface';\nimport { find, assign, omit, findIndex, pick, unset, get } from 'lodash';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\n\n@Component({\n  selector: 'opcua-device-protocol-detail',\n  templateUrl: './opcua-device-protocol-detail.html'\n})\nexport class OpcuaDeviceProtocolDetailComponent implements OnInit {\n  @ViewChildren(OpcuaDeviceProtocolMapping) instanceList: QueryList<OpcuaDeviceProtocolMapping>;\n\n  initialModel: OpcuaDeviceType = {\n    id: '',\n    fieldbusType: 'opcuaV2',\n    description: '',\n    unit: '',\n    fieldbusVersion: 4,\n    name: '',\n    referencedServerId: '',\n    referencedRootNodeId: '',\n    subscriptionType: {\n      type: 'None'\n    },\n    mappings: [],\n    overriddenSubscriptions: [],\n    applyConstraints: {\n      browsePathMatchesRegex: '',\n      matchesNodeIds: [],\n      serverObjectHasFragment: '',\n      matchesServerIds: []\n    },\n    enabled: ''\n  };\n\n  model: any;\n  server: any;\n  selectedNode: any;\n  isLoaded = true;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n\n  ngAfterContentChecked() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  getParentAttr = key => get(this.model, key);\n\n  getMapping() {\n    return this.model.mappings;\n  }\n\n  getEmptyMappingObject() {\n    return {\n      id: 'new',\n      browsePath: []\n    };\n  }\n\n  getOverriddenSubscriptionsByPath(browsePath) {\n    return find(this.model.overriddenSubscriptions, { browsePath });\n  }\n\n  getStructuredResource(resource) {\n    const overriddenSubscriptions = this.getOverriddenSubscriptionsByPath(resource.browsePath);\n    let result = assign({}, resource);\n    if (overriddenSubscriptions) {\n      result = assign({}, resource, { subscriptionType: overriddenSubscriptions.subscriptionType });\n    }\n    return result;\n  }\n\n  async ngOnInit() {\n    const id = this.opcuaService.getId();\n    if (id) {\n      const res = await this.opcuaService.getDeviceProtocol(id);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.isLoaded = false;\n      } else {\n        const data = await res.json();\n        if (data && data.applyConstraints === null) {\n          delete data.applyConstraints;\n        }\n        if (data && data.subscriptionType === null) {\n          delete data.subscriptionType;\n        }\n        this.model = assign(this.initialModel, data);\n        if (!this.model.mappings) {\n          this.model.mappings = [];\n        }\n        this.model = assign(this.initialModel, this.updateViableMapping(data));\n        this.isLoaded = false;\n      }\n    }\n  }\n\n  updateViableMapping(model) {\n    const { mappings } = model;\n    let result = [];\n    if (mappings) {\n      result = mappings.map((item, i) => {\n        return assign(item, { id: i });\n      });\n    }\n    return assign(model, { mappings: result });\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  addVariable() {\n    this.model.mappings.push(this.getEmptyMappingObject());\n  }\n\n  updateVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n    if (mappingObject.id === 'new') {\n      mappingObject.id = mappings.length;\n    }\n    mappings.push(mappingObject);\n  }\n\n  removeVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n  }\n\n  actionHandler(actionObject) {\n    switch (actionObject.action) {\n      case 'save':\n        this.updateVariable(actionObject.data);\n        break;\n      case 'delete':\n        this.removeVariable(actionObject.data);\n        break;\n    }\n  }\n\n  extractOverridSubscriptionType(_mapping) {\n    const overriddenSubscriptions = [];\n    const variableMapping = [];\n    _mapping.forEach(element => {\n      if (element.id !== 'new') {\n        if (element.subscriptionType) {\n          overriddenSubscriptions.push(\n            assign(\n              { browsePath: element.browsePath },\n              { subscriptionType: element.subscriptionType }\n            )\n          );\n        }\n        variableMapping.push(omit(element, ['subscriptionType']));\n      }\n    });\n    return [variableMapping, overriddenSubscriptions];\n  }\n\n  prepareRequestJson(_model) {\n    let requestJson = {};\n    const [mappings, overriddenSubscriptions] = this.extractOverridSubscriptionType(\n      _model.mappings\n    );\n    requestJson = assign(requestJson, pick(_model, Object.keys(this.initialModel)), {\n      mappings,\n      overriddenSubscriptions\n    });\n    return requestJson;\n  }\n\n  async save() {\n    try {\n      const res = await this.opcuaService.updateDeviceProtocol(this.prepareRequestJson(this.model));\n\n      if (res && res.status === 200) {\n        this.router.navigate(['deviceprotocols']);\n        this.alertService.success(gettext('Device protocol saved.'));\n      } else {\n        this.alertService.addServerFailure({ res });\n      }\n    } catch (ex) {\n      this.alertService.danger(gettext('Failed to save. Try again.'));\n    }\n  }\n\n  canSave(deviceTypeForm) {\n    if (this.instanceList) {\n      const activeInstances = this.instanceList.filter(item => item.isActive());\n\n      if (activeInstances.length > 0) {\n        return true;\n      }\n    }\n    return !deviceTypeForm.form.valid;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { set, unset, toInteger } from 'lodash';\nimport { gettext } from '@c8y/ngx-components';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\n\n@Component({\n  selector: 'opcua-device-protocol-data-reporting',\n  templateUrl: './opcua-device-protocol-data-reporting.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolDataReportingComponent {\n  @Input() set model(_model) {\n    if (_model.subscriptionType) {\n      this.subscription = _model.subscriptionType;\n      if (this.subscription.type === 'CyclicRead') {\n        this.cyclicReadParameters = _model.subscriptionType.cyclicReadParameters;\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n      }\n\n      if (this.subscription.type === 'Subscription') {\n        this.subscriptionParameters = _model.subscriptionType.subscriptionParameters;\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n      }\n\n      if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    }\n    this._model = _model;\n    this.subscriptionTypeName = 'subscriptionType' + _model.id;\n  }\n  @Input() groupName;\n\n  _model: object;\n  @Output() onSubscriptionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  subscription = {\n    type: 'None'\n  };\n  subscriptionParameters = {\n    samplingRate: undefined,\n    deadbandType: 'None',\n    deadbandValue: undefined,\n    ranges: '',\n    queueSize: undefined,\n    dataChangeTrigger: 'Status',\n    discardOldest: true\n  };\n\n  cyclicReadParameters = {\n    rate: undefined\n  };\n\n  types: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'CyclicRead', label: gettext('Cyclic read') },\n    { value: 'Subscription', label: gettext('Subscription') }\n  ];\n\n  filters: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'absolute', label: gettext('Absolute') },\n    { value: 'percent', label: gettext('Percent') }\n  ];\n\n  triggers: any[] = [\n    { value: 'Status', label: gettext('Status') },\n    { value: 'StatusValue', label: gettext('Status/Value') },\n    { value: 'StatusValueTimestamp', label: gettext('Status/Value/Timestamp') }\n  ];\n\n  discard: any[] = [\n    { value: true, label: gettext('oldest`data`') },\n    { value: false, label: gettext('newest`data`') }\n  ];\n\n  requireCyclic: boolean = false;\n  requireSubscription: boolean = false;\n  subscriptionTypeName = 'subscriptionType';\n\n  parseReadingInterval = $event => toInteger($event.target.value);\n\n  updateModel() {\n    setTimeout(() => {\n      unset(this.subscription, 'subscriptionParameters');\n      unset(this.subscription, 'cyclicReadParameters');\n      if (this.subscription.type === 'CyclicRead') {\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n        set(this.subscription, 'cyclicReadParameters', this.cyclicReadParameters);\n      } else if (this.subscription.type === 'Subscription') {\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n        set(this.subscription, 'subscriptionParameters', this.subscriptionParameters);\n      } else if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    });\n  }\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping-status-icons'\n})\nexport class OpcuaDeviceProtocolObjectMappingStatus extends UpgradeComponent {\n  @Input() mapping: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMappingStatusIcons', elementRef, injector);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { gettext } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { OpcuaService } from './opcuaService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'opcua-address-space',\n  templateUrl: './opcua-address-space.component.html'\n})\nexport class OpcuaAddressSpaceComponent implements OnInit, OnDestroy {\n  currentNode: AddressSpaceNode;\n  selectednode: boolean = false;\n  searchKey: string;\n  isSearch: boolean;\n  loading: boolean = false;\n  searchInProgress: boolean = false;\n  filterLabel: string;\n  dataSource: DynamicDataSource;\n  nodeList;\n\n  @Output() focusStatus: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  private moId: string = '';\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService\n  ) {}\n\n  async ngOnInit() {\n    this.filterLabel = gettext('Filter…');\n    this.moId = this.opcuaService.getMoId();\n  }\n\n  ngOnDestroy() {\n    // The BehaviourSubject will store the last array of ancestorNodes from the previous search\n    // this would cause the component while subscribing in the init-phase to the subject to travers\n    // to the last searched node again. From user perspective it does not make sense, because the user\n    // left the Address space (tab) and should loose the context and just request a new search or\n    // browse the tree manually.\n    this.addressSpaceService.resetTreeToRootNode();\n  }\n\n  async searchNodes() {\n    this.searchInProgress = true;\n    this.clearNodeListAndCheckSearchString();\n    if (this.isSearch) {\n      this.currentNode = undefined;\n      this.nodeList = await this.addressSpaceService.getSearchedNodes(this.searchKey, this.moId);\n      this.searchInProgress = false;\n      this.nodeList.resultLabel = gettext('Results found');\n    }\n  }\n\n  clearNodeListAndCheckSearchString() {\n    this.isSearch = this.searchKey !== undefined && this.searchKey !== '' ? true : false;\n    if (!this.isSearch) {\n      this.searchInProgress = false;\n    }\n  }\n\n  clearSearch() {\n    this.isSearch = false;\n    this.searchKey = '';\n    this.currentNode = undefined;\n  }\n\n  getIcon(nodeClassName: string) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  async selectNode(node) {\n    if (node && node.nodeId && node.nodeId.length > 0) {\n      const res = await this.addressSpaceService.getNodeById(this.moId, node.nodeId);\n      this.toggleCurrentNode((await res.json()) as AddressSpaceNode);\n    }\n  }\n\n  toggleCurrentNode(node: AddressSpaceNode) {\n    this.currentNode = this.isNodeSet(node) ? undefined : node;\n  }\n\n  backHandler(node) {\n    this.isSearch = false;\n    this.focusStatus.emit(node);\n    this.toggleCurrentNode(node);\n  }\n\n  isNodeSet(node: AddressSpaceNode) {\n    if (this.currentNode !== undefined && this.currentNode.nodeId === node.nodeId) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AppStateService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaMicroserviceGuard implements CanActivate {\n  microserviceName: string = 'opcua-mgmt-service';\n  checkApp: Promise<boolean>;\n\n  constructor(\n    private app: AppStateService\n  ) {}\n\n  canActivate() {\n    if (!this.checkApp) {\n      this.checkApp = this.app.isApplicationAvailable(this.microserviceName);\n    }\n    return this.checkApp;\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, ViewChild } from '@angular/core';\nimport { gettext, DroppedFile, DropAreaComponent } from '@c8y/ngx-components';\nimport { OpcuaServer, OpcuaServerConfig } from './opcua-server.interface';\nimport { cloneDeep, has} from 'lodash-es';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-server-config',\n  templateUrl: './opcua-server-config.component.html'\n})\nexport class OpcuaServerConfigComponent implements OnInit, OnChanges {\n  currentSecMode: string;\n  fileName: string = '';\n  targetConnectionState: string = '1';\n  minIntervalNumber: number = 1;\n  connectionStatusLabel: string = '';\n  @ViewChild('opcuaConfigForm', {static: false}) opcuaConfigForm: any;\n  @ViewChild(DropAreaComponent, {static: false}) dropArea: DropAreaComponent;\n  @Output() canceled = new EventEmitter<OpcuaServer>();\n  @Output() removed = new EventEmitter<OpcuaServer>();\n  @Output() saved = new EventEmitter<OpcuaServer>();\n  @Input() set server(server: OpcuaServer) {\n    if (server) {\n      this._server = cloneDeep(server);\n      this.model = cloneDeep(server);\n      this.fileName = this.model.config.keystoreFilename;\n\n      if (server.id && server.id === 'new') {\n        // enabled connection state\n        this.targetConnectionState = '1';\n        this.model.config.targetConnectionState = 'enabled';\n      } else {\n        this.targetConnectionState = (this.model.config.targetConnectionState === 'enabled') ? '1' : '0';\n      }\n      this.updateConnectionStatusLabel(this._server);\n      this.setNewPassword();\n    }\n  }\n\n  get server(): OpcuaServer {\n    return this._server;\n  }\n\n  model: OpcuaServer;\n  changePassword: boolean = false;\n  initialPasswordRequired: boolean = true;\n  securityModes: string[];\n  authenticationMode: any;\n  authenticationModes: any[];\n  NONE: string = 'NONE';\n  SIGN: string = 'SIGN';\n  SIGN_ENC: string = 'SIGN_ENCRYPT';\n  securityPolicies: any = {\n    sign: [\n      `BASIC256_${this.SIGN}`,\n      `BASIC128RSA15_${this.SIGN}`,\n      `BASIC256SHA256_${this.SIGN}`\n    ],\n    sign_enc: [\n      `BASIC256_${this.SIGN_ENC}`,\n      `BASIC128RSA15_${this.SIGN_ENC}`,\n      `BASIC256SHA256_${this.SIGN_ENC}`,\n    ]\n  };\n  private ANONYM = {\n    id: 1,\n    value: gettext('Anonymous')\n  };\n  private USER_PASSWORD = {\n    id: 2,\n    value: gettext('Username/Password')\n  };\n  private KEY_BASED = {\n    id: 3,\n    value: gettext('Key-based Authentication')\n  };\n  private _server: OpcuaServer;\n  private opcuaService: OpcuaService;\n  private initialKeystore: File = {\n    lastModified: 0,\n    name: '',\n    type: '',\n    slice: null,\n    size: 0\n  };\n  private keystore: File = this.initialKeystore;\n  private authSwitch: boolean = false;\n\n  constructor(opcuaService: OpcuaService) {\n    this.opcuaService = opcuaService;\n  }\n\n  async ngOnInit() {\n    this.authSwitch = false;\n\n    this.securityModes = [\n      this.NONE,\n      this.SIGN,\n      this.SIGN_ENC\n    ];\n\n    this.authenticationModes = [\n      this.ANONYM,\n      this.USER_PASSWORD,\n      this.KEY_BASED\n    ];\n\n    this.setCurrentAuthenticationMode();\n    this.setCurrentSecurityMode();\n  }\n\n  ngOnChanges() {\n    this.setCurrentSecurityMode();\n    this.setCurrentAuthenticationMode();\n  }\n\n  cancel() {\n    this.canceled.emit(this.model);\n  }\n\n  async remove() {\n    await this.removeKeystore(this.model);\n    this.removed.emit(this.model);\n  }\n\n  async save() {\n    if (this.keystore && this.keystore.size > 0 && this.keystore.name && this.keystore.name.length > 0) {\n      const response = await this.uploadKeystore(this.model.config.keystoreBinaryId);\n\n      if (response && response.data && response.data.id) {\n        this.model.config.keystoreBinaryId = response.data.id;\n      }\n\n      // if the keystore was uploaded successful we can remove\n      // the local keystore. This will prevent another request to binary api\n      // when the user will edit other inputs in the form and hit save again.\n      this.keystore = this.initialKeystore;\n    }\n\n    // will remove keystore (binary) when the user switched\n    // authentication settings from key-based to anonymous or username/password\n    if (this.authSwitch) {\n      this.removeKeystore(this.server);\n    }\n\n    // when the user sets a new password, make sure to mark it as\n    // \"not encrypted\" by setting passwordEncrypted to false\n    const userPassword: string = this.getModelConfig('userPassword');\n    if (userPassword && userPassword.length > 0) {\n        this.model.config.passwordEncrypted = false;\n    }\n\n    this.saved.emit(this.model);\n  }\n\n  uploadFile(droppedFiles: DroppedFile[]) {\n    if (droppedFiles.length === 1) {\n      this.keystore = droppedFiles[0].file;\n      this.fileName = this.keystore.name;\n    } else {\n      // dropped more than one file\n      console.warn('Tried to import... Import aborted.');\n    }\n  }\n\n  setPolicy(data: any) {\n    if (data === this.NONE) {\n      this.model.config.securityMode = this.NONE;\n    } else if (data === this.SIGN) {\n      this.model.config.securityMode = this.securityPolicies.sign[0];\n    } else if (data === this.SIGN_ENC) {\n      this.model.config.securityMode = this.securityPolicies.sign_enc[0];\n    }\n  }\n\n  setServerConnection(data: string) {\n    this.model.config.targetConnectionState = (data !== '0') ? 'enabled' : 'disabled';\n  }\n\n  updateAuthentication(data: any) {\n    if (data && data.id) {\n      switch (data.id) {\n        // Anonymous\n        case 1:\n          this.resetUserAuthentication();\n          this.resetKeyBasedAuthentication();\n          break;\n\n        // User/Password\n        case 2:\n          this.resetKeyBasedAuthentication();\n          this.restoreUserData();\n          this.setNewPassword();\n          break;\n\n        // Key-based\n        case 3:\n          this.resetUserAuthentication();\n          this.restoreKeyBasedData();\n          break;\n\n        default:\n          console.warn('Invalid authentication id', data.id);\n          break;\n      }\n    }\n  }\n\n  updateConnectionStatusLabel(server) {\n    const connected = server.c8y_Connection && server.c8y_Connection.status === 'CONNECTED';\n    const label = connected ? gettext('Connected') : gettext('Disconnected');\n    this.connectionStatusLabel = label;\n  }\n\n  setNewPassword() {\n    const username: string = this.getModelConfig('userName');\n    if (username && username.length > 0) {\n      // userName is given, NO need to change the password because it is already set\n      this.changePassword = false;\n      this.initialPasswordRequired = false;\n    } else {\n      // no userName in response, so require the user to set the initial pw\n      this.changePassword = true;\n      this.initialPasswordRequired = true;\n    }\n  }\n\n  toggleChangePassword() {\n    this.changePassword = !this.changePassword;\n    // When the user hides the pw-input field but has entered a\n    // string to it before, we need to discard the changes reflected in the model\n    // otherwise we PUT it with the model when user hits the save button\n    if (!this.changePassword) {\n      if (this.getModelConfig('userPassword')) {\n        delete this.model.config.userPassword;\n      }\n    }\n  }\n\n  private uploadKeystore(binaryId?: string) {\n    if (!binaryId) {\n      return this.opcuaService.uploadKeystore(this.keystore);\n    } else if (binaryId && binaryId.length > 0) {\n      // update existing binary\n      return this.opcuaService.updateKeystore(binaryId, this.keystore);\n    }\n  }\n\n  private removeKeystore(server: OpcuaServer) {\n    if (server &&\n      server.config &&\n      server.config.keystoreBinaryId &&\n      server.config.keystoreBinaryId.length > 0) {\n      this.authSwitch = false;\n      return this.opcuaService.removeKeystore(this.server.config.keystoreBinaryId);\n    }\n  }\n\n  private resetUserAuthentication() {\n    this.model.config.userName = null;\n    this.model.config.userPassword = null;\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private resetKeyBasedAuthentication() {\n    this.authSwitch = true;\n\n    this.model.config.keystorePass = null;\n    this.model.config.certificatePass = null;\n    this.model.config.keystoreBinaryId = '';\n    this.model.config.keystoreFilename = '';\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private restoreUserData() {\n    this.model.config.userName = this._server.config.userName;\n    this.model.config.userIdentityMode = 'userAndPassword';\n  }\n\n  private restoreKeyBasedData() {\n    this.authSwitch = false;\n    this.model.config.keystorePass = this._server.config.keystorePass;\n    this.model.config.certificatePass = this._server.config.certificatePass;\n    this.model.config.keystoreBinaryId = this._server.config.keystoreBinaryId;\n    this.model.config.keystoreFilename = this._server.config.keystoreFilename;\n    this.model.config.userIdentityMode = 'certificate';\n  }\n\n  private getServerConfig(): OpcuaServerConfig {\n    let cfg: OpcuaServerConfig = {\n      securityMode: this.NONE,\n      userIdentityMode: 'none'\n    };\n    if (this.server && this.server.config) {\n      cfg = this.server.config;\n    }\n    return cfg;\n  }\n\n  private setCurrentSecurityMode() {\n    const { securityMode } = this.getServerConfig();\n    if (securityMode) {\n      const foundInSign = this.securityPolicies.sign.find((el) => el === securityMode);\n      if (foundInSign) {\n        this.currentSecMode = this.SIGN;\n      } else {\n        const foundInSignEncrypt = this.securityPolicies.sign_enc.find((el) => el === securityMode);\n        foundInSignEncrypt ? this.currentSecMode = this.SIGN_ENC : this.currentSecMode = this.NONE;\n      }\n    }\n  }\n\n  private setCurrentAuthenticationMode() {\n    const {\n      userIdentityMode\n    } = this.getServerConfig();\n\n    switch (userIdentityMode) {\n      case 'certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      case 'userAndPassword':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Anonymous':\n        this.authenticationMode = this.ANONYM;\n        break;\n\n      case 'UserName':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      default:\n        this.authenticationMode = this.ANONYM;\n        break;\n    }\n  }\n\n  private getModelConfig(fragment: string) {\n    if (this.model && this.model.config) {\n      if (fragment && fragment.length > 0) {\n        return has(this.model.config, fragment) ? this.model.config[`${fragment}`] : undefined;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { OpcuaServer } from './opcua-server.interface';\n\n@Component({\n  selector: 'opcua-server-list',\n  templateUrl: './opcua-server-list.component.html'\n})\nexport class OpcuaServerListComponent {\n  @Input() serverList: OpcuaServer[] = [];\n  @Output() present = new EventEmitter<OpcuaServer>();\n\n  presentConfig(server: OpcuaServer) {\n    server.active = true;\n    this.present.emit(server);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaServerGuard implements CanActivate {\n  type = 'c8y_OpcuaServer';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { AlertService, ContextRouteComponent, gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-servers',\n  templateUrl: './opcua-servers.component.html'\n})\nexport class OpcuaServersComponent implements OnInit {\n  serverObjectList: OpcuaServer[] = [];\n  initialServerObject: OpcuaServer = {\n    id: '',\n    name: 'New Server',\n    config: {\n      securityMode: 'NONE',\n      keystorePass: null,\n      keystoreBinaryId: null,\n      keystoreFilename: '',\n      certificatePass: null,\n      serverUrl: '',\n      userName: '',\n      userPassword: '',\n      rescanCron: null,\n      timeout: null,\n      autoReconnect: true,\n      statusCheckInterval: null,\n      valid: true\n    },\n    quickInfo: {\n      padlock: 'unlock',\n      padlockMsg: ''\n    },\n    active: true\n  };\n  server: OpcuaServer;\n  active: boolean = false;\n  private moId: string;\n  private NEW_SERVER_ID: string;\n\n  constructor(\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    @Optional() private context: ContextRouteComponent\n  ) {\n    this.moId = '';\n    this.NEW_SERVER_ID = 'new';\n    this.initialServerObject.id = this.NEW_SERVER_ID;\n  }\n\n  async ngOnInit() {\n    this.moId = this.opcuaService.getMoId();\n    if (this.moId && this.moId.length > 0) {\n      const res = await this.opcuaService.getServers(this.moId);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        this.serverObjectList = (await res.json()) as OpcuaServer[];\n        this.serverObjectList.map(server => this.setQuickInfo(server));\n      }\n    }\n  }\n\n  localServerObjectExist() {\n    return !!this.serverObjectList.find(server => server.id === this.NEW_SERVER_ID);\n  }\n\n  addServer() {\n    const server: OpcuaServer = this.initialServerObject;\n    this.serverObjectList.push(server);\n    this.onPresent(server);\n  }\n\n  onSaved(server: OpcuaServer) {\n    if (server && server.id) {\n      server.gatewayId = this.moId;\n      if (server.id === this.NEW_SERVER_ID) {\n        this.createServer(server);\n      } else {\n        this.updateServer(server);\n      }\n    }\n  }\n\n  reloadTabs() {\n    if (this.context) {\n      this.context.refreshTabs();\n    }\n  }\n\n  onCanceled(server: OpcuaServer) {\n    if (server && server.id && server.id === this.NEW_SERVER_ID) {\n      this.removeServerObjectListById(server.id);\n    } else {\n      // update activity status for UI\n      this.serverObjectList.forEach(item => {\n        if (item.id === server.id) {\n          item.active = false;\n        }\n      });\n      // When server id is not 'new' we just close the details\n      delete this.server;\n    }\n  }\n\n  onRemoved(server: OpcuaServer) {\n    if (server.id === this.NEW_SERVER_ID) {\n      this.onCanceled(server);\n    } else {\n      this.removeServer(server);\n    }\n  }\n\n  async getKeystore(binaryId: string) {\n    const { data } = await this.opcuaService.getKeystore(binaryId);\n    return data;\n  }\n\n  async onPresent(server: OpcuaServer) {\n    if (\n      server &&\n      server.id !== this.NEW_SERVER_ID &&\n      server.config &&\n      server.config.keystoreBinaryId\n    ) {\n      try {\n        const mo = await this.getKeystore(server.config.keystoreBinaryId);\n        server.config.keystoreFilename = mo.name;\n      } catch (ex) {\n        this.server = Object.assign({}, server);\n        console.log('Could not get existing keystore:', ex);\n      }\n    }\n    if (this.serverObjectList.length > 0) {\n      this.serverObjectList.forEach(item => {\n        item.active = false;\n\n        if (item.id === server.id) {\n          item.active = true;\n          server.active = item.active;\n        }\n      });\n      this.setQuickInfo(server);\n      this.server = Object.assign({}, server);\n    }\n  }\n\n  private async createServer(server: OpcuaServer) {\n    const response = await this.opcuaService.createServer(server);\n    const svr = (await response.json()) as OpcuaServer;\n    this.updateServerObjectListById(this.NEW_SERVER_ID, svr);\n    this.reloadTabs();\n  }\n\n  private async updateServer(server: OpcuaServer) {\n    const updatedServer = (await this.opcuaService.updateServer(server)) as OpcuaServer;\n    if (updatedServer) {\n      this.updateServerObjectListById(updatedServer.id, updatedServer);\n    }\n  }\n\n  private async removeServer(server: OpcuaServer) {\n    try {\n      await this.opcuaService.removeServer(server);\n      this.removeServerObjectListById(server.id);\n      this.reloadTabs();\n    } catch (ex) {\n      console.log('Could not remove OPC UA server:', ex);\n    }\n  }\n\n  private removeServerObjectListById(id: string) {\n    this.serverObjectList.forEach((item, index) => {\n      if (item.id === id) {\n        this.serverObjectList.splice(index, 1);\n        delete this.server;\n      }\n    });\n  }\n\n  private updateServerObjectListById(id: string, server: OpcuaServer) {\n    const idx = this.serverObjectList.findIndex(item => item.id === id);\n    if (idx > -1) {\n      this.setQuickInfo(server);\n      this.serverObjectList[idx] = server;\n    }\n    delete this.server;\n  }\n\n  private setQuickInfo(server: OpcuaServer) {\n    server.quickInfo = {\n      padlock: 'unlock',\n      padlockMsg: ''\n    };\n\n    if (server && server.config) {\n      if (server.config.securityMode) {\n        server.quickInfo.padlock = server.config.securityMode !== 'NONE' ? 'lock' : 'unlock';\n        server.quickInfo.padlockMsg = this.translateService.instant(\n          gettext('The security policy is set to {{param}}.'),\n          { param: server.config.securityMode }\n        );\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {NgForm, ControlContainer} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'opcua-device-protocol-description',\r\n  templateUrl: './opcua-device-protocol-description.html',\r\n  viewProviders: [{provide: ControlContainer, useExisting: NgForm}]\r\n})\r\n\r\nexport class OpcuaDeviceProtocolDescription {\r\n  _model: any;\r\n  autoScan: string;\r\n  @Input() set model(_model) {\r\n    this.moId = _model.referencedServerId;\r\n    this._model = _model;\r\n    this.autoScan = _model.enabled ? '1' : '0';\r\n  }\r\n\r\n  private moId: string = '';\r\n\r\n  setAutoScanOption(data: string) {\r\n    this._model.enabled = data !== '0' ? true : false;\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable, merge, Subscription } from 'rxjs';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { map } from 'rxjs/operators';\n\nexport class DynamicDataSource {\n  dataChange = new BehaviorSubject<AddressSpaceNode[]>([]);\n\n  get data(): AddressSpaceNode[] {\n    return this.dataChange.value;\n  }\n  set data(value: AddressSpaceNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(\n    public treeControl: NestedTreeControl<AddressSpaceNode>,\n    private addressSpaceService: AddressSpaceService,\n    private serverId: string\n  ) {\n    this.treeControl.isExpanded = (node: AddressSpaceNode) => node.expanded;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<AddressSpaceNode[]> {\n    this.treeControl.expansionModel.onChange.subscribe(\n      (change: SelectionChange<AddressSpaceNode>) => {\n        if (change.added || change.removed) {\n          this.handleTreeControl(change);\n        }\n      }\n    );\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<AddressSpaceNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed\n        .slice()\n        .reverse()\n        .forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  async toggleNode(addressSpaceNode: AddressSpaceNode, expand: boolean) {\n    if (!addressSpaceNode.children || addressSpaceNode.children.length === 0) {\n      addressSpaceNode.currentlyLoadingChildren = true;\n\n      const res = await this.addressSpaceService.getChildrenOf(addressSpaceNode, this.serverId);\n      const children = (await res.json()) as AddressSpaceNode[];\n\n      addressSpaceNode.children = children || [];\n      addressSpaceNode.children = addressSpaceNode.children.map((node: AddressSpaceNode) => {\n        node.parentNode = addressSpaceNode;\n        return node;\n      });\n      addressSpaceNode.currentlyLoadingChildren = false;\n\n      this.treeControl.expand(addressSpaceNode);\n    }\n\n    addressSpaceNode.expanded = expand && addressSpaceNode.children.length > 0;\n    this.refreshNestedTree(this.data);\n\n    return Promise.resolve(addressSpaceNode);\n  }\n  catch() {\n    // do nothing\n  }\n\n  private refreshNestedTree(treeData: AddressSpaceNode[]) {\n    // necessary to rerender tree, otherwise new nodes will not\n    // appear, but they are added to the list.\n    this.data = [];\n    this.dataChange.next(treeData);\n    this.triggerResize(); // to resize the modal window when creating a new device protocol\n  }\n\n  private triggerResize() {\n    setTimeout(() => {\n      try {\n        window.dispatchEvent(new Event('resize'));\n      } catch (error) {\n        // do nothing\n      }\n    }, 200);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  EventEmitter,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { OpcuaService } from './opcuaService';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { clone, cloneDeep } from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { relative } from 'path';\n\n@Component({\n  selector: 'opcua-address-space-tree',\n  templateUrl: './opcua-address-space-tree.component.html'\n})\nexport class OpcuaAddressSpaceTreeComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  set moId(id: string) {\n    this._moId = id || undefined;\n  }\n\n  @Input() node;\n  @Input() focusEmitter: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  @Output() selectedNode: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  nestedTreeControl: NestedTreeControl<AddressSpaceNode>;\n  dataSource: DynamicDataSource = null;\n  focused: AddressSpaceNode;\n  loading: boolean = false;\n  subscriptionRef: Subscription;\n  nodeNavDataSubscription: Subscription;\n  private _moId: string;\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService\n  ) {}\n\n  getChildren = (node: AddressSpaceNode) => (node.expanded ? node.children : []);\n  hasChild = (_: number, _nodeData: AddressSpaceNode) =>\n    this.addressSpaceService.childrenAvailable(_nodeData.references)\n\n  ngOnInit() {\n    this.initializeDataSet();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.moId && (changes.moId.currentValue !== changes.moId.previousValue)) {\n      this.initializeDataSet();\n    }\n  }\n\n  initializeDataSet() {\n    this.nodeNavDataSubscription = this.addressSpaceService\n      .getNodeNavData$()\n      .subscribe(nodeNavData => this.openNode(nodeNavData));\n    this.subscriptionRef = this.focusEmitter.subscribe(node => {\n      this.focused = this.isFocusedNode(node) ? undefined : node;\n    });\n  }\n\n  ngOnDestroy() {\n    // clean up the address-space-tree\n    this.addressSpaceService.resetTreeToRootNode();\n\n    if (this.nodeNavDataSubscription && !this.nodeNavDataSubscription.closed) {\n      this.nodeNavDataSubscription.unsubscribe();\n    }\n\n    if (this.subscriptionRef && !this.subscriptionRef.closed) {\n      this.subscriptionRef.unsubscribe();\n    }\n  }\n\n  async openNode(nodeNavData: NodeNavigationData) {\n    const { node, selectedAncestorIds } = nodeNavData;\n    let nodeId;\n\n    // We just set the nodeId when the selectedAncestorIds variable an empty array.\n    // If selectedAncestorIds contain any id we assume that the tree should be travsersed beginning\n    // from the root node.\n    if (node && node.nodeId && selectedAncestorIds && selectedAncestorIds.length === 0) {\n      nodeId = node.nodeId;\n    }\n    // Always recreate the tree when routing to a specific nested node,\n    // because previous modifications to the tree-structure could cause errors\n    // while traversing with 'old' tree-data\n    // -----------------\n    // setupTree is able to handle nodeId = undefined\n    await this.setupTree(nodeId);\n\n    if (!selectedAncestorIds || selectedAncestorIds.length === 0) {\n      return;\n    }\n\n    if (nodeNavData && this.dataSource) {\n      const clonedAncestors = clone(selectedAncestorIds);\n      clonedAncestors.shift();\n\n      const n = await this.dataSource.toggleNode(this.dataSource.data[0], true);\n      this.setChildNodes(n.children, clonedAncestors);\n\n      this.toggleFocusedNode(node);\n    }\n  }\n\n  setChildNodes(nodes: AddressSpaceNode[], ids: string[]) {\n    if (nodes) {\n      ids.forEach(async id => {\n        const match = nodes.find(n => n.nodeId === id);\n        if (match && ids.length > 0) {\n          const idx = ids.findIndex(value => value === id);\n          if (idx >= 0) {\n            ids.splice(idx, 1);\n          }\n          const toggledNode = await this.dataSource.toggleNode(match, true);\n          this.setChildNodes(toggledNode.children, ids);\n        }\n      });\n    }\n  }\n\n  async setupTree(nodeId?: string) {\n    this.loading = true;\n\n    if (!this._moId || this._moId.length === 0) {\n      this._moId = this.opcuaService.getMoId();\n    }\n\n    // addressSpaceService.getNode returns either the root node of the server (moId)\n    // or if nodeId !== undefined the node with given nodeId\n    const res = await this.addressSpaceService.getNode(this._moId, nodeId);\n    if (res) {\n      if (res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.dataSource = undefined;\n      } else {\n        const rootNode = (await res.json()) as AddressSpaceNode;\n        this.nestedTreeControl = new NestedTreeControl<AddressSpaceNode>(this.getChildren);\n        this.dataSource = new DynamicDataSource(\n          this.nestedTreeControl,\n          this.addressSpaceService,\n          this._moId\n        );\n        this.dataSource.data = [rootNode];\n      }\n      this.loading = false;\n    } else {\n      this.loading = false;\n    }\n  }\n\n  getMoId() {\n    if (!this._moId || this._moId.length === 0) {\n      return this.opcuaService.getMoId();\n    }\n    return this._moId;\n  }\n\n  getIcon(nodeClassName) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  toggleFocusedNode(node) {\n    const relativePath = [];\n    this.getRelativePath(node, relativePath);\n    node.relativePath = relativePath;\n\n    this.selectedNode.emit(node);\n    this.focused = this.isFocusedNode(node) ? undefined : node;\n  }\n\n  isFocusedNode(node: AddressSpaceNode) {\n    if (this.focused) {\n      return node.nodeId === this.focused.nodeId;\n    }\n    return false;\n  }\n\n  private getRelativePath(node: AddressSpaceNode, relativePath: string[]) {\n    if (node.parentNode) {\n      relativePath.unshift(node.browseName);\n      this.getRelativePath(node.parentNode, relativePath);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AutoApplyConstraints } from './opcua-protocol-device-type.interface';\nimport { IManagedObject, InventoryService } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { set } from 'lodash-es';\n@Component({\n  selector: 'opcua-auto-apply',\n  templateUrl: './opcua-auto-apply-settings.component.html'\n})\nexport class OpcuaAutoApplySettingsComponent implements OnInit {\n  opcuaServers: IManagedObject[] = [];\n  selected: IManagedObject[] = [];\n  constraints: AutoApplyConstraints = {\n    browsePathMatchesRegex: '',\n    matchesNodeIds: [],\n    serverObjectHasFragment: '',\n    matchesServerIds: []\n  };\n  placeholderSelectServerIds: string = gettext('Select server IDs from list');\n  showServerIds: boolean;\n  showBrowsePath: boolean;\n  showServerFragment: boolean;\n  showRootNodes: boolean;\n  private _model: IManagedObject;\n\n  constructor(private inventoryService: InventoryService) {}\n\n  async ngOnInit() {\n    const { data } = await this.inventoryService.list({\n      pageSize: 1000,\n      withTotalPages: true,\n      type: 'c8y_OpcuaServer'\n    });\n\n    this.opcuaServers = data;\n    this.selected = [];\n\n    const { matchesServerIds } = this.constraints;\n\n    data.forEach(server => {\n      if (\n        matchesServerIds &&\n        matchesServerIds.length > 0 &&\n        matchesServerIds.find(itemId => itemId === server.id)\n      ) {\n        this.selected.push(server);\n      }\n    });\n  }\n\n  @Input() set model(model) {\n    if (model && model.applyConstraints) {\n      this.constraints = model.applyConstraints as AutoApplyConstraints;\n    }\n    this._model = model;\n  }\n\n  get model() {\n    return this._model;\n  }\n\n  serverIdsSelected(items: IManagedObject[]) {\n    if (this.constraints) {\n      this.constraints.matchesServerIds = items.map((item: IManagedObject) => item.id);\n    }\n    this.selected = items;\n  }\n\n  onChangeNodeId(event) {\n    if (event.target.checked) {\n      this.showRootNodes = true;\n      this.add();\n    } else {\n      this.showRootNodes = false;\n      this.constraints.matchesNodeIds = [];\n    }\n  }\n\n  onChangeShowServerIds(event) {\n    if (!event.target.checked) {\n      this.constraints.matchesServerIds = [];\n      this.showServerIds = false;\n      this.selected = [];\n    } else {\n      this.showServerIds = true;\n    }\n  }\n\n  onChangeShowBrowsePath(event) {\n    if (!event.target.checked) {\n      this.constraints.browsePathMatchesRegex = '';\n      this.showBrowsePath = false;\n    } else {\n      this.showBrowsePath = true;\n    }\n  }\n\n  onChangeShowServerFragment(event) {\n    if (!event.target.checked) {\n      this.constraints.serverObjectHasFragment = '';\n      this.showServerFragment = false;\n    } else {\n      this.showServerFragment = true;\n    }\n  }\n\n  add() {\n    this.constraints.matchesNodeIds.push('');\n  }\n\n  remove(index) {\n    this.constraints.matchesNodeIds.splice(index, 1);\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n}\n","import { CdkTreeModule } from '@angular/cdk/tree';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  DeviceStatusModule,\n  DropAreaModule,\n  FormsModule,\n  gettext,\n  HOOK_ONCE_ROUTE,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { AddressSpaceService } from './address-space.service';\nimport { OpcuaAddressSpaceDetailComponent } from './opcua-address-space-detail.component';\nimport { OpcuaDeviceProtocolDetailComponent } from './opcua-device-protocol-detail.component';\nimport { OpcuaDeviceProtocolDataReportingComponent } from './opcua-device-protocol-data-reporting.component';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { OpcuaDeviceProtocolMappingCustomAction } from './opcua-device-protocol-mapping-customaction.component';\nimport { OpcuaDeviceProtocolObjectMappingStatus } from './opcua-device-protocol-object-mapping-status-icon.component';\nimport { OpcuaAddressSpaceComponent } from './opcua-address-space.component';\nimport { OpcuaAgentGuard } from './opcua-agent.guard';\nimport { OpcuaMicroserviceGuard } from './opcua-microservice.guard';\nimport { OpcuaServerConfigComponent } from './opcua-server-config.component';\nimport { OpcuaServerListComponent } from './opcua-server-list.component';\nimport { OpcuaServerGuard } from './opcua-server.guard';\nimport { OpcuaServersComponent } from './opcua-servers.component';\nimport { OpcuaService } from './opcuaService';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { OpcuaDeviceProtocolDescription } from './opcua-device-protocol-description.component';\nimport { OpcuaAddressSpaceTreeComponent } from './opcua-address-space-tree.component';\nimport { OpcuaAutoApplySettingsComponent } from './opcua-auto-apply-settings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OpcuaDeviceProtocolBrowsePathValidation } from './opcua-device-protocol-browse-path-validation.directive';\n\nconst routes: Route[] = [\n  {\n    context: ViewContext.Device,\n    path: 'opcua-servers',\n    component: OpcuaServersComponent,\n    label: gettext('OPC UA server'),\n    icon: 'server',\n    canActivate: [OpcuaAgentGuard, OpcuaMicroserviceGuard]\n  },\n  {\n    context: ViewContext.Device,\n    path: 'address-space',\n    component: OpcuaAddressSpaceComponent,\n    label: gettext('Address space'),\n    icon: 'sitemap',\n    canActivate: [OpcuaServerGuard, OpcuaMicroserviceGuard]\n  }\n];\n\nconst deviceProtocolRoutes: Route[] = [\n  {\n    path: 'deviceprotocols/opcuaV2/:id',\n    component: OpcuaDeviceProtocolDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    OpcuaServersComponent,\n    OpcuaServerListComponent,\n    OpcuaServerConfigComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceDetailComponent,\n    OpcuaDeviceProtocolDescription,\n    OpcuaDeviceProtocolDetailComponent,\n    OpcuaDeviceProtocolDataReportingComponent,\n    OpcuaDeviceProtocolMapping,\n    OpcuaDeviceProtocolObjectMapping,\n    OpcuaDeviceProtocolMappingCustomAction,\n    OpcuaDeviceProtocolObjectMappingStatus,\n    OpcuaAutoApplySettingsComponent,\n    OpcuaDeviceProtocolBrowsePathValidation\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DropAreaModule,\n    ButtonsModule,\n    CdkTreeModule,\n    RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    DeviceStatusModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule.forRoot()\n  ],\n  entryComponents: [\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaServersComponent\n  ],\n  providers: [\n    OpcuaAgentGuard,\n    OpcuaServerGuard,\n    OpcuaMicroserviceGuard,\n    OpcuaService,\n    AddressSpaceService,\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: routes,\n      multi: true\n    }\n  ]\n})\nexport class OpcuaProtocolModule {}\n","import { downgradeComponent } from '@angular/upgrade/static';\nimport { OpcuaAddressSpaceTreeComponent } from '../opcua-address-space-tree.component';\nexport const opcuaAddressSpaceTreeComponent = downgradeComponent({\n  component: OpcuaAddressSpaceTreeComponent,\n  inputs: ['moId'],\n  outputs: ['selectedNode']\n});\n","import * as angular from 'angular';\nimport { registerNgModule } from '@c8y/ng1-modules/core/bootstrap';\nimport { opcuaAddressSpaceTreeComponent } from './downgraded.components';\n\nconst NAME = 'c8y.upgrade.opcua';\n\nconst angularJsModule = angular\n  .module(NAME, [])\n  .directive('c8yOpcuaAddressSpaceTree', opcuaAddressSpaceTreeComponent);\n\nexport const ng1Modules = [NAME];\n\nregisterNgModule(ng1Modules);\n"]}