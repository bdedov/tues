import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { of } from 'rxjs';
import { shareReplay, map, switchMap, distinctUntilKeyChanged, distinctUntilChanged, catchError, tap } from 'rxjs/operators';
import { IManagedObject, IResultList, InventoryService } from '@c8y/client';
import { memoize } from '@c8y/ngx-components';
import { RepositoryService, FirmwareBinary } from '@c8y/ngx-components/repository';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { property } from 'lodash-es';
let VersionOrPatchComponent = class VersionOrPatchComponent {
    constructor(repositoryService, inventoryService, bulkOpsService) {
        this.repositoryService = repositoryService;
        this.inventoryService = inventoryService;
        this.bulkOpsService = bulkOpsService;
        this.versionOrPatch = new EventEmitter();
        this.elementCount = 0;
        this.DD_LOW_COUNT = 10;
        this.firmware$ = this.bulkOpsService.firmwareId.pipe(distinctUntilChanged(), switchMap(id => this.inventoryService.detail$(id).pipe(catchError(error => of(error)))), shareReplay(1));
        this.baseVersions$ = this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(firmware => this.repositoryService.listBaseVersions(firmware)), tap(resp => {
            this.elementCount = resp.data ? resp.data.length : 0;
        }), shareReplay(1));
        this.isLegacy$ = this.firmware$.pipe(map(firmware => this.repositoryService.isLegacyEntry(firmware)), shareReplay(1));
        this.expanded = {};
        this.DD_LOW_COUNT = this.bulkOpsService.DD_LOW_COUNT;
    }
    getBinaryName$(binaryUrl) {
        return this.repositoryService.getBinaryName$(binaryUrl);
    }
    getBaseVersionAndPatches$(baseVersion) {
        return this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(firmware => this.repositoryService.listBaseVersionAndPatches(firmware, baseVersion)), shareReplay(1));
    }
    getPatchVersionsCount$(baseVersion) {
        return this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(() => this.firmware$), switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)), shareReplay(1));
    }
    selectVersionOrPatch(selected, versionOrPatch) {
        if (selected) {
            this.versionOrPatch.emit(versionOrPatch);
        }
    }
};
VersionOrPatchComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: InventoryService },
    { type: BulkOperationsService }
];
tslib_1.__decorate([
    Input()
], VersionOrPatchComponent.prototype, "selected", void 0);
tslib_1.__decorate([
    Output()
], VersionOrPatchComponent.prototype, "versionOrPatch", void 0);
tslib_1.__decorate([
    memoize()
], VersionOrPatchComponent.prototype, "getBinaryName$", null);
tslib_1.__decorate([
    memoize(property('id'))
], VersionOrPatchComponent.prototype, "getBaseVersionAndPatches$", null);
tslib_1.__decorate([
    memoize(property('id'))
], VersionOrPatchComponent.prototype, "getPatchVersionsCount$", null);
VersionOrPatchComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-version-or-patch-step',
        template: "<c8y-list-group\n  class=\"m-b-16\"\n  [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\"\n  *ngIf=\"(baseVersions$ | async)?.data.length > 0\"\n>\n  <c8y-li *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-firmware\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-10\">\n        <p>{{ baseVersion.c8y_Firmware.version }}</p>\n      </div>\n      <div class=\"col-2\">\n        <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning\">\n          {{ 'Legacy' | translate }}\n        </span>\n\n        <span *ngIf=\"!(isLegacy$ | async)\">\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) === null\">\n            <span class=\"label label-info\">\n              <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n            </span>\n          </span>\n\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) !== null\">\n            <span [ngPlural]=\"getPatchVersionsCount$(baseVersion) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default\"> <span translate>No patches</span></span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info\">\n                  <span translate>1 patch</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info\">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ count: getPatchVersionsCount$(baseVersion) | async }\"\n                    >{{ count }} patches</span\n                  ></span\n                >\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <c8y-list-group>\n        <c8y-li\n          *c8yFor=\"\n            let patchVersion of getBaseVersionAndPatches$(baseVersion) | async;\n            let i = index;\n            loadMore: 'auto'\n          \"\n        >\n          <c8y-li-radio\n            (onSelect)=\"selectVersionOrPatch($event, patchVersion)\"\n            [selected]=\"patchVersion === selected\"\n          ></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50\">\n            <div class=\"col-3\">\n              {{ patchVersion.c8y_Firmware.version }}\n            </div>\n            <div class=\"col-3\">\n              <span *ngIf=\"patchVersion.c8y_Patch; else version\" translate class=\"label label-info\"\n                >patch</span\n              >\n              <ng-template #version\n                ><span translate class=\"label label-primary\">version</span></ng-template\n              >\n            </div>\n            <div class=\"col-6 text-truncate\">\n              <span class=\"text-label-small m-r-4\" translate>\n                File\n              </span>\n              <span title=\"{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\">\n                {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n"
    })
], VersionOrPatchComponent);
export { VersionOrPatchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi1vci1wYXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvIiwic291cmNlcyI6WyJidWxrL2NyZWF0aW9uL2Zpcm13YXJlLXVwZGF0ZS1zdGVwcGVyL3ZlcnNpb24tb3ItcGF0Y2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdEMsT0FBTyxFQUNMLFdBQVcsRUFDWCxHQUFHLEVBQ0gsU0FBUyxFQUNULHVCQUF1QixFQUN2QixvQkFBb0IsRUFDcEIsVUFBVSxFQUNWLEdBQUcsRUFDSixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzVFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDL0YsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQU1yQyxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtJQTZCbEMsWUFDVSxpQkFBb0MsRUFDcEMsZ0JBQWtDLEVBQ2xDLGNBQXFDO1FBRnJDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDcEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUE5QnJDLG1CQUFjLEdBQWlDLElBQUksWUFBWSxFQUFrQixDQUFDO1FBRTVGLGlCQUFZ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O3dFQVN2QjtBQUdEO0lBREMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztxRUFRdkI7QUE3RFUsdUJBQXVCO0lBSm5DLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwyQkFBMkI7UUFDckMsazhHQUE4QztLQUMvQyxDQUFDO0dBQ1csdUJBQXVCLENBb0VuQztTQXBFWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7XG4gIHNoYXJlUmVwbGF5LFxuICBtYXAsXG4gIHN3aXRjaE1hcCxcbiAgZGlzdGluY3RVbnRpbEtleUNoYW5nZWQsXG4gIGRpc3RpbmN0VW50aWxDaGFuZ2VkLFxuICBjYXRjaEVycm9yLFxuICB0YXBcbn0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIElSZXN1bHRMaXN0LCBJbnZlbnRvcnlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeVNlcnZpY2UsIEZpcm13YXJlQmluYXJ5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5JztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5pbXBvcnQgeyBwcm9wZXJ0eSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS12ZXJzaW9uLW9yLXBhdGNoLXN0ZXAnLFxuICB0ZW1wbGF0ZVVybDogJ3ZlcnNpb24tb3ItcGF0Y2guY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFZlcnNpb25PclBhdGNoQ29tcG9uZW50IHtcbiAgQElucHV0KCkgc2VsZWN0ZWQ6IElNYW5hZ2VkT2JqZWN0O1xuICBAT3V0cHV0KCkgdmVyc2lvbk9yUGF0Y2g6IEV2ZW50RW1pdHRlcjxJTWFuYWdlZE9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyPElNYW5hZ2VkT2JqZWN0PigpO1xuXG4gIGVsZW1lbnRDb3VudDogbnVtYmVyID0gMDtcbiAgRERfTE9XX0NPVU5UOiBudW1iZXIgPSAxMDtcblxuICBmaXJtd2FyZSQ6IE9ic2VydmFibGU8SU1hbmFnZWRPYmplY3Q+ID0gdGhpcy5idWxrT3BzU2VydmljZS5maXJtd2FyZUlkLnBpcGUoXG4gICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSxcbiAgICBzd2l0Y2hNYXAoaWQgPT4gdGhpcy5pbnZlbnRvcnlTZXJ2aWNlLmRldGFpbCQoaWQpLnBpcGUoY2F0Y2hFcnJvcihlcnJvciA9PiBvZihlcnJvcikpKSksXG4gICAgc2hhcmVSZXBsYXkoMSlcbiAgKTtcblxuICBiYXNlVmVyc2lvbnMkOiBPYnNlcnZhYmxlPElSZXN1bHRMaXN0PElNYW5hZ2VkT2JqZWN0Pj4gPSB0aGlzLmZpcm13YXJlJC5waXBlKFxuICAgIGRpc3RpbmN0VW50aWxLZXlDaGFuZ2VkKCdpZCcpLFxuICAgIHN3aXRjaE1hcChmaXJtd2FyZSA9PiB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmxpc3RCYXNlVmVyc2lvbnMoZmlybXdhcmUpKSxcbiAgICB0YXAocmVzcCA9PiB7XG4gICAgICB0aGlzLmVsZW1lbnRDb3VudCA9IHJlc3AuZGF0YSA/IHJlc3AuZGF0YS5sZW5ndGggOiAwO1xuICAgIH0pLFxuICAgIHNoYXJlUmVwbGF5KDEpXG4gICk7XG5cbiAgaXNMZWdhY3kkOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0gdGhpcy5maXJtd2FyZSQucGlwZShcbiAgICBtYXAoZmlybXdhcmUgPT4gdGhpcy5yZXBvc2l0b3J5U2VydmljZS5pc0xlZ2FjeUVudHJ5KGZpcm13YXJlKSksXG4gICAgc2hhcmVSZXBsYXkoMSlcbiAgKTtcblxuICBleHBhbmRlZDogeyBbaWQ6IHN0cmluZ106IGJvb2xlYW4gfSA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVwb3NpdG9yeVNlcnZpY2U6IFJlcG9zaXRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgaW52ZW50b3J5U2VydmljZTogSW52ZW50b3J5U2VydmljZSxcbiAgICBwcml2YXRlIGJ1bGtPcHNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5ERF9MT1dfQ09VTlQgPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlLkREX0xPV19DT1VOVDtcbiAgfVxuXG4gIEBtZW1vaXplKClcbiAgZ2V0QmluYXJ5TmFtZSQoYmluYXJ5VXJsKSB7XG4gICAgcmV0dXJuIHRoaXMucmVwb3NpdG9yeVNlcnZpY2UuZ2V0QmluYXJ5TmFtZSQoYmluYXJ5VXJsKTtcbiAgfVxuXG4gIEBtZW1vaXplKHByb3BlcnR5KCdpZCcpKVxuICBnZXRCYXNlVmVyc2lvbkFuZFBhdGNoZXMkKGJhc2VWZXJzaW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZmlybXdhcmUkLnBpcGUoXG4gICAgICBkaXN0aW5jdFVudGlsS2V5Q2hhbmdlZCgnaWQnKSxcbiAgICAgIHN3aXRjaE1hcChmaXJtd2FyZSA9PlxuICAgICAgICB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmxpc3RCYXNlVmVyc2lvbkFuZFBhdGNoZXMoZmlybXdhcmUsIGJhc2VWZXJzaW9uKVxuICAgICAgKSxcbiAgICAgIHNoYXJlUmVwbGF5KDEpXG4gICAgKTtcbiAgfVxuXG4gIEBtZW1vaXplKHByb3BlcnR5KCdpZCcpKVxuICBnZXRQYXRjaFZlcnNpb25zQ291bnQkKGJhc2VWZXJzaW9uOiBGaXJtd2FyZUJpbmFyeSkge1xuICAgIHJldHVybiB0aGlzLmZpcm13YXJlJC5waXBlKFxuICAgICAgZGlzdGluY3RVbnRpbEtleUNoYW5nZWQoJ2lkJyksXG4gICAgICBzd2l0Y2hNYXAoKCkgPT4gdGhpcy5maXJtd2FyZSQpLFxuICAgICAgc3dpdGNoTWFwKGZpcm13YXJlID0+IHRoaXMucmVwb3NpdG9yeVNlcnZpY2UuZ2V0UGF0Y2hWZXJzaW9uc0NvdW50JChmaXJtd2FyZSwgYmFzZVZlcnNpb24pKSxcbiAgICAgIHNoYXJlUmVwbGF5KDEpXG4gICAgKTtcbiAgfVxuXG4gIHNlbGVjdFZlcnNpb25PclBhdGNoKHNlbGVjdGVkOiBib29sZWFuLCB2ZXJzaW9uT3JQYXRjaDogSU1hbmFnZWRPYmplY3QpIHtcbiAgICBpZiAoc2VsZWN0ZWQpIHtcbiAgICAgIHRoaXMudmVyc2lvbk9yUGF0Y2guZW1pdCh2ZXJzaW9uT3JQYXRjaCk7XG4gICAgfVxuICB9XG59XG4iXX0=