import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BulkOperationsService, C8Y_BULK_TYPE_FRAGMENTS } from '@c8y/ngx-components/operations/bulk-operations-service';
import { omit } from 'lodash-es';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
let SingleOperationItemComponent = class SingleOperationItemComponent {
    constructor(bulkOperationsService, alertService) {
        this.bulkOperationsService = bulkOperationsService;
        this.alertService = alertService;
        this.device = {};
        this.showIfTextTruncated = false;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
        this.singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.readOnly = false;
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.iconClass = this.getIconClass();
            this.device = yield this.getDeviceMO(this.operation.deviceId);
        });
    }
    ngAfterViewInit() {
        this.isTextTruncated();
    }
    retrySingleOperation(singleOperation) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const operationToCreate = omit(singleOperation, [
                'id',
                'self',
                'status',
                'failureReason',
                'creationTime',
                'delivery'
            ]);
            try {
                yield this.bulkOperationsService.createSingleOperation(operationToCreate);
                this.alertService.success(gettext('Operation created.'));
            }
            catch (er) {
                this.alertService.addServerFailure(er);
            }
        });
    }
    getIconClass() {
        return this.singleOperationsStatusProperties.find(operationProperties => operationProperties.label.toUpperCase() === this.operation.status).iconClass;
    }
    getDeviceMO(deviceId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const inventoryMO = yield this.bulkOperationsService.getManagedObject(deviceId);
            if (inventoryMO) {
                return inventoryMO.data;
            }
        });
    }
    isTextTruncated() {
        if (this.operation.failureReason) {
            const el = this.failureReasonRef.nativeElement;
            this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;
        }
    }
};
SingleOperationItemComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: AlertService }
];
tslib_1.__decorate([
    Input()
], SingleOperationItemComponent.prototype, "operation", void 0);
tslib_1.__decorate([
    Input()
], SingleOperationItemComponent.prototype, "readOnly", void 0);
tslib_1.__decorate([
    ViewChild('failureReason', { static: true })
], SingleOperationItemComponent.prototype, "failureReasonRef", void 0);
SingleOperationItemComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-single-operation-item',
        template: "<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{'content-flex-80': !readOnly, 'content-flex-50': readOnly}\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 v-fit-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i><span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"
    })
], SingleOperationItemComponent);
export { SingleOperationItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGstb3BlcmF0aW9ucy1saXN0L3NpbmdsZS1vcGVyYXRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzVELE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsdUJBQXVCLEVBQ3hCLE1BQU0sd0RBQXdELENBQUM7QUFDaEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQU1wRyxJQUFhLDRCQUE0QixHQUF6QyxNQUFhLDRCQUE0QjtJQVl2QyxZQUNVLHFCQUE0QyxFQUM1QyxZQUEwQjtRQUQxQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBYnBDLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFDWix3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIsK0JBQTBCLEdBQUcsc0JBQXNCLENBQUM7UUFDcEQscUNBQWdDLEdBQUcsMkJBQTJCLENBQUM7UUFLL0QsYUFBUSxHQUFZLEtBQUssQ0FBQztJQU12QixDQUFDO0lBRUUsUUFBUTs7WUFDWixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hFLENBQUM7S0FBQTtJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVLLG9CQUFvQixDQUFDLGVBQWU7O1lBQ3hDLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFDOUMsSUFBSTtnQkFDSixNQUFNO2dCQUNOLFFBQVE7Z0JBQ1IsZUFBZTtnQkFDZixjQUFjO2dCQUNkLFVBQVU7YUFDWCxDQUFDLENBQUM7WUFFSCxJQUFJO2dCQUNGLE1BQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLENBQUM7Z0JBQzFFLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7YUFDMUQ7WUFBQyxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQztLQUFBO0lBRUQsWUFBWTtRQUNWLE9BQU8sSUFBSSxDQUFDLGdDQUFnQyxDQUFDLElBQUksQ0FDL0MsbUJBQW1CLENBQUMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FDekYsQ0FBQyxTQUFTLENBQUM7SUFDZCxDQUFDO0lBRWEsV0FBVyxDQUFDLFFBQVE7O1lBQ2hDLE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2hGLElBQUksV0FBVyxFQUFFO2dCQUNmLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQzthQUN6QjtRQUNILENBQUM7S0FBQTtJQUVPLGVBQWU7UUFDckIsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRTtZQUNoQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDO1lBQy9DLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxFQUFFLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQzNFO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBbERrQyxxQkFBcUI7WUFDOUIsWUFBWTs7QUFQcEM7SUFEQyxLQUFLLEVBQUU7K0RBQ2M7QUFFdEI7SUFEQyxLQUFLLEVBQUU7OERBQ2tCO0FBQ29CO0lBQTdDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7c0VBQThCO0FBVmhFLDRCQUE0QjtJQUp4QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsMkJBQTJCO1FBQ3JDLHVzREFBcUQ7S0FDdEQsQ0FBQztHQUNXLDRCQUE0QixDQStEeEM7U0EvRFksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gIEM4WV9CVUxLX1RZUEVfRlJBR01FTlRTXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5pbXBvcnQgeyBvbWl0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IFNJTkdMRV9PUF9TVEFUVVNfTkFNRVMsIFNJTkdMRV9PUF9TVEFUVVNfUFJPUEVSVElFUyB9IGZyb20gJy4vc2luZ2xlLW9wZXJhdGlvbi1pdGVtLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNpbmdsZS1vcGVyYXRpb24taXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNpbmdsZU9wZXJhdGlvbkl0ZW1Db21wb25lbnQge1xuICBkZXZpY2UgPSB7fTtcbiAgc2hvd0lmVGV4dFRydW5jYXRlZCA9IGZhbHNlO1xuICBzaW5nbGVPcGVyYXRpb25TdGF0dXNOYW1lcyA9IFNJTkdMRV9PUF9TVEFUVVNfTkFNRVM7XG4gIHNpbmdsZU9wZXJhdGlvbnNTdGF0dXNQcm9wZXJ0aWVzID0gU0lOR0xFX09QX1NUQVRVU19QUk9QRVJUSUVTO1xuICBpY29uQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KClcbiAgb3BlcmF0aW9uOiBJT3BlcmF0aW9uO1xuICBASW5wdXQoKVxuICByZWFkT25seTogYm9vbGVhbiA9IGZhbHNlO1xuICBAVmlld0NoaWxkKCdmYWlsdXJlUmVhc29uJywgeyBzdGF0aWM6IHRydWUgfSkgZmFpbHVyZVJlYXNvblJlZjogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25zU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaWNvbkNsYXNzID0gdGhpcy5nZXRJY29uQ2xhc3MoKTtcbiAgICB0aGlzLmRldmljZSA9IGF3YWl0IHRoaXMuZ2V0RGV2aWNlTU8odGhpcy5vcGVyYXRpb24uZGV2aWNlSWQpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuaXNUZXh0VHJ1bmNhdGVkKCk7XG4gIH1cblxuICBhc3luYyByZXRyeVNpbmdsZU9wZXJhdGlvbihzaW5nbGVPcGVyYXRpb24pIHtcbiAgICBjb25zdCBvcGVyYXRpb25Ub0NyZWF0ZSA9IG9taXQoc2luZ2xlT3BlcmF0aW9uLCBbXG4gICAgICAnaWQnLFxuICAgICAgJ3NlbGYnLFxuICAgICAgJ3N0YXR1cycsXG4gICAgICAnZmFpbHVyZVJlYXNvbicsXG4gICAgICAnY3JlYXRpb25UaW1lJyxcbiAgICAgICdkZWxpdmVyeSdcbiAgICBdKTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5jcmVhdGVTaW5nbGVPcGVyYXRpb24ob3BlcmF0aW9uVG9DcmVhdGUpO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdPcGVyYXRpb24gY3JlYXRlZC4nKSk7XG4gICAgfSBjYXRjaCAoZXIpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXIpO1xuICAgIH1cbiAgfVxuXG4gIGdldEljb25DbGFzcygpIHtcbiAgICByZXR1cm4gdGhpcy5zaW5nbGVPcGVyYXRpb25zU3RhdHVzUHJvcGVydGllcy5maW5kKFxuICAgICAgb3BlcmF0aW9uUHJvcGVydGllcyA9PiBvcGVyYXRpb25Qcm9wZXJ0aWVzLmxhYmVsLnRvVXBwZXJDYXNlKCkgPT09IHRoaXMub3BlcmF0aW9uLnN0YXR1c1xuICAgICkuaWNvbkNsYXNzO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBnZXREZXZpY2VNTyhkZXZpY2VJZCkge1xuICAgIGNvbnN0IGludmVudG9yeU1PID0gYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0TWFuYWdlZE9iamVjdChkZXZpY2VJZCk7XG4gICAgaWYgKGludmVudG9yeU1PKSB7XG4gICAgICByZXR1cm4gaW52ZW50b3J5TU8uZGF0YTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGlzVGV4dFRydW5jYXRlZCgpIHtcbiAgICBpZiAodGhpcy5vcGVyYXRpb24uZmFpbHVyZVJlYXNvbikge1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmZhaWx1cmVSZWFzb25SZWYubmF0aXZlRWxlbWVudDtcbiAgICAgIHRoaXMuc2hvd0lmVGV4dFRydW5jYXRlZCA9IGVsLm9mZnNldFdpZHRoIDwgZWwuc2Nyb2xsV2lkdGggPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=