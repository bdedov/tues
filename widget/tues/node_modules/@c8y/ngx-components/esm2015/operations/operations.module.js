import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TimepickerModule } from 'ngx-bootstrap/timepicker';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CoreModule, FormsModule, HOOK_TABS } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { DeviceProfileModule } from '@c8y/ngx-components/device-profile';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';
import { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';
import { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';
import { BulkOperationFromSingleComponent } from './bulk/create-from-single/bulk-operation-from-single.component';
import { BulkOperationStepper } from './bulk/creation/bulk-operation-stepper.component';
import { BulkOperationsStepperContainerComponent } from './bulk/creation/bulk-operations-stepper-container.component';
import { ConfirmDeviceProfileSelectionStepComponent } from './bulk/creation/device-profile-update-stepper/confirm-device-profile-selection-step.component';
import { SelectDeviceProfileStepComponent } from './bulk/creation/device-profile-update-stepper/select-device-profile-step.component';
import { SelectFirmwareComponent } from './bulk/creation/firmware-update-stepper/select-firmware.component';
import { VersionOrPatchComponent } from './bulk/creation/firmware-update-stepper/version-or-patch.component';
import { ConfirmSoftwareSelectionStepComponent } from './bulk/creation/software-update-stepper/confirm-software-selection-step.component';
import { SelectSoftwareStepComponent } from './bulk/creation/software-update-stepper/select-software-step.component';
import { StepperBulkTypeConfiguration } from './bulk/creation/stepper-bulk-type-configuration.component';
import { StepperBulkTypeDeviceProfile } from './bulk/creation/stepper-bulk-type-device-profile.component';
import { StepperFirmware } from './bulk/creation/stepper-bulk-type-firmware.component';
import { StepperBulkTypeSoftware } from './bulk/creation/stepper-bulk-type-software.component';
import { CustomStep } from './bulk/custom-step.directive';
import { OperationDetailsComponent } from './details/operation-details.component';
import { DeviceSelectorComponent } from './device-selector/device-selector.component';
import { TabsFactory } from './factories/tabs.factory';
export const routes = [
    {
        path: 'devicecontrol',
        redirectTo: 'devicecontrol/single',
        pathMatch: 'full'
    },
    {
        path: 'devicecontrol/bulk/creation/:type',
        component: BulkOperationsStepperContainerComponent
    },
    {
        path: 'devicecontrol/single/create-bulk/:operationId',
        component: BulkOperationFromSingleComponent
    }
];
let OperationsModule = class OperationsModule {
};
OperationsModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            BulkOperationStepper,
            BulkOperationsStepperContainerComponent,
            BulkOperationFromSingleComponent,
            CustomStep,
            DeviceSelectorComponent,
            StepperBulkTypeSoftware,
            StepperFirmware,
            StepperBulkTypeConfiguration,
            StepperBulkTypeDeviceProfile,
            OperationDetailsComponent,
            VersionOrPatchComponent,
            SelectFirmwareComponent,
            ConfirmSoftwareSelectionStepComponent,
            SelectSoftwareStepComponent,
            SelectDeviceProfileStepComponent,
            ConfirmDeviceProfileSelectionStepComponent
        ],
        imports: [
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            RouterModule.forRoot(routes, { useHash: true }),
            TooltipModule.forRoot(),
            PopoverModule.forRoot(),
            CollapseModule.forRoot(),
            BsDropdownModule.forRoot(),
            BsDatepickerModule.forRoot(),
            TimepickerModule.forRoot(),
            RepositoryModule,
            DeviceProfileModule,
            DeviceGridModule,
            SingleOperationDetailsModule,
            OperationSummaryModule,
            BulkOperationSchedulerModule
        ],
        exports: [BulkOperationStepper, CustomStep],
        providers: [{ provide: HOOK_TABS, useClass: TabsFactory, multi: true }],
        entryComponents: [BulkOperationsStepperContainerComponent]
    })
], OperationsModule);
export { OperationsModule };
//# sourceMappingURL=data:application/json;base64,