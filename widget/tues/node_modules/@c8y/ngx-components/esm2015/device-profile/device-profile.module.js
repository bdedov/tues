import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE, gettext, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { ReactiveFormsModule } from '@angular/forms';
import { DeviceProfileComponent } from './device-profile.component';
import { DeviceProfileListComponent } from './device-profile-list.component';
import { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';
import { DeviceProfileService } from './device-profile.service';
import { AddDeviceProfileComponent } from './add-device-profile.component';
import { DeviceProfileGuard } from './device-profile.guard';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { SelectConfigurationModalComponent } from './select-configuration-modal.component';
import { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';
import { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';
import { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';
import { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';
const deviceProfilesRoutes = [
    {
        path: 'device-profiles/:id',
        component: DeviceProfileComponent
    },
    {
        path: 'device-profiles',
        component: DeviceProfileListComponent
    }
];
const deviceTabProfileRoutes = [
    {
        context: ViewContext.Device,
        path: 'device-profile',
        component: DeviceTabProfileComponent,
        label: gettext('Device profile'),
        icon: 'c8y-device-profile',
        canActivate: [DeviceProfileGuard]
    }
];
const ɵ0 = deviceTabProfileRoutes;
let DeviceProfileModule = class DeviceProfileModule {
};
DeviceProfileModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            DeviceProfileComponent,
            DeviceProfileListComponent,
            AddDeviceProfileComponent,
            SelectConfigurationModalComponent,
            DeviceTabProfileComponent,
            DeviceTabProfileDetailComponent,
            DeviceProfileItemListComponent
        ],
        exports: [],
        imports: [
            CoreModule,
            CommonModule,
            RepositoryModule,
            RouterModule.forChild(deviceProfilesRoutes),
            BsDropdownModule.forRoot(),
            TooltipModule,
            ReactiveFormsModule,
            ButtonsModule,
            PopoverModule,
            SingleOperationDetailsModule
        ],
        entryComponents: [
            AddDeviceProfileComponent,
            SelectConfigurationModalComponent,
            DeviceTabProfileComponent
        ],
        providers: [
            {
                provide: HOOK_NAVIGATOR_NODES,
                useClass: DeviceProfileNavigationFactory,
                multi: true
            },
            {
                provide: HOOK_ONCE_ROUTE,
                useValue: ɵ0,
                multi: true
            },
            DeviceProfileService,
            DeviceProfileGuard
        ]
    })
], DeviceProfileModule);
export { DeviceProfileModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXByb2ZpbGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtcHJvZmlsZS8iLCJzb3VyY2VzIjpbImRldmljZS1wcm9maWxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQVMsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUNMLFlBQVksRUFDWixVQUFVLEVBQ1Ysb0JBQW9CLEVBQ3BCLGVBQWUsRUFDZixPQUFPLEVBQ1AsV0FBVyxFQUNaLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDM0YsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDOUYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDM0csT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0seURBQXlELENBQUM7QUFDekcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0seURBQXlELENBQUM7QUFFdkcsTUFBTSxvQkFBb0IsR0FBWTtJQUNwQztRQUNFLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsU0FBUyxFQUFFLHNCQUFzQjtLQUNsQztJQUNEO1FBQ0UsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixTQUFTLEVBQUUsMEJBQTBCO0tBQ3RDO0NBQ0YsQ0FBQztBQUVGLE1BQU0sc0JBQXNCLEdBQVU7SUFDcEM7UUFDRSxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07UUFDM0IsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixTQUFTLEVBQUUseUJBQXlCO1FBQ3BDLEtBQUssRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDaEMsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztLQUNsQztDQUNGLENBQUM7V0FzQ2Msc0JBQXNCO0FBT3RDLElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0NBQUcsQ0FBQTtBQUF0QixtQkFBbUI7SUEzQy9CLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRTtZQUNaLHNCQUFzQjtZQUN0QiwwQkFBMEI7WUFDMUIseUJBQXlCO1lBQ3pCLGlDQUFpQztZQUNqQyx5QkFBeUI7WUFDekIsK0JBQStCO1lBQy9CLDhCQUE4QjtTQUMvQjtRQUNELE9BQU8sRUFBRSxFQUFFO1FBQ1gsT0FBTyxFQUFFO1lBQ1AsVUFBVTtZQUNWLFlBQVk7WUFDWixnQkFBZ0I7WUFDaEIsWUFBWSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztZQUMzQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7WUFDMUIsYUFBYTtZQUNiLG1CQUFtQjtZQUNuQixhQUFhO1lBQ2IsYUFBYTtZQUNiLDRCQUE0QjtTQUM3QjtRQUNELGVBQWUsRUFBRTtZQUNmLHlCQUF5QjtZQUN6QixpQ0FBaUM7WUFDakMseUJBQXlCO1NBQzFCO1FBQ0QsU0FBUyxFQUFFO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjtnQkFDN0IsUUFBUSxFQUFFLDhCQUE4QjtnQkFDeEMsS0FBSyxFQUFFLElBQUk7YUFDWjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxlQUFlO2dCQUN4QixRQUFRLElBQXdCO2dCQUNoQyxLQUFLLEVBQUUsSUFBSTthQUNaO1lBQ0Qsb0JBQW9CO1lBQ3BCLGtCQUFrQjtTQUNuQjtLQUNGLENBQUM7R0FDVyxtQkFBbUIsQ0FBRztTQUF0QixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGUsIFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBDb21tb25Nb2R1bGUsXG4gIENvcmVNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBIT09LX09OQ0VfUk9VVEUsXG4gIGdldHRleHQsXG4gIFZpZXdDb250ZXh0XG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnNEcm9wZG93bk1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvZHJvcGRvd24nO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IEJ1dHRvbnNNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2J1dHRvbnMnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERldmljZVByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1wcm9maWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlTGlzdENvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLXByb2ZpbGUtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZU5hdmlnYXRpb25GYWN0b3J5IH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS1uYXZpZ2F0aW9uLmZhY3RvcnknO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZVNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1wcm9maWxlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWRkRGV2aWNlUHJvZmlsZUNvbXBvbmVudCB9IGZyb20gJy4vYWRkLWRldmljZS1wcm9maWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlR3VhcmQgfSBmcm9tICcuL2RldmljZS1wcm9maWxlLmd1YXJkJztcbmltcG9ydCB7IFJlcG9zaXRvcnlNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuaW1wb3J0IHsgU2VsZWN0Q29uZmlndXJhdGlvbk1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3QtY29uZmlndXJhdGlvbi1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlVGFiUHJvZmlsZUNvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLXRhYi1wcm9maWxlL2RldmljZS10YWItcHJvZmlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlVGFiUHJvZmlsZURldGFpbENvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLXRhYi1wcm9maWxlL2RldmljZS10YWItcHJvZmlsZS1kZXRhaWwuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVJdGVtTGlzdENvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLXRhYi1wcm9maWxlL2RldmljZS1wcm9maWxlLWl0ZW0tbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2luZ2xlT3BlcmF0aW9uRGV0YWlsc01vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9zaW5nbGUtb3BlcmF0aW9uLWRldGFpbHMnO1xuXG5jb25zdCBkZXZpY2VQcm9maWxlc1JvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdkZXZpY2UtcHJvZmlsZXMvOmlkJyxcbiAgICBjb21wb25lbnQ6IERldmljZVByb2ZpbGVDb21wb25lbnRcbiAgfSxcbiAge1xuICAgIHBhdGg6ICdkZXZpY2UtcHJvZmlsZXMnLFxuICAgIGNvbXBvbmVudDogRGV2aWNlUHJvZmlsZUxpc3RDb21wb25lbnRcbiAgfVxuXTtcblxuY29uc3QgZGV2aWNlVGFiUHJvZmlsZVJvdXRlczogYW55W10gPSBbXG4gIHtcbiAgICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gICAgcGF0aDogJ2RldmljZS1wcm9maWxlJyxcbiAgICBjb21wb25lbnQ6IERldmljZVRhYlByb2ZpbGVDb21wb25lbnQsXG4gICAgbGFiZWw6IGdldHRleHQoJ0RldmljZSBwcm9maWxlJyksXG4gICAgaWNvbjogJ2M4eS1kZXZpY2UtcHJvZmlsZScsXG4gICAgY2FuQWN0aXZhdGU6IFtEZXZpY2VQcm9maWxlR3VhcmRdXG4gIH1cbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIERldmljZVByb2ZpbGVDb21wb25lbnQsXG4gICAgRGV2aWNlUHJvZmlsZUxpc3RDb21wb25lbnQsXG4gICAgQWRkRGV2aWNlUHJvZmlsZUNvbXBvbmVudCxcbiAgICBTZWxlY3RDb25maWd1cmF0aW9uTW9kYWxDb21wb25lbnQsXG4gICAgRGV2aWNlVGFiUHJvZmlsZUNvbXBvbmVudCxcbiAgICBEZXZpY2VUYWJQcm9maWxlRGV0YWlsQ29tcG9uZW50LFxuICAgIERldmljZVByb2ZpbGVJdGVtTGlzdENvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXSxcbiAgaW1wb3J0czogW1xuICAgIENvcmVNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJlcG9zaXRvcnlNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLmZvckNoaWxkKGRldmljZVByb2ZpbGVzUm91dGVzKSxcbiAgICBCc0Ryb3Bkb3duTW9kdWxlLmZvclJvb3QoKSxcbiAgICBUb29sdGlwTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQnV0dG9uc01vZHVsZSxcbiAgICBQb3BvdmVyTW9kdWxlLFxuICAgIFNpbmdsZU9wZXJhdGlvbkRldGFpbHNNb2R1bGVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgQWRkRGV2aWNlUHJvZmlsZUNvbXBvbmVudCxcbiAgICBTZWxlY3RDb25maWd1cmF0aW9uTW9kYWxDb21wb25lbnQsXG4gICAgRGV2aWNlVGFiUHJvZmlsZUNvbXBvbmVudFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBEZXZpY2VQcm9maWxlTmF2aWdhdGlvbkZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19PTkNFX1JPVVRFLFxuICAgICAgdXNlVmFsdWU6IGRldmljZVRhYlByb2ZpbGVSb3V0ZXMsXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAgRGV2aWNlUHJvZmlsZVNlcnZpY2UsXG4gICAgRGV2aWNlUHJvZmlsZUd1YXJkXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlUHJvZmlsZU1vZHVsZSB7fVxuIl19