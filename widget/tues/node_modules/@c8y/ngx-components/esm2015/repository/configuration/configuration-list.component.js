import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { IManagedObject, InventoryBinaryService, InventoryService, IResultList } from '@c8y/client';
import { AlertService, FilterInputComponent, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { of, pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import { ConfigurationDetailComponent } from './configuration-detail.component';
import { property } from 'lodash-es';
import { saveAs } from 'file-saver';
let ConfigurationListComponent = class ConfigurationListComponent {
    constructor(alert, repositoryService, bsModalService, modalService, translateService, inventoryBinaryService, inventoryService) {
        this.alert = alert;
        this.repositoryService = repositoryService;
        this.bsModalService = bsModalService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.inventoryBinaryService = inventoryBinaryService;
        this.inventoryService = inventoryService;
        this.filterTerm = '';
        this.reloading = false;
        this.DELETED_SUCCESS_MSG = gettext('Configuration deleted.');
    }
    ngOnInit() {
        this.loadConfigurations();
    }
    loadConfigurations() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.reloading = true;
            this.configurations$ = of(yield this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION));
            this.reloading = false;
            this.reset();
        });
    }
    add() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.bsModalService.show(ConfigurationDetailComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true
                }).content.result;
                yield this.loadConfigurations();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    edit(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const fileBinary = yield this.repositoryService.getBinaryFile(configuration.url, {
                allowExternal: false
            });
            try {
                const modal = this.bsModalService.show(ConfigurationDetailComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true,
                    initialState: {
                        selected: { id: configuration.id, configurationType: configuration.configurationType },
                        version: configuration.name,
                        deviceType: configuration.deviceType,
                        description: configuration.description,
                        binary: { file: fileBinary, url: configuration.url }
                    }
                }).content;
                modal.mo = configuration;
                yield modal.result;
                yield this.loadConfigurations();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    isBinaryFile(configuration) {
        const id = this.inventoryBinaryService.getIdFromUrl(configuration.url);
        return id ? true : false;
    }
    getBinaryName(configuration) {
        return this.repositoryService.getBinaryName$(configuration.url);
    }
    download(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const fileBinary = yield this.repositoryService.getBinaryFile(configuration.url, {
                allowExternal: false
            });
            saveAs(fileBinary);
        });
    }
    delete(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const title = gettext('Delete configuration snapshot');
                const confirmationText = gettext('You are about to delete the configuration snapshot {{ name }}.');
                const hint = gettext('This operation is irreversible.');
                const proceed = gettext('Do you want to proceed?');
                const body = [
                    this.translateService.instant(confirmationText, {
                        name: configuration.name
                    }),
                    this.translateService.instant(hint),
                    this.translateService.instant(proceed)
                ].join(' ');
                const labels = {
                    ok: gettext('Delete')
                };
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.repositoryService.delete(configuration);
                this.alert.success(this.DELETED_SUCCESS_MSG);
                yield this.loadConfigurations();
            }
            catch (ex) {
                if (ex) {
                    this.alert.addServerFailure(ex);
                }
            }
        });
    }
    setPipe(filterTerm) {
        this.filterTerm = filterTerm;
        this.filterPipe = pipe(map((data) => {
            this.data =
                filterTerm.trim().length === 0
                    ? data
                    : data.filter((mo) => this.filterContainString(mo.name, filterTerm) ||
                        this.filterContainString(mo.configurationType, filterTerm) ||
                        this.filterContainString(mo.deviceType, filterTerm));
            return this.data;
        }));
    }
    shouldShowEmptyState() {
        return !(this.data && this.data.length > 0);
    }
    reset() {
        this.filter.filterTerm = '';
        this.setPipe('');
    }
    filterContainString(name, filterTerm) {
        const term = filterTerm.toLowerCase().trim();
        return name && name.toLowerCase().indexOf(term) > -1;
    }
};
ConfigurationListComponent.ctorParameters = () => [
    { type: AlertService },
    { type: RepositoryService },
    { type: BsModalService },
    { type: ModalService },
    { type: TranslateService },
    { type: InventoryBinaryService },
    { type: InventoryService }
];
tslib_1.__decorate([
    ViewChild(FilterInputComponent, { static: false })
], ConfigurationListComponent.prototype, "filter", void 0);
tslib_1.__decorate([
    memoize(property('id'))
], ConfigurationListComponent.prototype, "getBinaryName", null);
ConfigurationListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-configuration-list',
        template: "<c8y-title>\n  <span translate>\n    Configuration snapshots repository\n  </span>&nbsp;\n  <small\n    *ngIf=\"(configurations$ | async)?.paging.totalPages === 1 && !filterTerm\"\n  >\n    {{ (configurations$ | async).data.length }}\n    <span translate>\n      snapshots\n    </span>\n  </small>\n  <small\n    *ngIf=\"(configurations$ | async)?.paging.totalPages > 1 && !filterTerm\"\n    [tooltip]=\"'More data available. Scroll to the bottom of the list to load it.' | translate\"\n    container=\"body\"\n  >\n    {{ (configurations$ | async).paging.pageSize }}+\n    <span translate>snapshots</span>\n  </small>\n  <small *ngIf=\"filterTerm\">\n    <span translate>\n      Search results for\n    </span>&nbsp;\"\n      {{ this.filterTerm }}\"\n    </small>\n</c8y-title>\n\n<c8y-action-bar-item itemClass=\"navbar-form\">\n  <c8y-filter\n    [icon]=\"'search'\"\n    (onSearch)=\"setPipe($event)\"\n  ></c8y-filter>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"add()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add configuration snapshot' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    title=\"{{ 'Reload' | translate }}\"\n    (click)=\"loadConfigurations()\"\n  >\n    <i [ngClass]=\"{ 'fa-spin': reloading }\"\n      c8yIcon=\"refresh\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<!-- empty state -->\n<div class=\"c8y-empty-state text-center\"\n  *ngIf=\"!filterTerm && (configurations$ | async)?.data.length === 0\"\n>\n  <h1 c8yIcon=\"gears\"></h1>\n  <h3 translate>There are no configuration snapshots defined</h3>\n  <p translate>Add a configuration snapshot first.</p>\n  <div>\n    <button (click)=\"add()\" class=\"btn btn-primary\" translate>\n      Add configuration snapshot\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small forceHtmlTranslate ngNonBindable>\n      Find out more in the\n      <a c8y-guide-href=\"users-guide/device-management/#configuration-repository\">\n        User guide`KEEP_ORIGINAL`\n        </a>.\n    </small>\n  </p>\n</div>\n\n<!-- no results empty state -->\n<div class=\"c8y-empty-state\"\n  *ngIf=\"shouldShowEmptyState() && (configurations$ | async)?.data.length > 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\"\n    c8yIcon=\"search\"\n  ></h1>\n  <h3 translate>\n    No results to display.\n  </h3>\n  <p translate>\n    Refine your search terms or check your spelling.\n  </p>\n</div>\n\n<c8y-list-group class=\"m-b-24\"\n  *ngIf=\"(configurations$ | async)?.data.length > 0\"\n  [ngClass]=\"{ 'dd-low': data && data.length ? data.length < 10 : (configurations$ | async)?.data.length < 10 }\"\n\n>\n  <c8y-li class=\"page-sticky-header c8y-list__item--empty-actions hidden-xs\"\n    *ngIf=\"!shouldShowEmptyState()\"\n  >\n    <c8y-li-icon>\n      <i class=\"fa\"></i>\n    </c8y-li-icon>\n    <c8y-li-body class=\"content-flex-60\">\n      <div class=\"col-2\">\n        {{ 'Configuration' | translate }}\n      </div>\n      <div class=\"col-3\">\n        {{ 'Description' | translate }}\n      </div>\n      <div class=\"col-3\">\n        {{ 'File' | translate }}\n      </div>\n      <div class=\"col-2\">\n        {{ 'Device type' | translate }}\n      </div>\n      <div class=\"col-2\">\n        {{ 'Configuration type' | translate }}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n\n  <c8y-li *c8yFor=\"let configuration of configurations$; pipe: filterPipe\">\n    <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n    <div class=\"content-flex-60\">\n      <button class=\"btn-clean col-2\"\n        (click)=\"edit(configuration)\"\n      >\n        <span class=\"text-truncate\"\n          title=\"{{ configuration.name || '-' }}\"\n        >\n          <c8y-highlight\n            [text]=\"configuration.name || '-'\"\n            elementClass=\"text-info\"\n            [pattern]=\"filterTerm\"\n          ></c8y-highlight>\n        </span>\n      </button>\n      <div class=\"col-3\">\n        <div class=\"text-label-small visible-xs-inline m-r-4\">\n          {{ 'Description' | translate }}\n        </div>\n        <small  class=\"text-truncate\"\n          *ngIf=\"configuration.description; else emptyDescription\"\n          [title]=\"configuration.description\"\n        >\n          {{ configuration.description }}\n        </small>\n      </div>\n      <div class=\"col-3\">\n        <span class=\"text-truncate\">\n          <span class=\"text-label-small m-r-4 visible-xs-inline\" translate>\n            File\n          </span>\n          <small\n            *ngIf=\"isBinaryFile(configuration); else noFile\"\n            title=\"{{ getBinaryName(configuration) | async }}\"\n          >\n            {{ getBinaryName(configuration) | async }}\n          </small>\n          <ng-template #noFile>\n            <small title=\"{{ configuration.url }}\">\n              {{ configuration.url }}\n            </small>\n          </ng-template>\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"text-truncate\"\n          title=\"{{ 'Device type' | translate }}: {{ configuration.deviceType || '-' }}\"\n        >\n          <span class=\"text-label-small visible-xs-inline m-r-4\" translate>\n            Device type\n          </span>\n          <span *ngIf=\"configuration.deviceType; else emptyText\">\n            <c8y-highlight\n              [text]=\"configuration.deviceType || '-'\"\n              elementClass=\"text-info\"\n              [pattern]=\"filterTerm\"\n            >\n            </c8y-highlight>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"text-truncate\"\n          title=\"{{ configuration.configurationType }}\"\n        >\n          <span class=\"label label-primary\"\n            *ngIf=\"configuration.configurationType; else emptyText\"\n          >\n            <c8y-highlight\n              [text]=\"configuration.configurationType\"\n              elementClass=\"text-info\"\n              [pattern]=\"filterTerm\"\n            >\n            </c8y-highlight>\n          </span>\n        </div>\n      </div>\n    </div>\n    <c8y-li-action\n      (click)=\"edit(configuration)\"\n      icon=\"pencil\"\n      label=\"{{ 'Edit' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      (click)=\"delete(configuration)\"\n      icon=\"trash-o\"\n      label=\"{{ 'Delete' | translate }}\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isBinaryFile(configuration)\"\n      (click)=\"download(configuration)\"\n      icon=\"download\"\n      label=\"{{ 'Download' | translate }}\"\n    >\n    </c8y-li-action>\n    <ng-template #emptyText>\n      <small class=\"text-muted\">\n        <em>{{ 'Undefined' | translate }}</em>\n      </small>\n    </ng-template>\n    <ng-template #emptyDescription>\n      <small class=\"text-muted\">\n        <em>{{ 'No description' | translate }}</em>\n      </small>\n    </ng-template>\n  </c8y-li>\n</c8y-list-group>\n"
    })
], ConfigurationListComponent);
export { ConfigurationListComponent };
//# sourceMappingURL=data:application/json;base64,