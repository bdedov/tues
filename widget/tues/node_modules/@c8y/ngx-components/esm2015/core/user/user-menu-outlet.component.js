import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { TenantService, UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { AppStateService } from '../common/ui-state.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { LoginService } from '../login/login.service';
import { ModalService } from '../modal/modal.service';
import { OptionsService } from '../common/options.service';
import { Status } from '../common/status.model';
import { TranslateService } from '@ngx-translate/core';
import { UserEditModalComponent } from './user-edit-modal.component';
import { gettext } from '../i18n/gettext';
import { sortBy } from 'lodash-es';
let UserMenuOutletComponent = class UserMenuOutletComponent {
    constructor(ui, bsModalService, modalService, loginService, translateService, tenantService, alertService, user, optionsService) {
        this.ui = ui;
        this.bsModalService = bsModalService;
        this.modalService = modalService;
        this.loginService = loginService;
        this.translateService = translateService;
        this.tenantService = tenantService;
        this.alertService = alertService;
        this.user = user;
        this.optionsService = optionsService;
    }
    copyIt(text) {
        const handler = {
            handleEvent: (e) => {
                e.clipboardData.setData('text/plain', text);
                e.preventDefault();
            }
        };
        document.addEventListener('copy', handler);
        let copied;
        try {
            copied = document.execCommand('copy');
        }
        catch (e) {
            copied = false;
        }
        if (copied) {
            this.alertService.addByText('success', gettext('Copied to clipboard.'));
        }
        else {
            this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));
        }
        document.removeEventListener('copy', handler);
    }
    editUser() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.bsModalService.show(UserEditModalComponent);
        });
    }
    logout() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.loginService.logout();
        });
    }
    activateSupportAccess() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const title = gettext('Activate support user access');
            const companyName = this.optionsService.get('companyName', 'Cumulocity');
            const textWithCompany = gettext(
            // tslint:disable-next-line:max-line-length
            'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.');
            const textWithoutCompany = gettext(
            // tslint:disable-next-line:max-line-length
            'You are about to allow a support user to access your tenant to help you with your issue.');
            const finalQuestion = gettext('Do you want to proceed?');
            const body = [
                this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                    companyName
                }),
                this.translateService.instant(finalQuestion)
            ].join(' ');
            const labels = {
                ok: gettext('Activate access'),
                cancel: gettext('Cancel')
            };
            const successMsg = gettext('Support user access activated.');
            try {
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.tenantService.enableSupportUser();
                yield this.refreshCurrentUser();
                this.alertService.success(successMsg);
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    deactivateSupportAccess() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const title = gettext('Deactivate support user access');
            const companyName = this.optionsService.get('companyName', 'Cumulocity');
            const textWithCompany = gettext(
            // tslint:disable-next-line:max-line-length
            'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.');
            const textWithoutCompany = gettext(
            // tslint:disable-next-line:max-line-length
            'You are about to block a support user from accessing your tenant to help you with your issue.');
            const { data: currentUser } = yield this.user.current();
            const isTenantAdmin = yield this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN');
            const tenantAdminNote = gettext(
            // tslint:disable-next-line:max-line-length
            'Deactivating support access as tenant admin will disable all other support requests on your tenant.');
            const finalQuestion = gettext('Do you want to proceed?');
            const body = [
                this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                    companyName
                }),
                isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',
                this.translateService.instant(finalQuestion)
            ]
                .filter(Boolean)
                .join(' ');
            const labels = {
                ok: gettext('Deactivate access'),
                cancel: gettext('Cancel')
            };
            const successMsg = gettext('Support user access deactivated.');
            try {
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.tenantService.disableSupportUser();
                yield this.refreshCurrentUser();
                this.alertService.success(successMsg);
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    getSortedItems() {
        return sortBy(Array.from(this.items), this.byPriority);
    }
    refreshCurrentUser() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const currentUserResult = yield this.user.current();
            this.ui.currentUser.next(currentUserResult.data);
        });
    }
    byPriority(item) {
        return -item.priority;
    }
};
UserMenuOutletComponent.ctorParameters = () => [
    { type: AppStateService },
    { type: BsModalService },
    { type: ModalService },
    { type: LoginService },
    { type: TranslateService },
    { type: TenantService },
    { type: AlertService },
    { type: UserService },
    { type: OptionsService }
];
tslib_1.__decorate([
    Input()
], UserMenuOutletComponent.prototype, "items", void 0);
UserMenuOutletComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-user-menu-outlet',
        template: "<div\n  dropdown\n  class=\"dropdown\"\n>\n  <button\n    class=\"main-header-button c8y-dropdown dropdown-toggle\"\n    dropdownToggle\n    style=\"white-space: nowrap\"\n  >\n    <span\n      class=\"hidden-xs text-truncate right-m\"\n      style=\"vertical-align: text-bottom; max-width: 104px; display: inline-block\"\n      title=\"{{ui.currentUser | async | shortenUserName}}\"\n    >\n      {{ui.currentUser | async | shortenUserName}}\n    </span>\n    <i\n      [c8yIcon]=\"'c8y-user'\"\n      class=\"fa-2x\"\n    ></i>\n  </button>\n  <ul\n    *dropdownMenu\n    class=\"dropdown-menu dropdown-menu-right\"\n    style=\"max-width: 240px;\"\n  >\n    <ng-container *ngFor=\"let item of getSortedItems()\">\n      <ng-container *ngIf=\"item.template\">\n        <ng-container *c8yOutlet=\"item.template\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!item.template\">\n        <li (click)=\"item.click()\">\n          <a style=\"cursor: pointer\" [attr.href]=\"item.link\" [attr.target]=\"item.target\">\n            <i [c8yIcon]=\"item.icon\"></i>\n            {{item.label | translate}}\n          </a>\n        </li>\n      </ng-container>\n    </ng-container>\n    <li\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n      role=\"separator\"\n      class=\"divider\"\n    ></li>\n    <li\n      class=\"dropdown-header bg-gray-white\"\n      style=\"white-space: normal; margin-top: -1px;\"\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n    >\n      <div class=\"flex-row\">\n        <i\n          [c8yIcon]=\"'info-circle'\"\n          class=\"text-info flex-item-v-start\"\n          style=\"margin: 1px 6px 0 -3px; font-size: 14px;\"\n        ></i>\n        <span class=\"text-muted text-truncate\">\n          {{'Tenant ID' | translate}}: <strong>\n            <span class=\"text-primary\" (click)=\"$event.stopPropagation(); copyIt(ui.currentTenant.value.name)\"\n              style=\"cursor: pointer\">\n              {{ui.currentTenant.value.name}}&nbsp;<i [c8yIcon]=\"'clipboard'\"></i></span>\n            </strong><br>\n          {{'Backend' | translate}}: <strong>{{(ui.state$ | async).versions.backend}}</strong><br>\n          {{'UI' | translate }}: <strong>{{ui.uiVersion}}</strong>\n        </span>\n      </div>\n    </li>\n  </ul>\n</div>\n\n<!-- the default items -->\n<c8y-user-menu-item\n  [icon]=\"'user'\"\n  [label]=\"'User settings' | translate\"\n  [priority]=\"20\"\n  (click)=\"editUser()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  [icon]=\"'sign-out'\"\n  [label]=\"'Logout' | translate\"\n  (click)=\"logout()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"!(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'phone'\"\n  [label]=\"'Activate support' | translate\"\n  (click)=\"activateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'phone'\"\n  [label]=\"'Deactivate support' | translate\"\n  (click)=\"deactivateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.state$ | async).supportUrl\"\n  [icon]=\"'question-circle'\"\n  [link]=\"(ui.state$ | async).supportUrl\"\n  [target]=\"'_blank'\"\n  [label]=\"'Request support' | translate\"\n></c8y-user-menu-item>\n"
    })
], UserMenuOutletComponent);
export { UserMenuOutletComponent };
//# sourceMappingURL=data:application/json;base64,