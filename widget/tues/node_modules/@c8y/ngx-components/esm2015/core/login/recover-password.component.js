import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter } from '@angular/core';
import { UserService } from '@c8y/client';
import { LoginService } from './login.service';
import { LoginViews } from './login.model';
let RecoverPasswordComponent = class RecoverPasswordComponent {
    constructor(users, loginService) {
        this.users = users;
        this.loginService = loginService;
        this.onChangeView = new EventEmitter();
        this.LOGIN_VIEWS = LoginViews;
        this.isLoading = false;
        this.model = {
            email: '',
            tenantId: ''
        };
    }
    ngOnInit() {
        this.model.tenantId = this.loginService.getTenant();
    }
    resetPassword() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                this.isLoading = true;
                const { res } = yield this.users.sendPasswordResetMail(this.model.email, this.model.tenantId);
                if (res.status === 200) {
                    this.loginService.addSuccessMessage('password_reset_requested');
                }
            }
            finally {
                this.loginService.reset();
                this.isLoading = false;
            }
        });
    }
};
RecoverPasswordComponent.ctorParameters = () => [
    { type: UserService },
    { type: LoginService }
];
tslib_1.__decorate([
    Output()
], RecoverPasswordComponent.prototype, "onChangeView", void 0);
RecoverPasswordComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-recover-password',
        template: "<form #resetForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"resetPassword()\" novalidate>\n  <div class=\"legend form-block center\" translate>Forgot password?</div>\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenantId\"\n      #tenantId=\"ngModel\"\n      type=\"text\"\n      name=\"tenantId\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Tenant ID' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Email address</label>\n    <input\n      [(ngModel)]=\"model.email\"\n      #email=\"ngModel\"\n      type=\"text\"\n      name=\"email\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Email address' | translate }}\"\n      email\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Reset password' | translate }}\"\n    [disabled]=\"!resetForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Reset password\n  </button>\n  <div class=\"text-center top-m-sm\">\n    <p>\n      <a\n        title=\"{{ 'Login' | translate }}\"\n        class=\"btn btn-link btn-sm\"\n        (click)=\"onChangeView.emit({ view: LOGIN_VIEWS.Credentials })\"\n        translate\n        >Login</a\n      >\n    </p>\n  </div>\n</form>\n"
    })
], RecoverPasswordComponent);
export { RecoverPasswordComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3Zlci1wYXNzd29yZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9sb2dpbi9yZWNvdmVyLXBhc3N3b3JkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFRM0MsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7SUFVbkMsWUFDVSxLQUFrQixFQUNuQixZQUEwQjtRQUR6QixVQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ25CLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBVnpCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM1QyxnQkFBVyxHQUFHLFVBQVUsQ0FBQztRQUN6QixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLFVBQUssR0FBRztZQUNOLEtBQUssRUFBRSxFQUFFO1lBQ1QsUUFBUSxFQUFFLEVBQUU7U0FDYixDQUFDO0lBS0YsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3RELENBQUM7SUFFSyxhQUFhOztZQUNqQixJQUFJO2dCQUNGLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2dCQUN0QixNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzlGLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBQ3RCLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsMEJBQTBCLENBQUMsQ0FBQztpQkFDakU7YUFDRjtvQkFBUztnQkFDUixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUMxQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQzthQUN4QjtRQUNILENBQUM7S0FBQTtDQUVGLENBQUE7O1lBckJrQixXQUFXO1lBQ0wsWUFBWTs7QUFWekI7SUFBVCxNQUFNLEVBQUU7OERBQW1DO0FBRmpDLHdCQUF3QjtJQU5wQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLGlpREFBZ0Q7S0FFakQsQ0FBQztHQUVXLHdCQUF3QixDQWdDcEM7U0FoQ1ksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4vbG9naW4uc2VydmljZSc7XG5pbXBvcnQgeyBMb2dpblZpZXdzIH0gZnJvbSAnLi9sb2dpbi5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1yZWNvdmVyLXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3JlY292ZXItcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZXM6IFtdXG59KVxuXG5leHBvcnQgY2xhc3MgUmVjb3ZlclBhc3N3b3JkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBAT3V0cHV0KCkgb25DaGFuZ2VWaWV3ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBMT0dJTl9WSUVXUyA9IExvZ2luVmlld3M7XG4gIGlzTG9hZGluZyA9IGZhbHNlO1xuICBtb2RlbCA9IHtcbiAgICBlbWFpbDogJycsXG4gICAgdGVuYW50SWQ6ICcnXG4gIH07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1c2VyczogVXNlclNlcnZpY2UsXG4gICAgcHVibGljIGxvZ2luU2VydmljZTogTG9naW5TZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm1vZGVsLnRlbmFudElkID0gdGhpcy5sb2dpblNlcnZpY2UuZ2V0VGVuYW50KCk7XG4gIH1cblxuICBhc3luYyByZXNldFBhc3N3b3JkKCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICBjb25zdCB7IHJlcyB9ID0gYXdhaXQgdGhpcy51c2Vycy5zZW5kUGFzc3dvcmRSZXNldE1haWwodGhpcy5tb2RlbC5lbWFpbCwgdGhpcy5tb2RlbC50ZW5hbnRJZCk7XG4gICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmFkZFN1Y2Nlc3NNZXNzYWdlKCdwYXNzd29yZF9yZXNldF9yZXF1ZXN0ZWQnKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5sb2dpblNlcnZpY2UucmVzZXQoKTtcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==