import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { PhoneValidationDirective } from './phone-validation.directive';
import { DefaultValidationDirective } from './default-validation.directive';
import { MinValidationDirective } from './min-validation.directive';
import { MaxValidationDirective } from './max-validation.directive';
import { CommonModule } from '../common/common.module';
import { FormsModule as NgFormsModule } from '@angular/forms';
import { FormGroupComponent } from './form-group.component';
import { MessageDirective } from './message.directive';
import { MessagesComponent } from './messages.component';
import { InputGroupListComponent } from './input-group-list.component';
import { InputGroupListContainerDirective } from './input-group-list-container.directive';
import { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';
import { TextAreaRowHeightDirective } from './text-area-row-height.directive';
import { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';
import { IpRangeInputListComponent } from './ip-range-input-list.component';
import { FilterInputComponent } from './filter-input.component';
/**
 * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.
 * @exports PhoneValidationDirective Allows to validate international phone numbers.
 * @exports NewsletterDirective Allows to subscribe to the newsletter.
 * @exports DefaultValidationDirective Allows to validate some predefined patterns.
 * @exports MessageDirective A directive that allows to define messages.
 * @exports MessagesComponent Allows to display error messages.
 */
let FormsModule = class FormsModule {
};
FormsModule = tslib_1.__decorate([
    NgModule({
        imports: [CommonModule, NgFormsModule],
        exports: [
            PhoneValidationDirective,
            DefaultValidationDirective,
            MinValidationDirective,
            MaxValidationDirective,
            NgFormsModule,
            FormGroupComponent,
            MessageDirective,
            MessagesComponent,
            InputGroupListComponent,
            InputGroupListContainerDirective,
            JsonValidationPrettifierDirective,
            TextAreaRowHeightDirective,
            RequiredInputPlaceholderDirective,
            IpRangeInputListComponent,
            FilterInputComponent
        ],
        declarations: [
            PhoneValidationDirective,
            DefaultValidationDirective,
            MinValidationDirective,
            MaxValidationDirective,
            FormGroupComponent,
            MessageDirective,
            MessagesComponent,
            InputGroupListComponent,
            InputGroupListContainerDirective,
            JsonValidationPrettifierDirective,
            TextAreaRowHeightDirective,
            RequiredInputPlaceholderDirective,
            IpRangeInputListComponent,
            FilterInputComponent
        ]
    })
], FormsModule);
export { FormsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZm9ybXMvZm9ybXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxJQUFJLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRWhFOzs7Ozs7O0dBT0c7QUFxQ0gsSUFBYSxXQUFXLEdBQXhCLE1BQWEsV0FBVztDQUFHLENBQUE7QUFBZCxXQUFXO0lBcEN2QixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsYUFBYSxDQUFDO1FBQ3RDLE9BQU8sRUFBRTtZQUNQLHdCQUF3QjtZQUN4QiwwQkFBMEI7WUFDMUIsc0JBQXNCO1lBQ3RCLHNCQUFzQjtZQUN0QixhQUFhO1lBQ2Isa0JBQWtCO1lBQ2xCLGdCQUFnQjtZQUNoQixpQkFBaUI7WUFDakIsdUJBQXVCO1lBQ3ZCLGdDQUFnQztZQUNoQyxpQ0FBaUM7WUFDakMsMEJBQTBCO1lBQzFCLGlDQUFpQztZQUNqQyx5QkFBeUI7WUFDekIsb0JBQW9CO1NBQ3JCO1FBQ0QsWUFBWSxFQUFFO1lBQ1osd0JBQXdCO1lBQ3hCLDBCQUEwQjtZQUMxQixzQkFBc0I7WUFDdEIsc0JBQXNCO1lBQ3RCLGtCQUFrQjtZQUNsQixnQkFBZ0I7WUFDaEIsaUJBQWlCO1lBQ2pCLHVCQUF1QjtZQUN2QixnQ0FBZ0M7WUFDaEMsaUNBQWlDO1lBQ2pDLDBCQUEwQjtZQUMxQixpQ0FBaUM7WUFDakMseUJBQXlCO1lBQ3pCLG9CQUFvQjtTQUNyQjtLQUNGLENBQUM7R0FDVyxXQUFXLENBQUc7U0FBZCxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4vcGhvbmUtdmFsaWRhdGlvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRGVmYXVsdFZhbGlkYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL2RlZmF1bHQtdmFsaWRhdGlvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWluVmFsaWRhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4vbWluLXZhbGlkYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IE1heFZhbGlkYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL21heC12YWxpZGF0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSBhcyBOZ0Zvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRm9ybUdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9mb3JtLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZXNzYWdlRGlyZWN0aXZlIH0gZnJvbSAnLi9tZXNzYWdlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNZXNzYWdlc0NvbXBvbmVudCB9IGZyb20gJy4vbWVzc2FnZXMuY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0R3JvdXBMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1ncm91cC1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dEdyb3VwTGlzdENvbnRhaW5lckRpcmVjdGl2ZSB9IGZyb20gJy4vaW5wdXQtZ3JvdXAtbGlzdC1jb250YWluZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IEpzb25WYWxpZGF0aW9uUHJldHRpZmllckRpcmVjdGl2ZSB9IGZyb20gJy4vanNvbi12YWxpZGF0aW9uLXByZXR0aWZpZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRleHRBcmVhUm93SGVpZ2h0RGlyZWN0aXZlIH0gZnJvbSAnLi90ZXh0LWFyZWEtcm93LWhlaWdodC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUmVxdWlyZWRJbnB1dFBsYWNlaG9sZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9yZXF1aXJlZC1pbnB1dC1wbGFjZWhvbGRlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSXBSYW5nZUlucHV0TGlzdENvbXBvbmVudCB9IGZyb20gJy4vaXAtcmFuZ2UtaW5wdXQtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmlsdGVySW5wdXRDb21wb25lbnQgfSBmcm9tICcuL2ZpbHRlci1pbnB1dC5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBleHBvcnRzIEZvcm1Hcm91cENvbXBvbmVudCBBIGNvbXBvbmVudCB0aGF0IGFsbG93cyB0byBncm91cCBhbiBpbnB1dCBhbmQgY2FuIGRpc3BsYXkgd2FybmluZ3MgYW5kIGVycm9ycy5cbiAqIEBleHBvcnRzIFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSBBbGxvd3MgdG8gdmFsaWRhdGUgaW50ZXJuYXRpb25hbCBwaG9uZSBudW1iZXJzLlxuICogQGV4cG9ydHMgTmV3c2xldHRlckRpcmVjdGl2ZSBBbGxvd3MgdG8gc3Vic2NyaWJlIHRvIHRoZSBuZXdzbGV0dGVyLlxuICogQGV4cG9ydHMgRGVmYXVsdFZhbGlkYXRpb25EaXJlY3RpdmUgQWxsb3dzIHRvIHZhbGlkYXRlIHNvbWUgcHJlZGVmaW5lZCBwYXR0ZXJucy5cbiAqIEBleHBvcnRzIE1lc3NhZ2VEaXJlY3RpdmUgQSBkaXJlY3RpdmUgdGhhdCBhbGxvd3MgdG8gZGVmaW5lIG1lc3NhZ2VzLlxuICogQGV4cG9ydHMgTWVzc2FnZXNDb21wb25lbnQgQWxsb3dzIHRvIGRpc3BsYXkgZXJyb3IgbWVzc2FnZXMuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIE5nRm9ybXNNb2R1bGVdLFxuICBleHBvcnRzOiBbXG4gICAgUGhvbmVWYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIERlZmF1bHRWYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIE1pblZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgTWF4VmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBOZ0Zvcm1zTW9kdWxlLFxuICAgIEZvcm1Hcm91cENvbXBvbmVudCxcbiAgICBNZXNzYWdlRGlyZWN0aXZlLFxuICAgIE1lc3NhZ2VzQ29tcG9uZW50LFxuICAgIElucHV0R3JvdXBMaXN0Q29tcG9uZW50LFxuICAgIElucHV0R3JvdXBMaXN0Q29udGFpbmVyRGlyZWN0aXZlLFxuICAgIEpzb25WYWxpZGF0aW9uUHJldHRpZmllckRpcmVjdGl2ZSxcbiAgICBUZXh0QXJlYVJvd0hlaWdodERpcmVjdGl2ZSxcbiAgICBSZXF1aXJlZElucHV0UGxhY2Vob2xkZXJEaXJlY3RpdmUsXG4gICAgSXBSYW5nZUlucHV0TGlzdENvbXBvbmVudCxcbiAgICBGaWx0ZXJJbnB1dENvbXBvbmVudFxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBQaG9uZVZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgRGVmYXVsdFZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgTWluVmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBNYXhWYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIEZvcm1Hcm91cENvbXBvbmVudCxcbiAgICBNZXNzYWdlRGlyZWN0aXZlLFxuICAgIE1lc3NhZ2VzQ29tcG9uZW50LFxuICAgIElucHV0R3JvdXBMaXN0Q29tcG9uZW50LFxuICAgIElucHV0R3JvdXBMaXN0Q29udGFpbmVyRGlyZWN0aXZlLFxuICAgIEpzb25WYWxpZGF0aW9uUHJldHRpZmllckRpcmVjdGl2ZSxcbiAgICBUZXh0QXJlYVJvd0hlaWdodERpcmVjdGl2ZSxcbiAgICBSZXF1aXJlZElucHV0UGxhY2Vob2xkZXJEaXJlY3RpdmUsXG4gICAgSXBSYW5nZUlucHV0TGlzdENvbXBvbmVudCxcbiAgICBGaWx0ZXJJbnB1dENvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1zTW9kdWxlIHt9XG4iXX0=