var PhoneValidationDirective_1;
import * as tslib_1 from "tslib";
import { NG_VALIDATORS } from '@angular/forms';
import { Directive } from '@angular/core';
import { parsePhoneNumberFromString } from 'libphonenumber-js/max';
let PhoneValidationDirective = PhoneValidationDirective_1 = class PhoneValidationDirective {
    validate(control) {
        const valid = this.validateInternationalPhoneNumber(control);
        return valid ? null : {
            internationalPhoneNumber: true
        };
    }
    validateInternationalPhoneNumber(control) {
        let numberValid;
        try {
            const phoneNumber = parsePhoneNumberFromString(control.value);
            numberValid = phoneNumber.isValid();
            if (numberValid && control.value !== phoneNumber.format('E.164')) {
                control.setValue(phoneNumber.format('E.164'), { emitEvent: false, emitModelToViewChange: false });
            }
        }
        catch (e) {
            numberValid = !control.value;
        }
        return numberValid;
    }
};
PhoneValidationDirective = PhoneValidationDirective_1 = tslib_1.__decorate([
    Directive({
        selector: '[c8yPhoneValidation]',
        providers: [{ provide: NG_VALIDATORS, useExisting: PhoneValidationDirective_1, multi: true }]
    })
], PhoneValidationDirective);
export { PhoneValidationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvbmUtdmFsaWRhdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9mb3Jtcy9waG9uZS12YWxpZGF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQThCLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0UsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQU1uRSxJQUFhLHdCQUF3QixnQ0FBckMsTUFBYSx3QkFBd0I7SUFFbkMsUUFBUSxDQUFDLE9BQXdCO1FBQy9CLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3RCxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNwQix3QkFBd0IsRUFBRSxJQUFJO1NBQy9CLENBQUM7SUFDSixDQUFDO0lBRU8sZ0NBQWdDLENBQUMsT0FBd0I7UUFDL0QsSUFBSSxXQUFXLENBQUM7UUFDaEIsSUFBSTtZQUNGLE1BQU0sV0FBVyxHQUFHLDBCQUEwQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM5RCxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3BDLElBQUksV0FBVyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDaEUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxxQkFBcUIsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO2FBQ25HO1NBQ0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLFdBQVcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7U0FDOUI7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0NBQ0YsQ0FBQTtBQXRCWSx3QkFBd0I7SUFKcEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLDBCQUF3QixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQztLQUMxRixDQUFDO0dBQ1csd0JBQXdCLENBc0JwQztTQXRCWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOR19WQUxJREFUT1JTLCBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcGFyc2VQaG9uZU51bWJlckZyb21TdHJpbmcgfSBmcm9tICdsaWJwaG9uZW51bWJlci1qcy9tYXgnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYzh5UGhvbmVWYWxpZGF0aW9uXScsXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBOR19WQUxJREFUT1JTLCB1c2VFeGlzdGluZzogUGhvbmVWYWxpZGF0aW9uRGlyZWN0aXZlLCBtdWx0aTogdHJ1ZX1dXG59KVxuZXhwb3J0IGNsYXNzIFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciB7XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKToge1trZXk6IHN0cmluZ106IGFueX0gfCBudWxsIHtcbiAgICBjb25zdCB2YWxpZCA9IHRoaXMudmFsaWRhdGVJbnRlcm5hdGlvbmFsUGhvbmVOdW1iZXIoY29udHJvbCk7XG4gICAgcmV0dXJuIHZhbGlkID8gbnVsbCA6IHtcbiAgICAgIGludGVybmF0aW9uYWxQaG9uZU51bWJlcjogdHJ1ZVxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlSW50ZXJuYXRpb25hbFBob25lTnVtYmVyKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGxldCBudW1iZXJWYWxpZDtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGhvbmVOdW1iZXIgPSBwYXJzZVBob25lTnVtYmVyRnJvbVN0cmluZyhjb250cm9sLnZhbHVlKTtcbiAgICAgIG51bWJlclZhbGlkID0gcGhvbmVOdW1iZXIuaXNWYWxpZCgpO1xuICAgICAgaWYgKG51bWJlclZhbGlkICYmIGNvbnRyb2wudmFsdWUgIT09IHBob25lTnVtYmVyLmZvcm1hdCgnRS4xNjQnKSkge1xuICAgICAgICBjb250cm9sLnNldFZhbHVlKHBob25lTnVtYmVyLmZvcm1hdCgnRS4xNjQnKSwgeyBlbWl0RXZlbnQ6IGZhbHNlLCBlbWl0TW9kZWxUb1ZpZXdDaGFuZ2U6IGZhbHNlIH0pO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIG51bWJlclZhbGlkID0gIWNvbnRyb2wudmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBudW1iZXJWYWxpZDtcbiAgfVxufVxuIl19