import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { AppStateService } from '../common/ui-state.service';
import { DocsService } from '../docs/docs.service';
/**
 * A component which shows a context help in
 * the action bar.
 *
 * @example
 * ```html
 * <c8y-help src="/users-guide/cockpit/#dashboards"></c8y-help>
 * ```
 */
let HelpComponent = class HelpComponent {
    /**
     * @ignore Only private DI
     */
    constructor(docsService, appState, translateService) {
        this.docsService = docsService;
        this.appState = appState;
        this.translateService = translateService;
        /**
         * The source of the documentation. Used to link to the documentation as well as
         * to parse the source to display.
         */
        this.src = '';
        /**
         * Indicates if the help dialog is collapsed.
         */
        this.isCollapsed = true;
        /**
         * The priority where the help icon should be shown in the action bar
         */
        this.priority = Infinity;
        /**
         * An title. Set in open by passing the source.
         */
        this.title = '';
        /**
         * The content. Set in open by passing the source.
         */
        this.content = [];
        /**
         * Indicates if the component is loading.
         */
        this.isLoading = true;
        /**
         * Indicates if the component failed loading the source.
         */
        this.hasError = false;
        this.SUPPORTED_LANGUAGES = ['en'];
    }
    /**
     * Identifies if the current user language is supported
     * Currently only English is supported.
     */
    get isSupportedLanguage() {
        return this.SUPPORTED_LANGUAGES.indexOf(this.translateService.currentLang) > -1;
    }
    /**
     * Builds the URL based on the src. The Base URL can be set in the application options docBaseUrl.
     * @param src The source of the help on the guide.
     */
    getUrl(src = '') {
        const version = this.parseVersion(this.appState.uiVersion);
        const url = this.docsService.getBaseUrl();
        return `${url}${url.endsWith('/') ? '' : '/'}${version}${src.startsWith('/') ? src : `/${src}`}`;
    }
    /**
     * Toggles the visibility of the help dialog.
     */
    toggle() {
        if (this.isCollapsed) {
            this.open();
            return;
        }
        this.close();
    }
    /**
     * Closes the help dialog.
     */
    close() {
        this.isCollapsed = true;
        this.clean();
    }
    /**
     * Opens the help dialog.
     */
    open() {
        this.isCollapsed = false;
        this.isLoading = true;
        this.requestContent();
        if (!this.icon) {
            this.icon = this.resolveIcon();
        }
    }
    /**
     * @ignore
     */
    ngAfterContentChecked() {
        if (this.content.length > 0 && this.helpContent) {
            this.content.forEach(ele => {
                this.helpContent.nativeElement.append(ele);
            });
        }
    }
    requestContent() {
        const req = new XMLHttpRequest();
        req.onreadystatechange = () => this.render(req);
        req.addEventListener('load', () => this.render(req));
        req.open('GET', this.getUrl(this.src));
        req.responseType = 'document';
        req.setRequestHeader('Accept', 'text/html');
        req.send();
    }
    clean() {
        this.title = '';
        this.isLoading = true;
        this.hasError = false;
        this.content = [];
        if (this.helpContent) {
            this.helpContent.nativeElement.innerHTML = '';
        }
    }
    parseVersion(uiVersion) {
        const version = uiVersion.split('.')[0];
        const majorNumber = Math.floor(parseInt(version, 10) / 100);
        const minorNumber = parseInt(version, 10) - majorNumber * 100;
        return `${majorNumber}.${minorNumber}.0`;
    }
    resolveIcon() {
        try {
            const icon = Array.from(document.querySelector('nav .active i').classList).find(classes => classes.startsWith('c8y-') || classes.startsWith('fa-'));
            return icon.replace('fa-', '');
        }
        catch (ex) {
            return 'question-circle-o';
        }
    }
    render(req) {
        if (req.readyState === 4) {
            this.isLoading = false;
            if (req.status === 200) {
                const sectionSplit = this.src.split('#');
                // TODO: change here the selectors when DOC team defined the section element
                const sectionQuery = `#${sectionSplit[sectionSplit.length - 1]} h2`;
                const sectionNode = req.response.querySelector(sectionQuery);
                const allPossibleElementsToAttach = Array.from(sectionNode.parentElement.children).slice(1);
                this.title = sectionNode.innerText.trim();
                for (const ele of allPossibleElementsToAttach) {
                    if (ele.tagName.toLowerCase() === 'h3') {
                        break;
                    }
                    this.content.push(ele);
                }
            }
            else {
                this.hasError = true;
            }
        }
    }
};
HelpComponent.ctorParameters = () => [
    { type: DocsService },
    { type: AppStateService },
    { type: TranslateService }
];
tslib_1.__decorate([
    Input()
], HelpComponent.prototype, "src", void 0);
tslib_1.__decorate([
    Input()
], HelpComponent.prototype, "isCollapsed", void 0);
tslib_1.__decorate([
    Input()
], HelpComponent.prototype, "priority", void 0);
tslib_1.__decorate([
    Input()
], HelpComponent.prototype, "icon", void 0);
tslib_1.__decorate([
    ViewChild('helpContent', { static: false, read: ElementRef })
], HelpComponent.prototype, "helpContent", void 0);
HelpComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-help',
        template: "<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"pull-right\"\n  [priority]=\"priority\"\n  *ngIf=\"isSupportedLanguage\"\n>\n  <button\n    class=\"btn btn-help\"\n    [title]=\"'Open help' | translate\"\n    (click)=\"toggle()\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"collapseHelp\"\n  >\n    <i\n      [c8yIcon]=\"'question-circle-o'\"\n      class=\"text-info text-16\"\n    ></i>\n  </button>\n</c8y-action-bar-item>\n\n<div\n  id=\"collapseHelp\"\n  class=\"c8y-help-drawer\"\n  [collapse]=\"isCollapsed\"\n  [isAnimated]=\"true\"\n>\n  <div\n    class=\"p-24\"\n    #docOutlet\n  >\n    <div\n      *ngIf=\"isLoading\"\n    >\n      <c8y-loading></c8y-loading>\n    </div>\n\n    <div *ngIf=\"!isLoading\">\n      <div class=\"d-flex\">\n        <i\n          [c8yIcon]=\"icon\"\n          class=\"c8y-icon-duocolor icon-48\"\n        ></i>\n        <div\n          class=\"p-l-16 flex-grow\"\n          *ngIf=\"!hasError\"\n        >\n          <h3 class=\"text-light m-b-16\">{{title}}</h3>\n          <div\n            id=\"helpContent\"\n            class=\"help-content\"\n            #helpContent\n          ></div>\n\n          <button\n            class=\"btn btn-default\"\n            (click)=\"toggle()\"\n            [title]=\"'Close help' | translate\"\n            [attr.aria-expanded]=\"!isCollapsed\"\n            aria-controls=\"collapseHelp\"\n          >Close</button>\n          <a\n            href=\"{{getUrl(src)}}\"\n            class=\"btn btn-primary\"\n            target=\"_blank\"\n            translate\n          >\n            Check the User guide\n          </a>\n        </div>\n\n        <div\n          class=\"p-l-16 flex-grow\"\n          *ngIf=\"hasError\"\n        >\n          <h3\n            class=\"text-light m-b-16\"\n            translate\n          >Sorry, that didn't work</h3>\n          <div class=\"help-content\">\n            <p translate>The content couldn't be loaded.</p>\n          </div>\n\n          <button\n            class=\"btn btn-default\"\n            (click)=\"toggle()\"\n            [title]=\"'Close help' | translate\"\n            [attr.aria-expanded]=\"!isCollapsed\"\n            aria-controls=\"collapseHelp\"\n            translate\n          >Close</button>\n          <a\n            href=\"{{getUrl()}}\"\n            class=\"btn btn-primary\"\n            target=\"_blank\"\n            translate\n          >\n            Open the User guide\n          </a>\n\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n"
    })
], HelpComponent);
export { HelpComponent };
//# sourceMappingURL=data:application/json;base64,