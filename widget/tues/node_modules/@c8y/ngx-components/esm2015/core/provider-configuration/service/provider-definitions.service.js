import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FetchClient, IResultList, Service } from '@c8y/client';
import { get } from 'lodash-es';
let ProviderDefinitionsService = class ProviderDefinitionsService extends Service {
    constructor(client, activatedRoute) {
        super(client);
        this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.baseUrl');
        this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.listUrl');
    }
    list() {
        const _super = Object.create(null, {
            list: { get: () => super.list }
        });
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return _super.list.call(this);
        });
    }
};
ProviderDefinitionsService.ctorParameters = () => [
    { type: FetchClient },
    { type: ActivatedRoute }
];
ProviderDefinitionsService = tslib_1.__decorate([
    Injectable()
], ProviderDefinitionsService);
export { ProviderDefinitionsService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItZGVmaW5pdGlvbnMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24vc2VydmljZS9wcm92aWRlci1kZWZpbml0aW9ucy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDaEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUloQyxJQUFhLDBCQUEwQixHQUF2QyxNQUFhLDBCQUEyQixTQUFRLE9BQTJCO0lBSXpFLFlBQVksTUFBbUIsRUFBRSxjQUE4QjtRQUM3RCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxjQUFjLEVBQUUsb0RBQW9ELENBQUMsQ0FBQztRQUN6RixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxjQUFjLEVBQUUsb0RBQW9ELENBQUMsQ0FBQztJQUMzRixDQUFDO0lBRUssSUFBSTs7Ozs7WUFDUixPQUFPLE9BQU0sSUFBSSxZQUFHO1FBQ3RCLENBQUM7S0FBQTtDQUNGLENBQUE7O1lBVHFCLFdBQVc7WUFBa0IsY0FBYzs7QUFKcEQsMEJBQTBCO0lBRHRDLFVBQVUsRUFBRTtHQUNBLDBCQUEwQixDQWF0QztTQWJZLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEZldGNoQ2xpZW50LCBJUmVzdWx0TGlzdCwgU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBQcm92aWRlckRlZmluaXRpb24gfSBmcm9tICcuLi9tb2RlbC9wcm92aWRlci1kZWZpbml0aW9uLm1vZGVsJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb3ZpZGVyRGVmaW5pdGlvbnNTZXJ2aWNlIGV4dGVuZHMgU2VydmljZTxQcm92aWRlckRlZmluaXRpb24+IHtcbiAgcHJvdGVjdGVkIGJhc2VVcmw6IHN0cmluZztcbiAgcHJvdGVjdGVkIGxpc3RVcmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihjbGllbnQ6IEZldGNoQ2xpZW50LCBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpIHtcbiAgICBzdXBlcihjbGllbnQpO1xuICAgIHRoaXMuYmFzZVVybCA9IGdldChhY3RpdmF0ZWRSb3V0ZSwgJ3NuYXBzaG90LmRhdGEuZW5kcG9pbnQuZGVmaW5pdGlvbnNFbmRwb2ludC5iYXNlVXJsJyk7XG4gICAgdGhpcy5saXN0VXJsID0gZ2V0KGFjdGl2YXRlZFJvdXRlLCAnc25hcHNob3QuZGF0YS5lbmRwb2ludC5kZWZpbml0aW9uc0VuZHBvaW50Lmxpc3RVcmwnKTtcbiAgfVxuXG4gIGFzeW5jIGxpc3QoKTogUHJvbWlzZTxJUmVzdWx0TGlzdDxQcm92aWRlckRlZmluaXRpb24+PiB7XG4gICAgcmV0dXJuIHN1cGVyLmxpc3QoKTtcbiAgfVxufVxuIl19