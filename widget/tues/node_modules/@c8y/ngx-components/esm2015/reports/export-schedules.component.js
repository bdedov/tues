import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ActionType } from './export-schedules.interface';
import { ReportsService } from './reports.service';
import { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';
import { ScheduleModalComponent } from './schedule-modal.component';
import { ConfirmModalComponent, Status, gettext, OptionsService } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { CronService } from './cron.service';
import { TranslateService } from '@ngx-translate/core';
import { UserService } from '@c8y/client';
let ExportSchedulesComponent = class ExportSchedulesComponent {
    constructor(reportsService, bsModalService, cronService, translateService, userService, optionsService) {
        this.reportsService = reportsService;
        this.bsModalService = bsModalService;
        this.cronService = cronService;
        this.translateService = translateService;
        this.userService = userService;
        this.optionsService = optionsService;
        this.onSchedulesUpdate = new EventEmitter();
        this.scheduleList = [];
        this.initialSchedule = {
            timestamp: null,
            emailConfig: {
                to: [],
                cc: [],
                bcc: [],
                replyTo: '',
                text: '',
                subject: ''
            },
            cronConfig: {
                minute: '0',
                hour: '0',
                day: '1',
                month: '1',
                weekday: '?'
            }
        };
        this.listClass = 'interact-list';
        this.sortReverse = false;
        this.isOpen = {};
        this.isEditMenuOpen = false;
        this.currentUserEmail = '';
        this.hasRequiredRole = false;
        this.defaultExportEmailTemplate = this.translateService.instant(gettext('File with exported data can be downloaded from {tenant-domain}/inventory/binaries/{binaryId}.'));
        this.loadingStatus = {
            inProgress: false,
            done: false,
            error: false
        };
    }
    set exportId(exportId) {
        this._exportId = exportId;
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.hasRequiredRole = yield this.checkRole();
            this.getScheduleList(true);
            const currentUserEmail = yield this.getCurrentUserEmail();
            this.initialSchedule.emailConfig.text = yield this.optionsService.getTenantOption('configuration', 'export.data.mail.text', this.defaultExportEmailTemplate);
            this.initialSchedule.emailConfig.to = currentUserEmail;
            this.exp = yield this.reportsService.getExport(this._exportId);
            this.initialSchedule.emailConfig.subject = this.translateService.instant(gettext('Export of "{{expName}}"'), { expName: this.exp.name });
        });
    }
    ngOnChanges() {
        this.translateButtonTitles();
    }
    translateButtonTitles() {
        this.buttonLabels = {
            edit: this.translateService.instant(gettext('Edit schedule')),
            editNoPermission: this.translateService.instant(gettext('Edit schedule - no permissions')),
            duplicate: this.translateService.instant(gettext('Duplicate schedule')),
            duplicateNoPermission: this.translateService.instant(gettext('Duplicate schedule - no permissions')),
            delete: this.translateService.instant(gettext('Delete schedule')),
            deleteNoPermission: this.translateService.instant(gettext('Delete schedule - no permissions'))
        };
    }
    getCurrentUserEmail() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.userService.current();
            return data && data.email ? [data.email] : [];
        });
    }
    checkRole() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.userService.current();
            const role = 'ROLE_SCHEDULE_REPORT_ADMIN';
            const hasRole = this.userService.hasRole(data, role);
            return hasRole;
        });
    }
    getScheduleList(withProgress) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (withProgress) {
                this.loadingStatus.inProgress = true;
            }
            this.scheduleList = yield this.reportsService.getScheduleList(this._exportId);
            if (withProgress) {
                this.loadingStatus.inProgress = false;
            }
        });
    }
    addSchedule() {
        this.openAddEditModal(this._exportId, this.initialSchedule, ActionType.CREATE);
    }
    editSchedule(schedule, index, event) {
        if (this.hasRequiredRole) {
            event.preventDefault();
            this.openAddEditModal(this._exportId, schedule, ActionType.EDIT, index);
        }
    }
    duplicateSchedule(schedule, event) {
        event.preventDefault();
        this.openAddEditModal(this._exportId, schedule, ActionType.DUPLICATE);
    }
    openAddEditModal(exportId, schedule, actionType, index) {
        const payload = { actionType, exportId, schedule: cloneDeep(schedule) };
        const modalOptions = { class: 'modal-sm', initialState: payload };
        this.modalRef = this.bsModalService.show(ScheduleModalComponent, modalOptions);
        this.modalRef.content.emitter.subscribe((load) => this.getMessageFromModal(load, index));
    }
    getMessageFromModal(payload, index) {
        if (payload.success) {
            if (index !== undefined) {
                this.scheduleList[index] = payload.schedule;
            }
            else {
                this.scheduleList.push(payload.schedule);
            }
            this.onSchedulesUpdate.emit(this.scheduleList);
        }
    }
    removeSchedule(schedule, index, event) {
        event.preventDefault();
        this.scheduleList.splice(index, 1);
        this.onSchedulesUpdate.emit(this.scheduleList);
    }
};
ExportSchedulesComponent.ctorParameters = () => [
    { type: ReportsService },
    { type: BsModalService },
    { type: CronService },
    { type: TranslateService },
    { type: UserService },
    { type: OptionsService }
];
tslib_1.__decorate([
    Input()
], ExportSchedulesComponent.prototype, "exportId", null);
tslib_1.__decorate([
    Output()
], ExportSchedulesComponent.prototype, "onSchedulesUpdate", void 0);
ExportSchedulesComponent = tslib_1.__decorate([
    Component({
        selector: 'export-schedules',
        template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"flex-row\">\n    <c8y-loading></c8y-loading>\n    <span translate>Retrieving schedules\u2026</span>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning max-width-100\" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <div class=\"c8y-empty-state text-center max-width-100\" *ngIf=\"!scheduleList.length\">\n      <h1 c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class=\"c8y-list__group\" *ngIf=\"scheduleList.length\">\n      <div class=\"c8y-list__item hidden-xs\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i class=\"fa\"></i>\n          </div>\n          <div class=\"c8y-list__item__body\">\n            <div class=\"flex-row\">\n              <div class=\"col-sm-6\">\n                <label class=\"m-0\">\n                  {{ 'Description' | translate }}\n                </label>\n              </div>\n              <div class=\"col-sm-6 m-r-40\">\n                <label class=\"m-0\">\n                  {{ 'Frequency' | translate }}\n                </label>\n              </div>\n            </div>\n          </div>\n          <span></span>\n        </div>\n      </div>\n\n      <div\n        class=\"c8y-list__item flex-row pointer\"\n        *ngFor=\"let schedule of scheduleList; index as i\"\n        (click)=\"editSchedule(schedule, i, $event)\"\n      >\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"c8y-list__item__body flex-row\">\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n                {{ schedule.emailConfig.subject }}\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"flex-row\" style=\"align-items: baseline;\">\n                <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n                <span class=\"smart-rule-information\">\n                  <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\" translate>\n                    Hourly: {{ schedule.cronConfig.minute | number: '2.0-0' }} minute(s) past the\n                    hour.\n                  </span>\n                  <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\" translate>\n                    Daily: at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                      schedule.cronConfig.minute | number: '2.0-0'\n                    }}.\n                  </span>\n                  <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\" translate>\n                    Weekly: {{ cronService.getWeekDayName(schedule.cronConfig) }}, at\n                    {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                      schedule.cronConfig.minute | number: '2.0-0'\n                    }}.\n                  </span>\n                  <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\" translate>\n                    Monthly: {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the\n                    month, at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                      schedule.cronConfig.minute | number: '2.0-0'\n                    }}.\n                  </span>\n                  <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\" translate>\n                    Yearly: {{ cronService.getMonthName(schedule.cronConfig) }},\n                    {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month, at\n                    {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                      schedule.cronConfig.minute | number: '2.0-0'\n                    }}.\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"c8y-list__item__actions\" (click)=\"$event.stopPropagation()\">\n            <div class=\"settings dropdown\" dropdown>\n              <button\n                class=\"dropdown-toggle c8y-dropdown\"\n                dropdownToggle\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                title=\"{{ 'Actions' | translate }}\"\n              >\n                <i [c8yIcon]=\"'ellipsis-v'\"></i>\n              </button>\n              <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"hasRequiredRole ? buttonLabels.edit : buttonLabels.editNoPermission\"\n                    (click)=\"editSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'pencil'\"></i> {{ 'Edit' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.duplicate : buttonLabels.duplicateNoPermission\n                    \"\n                    (click)=\"duplicateSchedule(schedule, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'copy'\"></i> {{ 'Duplicate' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.delete : buttonLabels.deleteNoPermission\n                    \"\n                    (click)=\"removeSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'trash'\"></i> {{ 'Delete' | translate }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"alert alert-warning max-width-100\" *ngIf=\"!hasRequiredRole\" role=\"alert\" translate>\n    You don't have the permission required to schedule exports.\n  </div>  \n  <button\n    type=\"button\"\n    class=\"btn-add-block m-t-16\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n    [disabled]=\"!hasRequiredRole\"\n  >\n    <i [c8yIcon]=\"'plus-circle'\"></i>\n    {{ 'Add schedule' | translate }}\n  </button>\n</div>\n"
    })
], ExportSchedulesComponent);
export { ExportSchedulesComponent };
//# sourceMappingURL=data:application/json;base64,