import * as tslib_1 from "tslib";
import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
let CopyActionComponent = class CopyActionComponent {
    constructor(vcRef, dashboardBridgeService) {
        this.vcRef = vcRef;
        this.dashboardBridgeService = dashboardBridgeService;
    }
    ngOnInit() {
        this.vcRef.createEmbeddedView(this.templateCopy);
    }
    copyDashboard() {
        this.dashboardBridgeService.copyDashboard();
    }
};
CopyActionComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: DashboardBridgeService }
];
tslib_1.__decorate([
    ViewChild('templateCopy', { read: TemplateRef, static: true })
], CopyActionComponent.prototype, "templateCopy", void 0);
CopyActionComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-copy-action-legacy',
        template: `
    <ng-template #templateCopy>
      <li>
        <button title="{{'Copy dashboard' | translate}}" (click)="copyDashboard()">
          <i class="fa fw fa-clone"></i>&nbsp;<span translate>Copy dashboard</span>
        </button>
      </li>
    </ng-template>
  `
    })
], CopyActionComponent);
export { CopyActionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weS1hY3Rpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy91cGdyYWRlLyIsInNvdXJjZXMiOlsiZGFzaGJvYXJkL2NvcHktYWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQWNwRSxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQUc5QixZQUNVLEtBQXVCLEVBQ3ZCLHNCQUE4QztRQUQ5QyxVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2QiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0lBQ3JELENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsc0JBQXNCLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDOUMsQ0FBQztDQUNGLENBQUE7O1lBWGtCLGdCQUFnQjtZQUNDLHNCQUFzQjs7QUFKUTtJQUEvRCxTQUFTLENBQUMsY0FBYyxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7eURBQWM7QUFEbEUsbUJBQW1CO0lBWi9CLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSx3QkFBd0I7UUFDbEMsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO0tBQ0YsQ0FBQztHQUNXLG1CQUFtQixDQWUvQjtTQWZZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXNoYm9hcmQtYnJpZGdlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29weS1hY3Rpb24tbGVnYWN5JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctdGVtcGxhdGUgI3RlbXBsYXRlQ29weT5cbiAgICAgIDxsaT5cbiAgICAgICAgPGJ1dHRvbiB0aXRsZT1cInt7J0NvcHkgZGFzaGJvYXJkJyB8IHRyYW5zbGF0ZX19XCIgKGNsaWNrKT1cImNvcHlEYXNoYm9hcmQoKVwiPlxuICAgICAgICAgIDxpIGNsYXNzPVwiZmEgZncgZmEtY2xvbmVcIj48L2k+Jm5ic3A7PHNwYW4gdHJhbnNsYXRlPkNvcHkgZGFzaGJvYXJkPC9zcGFuPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvbGk+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBDb3B5QWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgndGVtcGxhdGVDb3B5JywgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiB0cnVlIH0pIHRlbXBsYXRlQ29weTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHZjUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgIHByaXZhdGUgZGFzaGJvYXJkQnJpZGdlU2VydmljZTogRGFzaGJvYXJkQnJpZGdlU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy52Y1JlZi5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZUNvcHkpO1xuICB9XG5cbiAgY29weURhc2hib2FyZCgpIHtcbiAgICB0aGlzLmRhc2hib2FyZEJyaWRnZVNlcnZpY2UuY29weURhc2hib2FyZCgpO1xuICB9XG59XG4iXX0=