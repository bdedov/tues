{"version":3,"file":"c8y-ngx-components-operations-status-filter.js","sources":["ng://@c8y/ngx-components/operations/status-filter/status-filter.component.ts","ng://@c8y/ngx-components/operations/status-filter/status-filter.module.ts","ng://@c8y/ngx-components/operations/status-filter/c8y-ngx-components-operations-status-filter.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { IStatusOption } from './status-option.model';\n\n@Component({\n  selector: 'c8y-status-filter',\n  templateUrl: './status-filter.component.html',\n  host: { class: 'btn-group' }\n})\nexport class StatusFilterComponent {\n  statusOptions: Array<{ selected: boolean; option: IStatusOption }> = [];\n\n  /** List of filter options to be displayed */\n  @Input() set options(options: IStatusOption[]) {\n    this.statusOptions = (options || []).map(option => ({ selected: false, option }));\n  }\n\n  /**\n   * Allows multiple options to be active simultaneosly.\n   */\n  @Input('multiple') set _multiple(multiple: boolean) {\n    this.multiple = coerceBooleanProperty(multiple);\n  }\n\n  /** Display the filter as a small button group */\n  @Input('small') set _small(small: boolean) {\n    this.small = coerceBooleanProperty(small);\n  }\n\n  @HostBinding('class.btn-group-sm') get displaySmall() {\n    return this.small;\n  }\n\n  @Output() onFilterChanged: EventEmitter<IStatusOption[]> = new EventEmitter();\n\n  isAllButtonSelected: boolean = true;\n\n  private multiple: boolean;\n  private small: boolean;\n\n  changeFilter(option: { selected: boolean; option: IStatusOption }) {\n    this.isAllButtonSelected = false;\n    let emitNeeded: boolean = false;\n\n    if (this.multiple) {\n      option.selected = !option.selected;\n      emitNeeded = true;\n    } else if (!option.selected) {\n      option.selected = true;\n      this.statusOptions.filter(op => op !== option).forEach(op => (op.selected = false));\n      emitNeeded = true;\n    }\n\n    if (emitNeeded) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  removeFilter() {\n    this.isAllButtonSelected = true;\n    this.statusOptions.forEach(op => (op.selected = false));\n\n    this.emitSelectedOptions();\n  }\n\n  /**\n   * Allows the filter to be initalliy displayed with some preset filters.\n   *\n   * @param filters An `IStatusOption` array defining filter options to be preset.\n   * @param emit  (optional) If `true` component will emit `onFilterChanged` event.\n   */\n  preset(filters: IStatusOption[], emit: boolean = true) {\n    let firstSelected: boolean = false;\n\n    this.statusOptions.forEach(option => (option.selected = false));\n\n    this.statusOptions\n      .filter(option => (filters || []).map(o => o.label).includes(option.option.label))\n      .filter(() => {\n        // only first option passed will be set in single selection mode\n        const include: boolean = this.multiple || !firstSelected;\n        if (include) {\n          firstSelected = true;\n        }\n\n        return include;\n      })\n      .forEach(option => (option.selected = true));\n\n    this.isAllButtonSelected = !(filters && filters.length);\n\n    if (emit) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  reset() {\n    this.removeFilter();\n  }\n\n  activeFilters(): IStatusOption[] {\n    return this.statusOptions.filter(option => option.selected).map(option => option.option);\n  }\n\n  isFilterApplied(): boolean {\n    return this.statusOptions.some(option => option.selected);\n  }\n\n  private emitSelectedOptions() {\n    this.onFilterChanged.emit(\n      this.statusOptions.filter(option => option.selected).map(option => option.option)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { StatusFilterComponent } from './status-filter.component';\n\n/**\n * This module provides a component for selecting status filter.\n */\n@NgModule({\n  imports: [CoreModule, TooltipModule],\n  declarations: [StatusFilterComponent],\n  entryComponents: [StatusFilterComponent],\n  exports: [StatusFilterComponent]\n})\nexport class StatusFilterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}