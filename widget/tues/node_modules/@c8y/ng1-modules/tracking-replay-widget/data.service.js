"use strict";function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?Object(arguments[e]):{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}!function(){function e(n,e){var a=e.TRACKING_EVENT_FRAGMENT_TYPE,r=e.DUESSELDORF,c=e.OSM_TILE_URL;return{createMap:function(e){var t=L.tileLayer(c,{noWrap:!0});return L.map(e,{center:r,zoom:13,layers:[t]})},createDeviceMarker:function(){return L.marker(r)},createTrackingPath:function(){return L.polyline([])},renderPathSnapshot:function(e){var t=e.map,r=e.layers,n=e.points,a=e.step;if(function(e,t){_.forEach(t,e.removeLayer.bind(e))}(t,r),!_.isEmpty(n)){var c=r.marker,o=r.path,i=_.nth(n,a),u=i.lng,l=i.lat;c.setLatLng({lng:u,lat:l}),c.bindPopup("lng: ".concat(u,", lat: ").concat(l)),t.addLayer(c),o.setLatLngs(_.take(n,a+1)),t.addLayer(o),t.fitBounds(n)}},getTrackingEventsFor:function(t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(n.list(_objectSpread({},t,{fragmentType:a,revert:!0})));case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}},null,null,null,Promise)},getPointsFor:function(e){return _.map(e,"c8y_Position")}}}e.$inject=["c8yEvents","trackingReplayConstants"],angular.module("c8y.pocs.trackingReplayWidget").factory("trackingReplayService",e)}();