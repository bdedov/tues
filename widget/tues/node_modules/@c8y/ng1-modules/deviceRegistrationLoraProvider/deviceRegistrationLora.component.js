"use strict";!function(){function e(e,t,i,n,r){var a=this;_.assign(a,{$onInit:function(){e.all([i.getDeviceTypes().then(function(e){a.deviceTypes=_.uniqBy(e,"id"),0===e.length&&u(c)}),i.getConnectivityPlans().then(l).then(function(e){a.connectivityPlans=_.uniqBy(e,"id"),0===a.connectivityPlans.length&&u(o)}),i.getDeviceProfiles().then(function(e){a.deviceProfiles=_.uniqBy(e,"id"),0===e.length&&u(s)})]).catch(function(e){a.errMsg.push(e.data)}).finally(function(){a.providerSettingsLoaded=!0})},save:function(){n.disableInteractionWhenRequestInProgress(a,!0),n.setFormData(a.wizardCtrl.data,{device:a.device}),i.createNewDeviceRequest(function(e){var t=_.pick(e.deviceType,["name","id"]),i=_.cloneDeep(e);return _.unset(i,"deviceType"),_.set(i,"deviceType",t),i}(a.device)).then(function(e){n.setSuccessData(a.wizardCtrl.data,e),a.wizardCtrl.goTo("finish")}).catch(function(e){n.setErrorData(a.wizardCtrl.data,e),a.wizardCtrl.goTo("finish")}).finally(function(){n.disableInteractionWhenRequestInProgress(a,!1),t(d,500)})},doResize:d,errMsg:[]});var c=r("No device types configured. Create an Actility LoRa device type using the device database."),o=r("No connectivity plans with free slots available."),s=r("No device profiles.");function d(){n.doResize()}function l(e){return _.filter(e,function(e){return _.parseInt(e.grantedConnections)>_.parseInt(e.usedConnections)})}function u(e){a.errMsg.push({message:e})}}e.$inject=["$q","$timeout","deviceRegistrationLoraProviderService","deviceRegistrationWizardUtils","gettext"],angular.module("c8y.deviceRegistrationLora").component("deviceRegistrationLora",{controllerAs:"vm",templateUrl:":::PLUGIN_PATH:::/deviceRegistrationLora.html",require:{wizardCtrl:"^c8yWizardStep"},bindings:{backStep:"@?"},controller:e})}();